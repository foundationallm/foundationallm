{
  "api/dotnet/FoundationaLLM.AIModel.Models.AIModelReference.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Models.AIModelReference.html",
    "title": "Class AIModelReference | FoundationaLLM",
    "keywords": "Class AIModelReference Namespace FoundationaLLM.AIModel.Models Assembly FoundationaLLM.AIModel.dll Contains a reference to an AIModel public class AIModelReference : ResourceReference Inheritance object ResourceReference AIModelReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.ResourceType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIModelType The object type of the data source. [JsonIgnore] public Type AIModelType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.AIModel.Models.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Models.html",
    "title": "Namespace FoundationaLLM.AIModel.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AIModel.Models Classes AIModelReference Contains a reference to an AIModel"
  },
  "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.AIModelResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.AIModelResourceProviderService.html",
    "title": "Class AIModelResourceProviderService | FoundationaLLM",
    "keywords": "Class AIModelResourceProviderService Namespace FoundationaLLM.AIModel.ResourceProviders Assembly FoundationaLLM.AIModel.dll Implements the FoundationaLLM.AIModel resource provider. public class AIModelResourceProviderService : ResourceProviderServiceBase<AIModelReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AIModelReference> AIModelResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AIModelReference>._resourceReferenceStore ResourceProviderServiceBase<AIModelReference>._serviceProvider ResourceProviderServiceBase<AIModelReference>._authorizationService ResourceProviderServiceBase<AIModelReference>._storageService ResourceProviderServiceBase<AIModelReference>._eventService ResourceProviderServiceBase<AIModelReference>._resourceValidatorFactory ResourceProviderServiceBase<AIModelReference>._logger ResourceProviderServiceBase<AIModelReference>._instanceSettings ResourceProviderServiceBase<AIModelReference>._storageContainerName ResourceProviderServiceBase<AIModelReference>._serializerSettings ResourceProviderServiceBase<AIModelReference>.Name ResourceProviderServiceBase<AIModelReference>.IsInitialized ResourceProviderServiceBase<AIModelReference>.AllowedResourceTypes ResourceProviderServiceBase<AIModelReference>.StorageAccountName ResourceProviderServiceBase<AIModelReference>.StorageContainerName ResourceProviderServiceBase<AIModelReference>.Initialize() ResourceProviderServiceBase<AIModelReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<AIModelReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<AIModelReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<AIModelReference>.LoadResource<T>(AIModelReference) ResourceProviderServiceBase<AIModelReference>.LoadResource<T>(string) ResourceProviderServiceBase<AIModelReference>.CreateResource<T>(AIModelReference, T) ResourceProviderServiceBase<AIModelReference>.CreateResource(AIModelReference, Stream, string) ResourceProviderServiceBase<AIModelReference>.CreateResources<T1, T2>(AIModelReference, T1, AIModelReference, T2) ResourceProviderServiceBase<AIModelReference>.SaveResource<T>(AIModelReference, T) ResourceProviderServiceBase<AIModelReference>.DeleteResource<T>(string) ResourceProviderServiceBase<AIModelReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AIModelReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AIModelResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.AIModel resource provider. public AIModelResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceInternal<T>(ResourcePath resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.AIModel.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AIModel.ResourceProviders Classes AIModelResourceProviderService Implements the FoundationaLLM.AIModel resource provider."
  },
  "api/dotnet/FoundationaLLM.AIModel.Validation.AIModelBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Validation.AIModelBaseValidator.html",
    "title": "Class AIModelBaseValidator | FoundationaLLM",
    "keywords": "Class AIModelBaseValidator Namespace FoundationaLLM.AIModel.Validation Assembly FoundationaLLM.AIModel.dll Validator for the AIModelBase model. public class AIModelBaseValidator : AbstractValidator<AIModelBase>, IValidator<AIModelBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AIModelBase> AIModelBaseValidator Implements IValidator<AIModelBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AIModelBase>.Validate(AIModelBase) AbstractValidator<AIModelBase>.ValidateAsync(AIModelBase, CancellationToken) AbstractValidator<AIModelBase>.Validate(ValidationContext<AIModelBase>) AbstractValidator<AIModelBase>.ValidateAsync(ValidationContext<AIModelBase>, CancellationToken) AbstractValidator<AIModelBase>.CreateDescriptor() AbstractValidator<AIModelBase>.RuleFor<TProperty>(Expression<Func<AIModelBase, TProperty>>) AbstractValidator<AIModelBase>.Transform<TProperty, TTransformed>(Expression<Func<AIModelBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AIModelBase>.Transform<TProperty, TTransformed>(Expression<Func<AIModelBase, TProperty>>, Func<AIModelBase, TProperty, TTransformed>) AbstractValidator<AIModelBase>.RuleForEach<TElement>(Expression<Func<AIModelBase, IEnumerable<TElement>>>) AbstractValidator<AIModelBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AIModelBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AIModelBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AIModelBase, IEnumerable<TElement>>>, Func<AIModelBase, TElement, TTransformed>) AbstractValidator<AIModelBase>.RuleSet(string, Action) AbstractValidator<AIModelBase>.When(Func<AIModelBase, bool>, Action) AbstractValidator<AIModelBase>.When(Func<AIModelBase, ValidationContext<AIModelBase>, bool>, Action) AbstractValidator<AIModelBase>.Unless(Func<AIModelBase, bool>, Action) AbstractValidator<AIModelBase>.Unless(Func<AIModelBase, ValidationContext<AIModelBase>, bool>, Action) AbstractValidator<AIModelBase>.WhenAsync(Func<AIModelBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.WhenAsync(Func<AIModelBase, ValidationContext<AIModelBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.UnlessAsync(Func<AIModelBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.UnlessAsync(Func<AIModelBase, ValidationContext<AIModelBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.Include(IValidator<AIModelBase>) AbstractValidator<AIModelBase>.Include<TValidator>(Func<AIModelBase, TValidator>) AbstractValidator<AIModelBase>.GetEnumerator() AbstractValidator<AIModelBase>.EnsureInstanceNotNull(object) AbstractValidator<AIModelBase>.PreValidate(ValidationContext<AIModelBase>, ValidationResult) AbstractValidator<AIModelBase>.RaiseValidationException(ValidationContext<AIModelBase>, ValidationResult) AbstractValidator<AIModelBase>.OnRuleAdded(IValidationRule<AIModelBase>) AbstractValidator<AIModelBase>.CascadeMode AbstractValidator<AIModelBase>.ClassLevelCascadeMode AbstractValidator<AIModelBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AIModelBaseValidator() Configures the validation rules for the FoundationaLLM.AIModel model. public AIModelBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.AIModel.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Validation.html",
    "title": "Namespace FoundationaLLM.AIModel.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AIModel.Validation Classes AIModelBaseValidator Validator for the AIModelBase model."
  },
  "api/dotnet/FoundationaLLM.AIModel.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.html",
    "title": "Namespace FoundationaLLM.AIModel | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AIModel Namespaces FoundationaLLM.AIModel.Models FoundationaLLM.AIModel.ResourceProviders FoundationaLLM.AIModel.Validation"
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReference.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReference.html",
    "title": "Class AgentReference | FoundationaLLM",
    "keywords": "Class AgentReference Namespace FoundationaLLM.Agent.Models.Resources Assembly FoundationaLLM.Agent.dll Provides details about an agent. public class AgentReference : ResourceReference Inheritance object ResourceReference AgentReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.ResourceType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentType The object type of the agent. [JsonIgnore] public Type AgentType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReferenceStore.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReferenceStore.html",
    "title": "Class AgentReferenceStore | FoundationaLLM",
    "keywords": "Class AgentReferenceStore Namespace FoundationaLLM.Agent.Models.Resources Assembly FoundationaLLM.Agent.dll Models the content of the agent reference store managed by the FoundationaLLM.Agent resource provider. public class AgentReferenceStore Inheritance object AgentReferenceStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentReferences The list of all agents registered in the system. public required List<AgentReference> AgentReferences { get; set; } Property Value List<AgentReference> Methods FromDictionary(Dictionary<string, AgentReference>) Creates a new instance of the AgentReferenceStore from a dictionary. public static AgentReferenceStore FromDictionary(Dictionary<string, AgentReference> dictionary) Parameters dictionary Dictionary<string, AgentReference> A string-based dictionary of AgentReference values. Returns AgentReferenceStore The AgentReferenceStore object created from the dictionary. ToDictionary() Creates a string-based dictionary of AgentReference values from the current object. public Dictionary<string, AgentReference> ToDictionary() Returns Dictionary<string, AgentReference> The string-based dictionary of AgentReference values from the current object."
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Agent.Models.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent.Models.Resources Classes AgentReference Provides details about an agent. AgentReferenceStore Models the content of the agent reference store managed by the FoundationaLLM.Agent resource provider."
  },
  "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderService.html",
    "title": "Class AgentResourceProviderService | FoundationaLLM",
    "keywords": "Class AgentResourceProviderService Namespace FoundationaLLM.Agent.ResourceProviders Assembly FoundationaLLM.Agent.dll Implements the FoundationaLLM.Agent resource provider. public class AgentResourceProviderService : ResourceProviderServiceBase<AgentReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AgentReference> AgentResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AgentReference>._resourceReferenceStore ResourceProviderServiceBase<AgentReference>._serviceProvider ResourceProviderServiceBase<AgentReference>._authorizationService ResourceProviderServiceBase<AgentReference>._storageService ResourceProviderServiceBase<AgentReference>._eventService ResourceProviderServiceBase<AgentReference>._resourceValidatorFactory ResourceProviderServiceBase<AgentReference>._logger ResourceProviderServiceBase<AgentReference>._instanceSettings ResourceProviderServiceBase<AgentReference>._storageContainerName ResourceProviderServiceBase<AgentReference>._serializerSettings ResourceProviderServiceBase<AgentReference>.Name ResourceProviderServiceBase<AgentReference>.IsInitialized ResourceProviderServiceBase<AgentReference>.AllowedResourceTypes ResourceProviderServiceBase<AgentReference>.StorageAccountName ResourceProviderServiceBase<AgentReference>.StorageContainerName ResourceProviderServiceBase<AgentReference>.Initialize() ResourceProviderServiceBase<AgentReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<AgentReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<AgentReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<AgentReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<AgentReference>.LoadResource<T>(AgentReference) ResourceProviderServiceBase<AgentReference>.LoadResource<T>(string) ResourceProviderServiceBase<AgentReference>.CreateResource<T>(AgentReference, T) ResourceProviderServiceBase<AgentReference>.CreateResource(AgentReference, Stream, string) ResourceProviderServiceBase<AgentReference>.CreateResources<T1, T2>(AgentReference, T1, AgentReference, T2) ResourceProviderServiceBase<AgentReference>.SaveResource<T>(AgentReference, T) ResourceProviderServiceBase<AgentReference>.DeleteResource<T>(string) ResourceProviderServiceBase<AgentReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AgentReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Agent resource provider. public AgentResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Agent.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Agent.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent.ResourceProviders Classes AgentResourceProviderService Implements the FoundationaLLM.Agent resource provider."
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.AgentBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.AgentBaseValidator.html",
    "title": "Class AgentBaseValidator | FoundationaLLM",
    "keywords": "Class AgentBaseValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the AgentBase model. public class AgentBaseValidator : AbstractValidator<AgentBase>, IValidator<AgentBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AgentBase> AgentBaseValidator Implements IValidator<AgentBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AgentBase>.Validate(AgentBase) AbstractValidator<AgentBase>.ValidateAsync(AgentBase, CancellationToken) AbstractValidator<AgentBase>.Validate(ValidationContext<AgentBase>) AbstractValidator<AgentBase>.ValidateAsync(ValidationContext<AgentBase>, CancellationToken) AbstractValidator<AgentBase>.CreateDescriptor() AbstractValidator<AgentBase>.RuleFor<TProperty>(Expression<Func<AgentBase, TProperty>>) AbstractValidator<AgentBase>.Transform<TProperty, TTransformed>(Expression<Func<AgentBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AgentBase>.Transform<TProperty, TTransformed>(Expression<Func<AgentBase, TProperty>>, Func<AgentBase, TProperty, TTransformed>) AbstractValidator<AgentBase>.RuleForEach<TElement>(Expression<Func<AgentBase, IEnumerable<TElement>>>) AbstractValidator<AgentBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AgentBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AgentBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AgentBase, IEnumerable<TElement>>>, Func<AgentBase, TElement, TTransformed>) AbstractValidator<AgentBase>.RuleSet(string, Action) AbstractValidator<AgentBase>.When(Func<AgentBase, bool>, Action) AbstractValidator<AgentBase>.When(Func<AgentBase, ValidationContext<AgentBase>, bool>, Action) AbstractValidator<AgentBase>.Unless(Func<AgentBase, bool>, Action) AbstractValidator<AgentBase>.Unless(Func<AgentBase, ValidationContext<AgentBase>, bool>, Action) AbstractValidator<AgentBase>.WhenAsync(Func<AgentBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.WhenAsync(Func<AgentBase, ValidationContext<AgentBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.UnlessAsync(Func<AgentBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.UnlessAsync(Func<AgentBase, ValidationContext<AgentBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.Include(IValidator<AgentBase>) AbstractValidator<AgentBase>.Include<TValidator>(Func<AgentBase, TValidator>) AbstractValidator<AgentBase>.GetEnumerator() AbstractValidator<AgentBase>.EnsureInstanceNotNull(object) AbstractValidator<AgentBase>.PreValidate(ValidationContext<AgentBase>, ValidationResult) AbstractValidator<AgentBase>.RaiseValidationException(ValidationContext<AgentBase>, ValidationResult) AbstractValidator<AgentBase>.OnRuleAdded(IValidationRule<AgentBase>) AbstractValidator<AgentBase>.CascadeMode AbstractValidator<AgentBase>.ClassLevelCascadeMode AbstractValidator<AgentBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentBaseValidator() Configures the validation rules for the AgentBase model. public AgentBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.KnowledgeManagementAgentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.KnowledgeManagementAgentValidator.html",
    "title": "Class KnowledgeManagementAgentValidator | FoundationaLLM",
    "keywords": "Class KnowledgeManagementAgentValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the KnowledgeManagementAgent model. public class KnowledgeManagementAgentValidator : AbstractValidator<KnowledgeManagementAgent>, IValidator<KnowledgeManagementAgent>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<KnowledgeManagementAgent> KnowledgeManagementAgentValidator Implements IValidator<KnowledgeManagementAgent> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<KnowledgeManagementAgent>.Validate(KnowledgeManagementAgent) AbstractValidator<KnowledgeManagementAgent>.ValidateAsync(KnowledgeManagementAgent, CancellationToken) AbstractValidator<KnowledgeManagementAgent>.Validate(ValidationContext<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.ValidateAsync(ValidationContext<KnowledgeManagementAgent>, CancellationToken) AbstractValidator<KnowledgeManagementAgent>.CreateDescriptor() AbstractValidator<KnowledgeManagementAgent>.RuleFor<TProperty>(Expression<Func<KnowledgeManagementAgent, TProperty>>) AbstractValidator<KnowledgeManagementAgent>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeManagementAgent, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeManagementAgent, TProperty>>, Func<KnowledgeManagementAgent, TProperty, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.RuleForEach<TElement>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>) AbstractValidator<KnowledgeManagementAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>, Func<KnowledgeManagementAgent, TElement, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.RuleSet(string, Action) AbstractValidator<KnowledgeManagementAgent>.When(Func<KnowledgeManagementAgent, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.When(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.Unless(Func<KnowledgeManagementAgent, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.Unless(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.WhenAsync(Func<KnowledgeManagementAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.WhenAsync(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.UnlessAsync(Func<KnowledgeManagementAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.UnlessAsync(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.Include(IValidator<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.Include<TValidator>(Func<KnowledgeManagementAgent, TValidator>) AbstractValidator<KnowledgeManagementAgent>.GetEnumerator() AbstractValidator<KnowledgeManagementAgent>.EnsureInstanceNotNull(object) AbstractValidator<KnowledgeManagementAgent>.PreValidate(ValidationContext<KnowledgeManagementAgent>, ValidationResult) AbstractValidator<KnowledgeManagementAgent>.RaiseValidationException(ValidationContext<KnowledgeManagementAgent>, ValidationResult) AbstractValidator<KnowledgeManagementAgent>.OnRuleAdded(IValidationRule<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.CascadeMode AbstractValidator<KnowledgeManagementAgent>.ClassLevelCascadeMode AbstractValidator<KnowledgeManagementAgent>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementAgentValidator() Configures the validation rules for the KnowledgeManagementAgent model. public KnowledgeManagementAgentValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.html",
    "title": "Namespace FoundationaLLM.Agent.Validation.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent.Validation.Metadata Classes AgentBaseValidator Validator for the AgentBase model. KnowledgeManagementAgentValidator Validator for the KnowledgeManagementAgent model."
  },
  "api/dotnet/FoundationaLLM.Agent.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.html",
    "title": "Namespace FoundationaLLM.Agent | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Agent Namespaces FoundationaLLM.Agent.Models.Resources FoundationaLLM.Agent.ResourceProviders FoundationaLLM.Agent.Validation.Metadata"
  },
  "api/dotnet/FoundationaLLM.Attachment.Models.AttachmentReference.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Models.AttachmentReference.html",
    "title": "Class AttachmentReference | FoundationaLLM",
    "keywords": "Class AttachmentReference Namespace FoundationaLLM.Attachment.Models Assembly FoundationaLLM.Attachment.dll Contains a reference to an attachment. public class AttachmentReference : ResourceReference Inheritance object ResourceReference AttachmentReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The mime content type of the attachment. public string ContentType { get; set; } Property Value string OriginalFilename The original file name of the attachment. This is useful because the resource name is generated by the system and may not be the same as the original file name. public string OriginalFilename { get; set; } Property Value string ResourceType The object type of the resource. [JsonIgnore] public override Type ResourceType { get; } Property Value Type SecondaryProvider Indicates an optional secondary provider for the attachment. public string? SecondaryProvider { get; set; } Property Value string Remarks The only secondary provider currently supported is the FoundationaLLM.AzureOpenAI provider."
  },
  "api/dotnet/FoundationaLLM.Attachment.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Models.html",
    "title": "Namespace FoundationaLLM.Attachment.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Attachment.Models Classes AttachmentReference Contains a reference to an attachment."
  },
  "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.AttachmentResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.AttachmentResourceProviderService.html",
    "title": "Class AttachmentResourceProviderService | FoundationaLLM",
    "keywords": "Class AttachmentResourceProviderService Namespace FoundationaLLM.Attachment.ResourceProviders Assembly FoundationaLLM.Attachment.dll Implements the FoundationaLLM.Attachment resource provider. public class AttachmentResourceProviderService : ResourceProviderServiceBase<AttachmentReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AttachmentReference> AttachmentResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AttachmentReference>._resourceReferenceStore ResourceProviderServiceBase<AttachmentReference>._serviceProvider ResourceProviderServiceBase<AttachmentReference>._authorizationService ResourceProviderServiceBase<AttachmentReference>._storageService ResourceProviderServiceBase<AttachmentReference>._eventService ResourceProviderServiceBase<AttachmentReference>._resourceValidatorFactory ResourceProviderServiceBase<AttachmentReference>._logger ResourceProviderServiceBase<AttachmentReference>._instanceSettings ResourceProviderServiceBase<AttachmentReference>._storageContainerName ResourceProviderServiceBase<AttachmentReference>._serializerSettings ResourceProviderServiceBase<AttachmentReference>.Name ResourceProviderServiceBase<AttachmentReference>.IsInitialized ResourceProviderServiceBase<AttachmentReference>.AllowedResourceTypes ResourceProviderServiceBase<AttachmentReference>.StorageAccountName ResourceProviderServiceBase<AttachmentReference>.StorageContainerName ResourceProviderServiceBase<AttachmentReference>.Initialize() ResourceProviderServiceBase<AttachmentReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<AttachmentReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<AttachmentReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<AttachmentReference>.LoadResource<T>(AttachmentReference) ResourceProviderServiceBase<AttachmentReference>.LoadResource<T>(string) ResourceProviderServiceBase<AttachmentReference>.CreateResource<T>(AttachmentReference, T) ResourceProviderServiceBase<AttachmentReference>.CreateResource(AttachmentReference, Stream, string) ResourceProviderServiceBase<AttachmentReference>.CreateResources<T1, T2>(AttachmentReference, T1, AttachmentReference, T2) ResourceProviderServiceBase<AttachmentReference>.SaveResource<T>(AttachmentReference, T) ResourceProviderServiceBase<AttachmentReference>.DeleteResource<T>(string) ResourceProviderServiceBase<AttachmentReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AttachmentReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AttachmentResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Attachment resource provider. public AttachmentResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceInternal<T>(ResourcePath resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, T resource, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Attachment.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Attachment.ResourceProviders Classes AttachmentResourceProviderService Implements the FoundationaLLM.Attachment resource provider."
  },
  "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentFileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentFileValidator.html",
    "title": "Class AttachmentFileValidator | FoundationaLLM",
    "keywords": "Class AttachmentFileValidator Namespace FoundationaLLM.Attachment.Validation Assembly FoundationaLLM.Attachment.dll Validator for the AttachmentFile model. public class AttachmentFileValidator : AbstractValidator<AttachmentFile>, IValidator<AttachmentFile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AttachmentFile> AttachmentFileValidator Implements IValidator<AttachmentFile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AttachmentFile>.Validate(AttachmentFile) AbstractValidator<AttachmentFile>.ValidateAsync(AttachmentFile, CancellationToken) AbstractValidator<AttachmentFile>.Validate(ValidationContext<AttachmentFile>) AbstractValidator<AttachmentFile>.ValidateAsync(ValidationContext<AttachmentFile>, CancellationToken) AbstractValidator<AttachmentFile>.CreateDescriptor() AbstractValidator<AttachmentFile>.RuleFor<TProperty>(Expression<Func<AttachmentFile, TProperty>>) AbstractValidator<AttachmentFile>.Transform<TProperty, TTransformed>(Expression<Func<AttachmentFile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AttachmentFile>.Transform<TProperty, TTransformed>(Expression<Func<AttachmentFile, TProperty>>, Func<AttachmentFile, TProperty, TTransformed>) AbstractValidator<AttachmentFile>.RuleForEach<TElement>(Expression<Func<AttachmentFile, IEnumerable<TElement>>>) AbstractValidator<AttachmentFile>.TransformForEach<TElement, TTransformed>(Expression<Func<AttachmentFile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AttachmentFile>.TransformForEach<TElement, TTransformed>(Expression<Func<AttachmentFile, IEnumerable<TElement>>>, Func<AttachmentFile, TElement, TTransformed>) AbstractValidator<AttachmentFile>.RuleSet(string, Action) AbstractValidator<AttachmentFile>.When(Func<AttachmentFile, bool>, Action) AbstractValidator<AttachmentFile>.When(Func<AttachmentFile, ValidationContext<AttachmentFile>, bool>, Action) AbstractValidator<AttachmentFile>.Unless(Func<AttachmentFile, bool>, Action) AbstractValidator<AttachmentFile>.Unless(Func<AttachmentFile, ValidationContext<AttachmentFile>, bool>, Action) AbstractValidator<AttachmentFile>.WhenAsync(Func<AttachmentFile, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.WhenAsync(Func<AttachmentFile, ValidationContext<AttachmentFile>, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.UnlessAsync(Func<AttachmentFile, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.UnlessAsync(Func<AttachmentFile, ValidationContext<AttachmentFile>, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.Include(IValidator<AttachmentFile>) AbstractValidator<AttachmentFile>.Include<TValidator>(Func<AttachmentFile, TValidator>) AbstractValidator<AttachmentFile>.GetEnumerator() AbstractValidator<AttachmentFile>.EnsureInstanceNotNull(object) AbstractValidator<AttachmentFile>.PreValidate(ValidationContext<AttachmentFile>, ValidationResult) AbstractValidator<AttachmentFile>.RaiseValidationException(ValidationContext<AttachmentFile>, ValidationResult) AbstractValidator<AttachmentFile>.OnRuleAdded(IValidationRule<AttachmentFile>) AbstractValidator<AttachmentFile>.CascadeMode AbstractValidator<AttachmentFile>.ClassLevelCascadeMode AbstractValidator<AttachmentFile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AttachmentFileValidator() Configures the validation rules for the AttachmentFile model. public AttachmentFileValidator()"
  },
  "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentValidator-1.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentValidator-1.html",
    "title": "Class AttachmentValidator<T> | FoundationaLLM",
    "keywords": "Class AttachmentValidator<T> Namespace FoundationaLLM.Attachment.Validation Assembly FoundationaLLM.Attachment.dll Base validator for attachments. public class AttachmentValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : AttachmentFile Type Parameters T The type of attachment to validate. Inheritance object AbstractValidator<T> AttachmentValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.OnRuleAdded(IValidationRule<T>) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidConfigurationReference(AttachmentFile) Validates the value of a specified configuration reference. protected bool ValidConfigurationReference(AttachmentFile attachment) Parameters attachment AttachmentFile The attachment object being validated. Returns bool True if the value of the configuration reference is valid, False otherwise."
  },
  "api/dotnet/FoundationaLLM.Attachment.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Validation.html",
    "title": "Namespace FoundationaLLM.Attachment.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Attachment.Validation Classes AttachmentFileValidator Validator for the AttachmentFile model. AttachmentValidator<T> Base validator for attachments."
  },
  "api/dotnet/FoundationaLLM.Attachment.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.html",
    "title": "Namespace FoundationaLLM.Attachment | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Attachment Namespaces FoundationaLLM.Attachment.Models FoundationaLLM.Attachment.ResourceProviders FoundationaLLM.Attachment.Validation"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.AuthorizeController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.AuthorizeController.html",
    "title": "Class AuthorizeController | FoundationaLLM",
    "keywords": "Class AuthorizeController Namespace FoundationaLLM.Authorization.API.Controllers Assembly FoundationaLLM.Authorization.API.dll Provides methods for processing authorization requests. [Authorize(Policy = \"RequiredClaims\")] [ApiController] [Route(\"instances/{instanceId}/authorize\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class AuthorizeController Inheritance object AuthorizeController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizeController(IAuthorizationCore) Provides methods for processing authorization requests. public AuthorizeController(IAuthorizationCore authorizationCore) Parameters authorizationCore IAuthorizationCore The IAuthorizationCore service used to process authorization requests. Methods ProcessAuthorizationRequest(string, ActionAuthorizationRequest) [HttpPost(Name = \"ProcessAuthorizationRequest\")] public IActionResult ProcessAuthorizationRequest(string instanceId, ActionAuthorizationRequest request) Parameters instanceId string request ActionAuthorizationRequest Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.RoleAssignmentsController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.RoleAssignmentsController.html",
    "title": "Class RoleAssignmentsController | FoundationaLLM",
    "keywords": "Class RoleAssignmentsController Namespace FoundationaLLM.Authorization.API.Controllers Assembly FoundationaLLM.Authorization.API.dll Provides security endpoints. [Authorize(Policy = \"RequiredClaims\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/roleassignments\")] public class RoleAssignmentsController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller RoleAssignmentsController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentsController(IAuthorizationCore) Provides security endpoints. public RoleAssignmentsController(IAuthorizationCore authorizationCore) Parameters authorizationCore IAuthorizationCore The IAuthorizationCore service used to process authorization requests. Methods AssignRole(string, RoleAssignmentRequest) Assigns a role to an Entra ID user or group. [HttpPost] public Task<IActionResult> AssignRole(string instanceId, RoleAssignmentRequest roleAssignmentRequest) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentRequest The role assignment request. Returns Task<IActionResult> The role assignment result. GetRoleAssignments(string, RoleAssignmentQueryParameters) Returns a list of role assignments for the specified instance. [HttpPost(\"query\")] public IActionResult GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters Returns IActionResult The list of all role assignments for the specified instance. ProcessRoleAssignmentsWithActionsRequest(string, RoleAssignmentsWithActionsRequest) Returns a list of role names and a list of allowed actions for the specified scope. [HttpPost(\"querywithactions\")] public IActionResult ProcessRoleAssignmentsWithActionsRequest(string instanceId, RoleAssignmentsWithActionsRequest request) Parameters instanceId string The FoundationaLLM instance identifier. request RoleAssignmentsWithActionsRequest The get roles with actions request. Returns IActionResult The get roles and actions result. RevokeRoleAssignment(string, string) Revokes a role from an Entra ID user or group. [HttpDelete(\"{*roleAssignment}\")] public Task<IActionResult> RevokeRoleAssignment(string instanceId, string roleAssignment) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. Returns Task<IActionResult> The role assignment result."
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Authorization.API.Controllers Assembly FoundationaLLM.Authorization.API.dll Provides methods for checking the status of the service. [Authorize(Policy = \"RequiredClaims\")] [ApiController] [Route(\"\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus() Returns OK if the requester is authenticated and allowed to execute requests against this service. [Route(\"instances/{instanceId}/auth-status\")] [HttpGet] public IActionResult GetAuthStatus() Returns IActionResult GetServiceStatus() Returns the status of the Core API service. [AllowAnonymous] [Route(\"status\")] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Authorization.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.API.Controllers Classes AuthorizeController Provides methods for processing authorization requests. RoleAssignmentsController Provides security endpoints. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Authorization.Interfaces.IAuthorizationCore.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Interfaces.IAuthorizationCore.html",
    "title": "Interface IAuthorizationCore | FoundationaLLM",
    "keywords": "Interface IAuthorizationCore Namespace FoundationaLLM.Authorization.Interfaces Assembly FoundationaLLM.Authorization.dll Defines the methods for authorization core. public interface IAuthorizationCore Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AllowAuthorizationRequestsProcessing(string, string) Checks if a specified security principal is allowed to process authorization requests. bool AllowAuthorizationRequestsProcessing(string instanceId, string securityPrincipalId) Parameters instanceId string The FoundationaLLM instance id. securityPrincipalId string The id of the security principal whose authorization is checked. Returns bool True if the security principal is allowed to process authorization requests. CreateRoleAssignment(string, RoleAssignmentRequest) Creates a role assignment for a specified security principal. Task<RoleAssignmentResult> CreateRoleAssignment(string instanceId, RoleAssignmentRequest roleAssignmentRequest) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentRequest The role assignment request. Returns Task<RoleAssignmentResult> The role assignment result. GetRoleAssignments(string, RoleAssignmentQueryParameters) Returns a list of role assignments for the specified instance and resource path. List<RoleAssignment> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. Returns List<RoleAssignment> The list of all role assignments for the specified instance. ProcessAuthorizationRequest(string, ActionAuthorizationRequest) Processes an authorization request. ActionAuthorizationResult ProcessAuthorizationRequest(string instanceId, ActionAuthorizationRequest authorizationRequest) Parameters instanceId string The FoundationaLLM instance id. authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest containing the details of the authorization request. Returns ActionAuthorizationResult An ActionAuthorizationResult indicating whether the requested authorization was successfull or not for each resource path. ProcessRoleAssignmentsWithActionsRequest(string, RoleAssignmentsWithActionsRequest) Returns a list of role names and a list of allowed actions for the specified scope. Dictionary<string, RoleAssignmentsWithActionsResult> ProcessRoleAssignmentsWithActionsRequest(string instanceId, RoleAssignmentsWithActionsRequest request) Parameters instanceId string The FoundationaLLM instance identifier. request RoleAssignmentsWithActionsRequest The get roles with actions request. Returns Dictionary<string, RoleAssignmentsWithActionsResult> The get roles and actions result. RevokeRoleAssignment(string, string) Revokes a role from an Entra ID user or group. Task<RoleAssignmentResult> RevokeRoleAssignment(string instanceId, string roleAssignment) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. Returns Task<RoleAssignmentResult> The role assignment result."
  },
  "api/dotnet/FoundationaLLM.Authorization.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Interfaces.html",
    "title": "Namespace FoundationaLLM.Authorization.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Interfaces Interfaces IAuthorizationCore Defines the methods for authorization core."
  },
  "api/dotnet/FoundationaLLM.Authorization.Middleware.AuthorizationAPIMiddleware.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Middleware.AuthorizationAPIMiddleware.html",
    "title": "Class AuthorizationAPIMiddleware | FoundationaLLM",
    "keywords": "Class AuthorizationAPIMiddleware Namespace FoundationaLLM.Authorization.Middleware Assembly FoundationaLLM.Authorization.dll Middleware that retrieves context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method. public class AuthorizationAPIMiddleware Inheritance object AuthorizationAPIMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationAPIMiddleware(RequestDelegate) Initializes a new instance of the AuthorizationAPIMiddleware class. public AuthorizationAPIMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, IAuthorizationCore) Executes the middleware. public Task InvokeAsync(HttpContext context, IAuthorizationCore authorizationCore) Parameters context HttpContext The current HTTP request context. authorizationCore IAuthorizationCore Returns Task"
  },
  "api/dotnet/FoundationaLLM.Authorization.Middleware.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Middleware.html",
    "title": "Namespace FoundationaLLM.Authorization.Middleware | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Middleware Classes AuthorizationAPIMiddleware Middleware that retrieves context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method."
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationCoreSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationCoreSettings.html",
    "title": "Class AuthorizationCoreSettings | FoundationaLLM",
    "keywords": "Class AuthorizationCoreSettings Namespace FoundationaLLM.Authorization.Models.Configuration Assembly FoundationaLLM.Authorization.dll Configuration settings for the authorization core. public class AuthorizationCoreSettings Inheritance object AuthorizationCoreSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceIds The list of instance identifiers of the FoundationaLLM instances that are managed by the authorization core. public List<string> InstanceIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.AuthorizationServiceSettings.html",
    "title": "Class AuthorizationServiceSettings | FoundationaLLM",
    "keywords": "Class AuthorizationServiceSettings Namespace FoundationaLLM.Authorization.Models.Configuration Assembly FoundationaLLM.Authorization.dll public record AuthorizationServiceSettings : IEquatable<AuthorizationServiceSettings> Inheritance object AuthorizationServiceSettings Implements IEquatable<AuthorizationServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIScope public required string APIScope { get; set; } Property Value string APIUrl public required string APIUrl { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Authorization.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Models.Configuration Classes AuthorizationCoreSettings Configuration settings for the authorization core. AuthorizationServiceSettings"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.RoleAssignmentStore.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.RoleAssignmentStore.html",
    "title": "Class RoleAssignmentStore | FoundationaLLM",
    "keywords": "Class RoleAssignmentStore Namespace FoundationaLLM.Authorization.Models Assembly FoundationaLLM.Authorization.dll Models the content of the role assignments store managed by the FoundationaLLM.Authorization resource provider. public class RoleAssignmentStore Inheritance object RoleAssignmentStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceId The unique identifier of the FoundationaLLM instance. [JsonPropertyName(\"instance_id\")] public required string InstanceId { get; set; } Property Value string RoleAssignments The list of all role assignments in the FoundationaLLM instance. [JsonPropertyName(\"role_assignments\")] public required List<RoleAssignment> RoleAssignments { get; set; } Property Value List<RoleAssignment> Methods EnrichRoleAssignments() Loads calculated properties for all role assignments. public void EnrichRoleAssignments()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Models.html",
    "title": "Namespace FoundationaLLM.Authorization.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Models Namespaces FoundationaLLM.Authorization.Models.Configuration Classes RoleAssignmentStore Models the content of the role assignments store managed by the FoundationaLLM.Authorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderService.html",
    "title": "Class AuthorizationResourceProviderService | FoundationaLLM",
    "keywords": "Class AuthorizationResourceProviderService Namespace FoundationaLLM.Authorization.ResourceProviders Assembly FoundationaLLM.Authorization.dll Implements the FoundationaLLM.Authorization resource provider. public class AuthorizationResourceProviderService : ResourceProviderServiceBase<ResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<ResourceReference> AuthorizationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<ResourceReference>._resourceReferenceStore ResourceProviderServiceBase<ResourceReference>._serviceProvider ResourceProviderServiceBase<ResourceReference>._authorizationService ResourceProviderServiceBase<ResourceReference>._storageService ResourceProviderServiceBase<ResourceReference>._eventService ResourceProviderServiceBase<ResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<ResourceReference>._logger ResourceProviderServiceBase<ResourceReference>._instanceSettings ResourceProviderServiceBase<ResourceReference>._storageContainerName ResourceProviderServiceBase<ResourceReference>._serializerSettings ResourceProviderServiceBase<ResourceReference>.Name ResourceProviderServiceBase<ResourceReference>.IsInitialized ResourceProviderServiceBase<ResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<ResourceReference>.StorageAccountName ResourceProviderServiceBase<ResourceReference>.StorageContainerName ResourceProviderServiceBase<ResourceReference>.Initialize() ResourceProviderServiceBase<ResourceReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<ResourceReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleEvents(EventSetEventArgs) ResourceProviderServiceBase<ResourceReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(ResourceReference) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<ResourceReference>.CreateResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.CreateResource(ResourceReference, Stream, string) ResourceProviderServiceBase<ResourceReference>.CreateResources<T1, T2>(ResourceReference, T1, ResourceReference, T2) ResourceProviderServiceBase<ResourceReference>.SaveResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.DeleteResource<T>(string) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<ResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Authorization resource provider. public AuthorizationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Authorization.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.ResourceProviders Classes AuthorizationResourceProviderService Implements the FoundationaLLM.Authorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationCore.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationCore.html",
    "title": "Class AuthorizationCore | FoundationaLLM",
    "keywords": "Class AuthorizationCore Namespace FoundationaLLM.Authorization.Services Assembly FoundationaLLM.Authorization.dll Implements the core authorization engine. public class AuthorizationCore : IAuthorizationCore Inheritance object AuthorizationCore Implements IAuthorizationCore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationCore(IOptions<AuthorizationCoreSettings>, IStorageService, IResourceValidatorFactory, ILogger<AuthorizationCore>) Creates a new instance of the AuthorizationCore class. public AuthorizationCore(IOptions<AuthorizationCoreSettings> options, IStorageService storageService, IResourceValidatorFactory resourceValidatorFactory, ILogger<AuthorizationCore> logger) Parameters options IOptions<AuthorizationCoreSettings> storageService IStorageService The IStorageService providing storage services. resourceValidatorFactory IResourceValidatorFactory The resource validator factory used to create resource validators. logger ILogger<AuthorizationCore> The logger used for logging. Methods AllowAuthorizationRequestsProcessing(string, string) Checks if a specified security principal is allowed to process authorization requests. public bool AllowAuthorizationRequestsProcessing(string instanceId, string securityPrincipalId) Parameters instanceId string The FoundationaLLM instance id. securityPrincipalId string The id of the security principal whose authorization is checked. Returns bool True if the security principal is allowed to process authorization requests. CreateRoleAssignment(string, RoleAssignmentRequest) Creates a role assignment for a specified security principal. public Task<RoleAssignmentResult> CreateRoleAssignment(string instanceId, RoleAssignmentRequest roleAssignmentRequest) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentRequest The role assignment request. Returns Task<RoleAssignmentResult> The role assignment result. GetRoleAssignments(string, RoleAssignmentQueryParameters) Returns a list of role assignments for the specified instance and resource path. public List<RoleAssignment> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. Returns List<RoleAssignment> The list of all role assignments for the specified instance. ProcessAuthorizationRequest(string, ActionAuthorizationRequest) Processes an authorization request. public ActionAuthorizationResult ProcessAuthorizationRequest(string instanceId, ActionAuthorizationRequest authorizationRequest) Parameters instanceId string The FoundationaLLM instance id. authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest containing the details of the authorization request. Returns ActionAuthorizationResult An ActionAuthorizationResult indicating whether the requested authorization was successfull or not for each resource path. ProcessRoleAssignmentsWithActionsRequest(string, RoleAssignmentsWithActionsRequest) Returns a list of role names and a list of allowed actions for the specified scope. public Dictionary<string, RoleAssignmentsWithActionsResult> ProcessRoleAssignmentsWithActionsRequest(string instanceId, RoleAssignmentsWithActionsRequest request) Parameters instanceId string The FoundationaLLM instance identifier. request RoleAssignmentsWithActionsRequest The get roles with actions request. Returns Dictionary<string, RoleAssignmentsWithActionsResult> The get roles and actions result. RevokeRoleAssignment(string, string) Revokes a role from an Entra ID user or group. public Task<RoleAssignmentResult> RevokeRoleAssignment(string instanceId, string roleAssignment) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. Returns Task<RoleAssignmentResult> The role assignment result."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.AuthorizationService.html",
    "title": "Class AuthorizationService | FoundationaLLM",
    "keywords": "Class AuthorizationService Namespace FoundationaLLM.Authorization.Services Assembly FoundationaLLM.Authorization.dll Provides methods for interacting with the Authorization API. public class AuthorizationService : IAuthorizationService Inheritance object AuthorizationService Implements IAuthorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods AuthorizationServiceExtensions.FilterResourcesByAuthorizableAction<T>(IAuthorizationService, string, UnifiedUserIdentity, List<T>, string) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationService(IHttpClientFactory, IOptions<AuthorizationServiceSettings>, ILogger<AuthorizationService>) public AuthorizationService(IHttpClientFactory httpClientFactory, IOptions<AuthorizationServiceSettings> options, ILogger<AuthorizationService> logger) Parameters httpClientFactory IHttpClientFactory options IOptions<AuthorizationServiceSettings> logger ILogger<AuthorizationService> Methods GetRoleAssignments(string, RoleAssignmentQueryParameters, UnifiedUserIdentity) Returns a list of role assignments for the specified instance and resource. public Task<List<object>> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. userIdentity UnifiedUserIdentity The user identity. Returns Task<List<object>> The list of all role assignments for the specified instance. ProcessAuthorizationRequest(string, string, List<string>, UnifiedUserIdentity) Processes an action authorization request. public Task<ActionAuthorizationResult> ProcessAuthorizationRequest(string instanceId, string action, List<string> resourcePaths, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. action string The action identifier. resourcePaths List<string> The resource paths. userIdentity UnifiedUserIdentity The user identity. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing. ProcessRoleAssignmentRequest(string, RoleAssignmentRequest, UnifiedUserIdentity) Processes a role assignment request. public Task<RoleAssignmentResult> ProcessRoleAssignmentRequest(string instanceId, RoleAssignmentRequest roleAssignmentRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentRequest The role assignment request. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentResult> ProcessRoleAssignmentsWithActionsRequest(string, RoleAssignmentsWithActionsRequest, UnifiedUserIdentity) Returns a list of role names and a list of allowed actions for the specified scope. public Task<Dictionary<string, RoleAssignmentsWithActionsResult>> ProcessRoleAssignmentsWithActionsRequest(string instanceId, RoleAssignmentsWithActionsRequest request, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. request RoleAssignmentsWithActionsRequest The get roles with actions request. userIdentity UnifiedUserIdentity The user identity. Returns Task<Dictionary<string, RoleAssignmentsWithActionsResult>> The get roles and actions result. RevokeRoleAssignment(string, string, UnifiedUserIdentity) Revokes a role assignment for a specified instance. public Task<RoleAssignmentResult> RevokeRoleAssignment(string instanceId, string roleAssignment, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentResult> The role assignment result."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.NullAuthorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.NullAuthorizationService.html",
    "title": "Class NullAuthorizationService | FoundationaLLM",
    "keywords": "Class NullAuthorizationService Namespace FoundationaLLM.Authorization.Services Assembly FoundationaLLM.Authorization.dll Implements an authorization service that bypasses the Authorization API and allows all access by default. public class NullAuthorizationService : IAuthorizationService Inheritance object NullAuthorizationService Implements IAuthorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods AuthorizationServiceExtensions.FilterResourcesByAuthorizableAction<T>(IAuthorizationService, string, UnifiedUserIdentity, List<T>, string) ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetRoleAssignments(string, RoleAssignmentQueryParameters, UnifiedUserIdentity) Returns a list of role assignments for the specified instance and resource. public Task<List<object>> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. userIdentity UnifiedUserIdentity The user identity. Returns Task<List<object>> The list of all role assignments for the specified instance. ProcessAuthorizationRequest(string, string, List<string>, UnifiedUserIdentity) Processes an action authorization request. public Task<ActionAuthorizationResult> ProcessAuthorizationRequest(string instanceId, string action, List<string> resourcePaths, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. action string The action identifier. resourcePaths List<string> The resource paths. userIdentity UnifiedUserIdentity The user identity. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing. ProcessRoleAssignmentRequest(string, RoleAssignmentRequest, UnifiedUserIdentity) Processes a role assignment request. public Task<RoleAssignmentResult> ProcessRoleAssignmentRequest(string instanceId, RoleAssignmentRequest roleAssignmentRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentRequest The role assignment request. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentResult> ProcessRoleAssignmentsWithActionsRequest(string, RoleAssignmentsWithActionsRequest, UnifiedUserIdentity) Returns a list of role names and a list of allowed actions for the specified scope. public Task<Dictionary<string, RoleAssignmentsWithActionsResult>> ProcessRoleAssignmentsWithActionsRequest(string instanceId, RoleAssignmentsWithActionsRequest request, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. request RoleAssignmentsWithActionsRequest The get roles with actions request. userIdentity UnifiedUserIdentity The user identity. Returns Task<Dictionary<string, RoleAssignmentsWithActionsResult>> The get roles and actions result. RevokeRoleAssignment(string, string, UnifiedUserIdentity) Revokes a role assignment for a specified instance. public Task<RoleAssignmentResult> RevokeRoleAssignment(string instanceId, string roleAssignment, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentResult> The role assignment result."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.RoleAssignmentCache.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.RoleAssignmentCache.html",
    "title": "Class RoleAssignmentCache | FoundationaLLM",
    "keywords": "Class RoleAssignmentCache Namespace FoundationaLLM.Authorization.Services Assembly FoundationaLLM.Authorization.dll In-memory cache for role assignments. public class RoleAssignmentCache Inheritance object RoleAssignmentCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentCache(RoleAssignmentStore) Creates a new instance of the RoleAssignmentCache class. public RoleAssignmentCache(RoleAssignmentStore roleAssignmentStore) Parameters roleAssignmentStore RoleAssignmentStore The role assignment store containing the role assignments used to initialize the cache. Methods AddOrUpdateRoleAssignment(RoleAssignment) Adds or updates a role assignment in the cache. public void AddOrUpdateRoleAssignment(RoleAssignment roleAssignment) Parameters roleAssignment RoleAssignment The RoleAssignment to add or update in the cache. GetRoleAssignments(string) Gets all role assignments for a principal. public List<RoleAssignment> GetRoleAssignments(string principalId) Parameters principalId string The unique identifier of the principal for which role assignments are retrieved. Returns List<RoleAssignment> RemoveRoleAssignment(string) Removes a role assignment from the cache. public void RemoveRoleAssignment(string roleAssignmentId) Parameters roleAssignmentId string The unique identifier of the role assigment to be removed."
  },
  "api/dotnet/FoundationaLLM.Authorization.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Services.html",
    "title": "Namespace FoundationaLLM.Authorization.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Services Classes AuthorizationCore Implements the core authorization engine. AuthorizationService Provides methods for interacting with the Authorization API. NullAuthorizationService Implements an authorization service that bypasses the Authorization API and allows all access by default. RoleAssignmentCache In-memory cache for role assignments."
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.ActionAuthorizationRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.ActionAuthorizationRequestValidator.html",
    "title": "Class ActionAuthorizationRequestValidator | FoundationaLLM",
    "keywords": "Class ActionAuthorizationRequestValidator Namespace FoundationaLLM.Authorization.Validation Assembly FoundationaLLM.Authorization.dll Validator for the ActionAuthorizationRequest model. public class ActionAuthorizationRequestValidator : AbstractValidator<ActionAuthorizationRequest>, IValidator<ActionAuthorizationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ActionAuthorizationRequest> ActionAuthorizationRequestValidator Implements IValidator<ActionAuthorizationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ActionAuthorizationRequest>.Validate(ActionAuthorizationRequest) AbstractValidator<ActionAuthorizationRequest>.ValidateAsync(ActionAuthorizationRequest, CancellationToken) AbstractValidator<ActionAuthorizationRequest>.Validate(ValidationContext<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.ValidateAsync(ValidationContext<ActionAuthorizationRequest>, CancellationToken) AbstractValidator<ActionAuthorizationRequest>.CreateDescriptor() AbstractValidator<ActionAuthorizationRequest>.RuleFor<TProperty>(Expression<Func<ActionAuthorizationRequest, TProperty>>) AbstractValidator<ActionAuthorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<ActionAuthorizationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<ActionAuthorizationRequest, TProperty>>, Func<ActionAuthorizationRequest, TProperty, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.RuleForEach<TElement>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>) AbstractValidator<ActionAuthorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>, Func<ActionAuthorizationRequest, TElement, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.RuleSet(string, Action) AbstractValidator<ActionAuthorizationRequest>.When(Func<ActionAuthorizationRequest, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.When(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.Unless(Func<ActionAuthorizationRequest, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.Unless(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.WhenAsync(Func<ActionAuthorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.WhenAsync(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.UnlessAsync(Func<ActionAuthorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.UnlessAsync(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.Include(IValidator<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.Include<TValidator>(Func<ActionAuthorizationRequest, TValidator>) AbstractValidator<ActionAuthorizationRequest>.GetEnumerator() AbstractValidator<ActionAuthorizationRequest>.EnsureInstanceNotNull(object) AbstractValidator<ActionAuthorizationRequest>.PreValidate(ValidationContext<ActionAuthorizationRequest>, ValidationResult) AbstractValidator<ActionAuthorizationRequest>.RaiseValidationException(ValidationContext<ActionAuthorizationRequest>, ValidationResult) AbstractValidator<ActionAuthorizationRequest>.OnRuleAdded(IValidationRule<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.CascadeMode AbstractValidator<ActionAuthorizationRequest>.ClassLevelCascadeMode AbstractValidator<ActionAuthorizationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ActionAuthorizationRequestValidator() Configures the validation rules for the ActionAuthorizationRequest model. public ActionAuthorizationRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.RoleAssignmentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.RoleAssignmentValidator.html",
    "title": "Class RoleAssignmentValidator | FoundationaLLM",
    "keywords": "Class RoleAssignmentValidator Namespace FoundationaLLM.Authorization.Validation Assembly FoundationaLLM.Authorization.dll Validator for the RoleAssignment model. public class RoleAssignmentValidator : AbstractValidator<RoleAssignment>, IValidator<RoleAssignment>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<RoleAssignment> RoleAssignmentValidator Implements IValidator<RoleAssignment> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<RoleAssignment>.Validate(RoleAssignment) AbstractValidator<RoleAssignment>.ValidateAsync(RoleAssignment, CancellationToken) AbstractValidator<RoleAssignment>.Validate(ValidationContext<RoleAssignment>) AbstractValidator<RoleAssignment>.ValidateAsync(ValidationContext<RoleAssignment>, CancellationToken) AbstractValidator<RoleAssignment>.CreateDescriptor() AbstractValidator<RoleAssignment>.RuleFor<TProperty>(Expression<Func<RoleAssignment, TProperty>>) AbstractValidator<RoleAssignment>.Transform<TProperty, TTransformed>(Expression<Func<RoleAssignment, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<RoleAssignment>.Transform<TProperty, TTransformed>(Expression<Func<RoleAssignment, TProperty>>, Func<RoleAssignment, TProperty, TTransformed>) AbstractValidator<RoleAssignment>.RuleForEach<TElement>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>) AbstractValidator<RoleAssignment>.TransformForEach<TElement, TTransformed>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<RoleAssignment>.TransformForEach<TElement, TTransformed>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>, Func<RoleAssignment, TElement, TTransformed>) AbstractValidator<RoleAssignment>.RuleSet(string, Action) AbstractValidator<RoleAssignment>.When(Func<RoleAssignment, bool>, Action) AbstractValidator<RoleAssignment>.When(Func<RoleAssignment, ValidationContext<RoleAssignment>, bool>, Action) AbstractValidator<RoleAssignment>.Unless(Func<RoleAssignment, bool>, Action) AbstractValidator<RoleAssignment>.Unless(Func<RoleAssignment, ValidationContext<RoleAssignment>, bool>, Action) AbstractValidator<RoleAssignment>.WhenAsync(Func<RoleAssignment, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.WhenAsync(Func<RoleAssignment, ValidationContext<RoleAssignment>, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.UnlessAsync(Func<RoleAssignment, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.UnlessAsync(Func<RoleAssignment, ValidationContext<RoleAssignment>, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.Include(IValidator<RoleAssignment>) AbstractValidator<RoleAssignment>.Include<TValidator>(Func<RoleAssignment, TValidator>) AbstractValidator<RoleAssignment>.GetEnumerator() AbstractValidator<RoleAssignment>.EnsureInstanceNotNull(object) AbstractValidator<RoleAssignment>.PreValidate(ValidationContext<RoleAssignment>, ValidationResult) AbstractValidator<RoleAssignment>.RaiseValidationException(ValidationContext<RoleAssignment>, ValidationResult) AbstractValidator<RoleAssignment>.OnRuleAdded(IValidationRule<RoleAssignment>) AbstractValidator<RoleAssignment>.CascadeMode AbstractValidator<RoleAssignment>.ClassLevelCascadeMode AbstractValidator<RoleAssignment>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentValidator() Configured the validation rules for the RoleAssignment model. public RoleAssignmentValidator()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.html",
    "title": "Namespace FoundationaLLM.Authorization.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization.Validation Classes ActionAuthorizationRequestValidator Validator for the ActionAuthorizationRequest model. RoleAssignmentValidator Validator for the RoleAssignment model."
  },
  "api/dotnet/FoundationaLLM.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.html",
    "title": "Namespace FoundationaLLM.Authorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Authorization Namespaces FoundationaLLM.Authorization.API.Controllers FoundationaLLM.Authorization.Interfaces FoundationaLLM.Authorization.Middleware FoundationaLLM.Authorization.Models FoundationaLLM.Authorization.ResourceProviders FoundationaLLM.Authorization.Services FoundationaLLM.Authorization.Validation"
  },
  "api/dotnet/FoundationaLLM.AzureOpenAI.Models.AzureOpenAIResourceReference.html": {
    "href": "api/dotnet/FoundationaLLM.AzureOpenAI.Models.AzureOpenAIResourceReference.html",
    "title": "Class AzureOpenAIResourceReference | FoundationaLLM",
    "keywords": "Class AzureOpenAIResourceReference Namespace FoundationaLLM.AzureOpenAI.Models Assembly FoundationaLLM.AzureOpenAI.dll References an AzureOpenAIResourceBase resource managed by the FoundationaLLM.AzureOpenAI resource provider. public class AzureOpenAIResourceReference : ResourceReference Inheritance object ResourceReference AzureOpenAIResourceReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the resource. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.AzureOpenAI.Models.html": {
    "href": "api/dotnet/FoundationaLLM.AzureOpenAI.Models.html",
    "title": "Namespace FoundationaLLM.AzureOpenAI.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AzureOpenAI.Models Classes AzureOpenAIResourceReference References an AzureOpenAIResourceBase resource managed by the FoundationaLLM.AzureOpenAI resource provider."
  },
  "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.AzureOpenAIResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.AzureOpenAIResourceProviderService.html",
    "title": "Class AzureOpenAIResourceProviderService | FoundationaLLM",
    "keywords": "Class AzureOpenAIResourceProviderService Namespace FoundationaLLM.AzureOpenAI.ResourceProviders Assembly FoundationaLLM.AzureOpenAI.dll Implements the FoundationaLLM.AzureOpenAI resource provider. public class AzureOpenAIResourceProviderService : ResourceProviderServiceBase<AzureOpenAIResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AzureOpenAIResourceReference> AzureOpenAIResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AzureOpenAIResourceReference>._resourceReferenceStore ResourceProviderServiceBase<AzureOpenAIResourceReference>._serviceProvider ResourceProviderServiceBase<AzureOpenAIResourceReference>._authorizationService ResourceProviderServiceBase<AzureOpenAIResourceReference>._storageService ResourceProviderServiceBase<AzureOpenAIResourceReference>._eventService ResourceProviderServiceBase<AzureOpenAIResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<AzureOpenAIResourceReference>._logger ResourceProviderServiceBase<AzureOpenAIResourceReference>._instanceSettings ResourceProviderServiceBase<AzureOpenAIResourceReference>._storageContainerName ResourceProviderServiceBase<AzureOpenAIResourceReference>._serializerSettings ResourceProviderServiceBase<AzureOpenAIResourceReference>.Name ResourceProviderServiceBase<AzureOpenAIResourceReference>.IsInitialized ResourceProviderServiceBase<AzureOpenAIResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<AzureOpenAIResourceReference>.StorageAccountName ResourceProviderServiceBase<AzureOpenAIResourceReference>.StorageContainerName ResourceProviderServiceBase<AzureOpenAIResourceReference>.Initialize() ResourceProviderServiceBase<AzureOpenAIResourceReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AzureOpenAIResourceReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AzureOpenAIResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AzureOpenAIResourceReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<AzureOpenAIResourceReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<AzureOpenAIResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<AzureOpenAIResourceReference>.HandleEvents(EventSetEventArgs) ResourceProviderServiceBase<AzureOpenAIResourceReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<AzureOpenAIResourceReference>.LoadResource<T>(AzureOpenAIResourceReference) ResourceProviderServiceBase<AzureOpenAIResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<AzureOpenAIResourceReference>.CreateResource<T>(AzureOpenAIResourceReference, T) ResourceProviderServiceBase<AzureOpenAIResourceReference>.CreateResource(AzureOpenAIResourceReference, Stream, string) ResourceProviderServiceBase<AzureOpenAIResourceReference>.CreateResources<T1, T2>(AzureOpenAIResourceReference, T1, AzureOpenAIResourceReference, T2) ResourceProviderServiceBase<AzureOpenAIResourceReference>.SaveResource<T>(AzureOpenAIResourceReference, T) ResourceProviderServiceBase<AzureOpenAIResourceReference>.DeleteResource<T>(string) ResourceProviderServiceBase<AzureOpenAIResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AzureOpenAIResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAIResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILogger<AzureOpenAIResourceProviderService>) Implements the FoundationaLLM.AzureOpenAI resource provider. public AzureOpenAIResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILogger<AzureOpenAIResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<AzureOpenAIResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceInternal<T>(ResourcePath resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, T resource, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.AzureOpenAI.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AzureOpenAI.ResourceProviders Classes AzureOpenAIResourceProviderService Implements the FoundationaLLM.AzureOpenAI resource provider."
  },
  "api/dotnet/FoundationaLLM.AzureOpenAI.html": {
    "href": "api/dotnet/FoundationaLLM.AzureOpenAI.html",
    "title": "Namespace FoundationaLLM.AzureOpenAI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.AzureOpenAI Namespaces FoundationaLLM.AzureOpenAI.Models FoundationaLLM.AzureOpenAI.ResourceProviders"
  },
  "api/dotnet/FoundationaLLM.Client.Core.CoreClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.CoreClient.html",
    "title": "Class CoreClient | FoundationaLLM",
    "keywords": "Class CoreClient Namespace FoundationaLLM.Client.Core Assembly FoundationaLLM.Client.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CoreClient : ICoreClient Inheritance object CoreClient Implements ICoreClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreClient() Constructor for mocking. This does not initialize the clients. public CoreClient() CoreClient(string, TokenCredential, string) Initializes a new instance of the CoreClient class with the specified Core API URI and TokenCredential. public CoreClient(string coreUri, TokenCredential credential, string instanceId) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) CoreClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the CoreClient class with the specified Core API URI, TokenCredential, and optional client settings. public CoreClient(string coreUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Methods AttachFileAndAskQuestionAsync(Stream, string, string, string, string, bool, string?, ChatSessionProperties?) Attaches a file to the completion request and sends a question to the agent using the Core API.If the useSession parameter is true, the method uses an existing session or creates a new chat session and optionally renames it. existing session public Task<Completion> AttachFileAndAskQuestionAsync(Stream fileStream, string fileName, string contentType, string agentName, string question, bool useSession, string? sessionId, ChatSessionProperties? chatSessionProperties) Parameters fileStream Stream The file contents of the new Attachment resource. fileName string The name of the file. contentType string The Content-Type header value of a valid mime type that is used to create a new MediaTypeHeaderValue as part of the MultipartFormDataContent sent to the API endpoint. agentName string The name of the FoundationaLLM agent that will handle the completion request. question string The user prompt to send to the agent along with the attachment. useSession bool If true, the completion is sent to a new or existing session. If false, no session is created and the sessionless orchestration flow is used. sessionId string The ID of an existing session. If null or empty, a new session is created first. chatSessionProperties ChatSessionProperties Optional session properties. Returns Task<Completion> A completion from the designated FoundationaLLM agent. CreateChatSessionAsync(ChatSessionProperties) Creates a new chat session with the specified name. public Task<string> CreateChatSessionAsync(ChatSessionProperties chatSessionProperties) Parameters chatSessionProperties ChatSessionProperties Returns Task<string> The new chat session ID. DeleteSessionAsync(string) Deletes a chat session. public Task DeleteSessionAsync(string sessionId) Parameters sessionId string The ID of the session to delete. Returns Task GetAgentsAsync() Retrieves agents available to the user for orchestration and session-based requests. public Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> A list of available agents. GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. public Task<IEnumerable<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<IEnumerable<Message>> GetCompletionAsync(CompletionRequest) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. You must ensure that the completion request contains an AgentName and UserPrompt. public Task<Completion> GetCompletionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the AgentName and UserPrompt at a minimum. Returns Task<Completion> A completion from the designated FoundationaLLM agent. GetCompletionAsync(string, string) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. public Task<Completion> GetCompletionAsync(string userPrompt, string agentName) Parameters userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Completion> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(CompletionRequest) Runs a single completion request with an agent using the Core API and a chat session. You must ensure that the orchestration request contains a SessionID, AgentName, and UserPrompt. public Task<Completion> GetCompletionWithSessionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the SessionID, AgentName, and UserPrompt at a minimum. Returns Task<Completion> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(string?, ChatSessionProperties?, string, string) Runs a single completion request with an agent using the Core API and a chat session. To specify an existing session, provide the session ID. Otherwise, a new session will be created. If the session name is provided, the session is renamed. public Task<Completion> GetCompletionWithSessionAsync(string? sessionId, ChatSessionProperties? chatSessionProperties, string userPrompt, string agentName) Parameters sessionId string The ID of an existing session. If null or empty, a new session is created first. chatSessionProperties ChatSessionProperties userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Completion> A completion from the designated FoundationaLLM agent."
  },
  "api/dotnet/FoundationaLLM.Client.Core.CoreRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.CoreRESTClient.html",
    "title": "Class CoreRESTClient | FoundationaLLM",
    "keywords": "Class CoreRESTClient Namespace FoundationaLLM.Client.Core Assembly FoundationaLLM.Client.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CoreRESTClient : ICoreRESTClient Inheritance object CoreRESTClient Implements ICoreRESTClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreRESTClient() Constructor for mocking. This does not initialize the clients. public CoreRESTClient() CoreRESTClient(string, TokenCredential, string) Initializes a new instance of the CoreRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL. public CoreRESTClient(string coreUri, TokenCredential credential, string instanceId) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) CoreRESTClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the CoreRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL and optional client settings. public CoreRESTClient(string coreUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Properties Attachments Contains methods to interact with the Attachments endpoints. public IAttachmentRESTClient Attachments { get; } Property Value IAttachmentRESTClient Branding Contains methods to interact with the Branding endpoints. public IBrandingRESTClient Branding { get; } Property Value IBrandingRESTClient Completions Contains methods to interact with the Orchestration endpoints. public ICompletionRESTClient Completions { get; } Property Value ICompletionRESTClient Sessions Contains methods to interact with the Sessions endpoints. public ISessionRESTClient Sessions { get; } Property Value ISessionRESTClient Status Contains methods to interact with the Status endpoints. public IStatusRESTClient Status { get; } Property Value IStatusRESTClient UserProfiles Contains methods to interact with the UserProfiles endpoints. public IUserProfileRESTClient UserProfiles { get; } Property Value IUserProfileRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IAttachmentRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IAttachmentRESTClient.html",
    "title": "Interface IAttachmentRESTClient | FoundationaLLM",
    "keywords": "Interface IAttachmentRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's Attachments endpoints. public interface IAttachmentRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods UploadAttachmentAsync(Stream, string, string) Uploads a file attachment to the Core API. Task<string> UploadAttachmentAsync(Stream fileStream, string fileName, string contentType) Parameters fileStream Stream The file contents of the new Attachment resource. fileName string The name of the file. contentType string The Content-Type header value of a valid mime type that is used to create a new MediaTypeHeaderValue as part of the MultipartFormDataContent sent to the API endpoint. Returns Task<string> The Object ID of the Attachment Resource Provider created from the filestream."
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IBrandingRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IBrandingRESTClient.html",
    "title": "Interface IBrandingRESTClient | FoundationaLLM",
    "keywords": "Interface IBrandingRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's Branding endpoints. public interface IBrandingRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetBrandingAsync() Retrieves the branding information for the client. Task<ClientBrandingConfiguration> GetBrandingAsync() Returns Task<ClientBrandingConfiguration>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICompletionRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICompletionRESTClient.html",
    "title": "Interface ICompletionRESTClient | FoundationaLLM",
    "keywords": "Interface ICompletionRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's completions endpoints. public interface ICompletionRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAgentsAsync() Retrieves agents available to the user for orchestration and session-based requests. Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetChatCompletionAsync(CompletionRequest) Performs a completion request to the Core API. For session-based requests, set the CompletionRequest.SessionId property to the unique identifier for the session. Set the property to null or empty for non-session-based requests. Session-less completion requests do not maintain message history or data retention in Cosmos DB. Task<Completion> GetChatCompletionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request data sent to the endpoint. Returns Task<Completion>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreClient.html",
    "title": "Interface ICoreClient | FoundationaLLM",
    "keywords": "Interface ICoreClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides high-level methods to interact with the Core API. public interface ICoreClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AttachFileAndAskQuestionAsync(Stream, string, string, string, string, bool, string?, ChatSessionProperties?) Attaches a file to the completion request and sends a question to the agent using the Core API.If the useSession parameter is true, the method uses an existing session or creates a new chat session and optionally renames it. existing session Task<Completion> AttachFileAndAskQuestionAsync(Stream fileStream, string fileName, string contentType, string agentName, string question, bool useSession, string? sessionId, ChatSessionProperties? chatSessionProperties) Parameters fileStream Stream The file contents of the new Attachment resource. fileName string The name of the file. contentType string The Content-Type header value of a valid mime type that is used to create a new MediaTypeHeaderValue as part of the MultipartFormDataContent sent to the API endpoint. agentName string The name of the FoundationaLLM agent that will handle the completion request. question string The user prompt to send to the agent along with the attachment. useSession bool If true, the completion is sent to a new or existing session. If false, no session is created and the sessionless orchestration flow is used. sessionId string The ID of an existing session. If null or empty, a new session is created first. chatSessionProperties ChatSessionProperties Optional session properties. Returns Task<Completion> A completion from the designated FoundationaLLM agent. CreateChatSessionAsync(ChatSessionProperties) Creates a new chat session with the specified name. Task<string> CreateChatSessionAsync(ChatSessionProperties sessionProperties) Parameters sessionProperties ChatSessionProperties The session properties. Returns Task<string> The new chat session ID. DeleteSessionAsync(string) Deletes a chat session. Task DeleteSessionAsync(string sessionId) Parameters sessionId string The ID of the session to delete. Returns Task GetAgentsAsync() Retrieves agents available to the user for orchestration and session-based requests. Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> A list of available agents. GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. Task<IEnumerable<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<IEnumerable<Message>> GetCompletionAsync(CompletionRequest) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. You must ensure that the completion request contains an AgentName and UserPrompt. Task<Completion> GetCompletionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the AgentName and UserPrompt at a minimum. Returns Task<Completion> A completion from the designated FoundationaLLM agent. GetCompletionAsync(string, string) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. Task<Completion> GetCompletionAsync(string userPrompt, string agentName) Parameters userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Completion> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(CompletionRequest) Runs a single completion request with an agent using the Core API and a chat session. You must ensure that the orchestration request contains a SessionID, AgentName, and UserPrompt. Task<Completion> GetCompletionWithSessionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the SessionID, AgentName, and UserPrompt at a minimum. Returns Task<Completion> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(string?, ChatSessionProperties?, string, string) Runs a single completion request with an agent using the Core API and a chat session. To specify an existing session, provide the session ID. Otherwise, a new session will be created. If the session name is provided, the session is renamed. Task<Completion> GetCompletionWithSessionAsync(string? sessionId, ChatSessionProperties? sessionProperties, string userPrompt, string agentName) Parameters sessionId string The ID of an existing session. If null or empty, a new session is created first. sessionProperties ChatSessionProperties Optional session priperties. userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Completion> A completion from the designated FoundationaLLM agent."
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreRESTClient.html",
    "title": "Interface ICoreRESTClient | FoundationaLLM",
    "keywords": "Interface ICoreRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Contains methods to interact with the Core API's endpoints. public interface ICoreRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Attachments Contains methods to interact with the Attachments endpoints. IAttachmentRESTClient Attachments { get; } Property Value IAttachmentRESTClient Branding Contains methods to interact with the Branding endpoints. IBrandingRESTClient Branding { get; } Property Value IBrandingRESTClient Completions Contains methods to interact with the Orchestration endpoints. ICompletionRESTClient Completions { get; } Property Value ICompletionRESTClient Sessions Contains methods to interact with the Sessions endpoints. ISessionRESTClient Sessions { get; } Property Value ISessionRESTClient Status Contains methods to interact with the Status endpoints. IStatusRESTClient Status { get; } Property Value IStatusRESTClient UserProfiles Contains methods to interact with the UserProfiles endpoints. IUserProfileRESTClient UserProfiles { get; } Property Value IUserProfileRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ISessionRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ISessionRESTClient.html",
    "title": "Interface ISessionRESTClient | FoundationaLLM",
    "keywords": "Interface ISessionRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's session endpoints. public interface ISessionRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateSessionAsync(ChatSessionProperties) Creates a new session with the specified name. Task<string> CreateSessionAsync(ChatSessionProperties chatSessionProperties) Parameters chatSessionProperties ChatSessionProperties The session properties. Returns Task<string> Returns the new Session ID. DeleteSessionAsync(string) Deletes a chat session. Task DeleteSessionAsync(string sessionId) Parameters sessionId string Returns Task GetAllChatSessionsAsync() Retrieves all chat sessions. Task<IEnumerable<Session>> GetAllChatSessionsAsync() Returns Task<IEnumerable<Session>> GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. Task<IEnumerable<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<IEnumerable<Message>> GetCompletionPromptAsync(string, string) Gets a completion prompt by session ID and completion prompt ID. Task<CompletionPrompt> GetCompletionPromptAsync(string sessionId, string completionPromptId) Parameters sessionId string completionPromptId string Returns Task<CompletionPrompt> RateMessageAsync(string, string, bool) Sets the rating for a message. Task RateMessageAsync(string sessionId, string messageId, bool rating) Parameters sessionId string The chat session ID that contains the message to rate. messageId string The ID of the message to rate. rating bool Set to true for a positive rating and false for a negative rating. Returns Task RenameChatSession(string, ChatSessionProperties) Renames a chat session. Task<string> RenameChatSession(string sessionId, ChatSessionProperties chatSessionProperties) Parameters sessionId string The chat session ID. chatSessionProperties ChatSessionProperties The session properties. Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IStatusRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IStatusRESTClient.html",
    "title": "Interface IStatusRESTClient | FoundationaLLM",
    "keywords": "Interface IStatusRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's status endpoints. public interface IStatusRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetServiceStatusAsync() Returns the status of the Core API service. A token is not required since the status endpoint supports anonymous access. Task<ServiceStatusInfo> GetServiceStatusAsync() Returns Task<ServiceStatusInfo> IsAuthenticatedAsync() Checks whether the requester is authenticated and allowed to execute requests against the Core API service. Task<bool> IsAuthenticatedAsync() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IUserProfileRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IUserProfileRESTClient.html",
    "title": "Interface IUserProfileRESTClient | FoundationaLLM",
    "keywords": "Interface IUserProfileRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's user profile endpoints. public interface IUserProfileRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserProfilesAsync() Retrieves user profiles. Task<IEnumerable<UserProfile>> GetUserProfilesAsync() Returns Task<IEnumerable<UserProfile>>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Client.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Client.Core.Interfaces Interfaces IAttachmentRESTClient Provides methods to manage calls to the Core API's Attachments endpoints. IBrandingRESTClient Provides methods to manage calls to the Core API's Branding endpoints. ICompletionRESTClient Provides methods to manage calls to the Core API's completions endpoints. ICoreClient Provides high-level methods to interact with the Core API. ICoreRESTClient Contains methods to interact with the Core API's endpoints. ISessionRESTClient Provides methods to manage calls to the Core API's session endpoints. IStatusRESTClient Provides methods to manage calls to the Core API's status endpoints. IUserProfileRESTClient Provides methods to manage calls to the Core API's user profile endpoints."
  },
  "api/dotnet/FoundationaLLM.Client.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.html",
    "title": "Namespace FoundationaLLM.Client.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Client.Core Namespaces FoundationaLLM.Client.Core.Interfaces Classes CoreClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. CoreRESTClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAIModelManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAIModelManagementClient.html",
    "title": "Interface IAIModelManagementClient | FoundationaLLM",
    "keywords": "Interface IAIModelManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage AI model resources. public interface IAIModelManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAIModelAsync(string) Retrieves a specific AI model by name. Task<ResourceProviderGetResult<AIModelBase>> GetAIModelAsync(string aiModelName) Parameters aiModelName string The name of the AI model to retrieve. Returns Task<ResourceProviderGetResult<AIModelBase>> GetAIModelsAsync() Retrieves all AI model resources. Task<List<ResourceProviderGetResult<AIModelBase>>> GetAIModelsAsync() Returns Task<List<ResourceProviderGetResult<AIModelBase>>> All AI model resources to which the caller has access and which have not been marked as deleted. UpsertAIModel(AIModelBase) Upserts an AI model resource. If an AI model does not exist, it will be created. If an AI model configuration does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAIModel(AIModelBase aiModel) Parameters aiModel AIModelBase The API endpoint configuration resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAgentManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAgentManagementClient.html",
    "title": "Interface IAgentManagementClient | FoundationaLLM",
    "keywords": "Interface IAgentManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage agent resources. public interface IAgentManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckAgentNameAsync(ResourceName) Checks the availability of a resource name for an agent. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing agent or an agent that was deleted but not purged. Task<ResourceNameCheckResult> CheckAgentNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeleteAgentAsync(string) Deletes an agent resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeAgentAsync(string) method with the same name. Task DeleteAgentAsync(string agentName) Parameters agentName string The name of the agent resource to delete. Returns Task GetAgentAsync(string) Retrieves a specific agent by name. Task<ResourceProviderGetResult<AgentBase>> GetAgentAsync(string agentName) Parameters agentName string The name of the agent resource to retrieve. Returns Task<ResourceProviderGetResult<AgentBase>> GetAgentsAsync() Retrieves all agent resources. Task<List<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<List<ResourceProviderGetResult<AgentBase>>> All agent resources to which the caller has access and which have not been marked as deleted. PurgeAgentAsync(string) Purges a deleted agent by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeAgentAsync(string agentName) Parameters agentName string The name of the agent to purge. Returns Task<ResourceProviderActionResult> UpsertAgentAsync(AgentBase) Upserts an agent resource. If an agent does not exist, it will be created. If an agent does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAgentAsync(AgentBase agent) Parameters agent AgentBase The agent resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAttachmentManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAttachmentManagementClient.html",
    "title": "Interface IAttachmentManagementClient | FoundationaLLM",
    "keywords": "Interface IAttachmentManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage attachment resources. public interface IAttachmentManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteAttachmentAsync(string) Deletes an attachment resource by name. Task DeleteAttachmentAsync(string attachmentName) Parameters attachmentName string The name of the attachment resource to delete. Returns Task GetAttachmentAsync(string) Retrieves a specific attachment by name. Task<ResourceProviderGetResult<AttachmentFile>> GetAttachmentAsync(string attachmentName) Parameters attachmentName string The name of the attachment resource to retrieve. Returns Task<ResourceProviderGetResult<AttachmentFile>> GetAttachmentsAsync() Retrieves all attachment resources. Task<List<ResourceProviderGetResult<AttachmentFile>>> GetAttachmentsAsync() Returns Task<List<ResourceProviderGetResult<AttachmentFile>>> All attachment resources to which the caller has access. UpsertAttachmentAsync(AttachmentFile) Upserts an attachment resource. If an attachment does not exist, it will be created. If an attachment does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAttachmentAsync(AttachmentFile attachment) Parameters attachment AttachmentFile The attachment resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IConfigurationManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IConfigurationManagementClient.html",
    "title": "Interface IConfigurationManagementClient | FoundationaLLM",
    "keywords": "Interface IConfigurationManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provider methods for managing configuration resources. public interface IConfigurationManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteAppConfigurationAsync(string) Deletes an Azure App Configuration key and associated Azure Key Vault secret. Task DeleteAppConfigurationAsync(string key) Parameters key string The name of the Azure App Configuration key to delete. Returns Task GetAppConfigurationsAsync() Retrieves all app configuration values. Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetAppConfigurationsAsync() Returns Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetAppConfigurationsByFilterAsync(string) Retrieves app configuration values by a filter. Either enter an exact key or a partial key with a wildcard (asterisk: ) to filter results. For example, \"FoundationaLLM:Branding:\" will return all app configuration values that start with \"FoundationaLLM:Branding:\". Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetAppConfigurationsByFilterAsync(string key) Parameters key string The full key value or key filter with a wildcard. Returns Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetExternalOrchestrationServiceAsync(string) Returns a specific external orchestration service by name. Task<ResourceProviderGetResult<APIEndpointConfiguration>> GetExternalOrchestrationServiceAsync(string externalOrchestrationServiceName) Parameters externalOrchestrationServiceName string The name of the external orchestration service to retrieve. Returns Task<ResourceProviderGetResult<APIEndpointConfiguration>> GetExternalOrchestrationServicesAsync() Retrieves all external orchestration services. Task<List<ResourceProviderGetResult<APIEndpointConfiguration>>> GetExternalOrchestrationServicesAsync() Returns Task<List<ResourceProviderGetResult<APIEndpointConfiguration>>> UpsertAPIEndpointConfiguration(APIEndpointConfiguration) Upserts an api endpoint configuration resource. If an api endpoint configuration does not exist, it will be created. If an api endpoint configuration does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAPIEndpointConfiguration(APIEndpointConfiguration apiEndpointConfiguration) Parameters apiEndpointConfiguration APIEndpointConfiguration The api endpoint configuration resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertAppConfigurationAsync(AppConfigurationKeyBase) Upserts an app configuration value. If the value does not exist, it will be created. To create a standard Key-value App Configuration, use the AppConfigurationKeyValue class for the appConfiguration parameter. To create a Key Vault reference App Configuration, use the AppConfigurationKeyVaultReference class for the appConfiguration parameter. Task<ResourceProviderUpsertResult> UpsertAppConfigurationAsync(AppConfigurationKeyBase appConfiguration) Parameters appConfiguration AppConfigurationKeyBase Use either the AppConfigurationKeyValue type or the AppConfigurationKeyVaultReference type to save the App Config value as a key-value setting or a Key Vault reference, respectively. Returns Task<ResourceProviderUpsertResult>"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IDataSourceManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IDataSourceManagementClient.html",
    "title": "Interface IDataSourceManagementClient | FoundationaLLM",
    "keywords": "Interface IDataSourceManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage data source resources. public interface IDataSourceManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckDataSourceNameAsync(ResourceName) Checks the availability of a resource name for a data source. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing data source or a data source that was deleted but not purged. Task<ResourceNameCheckResult> CheckDataSourceNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeleteDataSourceAsync(string) Upserts a data source resource. If a data source does not exist, it will be created. If a data source does exist, it will be updated. Task DeleteDataSourceAsync(string dataSourceName) Parameters dataSourceName string The data source resource to create or update. Returns Task Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. FilterDataSourceAsync(ResourceFilter) Returns data sources that match the filter criteria. Task<List<DataSourceBase>> FilterDataSourceAsync(ResourceFilter resourceFilter) Parameters resourceFilter ResourceFilter The filter criteria to apply to the request. Returns Task<List<DataSourceBase>> GetDataSourceAsync(string) Retrieves a specific data source by name. Task<ResourceProviderGetResult<DataSourceBase>> GetDataSourceAsync(string dataSourceName) Parameters dataSourceName string The name of the data source resource to retrieve. Returns Task<ResourceProviderGetResult<DataSourceBase>> GetDataSourcesAsync() Retrieves all data source resources. Task<List<ResourceProviderGetResult<DataSourceBase>>> GetDataSourcesAsync() Returns Task<List<ResourceProviderGetResult<DataSourceBase>>> All data source resources to which the caller has access and which have not been marked as deleted. PurgeDataSourceAsync(string) Purges a deleted data source by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeDataSourceAsync(string dataSourceName) Parameters dataSourceName string The name of the data source to purge. Returns Task<ResourceProviderActionResult> UpsertDataSourceAsync(DataSourceBase) Upserts a data source resource. If a data source does not exist, it will be created. If a data source does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertDataSourceAsync(DataSourceBase dataSource) Parameters dataSource DataSourceBase The data source resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IIdentityRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IIdentityRESTClient.html",
    "title": "Interface IIdentityRESTClient | FoundationaLLM",
    "keywords": "Interface IIdentityRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage calls to the Management API's identity endpoints. public interface IIdentityRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetGroupAsync(string) Retrieves a specific group account by its identifier. Task<Group> GetGroupAsync(string groupId) Parameters groupId string Returns Task<Group> GetUserAsync(string) Retrieves a specific user account by its identifier. Task<User> GetUserAsync(string userId) Parameters userId string Returns Task<User> RetrieveGroupsAsync(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. Task<IEnumerable<Group>> RetrieveGroupsAsync(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IEnumerable<Group>> RetrieveObjectsByIdsAsync(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. Task<IEnumerable<DirectoryObject>> RetrieveObjectsByIdsAsync(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IEnumerable<DirectoryObject>> RetrieveUsersAsync(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. Task<IEnumerable<User>> RetrieveUsersAsync(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IEnumerable<User>>"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementClient.html",
    "title": "Interface IManagementClient | FoundationaLLM",
    "keywords": "Interface IManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides high-level methods to interact with the Management API. public interface IManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIModels Contains methods to interact with AIModel resources. IAIModelManagementClient AIModels { get; } Property Value IAIModelManagementClient Agents Contains methods to interact with Agent resources. IAgentManagementClient Agents { get; } Property Value IAgentManagementClient Attachments Contains methods to interact with Attachment resources. IAttachmentManagementClient Attachments { get; } Property Value IAttachmentManagementClient Configuration Contains methods to interact with Configuration resources. IConfigurationManagementClient Configuration { get; } Property Value IConfigurationManagementClient DataSources Contains methods to interact with DataSource resources. IDataSourceManagementClient DataSources { get; } Property Value IDataSourceManagementClient Prompts Contains methods to interact with Prompt resources. IPromptManagementClient Prompts { get; } Property Value IPromptManagementClient Vectorization Contains methods to interact with Vectorization resources. IVectorizationManagementClient Vectorization { get; } Property Value IVectorizationManagementClient Methods GetResourceByObjectId<T>(string) Retrieves a resource by its ObjectId. Task<T> GetResourceByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<T> Returns a deserialized resource object. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase. GetResourceWithActionsAndRolesByObjectId<T>(string) Retrieves a resource by its ObjectId, including actions and roles. Task<ResourceProviderGetResult<T>> GetResourceWithActionsAndRolesByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<ResourceProviderGetResult<T>> Returns a deserialized resource object and its list of allowed actions and roles. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementRESTClient.html",
    "title": "Interface IManagementRESTClient | FoundationaLLM",
    "keywords": "Interface IManagementRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Contains methods to interact with the Management API's endpoints. public interface IManagementRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Identity Contains methods to interact with the Identity endpoints. IIdentityRESTClient Identity { get; } Property Value IIdentityRESTClient Resources Contains methods to interact with the Resources endpoints. IResourceRESTClient Resources { get; } Property Value IResourceRESTClient Status Contains methods to interact with the Status endpoints. IStatusRESTClient Status { get; } Property Value IStatusRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IPromptManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IPromptManagementClient.html",
    "title": "Interface IPromptManagementClient | FoundationaLLM",
    "keywords": "Interface IPromptManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage prompt resources. public interface IPromptManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckPromptNameAsync(ResourceName) Checks the availability of a resource name for a prompt. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing prompt or a prompt that was deleted but not purged. Task<ResourceNameCheckResult> CheckPromptNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeletePromptAsync(string) Deletes a prompt resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgePromptAsync(string) method with the same name. Task DeletePromptAsync(string promptName) Parameters promptName string The name of the prompt resource to delete. Returns Task GetPromptAsync(string) Retrieves a specific prompt by name. Task<ResourceProviderGetResult<PromptBase>> GetPromptAsync(string promptName) Parameters promptName string The name of the prompt resource to retrieve. Returns Task<ResourceProviderGetResult<PromptBase>> GetPromptsAsync() Retrieves all prompt resources. Task<List<ResourceProviderGetResult<PromptBase>>> GetPromptsAsync() Returns Task<List<ResourceProviderGetResult<PromptBase>>> All prompt resources to which the caller has access and which have not been marked as deleted. PurgePromptAsync(string) Purges a deleted prompt by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgePromptAsync(string promptName) Parameters promptName string The name of the prompt to purge. Returns Task<ResourceProviderActionResult> UpsertPromptAsync(PromptBase) Upserts a prompt resource. If a prompt does not exist, it will be created. If a prompt does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertPromptAsync(PromptBase prompt) Parameters prompt PromptBase The prompt resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IResourceRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IResourceRESTClient.html",
    "title": "Interface IResourceRESTClient | FoundationaLLM",
    "keywords": "Interface IResourceRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage calls to the Management API's resource endpoints. public interface IResourceRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteResourceAsync(string, string) Deletes a resource. Task DeleteResourceAsync(string resourceProvider, string resourcePath) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task ExecuteResourceActionAsync<T>(string, string, object) Executes resource actions, serializing the action result to the specified type, For most actions, the result will be a ResourceProviderActionResult. Task<T> ExecuteResourceActionAsync<T>(string resourceProvider, string resourcePath, object request) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type and action. request object The action payload. Returns Task<T> The ObjectId of the created or updated resource. Type Parameters T GetResourcesAsync<T>(string) Gets one or more resource. Task<T> GetResourcesAsync<T>(string fullResourcePath) Parameters fullResourcePath string The full resource path, including the Instance ID, resource provider, and logical path of the resource type. Returns Task<T> Type Parameters T Deserializes the return content to the passed in type. GetResourcesAsync<T>(string, string) Gets one or more resource. Task<T> GetResourcesAsync<T>(string resourceProvider, string resourcePath) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<T> Type Parameters T Deserializes the return content to the passed in type. UpsertResourceAsync(string, string, object) Creates or updates resources. Task<ResourceProviderUpsertResult> UpsertResourceAsync(string resourceProvider, string resourcePath, object resource) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. resource object The resource to be created or updated. Returns Task<ResourceProviderUpsertResult> The ObjectId of the created or updated resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IStatusRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IStatusRESTClient.html",
    "title": "Interface IStatusRESTClient | FoundationaLLM",
    "keywords": "Interface IStatusRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage calls to the Management API's status endpoints. public interface IStatusRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetServiceStatusAsync() Returns the status of the Management API service. A token is not required since the status endpoint supports anonymous access. Task<ServiceStatusInfo> GetServiceStatusAsync() Returns Task<ServiceStatusInfo> IsAuthenticatedAsync() Checks whether the requester is authenticated and allowed to execute requests against the Management API service. Task<bool> IsAuthenticatedAsync() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IVectorizationManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IVectorizationManagementClient.html",
    "title": "Interface IVectorizationManagementClient | FoundationaLLM",
    "keywords": "Interface IVectorizationManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage vectorization resources. public interface IVectorizationManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ActivateVectorizationPipelineAsync(string) Activates a vectorization pipeline. Task<VectorizationResult> ActivateVectorizationPipelineAsync(string pipelineName) Parameters pipelineName string The vectorization pipeline to activate. Returns Task<VectorizationResult> CheckIndexingProfileNameAsync(ResourceName) Checks the availability of a resource name for an indexing profile. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing indexing profile or an indexing profile that was deleted but not purged. Task<ResourceNameCheckResult> CheckIndexingProfileNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeactivateVectorizationPipelineAsync(string) Deactivates a vectorization pipeline. Task<VectorizationResult> DeactivateVectorizationPipelineAsync(string pipelineName) Parameters pipelineName string The vectorization pipeline to deactivate. Returns Task<VectorizationResult> DeleteIndexingProfileAsync(string) Deletes an indexing profile resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeIndexingProfileAsync(string) method with the same name. Task DeleteIndexingProfileAsync(string name) Parameters name string The name of the indexing profile resource to delete. Returns Task DeleteTextEmbeddingProfileAsync(string) Deletes a text embedding profile resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeTextEmbeddingProfileAsync(string) method with the same name. Task DeleteTextEmbeddingProfileAsync(string name) Parameters name string The name of the text embedding profile resource to delete. Returns Task DeleteTextPartitioningProfileAsync(string) Deletes a text partitioning profile resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeTextPartitioningProfileAsync(string) method with the same name. Task DeleteTextPartitioningProfileAsync(string name) Parameters name string The name of the text partitioning profile resource to delete. Returns Task DeleteVectorizationPipelineAsync(string) Deletes a vectorization pipeline resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeVectorizationPipelineAsync(string) method with the same name. Task DeleteVectorizationPipelineAsync(string name) Parameters name string The name of the vectorization pipeline resource to delete. Returns Task FilterIndexingProfileAsync(ResourceFilter) Returns indexing profiles that match the filter criteria. Task<List<IndexingProfile>> FilterIndexingProfileAsync(ResourceFilter resourceFilter) Parameters resourceFilter ResourceFilter The filter criteria to apply to the request. Returns Task<List<IndexingProfile>> GetIndexingProfileAsync(string) Retrieves a specific indexing profile by name. Task<ResourceProviderGetResult<IndexingProfile>> GetIndexingProfileAsync(string name) Parameters name string The name of the indexing profile to retrieve. Returns Task<ResourceProviderGetResult<IndexingProfile>> GetIndexingProfilesAsync() Retrieves all indexing profiles. Task<List<ResourceProviderGetResult<IndexingProfile>>> GetIndexingProfilesAsync() Returns Task<List<ResourceProviderGetResult<IndexingProfile>>> All indexing profiles to which the caller has access and which have not been marked as deleted. GetTextEmbeddingProfileAsync(string) Retrieves a specific text embedding profile by name. Task<ResourceProviderGetResult<TextEmbeddingProfile>> GetTextEmbeddingProfileAsync(string name) Parameters name string The name of the text embedding profile to retrieve. Returns Task<ResourceProviderGetResult<TextEmbeddingProfile>> GetTextEmbeddingProfilesAsync() Retrieves all text embedding profiles. Task<List<ResourceProviderGetResult<TextEmbeddingProfile>>> GetTextEmbeddingProfilesAsync() Returns Task<List<ResourceProviderGetResult<TextEmbeddingProfile>>> All text embedding profiles to which the caller has access and which have not been marked as deleted. GetTextPartitioningProfileAsync(string) Retrieves a specific text partitioning profile by name. Task<ResourceProviderGetResult<TextPartitioningProfile>> GetTextPartitioningProfileAsync(string name) Parameters name string The name of the text partitioning profile to retrieve. Returns Task<ResourceProviderGetResult<TextPartitioningProfile>> GetTextPartitioningProfilesAsync() Retrieves all text partitioning profiles. Task<List<ResourceProviderGetResult<TextPartitioningProfile>>> GetTextPartitioningProfilesAsync() Returns Task<List<ResourceProviderGetResult<TextPartitioningProfile>>> All text partitioning profiles to which the caller has access and which have not been marked as deleted. GetVectorizationPipelineAsync(string) Retrieves a specific vectorization pipeline by name. Task<ResourceProviderGetResult<VectorizationPipeline>> GetVectorizationPipelineAsync(string name) Parameters name string The name of the vectorization pipeline to retrieve. Returns Task<ResourceProviderGetResult<VectorizationPipeline>> GetVectorizationPipelinesAsync() Retrieves all vectorization pipelines. Task<List<ResourceProviderGetResult<VectorizationPipeline>>> GetVectorizationPipelinesAsync() Returns Task<List<ResourceProviderGetResult<VectorizationPipeline>>> All vectorization pipelines to which the caller has access and which have not been marked as deleted. PurgeIndexingProfileAsync(string) Purges a deleted indexing profile by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeIndexingProfileAsync(string indexingProfileName) Parameters indexingProfileName string The name of the indexing profile to purge. Returns Task<ResourceProviderActionResult> PurgeTextEmbeddingProfileAsync(string) Purges a deleted text embedding profile by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeTextEmbeddingProfileAsync(string textEmbeddingProfileName) Parameters textEmbeddingProfileName string The name of the text embedding profile to purge. Returns Task<ResourceProviderActionResult> PurgeTextPartitioningProfileAsync(string) Purges a deleted text partitioning profile by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeTextPartitioningProfileAsync(string textPartitioningProfileName) Parameters textPartitioningProfileName string The name of the text partitioning profile to purge. Returns Task<ResourceProviderActionResult> PurgeVectorizationPipelineAsync(string) Purges a deleted vectorization pipeline by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeVectorizationPipelineAsync(string pipelineName) Parameters pipelineName string The name of the vectorization pipeline to purge. Returns Task<ResourceProviderActionResult> UpsertIndexingProfileAsync(IndexingProfile) Upserts an indexing profile resource. If an indexing profile does not exist, it will be created. If an indexing profile does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertIndexingProfileAsync(IndexingProfile resource) Parameters resource IndexingProfile The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertTextEmbeddingProfileAsync(TextEmbeddingProfile) Upserts a text embedding profile resource. If a text embedding profile does not exist, it will be created. If a text embedding profile does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertTextEmbeddingProfileAsync(TextEmbeddingProfile resource) Parameters resource TextEmbeddingProfile The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertTextPartitioningProfileAsync(TextPartitioningProfile) Upserts a text partitioning profile resource. If a text partitioning profile does not exist, it will be created. If a text partitioning profile does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertTextPartitioningProfileAsync(TextPartitioningProfile resource) Parameters resource TextPartitioningProfile The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertVectorizationPipelineAsync(VectorizationPipeline) Upserts a vectorization pipeline resource. If a vectorization pipeline does not exist, it will be created. If a vectorization pipeline does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertVectorizationPipelineAsync(VectorizationPipeline resource) Parameters resource VectorizationPipeline The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.html",
    "title": "Namespace FoundationaLLM.Client.Management.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Client.Management.Interfaces Interfaces IAIModelManagementClient Provides methods to manage AI model resources. IAgentManagementClient Provides methods to manage agent resources. IAttachmentManagementClient Provides methods to manage attachment resources. IConfigurationManagementClient Provider methods for managing configuration resources. IDataSourceManagementClient Provides methods to manage data source resources. IIdentityRESTClient Provides methods to manage calls to the Management API's identity endpoints. IManagementClient Provides high-level methods to interact with the Management API. IManagementRESTClient Contains methods to interact with the Management API's endpoints. IPromptManagementClient Provides methods to manage prompt resources. IResourceRESTClient Provides methods to manage calls to the Management API's resource endpoints. IStatusRESTClient Provides methods to manage calls to the Management API's status endpoints. IVectorizationManagementClient Provides methods to manage vectorization resources."
  },
  "api/dotnet/FoundationaLLM.Client.Management.ManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.ManagementClient.html",
    "title": "Class ManagementClient | FoundationaLLM",
    "keywords": "Class ManagementClient Namespace FoundationaLLM.Client.Management Assembly FoundationaLLM.Client.Management.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ManagementClient : IManagementClient Inheritance object ManagementClient Implements IManagementClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ManagementClient() Constructor for mocking. This does not initialize the clients. public ManagementClient() ManagementClient(string, TokenCredential, string) Initializes a new instance of the ManagementClient class with the specified Management API URI, TokenCredential, and Instance ID. public ManagementClient(string managementUri, TokenCredential credential, string instanceId) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) ManagementClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the CoreClient class with the specified Core API URI, TokenCredential, and optional client settings. public ManagementClient(string managementUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Properties AIModels Contains methods to interact with AIModel resources. public IAIModelManagementClient AIModels { get; } Property Value IAIModelManagementClient Agents Contains methods to interact with Agent resources. public IAgentManagementClient Agents { get; } Property Value IAgentManagementClient Attachments Contains methods to interact with Attachment resources. public IAttachmentManagementClient Attachments { get; } Property Value IAttachmentManagementClient Configuration Contains methods to interact with Configuration resources. public IConfigurationManagementClient Configuration { get; } Property Value IConfigurationManagementClient DataSources Contains methods to interact with DataSource resources. public IDataSourceManagementClient DataSources { get; } Property Value IDataSourceManagementClient Prompts Contains methods to interact with Prompt resources. public IPromptManagementClient Prompts { get; } Property Value IPromptManagementClient Vectorization Contains methods to interact with Vectorization resources. public IVectorizationManagementClient Vectorization { get; } Property Value IVectorizationManagementClient Methods GetResourceByObjectId<T>(string) Retrieves a resource by its ObjectId. public Task<T> GetResourceByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<T> Returns a deserialized resource object. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase. GetResourceWithActionsAndRolesByObjectId<T>(string) Retrieves a resource by its ObjectId, including actions and roles. public Task<ResourceProviderGetResult<T>> GetResourceWithActionsAndRolesByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<ResourceProviderGetResult<T>> Returns a deserialized resource object and its list of allowed actions and roles. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase."
  },
  "api/dotnet/FoundationaLLM.Client.Management.ManagementRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.ManagementRESTClient.html",
    "title": "Class ManagementRESTClient | FoundationaLLM",
    "keywords": "Class ManagementRESTClient Namespace FoundationaLLM.Client.Management Assembly FoundationaLLM.Client.Management.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ManagementRESTClient : IManagementRESTClient Inheritance object ManagementRESTClient Implements IManagementRESTClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ManagementRESTClient() Constructor for mocking. This does not initialize the clients. public ManagementRESTClient() ManagementRESTClient(string, TokenCredential, string) Initializes a new instance of the ManagementRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL. public ManagementRESTClient(string managementUri, TokenCredential credential, string instanceId) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) ManagementRESTClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the ManagementRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL and optional client settings. public ManagementRESTClient(string managementUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Properties Identity Contains methods to interact with the Identity endpoints. public IIdentityRESTClient Identity { get; } Property Value IIdentityRESTClient Resources Contains methods to interact with the Resources endpoints. public IResourceRESTClient Resources { get; } Property Value IResourceRESTClient Status Contains methods to interact with the Status endpoints. public IStatusRESTClient Status { get; } Property Value IStatusRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Management.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.html",
    "title": "Namespace FoundationaLLM.Client.Management | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Client.Management Namespaces FoundationaLLM.Client.Management.Interfaces Classes ManagementClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. ManagementRESTClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Client.html": {
    "href": "api/dotnet/FoundationaLLM.Client.html",
    "title": "Namespace FoundationaLLM.Client | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Client Namespaces FoundationaLLM.Client.Core FoundationaLLM.Client.Management"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html",
    "title": "Class APIKeyAuthenticationAttribute | FoundationaLLM",
    "keywords": "Class APIKeyAuthenticationAttribute Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Service filter attribute for X-API-Key header validation. public class APIKeyAuthenticationAttribute : ServiceFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Inheritance object Attribute ServiceFilterAttribute APIKeyAuthenticationAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members ServiceFilterAttribute.CreateInstance(IServiceProvider) ServiceFilterAttribute.Order ServiceFilterAttribute.ServiceType ServiceFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors APIKeyAuthenticationAttribute() Initializes a new instance of the APIKeyAuthenticationAttribute class. public APIKeyAuthenticationAttribute()"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html",
    "title": "Class APIKeyAuthenticationFilter | FoundationaLLM",
    "keywords": "Class APIKeyAuthenticationFilter Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Auth filter for X-API-Key header validation. public class APIKeyAuthenticationFilter : IAuthorizationFilter, IFilterMetadata Inheritance object APIKeyAuthenticationFilter Implements IAuthorizationFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Constructors APIKeyAuthenticationFilter(IAPIKeyValidationService) Auth filter for X-API-Key header validation. public APIKeyAuthenticationFilter(IAPIKeyValidationService apiKeyValidation) Parameters apiKeyValidation IAPIKeyValidationService Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Methods OnAuthorization(AuthorizationFilterContext) Override for default OnAuthorization step to set UnauthorizedObjectResult on the context if the required header is missing or invalid. public void OnAuthorization(AuthorizationFilterContext context) Parameters context AuthorizationFilterContext The context containing the HTTP request headers."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html",
    "title": "Class APIKeyValidationService | FoundationaLLM",
    "keywords": "Class APIKeyValidationService Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Implements the IAPIKeyValidationService interface. public class APIKeyValidationService : IAPIKeyValidationService Inheritance object APIKeyValidationService Implements IAPIKeyValidationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the APIKeyValidationService class. Constructors APIKeyValidationService(IOptions<APIKeyValidationSettings>) Implements the IAPIKeyValidationService interface. public APIKeyValidationService(IOptions<APIKeyValidationSettings> options) Parameters options IOptions<APIKeyValidationSettings> otions for the deployed API key validation service. Remarks Creates a new instance of the APIKeyValidationService class. Methods IsValid(string) Checks if an API key is valid or not. public bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean value representing the validity of the API key."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html",
    "title": "Class APIKeyValidationSettings | FoundationaLLM",
    "keywords": "Class APIKeyValidationSettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Represents settings for API key validation. public record APIKeyValidationSettings : IEquatable<APIKeyValidationSettings> Inheritance object APIKeyValidationSettings Implements IEquatable<APIKeyValidationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key. public required string APIKey { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.DefaultAuthentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.DefaultAuthentication.html",
    "title": "Class DefaultAuthentication | FoundationaLLM",
    "keywords": "Class DefaultAuthentication Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Provides the default credentials for authentication. public static class DefaultAuthentication Inheritance object DefaultAuthentication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AzureCredential The default Azure credential to use for authentication. public static TokenCredential? AzureCredential { get; set; } Property Value TokenCredential Production Indicates whether the environment we run in is production or not. public static bool Production { get; set; } Property Value bool ServiceIdentity The UnifiedUserIdentity of the service based on its managed identity.\"/> public static UnifiedUserIdentity? ServiceIdentity { get; set; } Property Value UnifiedUserIdentity Methods Initialize(bool, string) Initializes the default authentication. public static void Initialize(bool production, string serviceName) Parameters production bool Indicates whether the environment is production or not. serviceName string The service name."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Authentication Classes APIKeyAuthenticationAttribute Service filter attribute for X-API-Key header validation. APIKeyAuthenticationFilter Auth filter for X-API-Key header validation. APIKeyValidationService Implements the IAPIKeyValidationService interface. APIKeyValidationSettings Represents settings for API key validation. DefaultAuthentication Provides the default credentials for authentication."
  },
  "api/dotnet/FoundationaLLM.Common.Clients.GatewayServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.GatewayServiceClient.html",
    "title": "Class GatewayServiceClient | FoundationaLLM",
    "keywords": "Class GatewayServiceClient Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Provides methods to call the Gateway API service. public class GatewayServiceClient Inheritance object GatewayServiceClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayServiceClient(HttpClient, ILogger) Creates a new instance of the Gateway API service. public GatewayServiceClient(HttpClient gatewayAPIHttpClient, ILogger logger) Parameters gatewayAPIHttpClient HttpClient An HttpClient configured to call the Gateway API. logger ILogger The ILogger used for logging. Methods CreateAgentCapability(string, string, string, Dictionary<string, object>?) public Task<Dictionary<string, object>> CreateAgentCapability(string instanceId, string capabilityCategory, string capabilityName, Dictionary<string, object>? parameters = null) Parameters instanceId string capabilityCategory string capabilityName string parameters Dictionary<string, object> Returns Task<Dictionary<string, object>> GetEmbeddingOperationResult(string, string) public Task<TextEmbeddingResult> GetEmbeddingOperationResult(string instanceId, string operationId) Parameters instanceId string operationId string Returns Task<TextEmbeddingResult> StartEmbeddingOperation(string, TextEmbeddingRequest) public Task<TextEmbeddingResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest) Parameters instanceId string embeddingRequest TextEmbeddingRequest Returns Task<TextEmbeddingResult>"
  },
  "api/dotnet/FoundationaLLM.Common.Clients.PollingHttpClient-2.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.PollingHttpClient-2.html",
    "title": "Class PollingHttpClient<TRequest, TResponse> | FoundationaLLM",
    "keywords": "Class PollingHttpClient<TRequest, TResponse> Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Provides a generic HTTP client that can be used to poll for a response. public class PollingHttpClient<TRequest, TResponse> Type Parameters TRequest The type of the payload to send to start the operation. TResponse The type of the response received when the operation is completed. Inheritance object PollingHttpClient<TRequest, TResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PollingHttpClient(HttpClient, TRequest, string, TimeSpan, TimeSpan, ILogger) Provides a generic HTTP client that can be used to poll for a response. public PollingHttpClient(HttpClient httpClient, TRequest request, string operationStarterPath, TimeSpan pollingInterval, TimeSpan maxWaitTime, ILogger logger) Parameters httpClient HttpClient The HttpClient to use for the requests. request TRequest The TRequest request to send to the service. operationStarterPath string The path to send the request to (will be appended to the base path of the HTTP client. pollingInterval TimeSpan The TimeSpan interval to poll for the response. maxWaitTime TimeSpan The TimeSpan maximum time to wait for the response. logger ILogger The logger used for logging. Methods GetResponseAsync(CancellationToken) Retrieves the response from the service using a polling mechanism. The polling mechanism is based on the following assumptions: - The {operationStarterPath} endpoint will accept a POST with a TRequest object as payload and will return a 202 Accepted status code when the operation is started. - The returned response will contain a LongRunningOperation object with the operation id. - The polling endpoint is available at {operationStarterPath}/{operationId}/status. - The polling endpoint will return a 200 status code when the operation is in progress containing a property for status. - The polling endpoint will return a 200 status code when the operation is completed with the status property indicating Completed. - The result retrieval endpoint is available at {operationStarterPath}/{operationId}/result. - The polling endpoint will return a 404 Not Found status code when the operation is not found. public Task<TResponse?> GetResponseAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken The CancellationToken indicating the need to cancel the process. Returns Task<TResponse> The TResponse object containing the response. Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Common.Clients.RunningOperation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.RunningOperation.html",
    "title": "Class RunningOperation | FoundationaLLM",
    "keywords": "Class RunningOperation Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Provides details about an LLM operation that is in progress. public class RunningOperation Inheritance object RunningOperation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties OperationId The unique identifier for the operation. [JsonPropertyName(\"operation_id\")] public required string OperationId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Clients.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.html",
    "title": "Namespace FoundationaLLM.Common.Clients | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Clients Classes GatewayServiceClient Provides methods to call the Gateway API service. PollingHttpClient<TRequest, TResponse> Provides a generic HTTP client that can be used to poll for a response. RunningOperation Provides details about an LLM operation that is in progress."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentCapabilityCategoryNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentCapabilityCategoryNames.html",
    "title": "Class AgentCapabilityCategoryNames | FoundationaLLM",
    "keywords": "Class AgentCapabilityCategoryNames Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants for the agent capability names. public static class AgentCapabilityCategoryNames Inheritance object AgentCapabilityCategoryNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLMKnowledgeManagement Indicates the agent has the FoundationaLLM Knowledge Management capability. public const string FoundationaLLMKnowledgeManagement = \"FoundationaLLM.KnowledgeManagement\" Field Value string OpenAIAssistants Indicates the agent has the OpenAI Assistants API capability. public const string OpenAIAssistants = \"OpenAI.Assistants\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentParametersKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentParametersKeys.html",
    "title": "Class AgentParametersKeys | FoundationaLLM",
    "keywords": "Class AgentParametersKeys Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants of the keys for all overridable Agent settings. public static class AgentParametersKeys Inheritance object AgentParametersKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All agent parameter keys. public static readonly string[] All Field Value string[] IndexFilterExpression The key name for the index filter expression agent parameter. This value should be a string representing the search filter expression to limit documents to be searched by the index. public const string IndexFilterExpression = \"index_filter_expression\" Field Value string IndexTopN Controls the number of search results to return from an index for prompt augmentation. public const string IndexTopN = \"index_top_n\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.CompletionRequestObjectsKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.CompletionRequestObjectsKeys.html",
    "title": "Class CompletionRequestObjectsKeys | FoundationaLLM",
    "keywords": "Class CompletionRequestObjectsKeys Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants for the keys that can be added to the Objects dictionary. public static class CompletionRequestObjectsKeys Inheritance object CompletionRequestObjectsKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All completion request objects dictionary keys. public static readonly string[] All Field Value string[] AllAgents The key name for the dictionary containing names and descriptions of agents other than the completion request's agent. This value should be a dictionary where keys are agent names and values are agent descriptions. public const string AllAgents = \"AllAgents\" Field Value string GatewayAPIEndpointConfiguration The key name for the Gateway API EndpointConfiguration identifier value. public const string GatewayAPIEndpointConfiguration = \"GatewayAPIEndpointConfiguration\" Field Value string OpenAIAssistantId The key name for the OpenAI assistant identifier value. public const string OpenAIAssistantId = \"OpenAI.AssistantId\" Field Value string OpenAIAssistantThreadId The key name for the OpenAI assistant thread identifier value. public const string OpenAIAssistantThreadId = \"OpenAI.AssistantThreadId\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.InputMessageRoles.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.InputMessageRoles.html",
    "title": "Class InputMessageRoles | FoundationaLLM",
    "keywords": "Class InputMessageRoles Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Constants for input message roles. public static class InputMessageRoles Inheritance object InputMessageRoles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Assistant Assistant role. public const string Assistant = \"assistant\" Field Value string System System role. public const string System = \"system\" Field Value string Tool Tool role. public const string Tool = \"tool\" Field Value string User User role. public const string User = \"user\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.ModelParametersKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.ModelParametersKeys.html",
    "title": "Class ModelParametersKeys | FoundationaLLM",
    "keywords": "Class ModelParametersKeys Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants of the keys for all overridable model settings. public static class ModelParametersKeys Inheritance object ModelParametersKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All model parameter keys. public static readonly string[] All Field Value string[] DoSample Whether or not to use sampling; use greedy decoding otherwise. public const string DoSample = \"do_sample\" Field Value string IgnoreEOS Whether to ignore the EOS token and continue generating tokens after the EOS token is generated. Defaults to False. public const string IgnoreEOS = \"ignore_eos\" Field Value string MaxNewTokens Sets a limit on the number of tokens per model response. The API supports a maximum of 4000 tokens shared between the prompt (including system message, examples, message history, and user query) and the model's response. One token is roughly 4 characters for typical English text. public const string MaxNewTokens = \"max_new_tokens\" Field Value string ReturnFullText Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. public const string ReturnFullText = \"return_full_text\" Field Value string Temperature Controls randomness. Lowering the temperature means that the model will produce more repetitive and deterministic responses. Increasing the temperature will result in more unexpected or creative responses. Try adjusting temperature or Top P but not both. This value should be a float between 0.0 and 1.0. public const string Temperature = \"temperature\" Field Value string TopK The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. public const string TopK = \"top_k\" Field Value string TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling. Top P (or Top Probabilities) is imilar to temperature, this controls randomness but uses a different method. Lowering Top P will narrow the model’s token selection to likelier tokens. Increasing Top P will let the model choose from tokens with both high and low likelihood. Try adjusting temperature or Top P but not both. public const string TopP = \"top_p\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.OperationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.OperationTypes.html",
    "title": "Class OperationTypes | FoundationaLLM",
    "keywords": "Class OperationTypes Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Type of endpoint operations. public static class OperationTypes Inheritance object OperationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Chat Chat completions operation. public const string Chat = \"chat\" Field Value string Completions Completions operation. public const string Completions = \"completions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Agents | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.Agents Classes AgentCapabilityCategoryNames Contains constants for the agent capability names. AgentParametersKeys Contains constants of the keys for all overridable Agent settings. CompletionRequestObjectsKeys Contains constants for the keys that can be added to the Objects dictionary. InputMessageRoles Constants for input message roles. ModelParametersKeys Contains constants of the keys for all overridable model settings. OperationTypes Type of endpoint operations."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationParametersKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationParametersKeys.html",
    "title": "Class AuthenticationParametersKeys | FoundationaLLM",
    "keywords": "Class AuthenticationParametersKeys Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Provides authetication key names for the AuthenticationParameters properties on ApiEndpointConfigurations public static class AuthenticationParametersKeys Inheritance object AuthenticationParametersKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKeyConfigurationName The name of the App Config entry that contains the API key. public const string APIKeyConfigurationName = \"api_key_configuration_name\" Field Value string APIKeyHeaderName The name of the header where the API key should provided. public const string APIKeyHeaderName = \"api_key_header_name\" Field Value string APIKeyPrefix An optional prefix that must be added before the API key (e.g., Bearer). public const string APIKeyPrefix = \"api_key_prefix\" Field Value string All All authentication parameter keys. public static readonly string[] All Field Value string[] Scope The scope required for authentication. public const string Scope = \"scope\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationTypes.html",
    "title": "Enum AuthenticationTypes | FoundationaLLM",
    "keywords": "Enum AuthenticationTypes Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Authentication types for API Endpoints public enum AuthenticationTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields APIKey = 1 API key authentication type. AccountKey = 3 Account key authentication type. AzureIdentity = 0 Azure managed identity authentication type. ConnectionString = 2 Connection string authentication type. Unknown = -1 Unknown authentication type."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.EntraUserClaimConstants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.EntraUserClaimConstants.html",
    "title": "Class EntraUserClaimConstants | FoundationaLLM",
    "keywords": "Class EntraUserClaimConstants Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Additional claim constants that are not included in Microsoft.Identity.Web.ClaimConstants. public static class EntraUserClaimConstants Inheritance object EntraUserClaimConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Groups Groups claim. public const string Groups = \"groups\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ObjectTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ObjectTypes.html",
    "title": "Class ObjectTypes | FoundationaLLM",
    "keywords": "Class ObjectTypes Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Contains the names of common authentication object types. public static class ObjectTypes Inheritance object ObjectTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Group A group account. public const string Group = \"Group\" Field Value string Other Other object type. public const string Other = \"Other\" Field Value string User A user account. public const string User = \"User\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ScopeURIs.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ScopeURIs.html",
    "title": "Class ScopeURIs | FoundationaLLM",
    "keywords": "Class ScopeURIs Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll The URIs for the scopes used in the application. public static class ScopeURIs Inheritance object ScopeURIs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Authorization The Application ID URI for the Authorization API. public const string FoundationaLLM_Authorization = \"api://FoundationaLLM-Authorization\" Field Value string FoundationaLLM_Core The Application ID URI for the Core API. public const string FoundationaLLM_Core = \"api://FoundationaLLM-Core\" Field Value string FoundationaLLM_Management The Application ID URI for the Management API. public const string FoundationaLLM_Management = \"api://FoundationaLLM-Management\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.Authentication Classes AuthenticationParametersKeys Provides authetication key names for the AuthenticationParameters properties on ApiEndpointConfigurations EntraUserClaimConstants Additional claim constants that are not included in Microsoft.Identity.Web.ClaimConstants. ObjectTypes Contains the names of common authentication object types. ScopeURIs The URIs for the scopes used in the application. Enums AuthenticationTypes Authentication types for API Endpoints"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizableActionNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizableActionNames.html",
    "title": "Class AuthorizableActionNames | FoundationaLLM",
    "keywords": "Class AuthorizableActionNames Namespace FoundationaLLM.Common.Constants.Authorization Assembly FoundationaLLM.Common.dll Provides the names of the authorizable actions managed by the FoundationaLLM.Authorization provider. public static class AuthorizableActionNames Inheritance object AuthorizableActionNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_AIModel_AIModels_Delete Delete AI models. public const string FoundationaLLM_AIModel_AIModels_Delete = \"FoundationaLLM.AIModel/aiModels/delete\" Field Value string FoundationaLLM_AIModel_AIModels_Read Read AI models public const string FoundationaLLM_AIModel_AIModels_Read = \"FoundationaLLM.AIModel/aiModels/read\" Field Value string FoundationaLLM_AIModel_AIModels_Write Create or update AI models. public const string FoundationaLLM_AIModel_AIModels_Write = \"FoundationaLLM.AIModel/aiModels/write\" Field Value string FoundationaLLM_Agent_Agents_Delete Delete agents. public const string FoundationaLLM_Agent_Agents_Delete = \"FoundationaLLM.Agent/agents/delete\" Field Value string FoundationaLLM_Agent_Agents_Read Read agents. public const string FoundationaLLM_Agent_Agents_Read = \"FoundationaLLM.Agent/agents/read\" Field Value string FoundationaLLM_Agent_Agents_Write Create or update agents. public const string FoundationaLLM_Agent_Agents_Write = \"FoundationaLLM.Agent/agents/write\" Field Value string FoundationaLLM_Attachment_Attachments_Delete Delete attachments. public const string FoundationaLLM_Attachment_Attachments_Delete = \"FoundationaLLM.Attachment/attachments/delete\" Field Value string FoundationaLLM_Attachment_Attachments_Read Read attachments. public const string FoundationaLLM_Attachment_Attachments_Read = \"FoundationaLLM.Attachment/attachments/read\" Field Value string FoundationaLLM_Attachment_Attachments_Write Create or update attachments. public const string FoundationaLLM_Attachment_Attachments_Write = \"FoundationaLLM.Attachment/attachments/write\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Delete Delete role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Delete = \"FoundationaLLM.Authorization/roleAssignments/delete\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Read Read role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Read = \"FoundationaLLM.Authorization/roleAssignments/read\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Write Create or update role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Write = \"FoundationaLLM.Authorization/roleAssignments/write\" Field Value string FoundationaLLM_Authorization_RoleDefinitions_Read Read role definitions. public const string FoundationaLLM_Authorization_RoleDefinitions_Read = \"FoundationaLLM.Authorization/roleDefinitions/read\" Field Value string FoundationaLLM_AzureOpenAI_AssistantUserContexts_Delete Delete assistant user contexts. public const string FoundationaLLM_AzureOpenAI_AssistantUserContexts_Delete = \"FoundationaLLM.AzureOpenAI/assistantUserContexts/delete\" Field Value string FoundationaLLM_AzureOpenAI_AssistantUserContexts_Read Read assistant user contexts. public const string FoundationaLLM_AzureOpenAI_AssistantUserContexts_Read = \"FoundationaLLM.AzureOpenAI/assistantUserContexts/read\" Field Value string FoundationaLLM_AzureOpenAI_AssistantUserContexts_Write Create or update assistant user contexts. public const string FoundationaLLM_AzureOpenAI_AssistantUserContexts_Write = \"FoundationaLLM.AzureOpenAI/assistantUserContexts/write\" Field Value string FoundationaLLM_AzureOpenAI_FileUserContexts_Delete Delete file user contexts. public const string FoundationaLLM_AzureOpenAI_FileUserContexts_Delete = \"FoundationaLLM.AzureOpenAI/fileUserContexts/delete\" Field Value string FoundationaLLM_AzureOpenAI_FileUserContexts_Read Read file user contexts. public const string FoundationaLLM_AzureOpenAI_FileUserContexts_Read = \"FoundationaLLM.AzureOpenAI/fileUserContexts/read\" Field Value string FoundationaLLM_AzureOpenAI_FileUserContexts_Write Create or update file user contexts. public const string FoundationaLLM_AzureOpenAI_FileUserContexts_Write = \"FoundationaLLM.AzureOpenAI/fileUserContexts/write\" Field Value string FoundationaLLM_Completion_ChatSessions_Delete Delete chat sessions. public const string FoundationaLLM_Completion_ChatSessions_Delete = \"FoundationaLLM.Completion/chatSessions/delete\" Field Value string FoundationaLLM_Completion_ChatSessions_Read Read chat sessions. public const string FoundationaLLM_Completion_ChatSessions_Read = \"FoundationaLLM.Completion/chatSessions/read\" Field Value string FoundationaLLM_Completion_ChatSessions_Write Create or update chat sessions. public const string FoundationaLLM_Completion_ChatSessions_Write = \"FoundationaLLM.Completion/chatSessions/write\" Field Value string FoundationaLLM_Completion_DirectCompletions_Delete Delete direct completions. public const string FoundationaLLM_Completion_DirectCompletions_Delete = \"FoundationaLLM.Completion/directCompletions/delete\" Field Value string FoundationaLLM_Completion_DirectCompletions_Read Read direct completions. public const string FoundationaLLM_Completion_DirectCompletions_Read = \"FoundationaLLM.Completion/directCompletions/read\" Field Value string FoundationaLLM_Completion_DirectCompletions_Write Create or update direct completions. public const string FoundationaLLM_Completion_DirectCompletions_Write = \"FoundationaLLM.Completion/directCompletions/write\" Field Value string FoundationaLLM_Configuration_APIEndpoinConfigurations_Delete Delete API endpoint configurations. public const string FoundationaLLM_Configuration_APIEndpoinConfigurations_Delete = \"FoundationaLLM.Configuration/apiEndpointConfigurations/delete\" Field Value string FoundationaLLM_Configuration_APIEndpointConfigurations_Read Read API endpoint configurations. public const string FoundationaLLM_Configuration_APIEndpointConfigurations_Read = \"FoundationaLLM.Configuration/apiEndpointConfigurations/read\" Field Value string FoundationaLLM_Configuration_APIEndpointConfigurations_Write Create or update API endpoint configurations. public const string FoundationaLLM_Configuration_APIEndpointConfigurations_Write = \"FoundationaLLM.Configuration/apiEndpointConfigurations/write\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Delete Delete app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Delete = \"FoundationaLLM.Configuration/appConfigurations/delete\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Read Read app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Read = \"FoundationaLLM.Configuration/appConfigurations/read\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Write Create or update app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Write = \"FoundationaLLM.Configuration/appConfigurations/write\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Delete Delete key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Delete = \"FoundationaLLM.Configuration/keyVaultSecrets/delete\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Read Read key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Read = \"FoundationaLLM.Configuration/keyVaultSecrets/read\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Write Create or update key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Write = \"FoundationaLLM.Configuration/keyVaultSecrets/write\" Field Value string FoundationaLLM_DataSource_DataSources_Delete Delete data sources. public const string FoundationaLLM_DataSource_DataSources_Delete = \"FoundationaLLM.DataSource/dataSources/delete\" Field Value string FoundationaLLM_DataSource_DataSources_Read Read data sources. public const string FoundationaLLM_DataSource_DataSources_Read = \"FoundationaLLM.DataSource/dataSources/read\" Field Value string FoundationaLLM_DataSource_DataSources_Write Create or update data sources. public const string FoundationaLLM_DataSource_DataSources_Write = \"FoundationaLLM.DataSource/dataSources/write\" Field Value string FoundationaLLM_Prompt_Prompts_Delete Delete prompts. public const string FoundationaLLM_Prompt_Prompts_Delete = \"FoundationaLLM.Prompt/prompts/delete\" Field Value string FoundationaLLM_Prompt_Prompts_Read Read prompts. public const string FoundationaLLM_Prompt_Prompts_Read = \"FoundationaLLM.Prompt/prompts/read\" Field Value string FoundationaLLM_Prompt_Prompts_Write Create or update prompts. public const string FoundationaLLM_Prompt_Prompts_Write = \"FoundationaLLM.Prompt/prompts/write\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Delete Delete vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Delete = \"FoundationaLLM.Vectorization/contentSourceProfiles/delete\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Read Read vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Read = \"FoundationaLLM.Vectorization/contentSourceProfiles/read\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Write Create or update vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Write = \"FoundationaLLM.Vectorization/contentSourceProfiles/write\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Delete Delete vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Delete = \"FoundationaLLM.Vectorization/indexingProfiles/delete\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Read Read vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Read = \"FoundationaLLM.Vectorization/indexingProfiles/read\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Write Create or update vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Write = \"FoundationaLLM.Vectorization/indexingProfiles/write\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Delete Delete vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Delete = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/delete\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Read Read vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Read = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/read\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Write Create or update vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Write = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/write\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Delete Delete vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Delete = \"FoundationaLLM.Vectorization/textPartitioningProfiles/delete\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Read Read vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Read = \"FoundationaLLM.Vectorization/textPartitioningProfiles/read\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Write Create or update vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Write = \"FoundationaLLM.Vectorization/textPartitioningProfiles/write\" Field Value string FoundationaLLM_Vectorization_VectorizationPipelines_Delete Delete vectorization pipelines. public const string FoundationaLLM_Vectorization_VectorizationPipelines_Delete = \"FoundationaLLM.Vectorization/vectorizationPipelines/delete\" Field Value string FoundationaLLM_Vectorization_VectorizationPipelines_Read Read vectorization pipelines. public const string FoundationaLLM_Vectorization_VectorizationPipelines_Read = \"FoundationaLLM.Vectorization/vectorizationPipelines/read\" Field Value string FoundationaLLM_Vectorization_VectorizationPipelines_Write Create or update vectorization pipelines. public const string FoundationaLLM_Vectorization_VectorizationPipelines_Write = \"FoundationaLLM.Vectorization/vectorizationPipelines/write\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Delete Delete vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Delete = \"FoundationaLLM.Vectorization/vectorizationRequests/delete\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Read Read vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Read = \"FoundationaLLM.Vectorization/vectorizationRequests/read\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Write Create or update vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Write = \"FoundationaLLM.Vectorization/vectorizationRequests/write\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.RoleDefinitionNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.RoleDefinitionNames.html",
    "title": "Class RoleDefinitionNames | FoundationaLLM",
    "keywords": "Class RoleDefinitionNames Namespace FoundationaLLM.Common.Constants.Authorization Assembly FoundationaLLM.Common.dll Provides the names of the role definitions managed by the FoundationaLLM.Authorization provider. public static class RoleDefinitionNames Inheritance object RoleDefinitionNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Attachments_Contributor Upload attachments including uploading to Azure OpenAI file store. public const string Attachments_Contributor = \"8e77fb6a-7a78-43e1-b628-d9e2285fe25a\" Field Value string Contributor Full access to manage all resources without the possiblity of assigning roles in FoundationaLLM RBAC. public const string Contributor = \"a9f0020f-6e3a-49bf-8d1d-35fd53058edf\" Field Value string Owner Full access to manage all resources, including the ability to assign roles in FoundationaLLM RBAC. public const string Owner = \"1301f8d4-3bea-4880-945f-315dbd2ddb46\" Field Value string Reader View all resources without the possiblity of making any changes. public const string Reader = \"00a53e72-f66e-4c03-8f81-7e885fd2eb35\" Field Value string Role_Based_Access_Control_Administrator Manage access to FoundationaLLM resources by assigning roles using FoundationaLLM RBAC. public const string Role_Based_Access_Control_Administrator = \"17ca4b59-3aee-497d-b43b-95dd7d916f99\" Field Value string User_Access_Administrator Manage access to FoundationaLLM resources. public const string User_Access_Administrator = \"fb8e0fd0-f7e2-4957-89d6-19f44f7d6618\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Authorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.Authorization Classes AuthorizableActionNames Provides the names of the authorizable actions managed by the FoundationaLLM.Authorization provider. RoleDefinitionNames Provides the names of the role definitions managed by the FoundationaLLM.Authorization provider."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AuthorizationClaims.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AuthorizationClaims.html",
    "title": "Class AuthorizationClaims | FoundationaLLM",
    "keywords": "Class AuthorizationClaims Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Claims that are used in the authorization process. public static class AuthorizationClaims Inheritance object AuthorizationClaims Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ApplicationId A replacement for appid. The application ID of the client using the token. The application can act as itself or on behalf of a user. The application ID typically represents an application object, but it can also represent a service principal object in Microsoft Entra ID. public const string ApplicationId = \"azp\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Chat.MessageContentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Chat.MessageContentTypes.html",
    "title": "Class MessageContentTypes | FoundationaLLM",
    "keywords": "Class MessageContentTypes Namespace FoundationaLLM.Common.Constants.Chat Assembly FoundationaLLM.Common.dll public static class MessageContentTypes Inheritance object MessageContentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields File General file link. public const string File = \"file\" Field Value string Html HTML file link. public const string Html = \"html\" Field Value string Image Image file link. public const string Image = \"image\" Field Value string Text Plaintext and formatted text, such as markdown. public const string Text = \"text\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Chat.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Chat.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Chat | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.Chat Classes MessageContentTypes"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.APIEndpointProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.APIEndpointProviders.html",
    "title": "Class APIEndpointProviders | FoundationaLLM",
    "keywords": "Class APIEndpointProviders Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Language Model provider constants. public static class APIEndpointProviders Inheritance object APIEndpointProviders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All providers. public static readonly string[] All Field Value string[] MICROSOFT Microsoft public const string MICROSOFT = \"microsoft\" Field Value string OPENAI OpenAI public const string OPENAI = \"openai\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeyFilters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeyFilters.html",
    "title": "Class AppConfigurationKeyFilters | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyFilters Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all configuration section filters used to select subsets of configuration settings. public static class AppConfigurationKeyFilters Inheritance object AppConfigurationKeyFilters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints Filter for the configuration section used to identify the settings for all API endpoints. public const string FoundationaLLM_APIEndpoints = \"FoundationaLLM:APIEndpoints:*\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials Filter for the configuration section used to identify the authentication settings for the Authorization API. Due to its special nature, the Authorization API does not have a corresponding APIEndpointConfiguration resource. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_AzureAISearchVectorStore_Configuration Filter for the configuration section used to identify the settings for the Azure AI Search vector store service. public const string FoundationaLLM_APIEndpoints_AzureAISearchVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzureAISearchVectorStore:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration Filter for the configuration section used to identify the settings for the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage Filter for the configuration section used to identify the settings for storage account used by the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration:Storage:*\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration Filter for the configuration section used to identify the settings for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration Filter for the configuration section used to identify the settings for the Azure Cosmos DB NoSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzureCosmosDBNoSQLVectorStore:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration Filter for the configuration section used to identify the settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials Filter for the configuration section used to identify the essential settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials Filter for the configuration section used to identify the essential settings for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials = \"FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration Filter for the configuration section used to identify the settings for the Azure PostgreSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzurePostgreSQLVectorStore:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration Filter for the configuration section used to identify the main Core API settings. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB Filter for the configuration section used to identify the Cosmos DB settings for the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra Filter for the configuration section used to identify the Entra ID authentication settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials Filter for the configuration section used to identify the essential settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials Filter for the configuration section used to identify the essential settings for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration Filter for the configuration section used to identify the settings for the Encrypt Guardrails service. public const string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration = \"FoundationaLLM:APIEndpoints:EnkryptGuardrails:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration Filter for the configuration section used to identify the settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials Filter for the configuration section used to identify the esential settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials Filter for the configuration section used to identify the essential settings for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration Filter for the configuration section used to identify the settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials Filter for the configuration section used to identify the essential settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials Filter for the configuration section used to identify the essential settings for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration Filter for the configuration section used to identify the settings for the Lakera Guard service. public const string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration = \"FoundationaLLM:APIEndpoints:LakeraGuard:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration Filter for the configuration section used to identify the main LangChain API settings. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials Filter for the configuration section used to identify the essential settings for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra Filter for the configuration section used to identify the Entra ID authentication settings for Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:*\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials Filter for the configuration section used to identify the essential settings for the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials Filter for the configuration section used to identify the essential settings for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration Filter for the configuration section used to identify the main Semantic Kernel API settings. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials Filter for the configuration section used to identify the essential settings for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB Filter for the configuration section used to identify the Cosmos DB settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:*\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials Filter for the configuration section used to identify the essential settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials Filter for the configuration section used to identify the essential settings for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials Filter for the configuration section used to identify the essential settings for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:*\" Field Value string FoundationaLLM_Branding Filter for the configuration section used to identify the branding settings for the User Portal. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding:*\" Field Value string FoundationaLLM_Configuration Filter for the configuration section used to identify the Azure Key Vault settings related to the FoundationaLLM instance. public const string FoundationaLLM_Configuration = \"FoundationaLLM:Configuration:*\" Field Value string FoundationaLLM_DataSources Filter for the configuration section used to identify the settings for data sources resources managed by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_DataSources = \"FoundationaLLM:DataSources:*\" Field Value string FoundationaLLM_Events_Profiles_CoreAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Core API. public const string FoundationaLLM_Events_Profiles_CoreAPI = \"FoundationaLLM:Events:Profiles:CoreAPI:*\" Field Value string FoundationaLLM_Events_Profiles_GatekeeperAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Gatekeeper API. public const string FoundationaLLM_Events_Profiles_GatekeeperAPI = \"FoundationaLLM:Events:Profiles:GatekeeperAPI:*\" Field Value string FoundationaLLM_Events_Profiles_GatewayAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Gateway API. public const string FoundationaLLM_Events_Profiles_GatewayAPI = \"FoundationaLLM:Events:Profiles:GatewayAPI:*\" Field Value string FoundationaLLM_Events_Profiles_ManagementAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Management API. public const string FoundationaLLM_Events_Profiles_ManagementAPI = \"FoundationaLLM:Events:Profiles:ManagementAPI:*\" Field Value string FoundationaLLM_Events_Profiles_OrchestrationAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Orchestration API. public const string FoundationaLLM_Events_Profiles_OrchestrationAPI = \"FoundationaLLM:Events:Profiles:OrchestrationAPI:*\" Field Value string FoundationaLLM_Events_Profiles_VectorizationAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Vectorization API. public const string FoundationaLLM_Events_Profiles_VectorizationAPI = \"FoundationaLLM:Events:Profiles:VectorizationAPI:*\" Field Value string FoundationaLLM_Events_Profiles_VectorizationWorker Filter for the configuration section used to identify the settings for the events infrastructure used by the Vectorization Worker service. public const string FoundationaLLM_Events_Profiles_VectorizationWorker = \"FoundationaLLM:Events:Profiles:VectorizationWorker:*\" Field Value string FoundationaLLM_Instance Filter for the configuration section used to identify the settings related to the FoundationaLLM instance. public const string FoundationaLLM_Instance = \"FoundationaLLM:Instance:*\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel_Storage = \"FoundationaLLM:ResourceProviders:AIModel:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent_Storage = \"FoundationaLLM:ResourceProviders:Agent:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment_Storage = \"FoundationaLLM:ResourceProviders:Attachment:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.AzureOpenAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage = \"FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration_Storage = \"FoundationaLLM:ResourceProviders:Configuration:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource_Storage = \"FoundationaLLM:ResourceProviders:DataSource:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt_Storage = \"FoundationaLLM:ResourceProviders:Prompt:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage = \"FoundationaLLM:ResourceProviders:Vectorization:Storage:*\" Field Value string FoundationaLLM_Vectorization_Queues Filter for the configuration section used to identify the settings for vectorization queues. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues:*\" Field Value string FoundationaLLM_Vectorization_StateService_Storage Filter for the configuration section used to identify the settings for the storage account used by the vectorization state service. public const string FoundationaLLM_Vectorization_StateService_Storage = \"FoundationaLLM:Vectorization:StateService:Storage:*\" Field Value string FoundationaLLM_Vectorization_Steps Filter for the configuration section used to identify the settings for vectorization steps. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps:*\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeySections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeySections.html",
    "title": "Class AppConfigurationKeySections | FoundationaLLM",
    "keywords": "Class AppConfigurationKeySections Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all configuration section names used to map configuration values to settings classes. public static class AppConfigurationKeySections Inheritance object AppConfigurationKeySections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints Configuration section used to identify the settings for all API endpoints. public const string FoundationaLLM_APIEndpoints = \"FoundationaLLM:APIEndpoints\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials Configuration section used to identify the authentication settings for the Authorization API. Due to its special nature, the Authorization API does not have a corresponding APIEndpointConfiguration resource. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration Configuration section used to identify the settings for the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage Configuration section used to identify the settings for storage account used by the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration:Storage\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration Configuration section used to identify the settings for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration Configuration section used to identify the settings for the Azure Cosmos DB NoSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzureCosmosDBNoSQLVectorStore:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration Configuration section used to identify the settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials Configuration section used to identify the essential settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials Configuration section used to identify the essential settings for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials = \"FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration Configuration section used to identify the settings for the Azure PostgreSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzurePostgreSQLVectorStore:Configuration\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration Configuration section used to identify the main Core API settings. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB Configuration section used to identify the Cosmos DB settings for the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra Configuration section used to identify the Entra ID authentication settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials Configuration section used to identify the essential settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials Configuration section used to identify the essential settings for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials\" Field Value string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration Configuration section used to identify the settings for the Encrypt Guardrails service. public const string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration = \"FoundationaLLM:APIEndpoints:EnkryptGuardrails:Configuration\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration Configuration section used to identify the settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials Configuration section used to identify the esential settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials Configuration section used to identify the essential settings for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration Configuration section used to identify the settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials Configuration section used to identify the essential settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials Configuration section used to identify the essential settings for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration Configuration section used to identify the settings for the Lakera Guard service. public const string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration = \"FoundationaLLM:APIEndpoints:LakeraGuard:Configuration\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration Configuration section used to identify the main LangChain API settings. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials Configuration section used to identify the essential settings for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra Configuration section used to identify the Entra ID authentication settings for Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials Configuration section used to identify the essential settings for the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials Configuration section used to identify the essential settings for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration Configuration section used to identify the main Semantic Kernel API settings. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials Configuration section used to identify the essential settings for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB Configuration section used to identify the Cosmos DB settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials Configuration section used to identify the essential settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials Configuration section used to identify the essential settings for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials Configuration section used to identify the essential settings for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials\" Field Value string FoundationaLLM_Branding Configuration section used to identify the branding settings for the User Portal. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding\" Field Value string FoundationaLLM_Configuration Configuration section used to identify the Azure Key Vault settings related to the FoundationaLLM instance. public const string FoundationaLLM_Configuration = \"FoundationaLLM:Configuration\" Field Value string FoundationaLLM_DataSources Configuration section used to identify the settings for data sources resources managed by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_DataSources = \"FoundationaLLM:DataSources\" Field Value string FoundationaLLM_Events_Profiles_CoreAPI Configuration section used to identify the settings for the events infrastructure used by the Core API. public const string FoundationaLLM_Events_Profiles_CoreAPI = \"FoundationaLLM:Events:Profiles:CoreAPI\" Field Value string FoundationaLLM_Events_Profiles_GatekeeperAPI Configuration section used to identify the settings for the events infrastructure used by the Gatekeeper API. public const string FoundationaLLM_Events_Profiles_GatekeeperAPI = \"FoundationaLLM:Events:Profiles:GatekeeperAPI\" Field Value string FoundationaLLM_Events_Profiles_GatewayAPI Configuration section used to identify the settings for the events infrastructure used by the Gateway API. public const string FoundationaLLM_Events_Profiles_GatewayAPI = \"FoundationaLLM:Events:Profiles:GatewayAPI\" Field Value string FoundationaLLM_Events_Profiles_ManagementAPI Configuration section used to identify the settings for the events infrastructure used by the Management API. public const string FoundationaLLM_Events_Profiles_ManagementAPI = \"FoundationaLLM:Events:Profiles:ManagementAPI\" Field Value string FoundationaLLM_Events_Profiles_OrchestrationAPI Configuration section used to identify the settings for the events infrastructure used by the Orchestration API. public const string FoundationaLLM_Events_Profiles_OrchestrationAPI = \"FoundationaLLM:Events:Profiles:OrchestrationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationAPI Configuration section used to identify the settings for the events infrastructure used by the Vectorization API. public const string FoundationaLLM_Events_Profiles_VectorizationAPI = \"FoundationaLLM:Events:Profiles:VectorizationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationWorker Configuration section used to identify the settings for the events infrastructure used by the Vectorization Worker service. public const string FoundationaLLM_Events_Profiles_VectorizationWorker = \"FoundationaLLM:Events:Profiles:VectorizationWorker\" Field Value string FoundationaLLM_Instance Configuration section used to identify the settings related to the FoundationaLLM instance. public const string FoundationaLLM_Instance = \"FoundationaLLM:Instance\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage Configuration section used to identify the storage settings for the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel_Storage = \"FoundationaLLM:ResourceProviders:AIModel:Storage\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent_Storage = \"FoundationaLLM:ResourceProviders:Agent:Storage\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment_Storage = \"FoundationaLLM:ResourceProviders:Attachment:Storage\" Field Value string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage Configuration section used to identify the storage settings for the FoundationaLLM.AzureOpenAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage = \"FoundationaLLM:ResourceProviders:AzureOpenAI:Storage\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration_Storage = \"FoundationaLLM:ResourceProviders:Configuration:Storage\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage Configuration section used to identify the storage settings for the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource_Storage = \"FoundationaLLM:ResourceProviders:DataSource:Storage\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt_Storage = \"FoundationaLLM:ResourceProviders:Prompt:Storage\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage = \"FoundationaLLM:ResourceProviders:Vectorization:Storage\" Field Value string FoundationaLLM_Vectorization_Queues Configuration section used to identify the settings for vectorization queues. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues\" Field Value string FoundationaLLM_Vectorization_StateService_Storage Configuration section used to identify the settings for the storage account used by the vectorization state service. public const string FoundationaLLM_Vectorization_StateService_Storage = \"FoundationaLLM:Vectorization:StateService:Storage\" Field Value string FoundationaLLM_Vectorization_Steps Configuration section used to identify the settings for vectorization steps. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeys.html",
    "title": "Class AppConfigurationKeys | FoundationaLLM",
    "keywords": "Class AppConfigurationKeys Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all App Configuration key names used by FoundationaLLM. public static class AppConfigurationKeys Inheritance object AppConfigurationKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIScope The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIScope setting. Value description: The scope required to get an access token for the Authorization API. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIScope = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIScope\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIUrl setting. Value description: The URL of the Authorization API. Due to its special nature, the Authorization API does not have a corresponding APIEndpointConfiguration resource and thus the URL must be kept as a configuration setting. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_HateSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:HateSeverity setting. Value description: The maximum level of hate language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_HateSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:HateSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SelfHarmSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SelfHarmSeverity setting. Value description: The maximum level of self-harm language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SelfHarmSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SelfHarmSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SexualSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SexualSeverity setting. Value description: The maximum level of sexual language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SexualSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SexualSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_ViolenceSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:ViolenceSeverity setting. Value description: The maximum level of violent language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_ViolenceSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:ViolenceSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration_NamespaceId The app configuration key for the FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration:NamespaceId setting. Value description: The object identifier of the Azure Event Grid Namespace object used by the Azure Event Grid event service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration_NamespaceId = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration:NamespaceId\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AllowedUploadFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AllowedUploadFileExtensions setting. Value description: The comma-separated list file extensions that users are allowed to upload to a conversation. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AllowedUploadFileExtensions = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AllowedUploadFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AzureOpenAIAssistantsFileSearchFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureOpenAIAssistantsFileSearchFileExtensions setting. Value description: The comma-separated list file extensions that are supported by the Azure OpenAI Assistants file search tool. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AzureOpenAIAssistantsFileSearchFileExtensions = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureOpenAIAssistantsFileSearchFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_BypassGatekeeper The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:BypassGatekeeper setting. Value description: The flag that indicates whether the Core API should bypass or not the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_BypassGatekeeper = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:BypassGatekeeper\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_ChangeFeedLeaseContainer The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:ChangeFeedLeaseContainer setting. Value description: The name of the container used by Azure Cosmos DB to manage the change feed leases. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_ChangeFeedLeaseContainer = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:ChangeFeedLeaseContainer\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Containers The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Containers setting. Value description: The comma-separated list of database containers used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Containers = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Containers\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Database The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Database setting. Value description: The name of the Azure Cosmos DB database used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Database = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Database\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Endpoint The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Endpoint setting. Value description: The URL of the Azure Cosmos DB service used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Endpoint = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Endpoint\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_MonitoredContainers The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:MonitoredContainers setting. Value description: The comma-separated list of database containers that are monitored for changes using the change feed. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_MonitoredContainers = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:MonitoredContainers\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_CallbackPath The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_CallbackPath = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:CallbackPath\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_ClientId The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the Core API to authenticate. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_ClientId = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:ClientId\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Instance The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Instance = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Instance\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Scopes The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Scopes setting. Value description: The list of scopes exposed by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Scopes = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Scopes\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_TenantId The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_TenantId = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:TenantId\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Essentials:APIUrl setting. Value description: The URL of the Core API. Since it's an entry point API, the Core API does not have a corresponding APIEndpointConfiguration resource and thus the URL must be kept as a configuration setting. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:CoreWorker:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:CoreWorker:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafety The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafety setting. Value description: Indicates whether Azure Content Safety is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafety = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafety\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafetyPromptShields The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafetyPromptShields setting. Value description: Indicates whether Azure Content Safety Prompt Shields is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafetyPromptShields = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafetyPromptShields\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableEnkryptGuardrails The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableEnkryptGuardrails setting. Value description: Indicates whether Enkrypt Guardrails is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableEnkryptGuardrails = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableEnkryptGuardrails\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableLakeraGuard The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableLakeraGuard setting. Value description: Indicates whether Lakera Guard is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableLakeraGuard = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableLakeraGuard\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableMicrosoftPresidio The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableMicrosoftPresidio setting. Value description: Indicates whether Microsoft Presidio is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableMicrosoftPresidio = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableMicrosoftPresidio\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureOpenAIAccounts The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureOpenAIAccounts setting. Value description: The comma-separated list of Azure OpenAI account names used by the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureOpenAIAccounts = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureOpenAIAccounts\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_CallbackPath The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_CallbackPath = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:CallbackPath\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_ClientId The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the Management API to authenticate. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_ClientId = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:ClientId\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Instance The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Instance = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Instance\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Scopes The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Scopes setting. Value description: The list of scopes exposed by the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Scopes = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Scopes\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_TenantId The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_TenantId = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:TenantId\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:APIUrl setting. Value description: The URL of the Management API. Since it's an entry point API, the Management API does not have a corresponding APIEndpointConfiguration resource and thus the URL must be kept as a configuration setting. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration_MaxConcurrentCompletions The app configuration key for the FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration:MaxConcurrentCompletions setting. Value description: The maximum number of background completion operations allowed to run in parallel. If a new completion request comes in and the maximum number is already reached, the request will generate an error. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration_MaxConcurrentCompletions = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration:MaxConcurrentCompletions\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Containers The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Containers setting. Value description: The comma-separated list of database containers used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Containers = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Containers\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Database The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Database setting. Value description: The name of the Azure Cosmos DB database used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Database = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Database\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Endpoint The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Endpoint setting. Value description: The URL of the Azure Cosmos DB service used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Endpoint = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Endpoint\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIUrl setting. Value description: The URL of the State API. This entry supports the dependency of the Orchestration implementations to retrieve the URL. Python APIs do not have a resource provider implementation to retrieve the details. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_Branding_AccentColor The app configuration key for the FoundationaLLM:Branding:AccentColor setting. Value description: Accent color. public const string FoundationaLLM_Branding_AccentColor = \"FoundationaLLM:Branding:AccentColor\" Field Value string FoundationaLLM_Branding_AccentTextColor The app configuration key for the FoundationaLLM:Branding:AccentTextColor setting. Value description: Accent text color. public const string FoundationaLLM_Branding_AccentTextColor = \"FoundationaLLM:Branding:AccentTextColor\" Field Value string FoundationaLLM_Branding_AgentIconUrl The app configuration key for the FoundationaLLM:Branding:AgentIconUrl setting. Value description: The agent icon that displays next to the agent select list and agent responses. Can be an absolute URL, relative path, or base64string value. public const string FoundationaLLM_Branding_AgentIconUrl = \"FoundationaLLM:Branding:AgentIconUrl\" Field Value string FoundationaLLM_Branding_BackgroundColor The app configuration key for the FoundationaLLM:Branding:BackgroundColor setting. Value description: BackgroundColor. public const string FoundationaLLM_Branding_BackgroundColor = \"FoundationaLLM:Branding:BackgroundColor\" Field Value string FoundationaLLM_Branding_CompanyName The app configuration key for the FoundationaLLM:Branding:CompanyName setting. Value description: Company name. public const string FoundationaLLM_Branding_CompanyName = \"FoundationaLLM:Branding:CompanyName\" Field Value string FoundationaLLM_Branding_FavIconUrl The app configuration key for the FoundationaLLM:Branding:FavIconUrl setting. Value description: Fav icon url. public const string FoundationaLLM_Branding_FavIconUrl = \"FoundationaLLM:Branding:FavIconUrl\" Field Value string FoundationaLLM_Branding_FooterText The app configuration key for the FoundationaLLM:Branding:FooterText setting. Value description: Footer text. public const string FoundationaLLM_Branding_FooterText = \"FoundationaLLM:Branding:FooterText\" Field Value string FoundationaLLM_Branding_KioskMode The app configuration key for the FoundationaLLM:Branding:KioskMode setting. Value description: Kiosk mode. public const string FoundationaLLM_Branding_KioskMode = \"FoundationaLLM:Branding:KioskMode\" Field Value string FoundationaLLM_Branding_LogoText The app configuration key for the FoundationaLLM:Branding:LogoText setting. Value description: Logo text. public const string FoundationaLLM_Branding_LogoText = \"FoundationaLLM:Branding:LogoText\" Field Value string FoundationaLLM_Branding_LogoUrl The app configuration key for the FoundationaLLM:Branding:LogoUrl setting. Value description: Logo url. public const string FoundationaLLM_Branding_LogoUrl = \"FoundationaLLM:Branding:LogoUrl\" Field Value string FoundationaLLM_Branding_PageTitle The app configuration key for the FoundationaLLM:Branding:PageTitle setting. Value description: Page title. public const string FoundationaLLM_Branding_PageTitle = \"FoundationaLLM:Branding:PageTitle\" Field Value string FoundationaLLM_Branding_PrimaryButtonBackgroundColor The app configuration key for the FoundationaLLM:Branding:PrimaryButtonBackgroundColor setting. Value description: Primary button background color. public const string FoundationaLLM_Branding_PrimaryButtonBackgroundColor = \"FoundationaLLM:Branding:PrimaryButtonBackgroundColor\" Field Value string FoundationaLLM_Branding_PrimaryButtonTextColor The app configuration key for the FoundationaLLM:Branding:PrimaryButtonTextColor setting. Value description: Primary button text color. public const string FoundationaLLM_Branding_PrimaryButtonTextColor = \"FoundationaLLM:Branding:PrimaryButtonTextColor\" Field Value string FoundationaLLM_Branding_PrimaryColor The app configuration key for the FoundationaLLM:Branding:PrimaryColor setting. Value description: Primary color. public const string FoundationaLLM_Branding_PrimaryColor = \"FoundationaLLM:Branding:PrimaryColor\" Field Value string FoundationaLLM_Branding_PrimaryTextColor The app configuration key for the FoundationaLLM:Branding:PrimaryTextColor setting. Value description: Primary text color. public const string FoundationaLLM_Branding_PrimaryTextColor = \"FoundationaLLM:Branding:PrimaryTextColor\" Field Value string FoundationaLLM_Branding_SecondaryButtonBackgroundColor The app configuration key for the FoundationaLLM:Branding:SecondaryButtonBackgroundColor setting. Value description: Secondary button background color. public const string FoundationaLLM_Branding_SecondaryButtonBackgroundColor = \"FoundationaLLM:Branding:SecondaryButtonBackgroundColor\" Field Value string FoundationaLLM_Branding_SecondaryButtonTextColor The app configuration key for the FoundationaLLM:Branding:SecondaryButtonTextColor setting. Value description: Secondary button text color. public const string FoundationaLLM_Branding_SecondaryButtonTextColor = \"FoundationaLLM:Branding:SecondaryButtonTextColor\" Field Value string FoundationaLLM_Branding_SecondaryColor The app configuration key for the FoundationaLLM:Branding:SecondaryColor setting. Value description: Secondary color. public const string FoundationaLLM_Branding_SecondaryColor = \"FoundationaLLM:Branding:SecondaryColor\" Field Value string FoundationaLLM_Branding_SecondaryTextColor The app configuration key for the FoundationaLLM:Branding:SecondaryTextColor setting. Value description: Secondary text color. public const string FoundationaLLM_Branding_SecondaryTextColor = \"FoundationaLLM:Branding:SecondaryTextColor\" Field Value string FoundationaLLM_Configuration_KeyVaultURI The app configuration key for the FoundationaLLM:Configuration:KeyVaultURI setting. Value description: The URL of the Azure Key Vault providing the secrets. public const string FoundationaLLM_Configuration_KeyVaultURI = \"FoundationaLLM:Configuration:KeyVaultURI\" Field Value string FoundationaLLM_Events_Profiles_CoreAPI The app configuration key for the FoundationaLLM:Events:Profiles:CoreAPI setting. Value description: The settings used by the Core API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_CoreAPI = \"FoundationaLLM:Events:Profiles:CoreAPI\" Field Value string FoundationaLLM_Events_Profiles_GatekeeperAPI The app configuration key for the FoundationaLLM:Events:Profiles:GatekeeperAPI setting. Value description: The settings used by the Gatekeeper API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_GatekeeperAPI = \"FoundationaLLM:Events:Profiles:GatekeeperAPI\" Field Value string FoundationaLLM_Events_Profiles_GatewayAPI The app configuration key for the FoundationaLLM:Events:Profiles:GatewayAPI setting. Value description: The settings used by the Gateway API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_GatewayAPI = \"FoundationaLLM:Events:Profiles:GatewayAPI\" Field Value string FoundationaLLM_Events_Profiles_ManagementAPI The app configuration key for the FoundationaLLM:Events:Profiles:ManagementAPI setting. Value description: The settings used by the Management API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_ManagementAPI = \"FoundationaLLM:Events:Profiles:ManagementAPI\" Field Value string FoundationaLLM_Events_Profiles_OrchestrationAPI The app configuration key for the FoundationaLLM:Events:Profiles:OrchestrationAPI setting. Value description: The settings used by the Orchestration API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_OrchestrationAPI = \"FoundationaLLM:Events:Profiles:OrchestrationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationAPI The app configuration key for the FoundationaLLM:Events:Profiles:VectorizationAPI setting. Value description: The settings used by the Vectorization API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_VectorizationAPI = \"FoundationaLLM:Events:Profiles:VectorizationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationWorker The app configuration key for the FoundationaLLM:Events:Profiles:VectorizationWorker setting. Value description: The settings used by the Vectorization Worker to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_VectorizationWorker = \"FoundationaLLM:Events:Profiles:VectorizationWorker\" Field Value string FoundationaLLM_Instance_Id The app configuration key for the FoundationaLLM:Instance:Id setting. Value description: The unique identifier of the FoundationaLLM instance. public const string FoundationaLLM_Instance_Id = \"FoundationaLLM:Instance:Id\" Field Value string FoundationaLLM_Instance_IdentitySubstitutionSecurityPrincipalId The app configuration key for the FoundationaLLM:Instance:IdentitySubstitutionSecurityPrincipalId setting. Value description: The object identifier of the security principal who is allowed to substitute its identity with a value provided in the X-USER-IDENTITY header. public const string FoundationaLLM_Instance_IdentitySubstitutionSecurityPrincipalId = \"FoundationaLLM:Instance:IdentitySubstitutionSecurityPrincipalId\" Field Value string FoundationaLLM_Instance_IdentitySubstitutionUserPrincipalNamePattern The app configuration key for the FoundationaLLM:Instance:IdentitySubstitutionUserPrincipalNamePattern setting. Value description: The Regex pattern used to validate the values allowed as User Principal Name (UPN) substitutes in the X-USER-IDENTITY header. public const string FoundationaLLM_Instance_IdentitySubstitutionUserPrincipalNamePattern = \"FoundationaLLM:Instance:IdentitySubstitutionUserPrincipalNamePattern\" Field Value string FoundationaLLM_Instance_SecurityGroupRetrievalStrategy The app configuration key for the FoundationaLLM:Instance:SecurityGroupRetrievalStrategy setting. Value description: The security group retrieval strategy of the FoundationaLLM instance. public const string FoundationaLLM_Instance_SecurityGroupRetrievalStrategy = \"FoundationaLLM:Instance:SecurityGroupRetrievalStrategy\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_CallbackPath The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_CallbackPath = \"FoundationaLLM:ManagementPortal:Authentication:Entra:CallbackPath\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_ClientId The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the Management Portal to authenticate. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_ClientId = \"FoundationaLLM:ManagementPortal:Authentication:Entra:ClientId\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_Instance The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_Instance = \"FoundationaLLM:ManagementPortal:Authentication:Entra:Instance\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_Scopes The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:Scopes setting. Value description: The list of scopes used to get the authentication token for the Management API. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_Scopes = \"FoundationaLLM:ManagementPortal:Authentication:Entra:Scopes\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_TenantId The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_TenantId = \"FoundationaLLM:ManagementPortal:Authentication:Entra:TenantId\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:AIModel:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel_Storage_AccountName = \"FoundationaLLM:ResourceProviders:AIModel:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:AIModel:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.AIModel resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_AIModel_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:AIModel:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Agent:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Agent:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Agent:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Agent resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Agent_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Agent:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Attachment:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Attachment:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Attachment:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Attachment resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Attachment_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Attachment:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.AzureOpenAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage_AccountName = \"FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.AzureOpenAI resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_AzureOpenAI_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Configuration:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Configuration:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Configuration:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Configuration resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Configuration_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Configuration:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:DataSource:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource_Storage_AccountName = \"FoundationaLLM:ResourceProviders:DataSource:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:DataSource:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.DataSource resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_DataSource_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:DataSource:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Prompt:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Prompt:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Prompt:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Prompt resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Prompt_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Prompt:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Vectorization:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Vectorization:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Vectorization:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Vectorization resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Vectorization:Storage:AuthenticationType\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_CallbackPath The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_UserPortal_Authentication_Entra_CallbackPath = \"FoundationaLLM:UserPortal:Authentication:Entra:CallbackPath\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_ClientId The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the User Portal to authenticate. public const string FoundationaLLM_UserPortal_Authentication_Entra_ClientId = \"FoundationaLLM:UserPortal:Authentication:Entra:ClientId\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_Instance The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_UserPortal_Authentication_Entra_Instance = \"FoundationaLLM:UserPortal:Authentication:Entra:Instance\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_Scopes The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:Scopes setting. Value description: The list of scopes used to get the authentication token for the Core API. public const string FoundationaLLM_UserPortal_Authentication_Entra_Scopes = \"FoundationaLLM:UserPortal:Authentication:Entra:Scopes\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_TenantId The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_UserPortal_Authentication_Entra_TenantId = \"FoundationaLLM:UserPortal:Authentication:Entra:TenantId\" Field Value string FoundationaLLM_Vectorization_Queues_Embed_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Embed:AccountName setting. Value description: The Azure Queue Storage account providing the Embed queue. public const string FoundationaLLM_Vectorization_Queues_Embed_AccountName = \"FoundationaLLM:Vectorization:Queues:Embed:AccountName\" Field Value string FoundationaLLM_Vectorization_Queues_Extract_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Extract:AccountName setting. Value description: The Azure Queue Storage account providing the Extract queue. public const string FoundationaLLM_Vectorization_Queues_Extract_AccountName = \"FoundationaLLM:Vectorization:Queues:Extract:AccountName\" Field Value string FoundationaLLM_Vectorization_Queues_Index_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Index:AccountName setting. Value description: The Azure Queue Storage account providing the Index queue. public const string FoundationaLLM_Vectorization_Queues_Index_AccountName = \"FoundationaLLM:Vectorization:Queues:Index:AccountName\" Field Value string FoundationaLLM_Vectorization_Queues_Partition_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Partition:AccountName setting. Value description: The Azure Queue Storage account providing the Partition queue. public const string FoundationaLLM_Vectorization_Queues_Partition_AccountName = \"FoundationaLLM:Vectorization:Queues:Partition:AccountName\" Field Value string FoundationaLLM_Vectorization_StateService_Storage_AccountName The app configuration key for the FoundationaLLM:Vectorization:StateService:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the Vectorization State service. public const string FoundationaLLM_Vectorization_StateService_Storage_AccountName = \"FoundationaLLM:Vectorization:StateService:Storage:AccountName\" Field Value string FoundationaLLM_Vectorization_StateService_Storage_AuthenticationType The app configuration key for the FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the Vectorization State service. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_Vectorization_StateService_Storage_AuthenticationType = \"FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType\" Field Value string FoundationaLLM_Vectorization_Worker The app configuration key for the FoundationaLLM:Vectorization:Worker setting. Value description: The processing configuration used by the Vectorization Worker service. public const string FoundationaLLM_Vectorization_Worker = \"FoundationaLLM:Vectorization:Worker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationDependencyInjectionKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationDependencyInjectionKeys.html",
    "title": "Class AuthorizationDependencyInjectionKeys | FoundationaLLM",
    "keywords": "Class AuthorizationDependencyInjectionKeys Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all keys used for named dependency injection. public static class AuthorizationDependencyInjectionKeys Inheritance object AuthorizationDependencyInjectionKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_ResourceProviders_Authorization Dependency injection key used by the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_ResourceProviders_Authorization = \"FoundationaLLM:ResourceProviders:Authorization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationKeyVaultSecretNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationKeyVaultSecretNames.html",
    "title": "Class AuthorizationKeyVaultSecretNames | FoundationaLLM",
    "keywords": "Class AuthorizationKeyVaultSecretNames Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all Azure Key vault secret names referred by the Azure App Configuration keys. public static class AuthorizationKeyVaultSecretNames Inheritance object AuthorizationKeyVaultSecretNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AuthorizationAPI_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Authorization API. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_AppInsightsConnectionString = \"foundationallm-authorizationapi-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_ClientId The name of the Azure Key Vault secret holding the unique identifier of the Entra ID app registration used by the Authorization API to authenticate. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_ClientId = \"foundationallm-authorizationapi-entra-clientid\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_Instance The name of the Azure Key Vault secret holding the URL of the Entra ID instance used for authentication. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_Instance = \"foundationallm-authorizationapi-entra-instance\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_TenantId The name of the Azure Key Vault secret holding the unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_TenantId = \"foundationallm-authorizationapi-entra-tenantid\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_InstanceIds The name of the Azure Key Vault secret holding the comma-separated list of FoundationaLLM instance ids that are serviced by the Authorization API. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_InstanceIds = \"foundationallm-authorizationapi-instanceids\" Field Value string FoundationaLLM_ResourceProviders_Authorization_Storage_AccountName The name of the Azure Key Vault secret providing the name of the Azure Blob Storage account used by the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_ResourceProviders_Authorization_Storage_AccountName = \"foundationallm-authorizationapi-storage-accountname\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.DependencyInjectionKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.DependencyInjectionKeys.html",
    "title": "Class DependencyInjectionKeys | FoundationaLLM",
    "keywords": "Class DependencyInjectionKeys Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all keys used for named dependency injection. public static class DependencyInjectionKeys Inheritance object DependencyInjectionKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration Dependency injection key used to inject the implementation of IIndexingService based on Azure Cosmos DB NoSQL. public const string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzureCosmosDBNoSQLVectorStore:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration Dependency injection key used to inject the implementation of IIndexingService based on Azure PostgreSQL. public const string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzurePostgreSQLVectorStore:Configuration\" Field Value string FoundationaLLM_ResourceProviders_AIModel Dependency injection key used by the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel = \"FoundationaLLM:ResourceProviders:AIModel\" Field Value string FoundationaLLM_ResourceProviders_Agent Dependency injection key used by the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent = \"FoundationaLLM:ResourceProviders:Agent\" Field Value string FoundationaLLM_ResourceProviders_Attachment Dependency injection key used by the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment = \"FoundationaLLM:ResourceProviders:Attachment\" Field Value string FoundationaLLM_ResourceProviders_AzureOpenAI Dependency injection key used by the FoundationaLLM.AzureOpenAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureOpenAI = \"FoundationaLLM:ResourceProviders:AzureOpenAI\" Field Value string FoundationaLLM_ResourceProviders_Configuration Dependency injection key used by the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration = \"FoundationaLLM:ResourceProviders:Configuration\" Field Value string FoundationaLLM_ResourceProviders_DataSource Dependency injection key used by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource = \"FoundationaLLM:ResourceProviders:DataSource\" Field Value string FoundationaLLM_ResourceProviders_Prompt Dependency injection key used by the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt = \"FoundationaLLM:ResourceProviders:Prompt\" Field Value string FoundationaLLM_ResourceProviders_Vectorization Dependency injection key used by the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization = \"FoundationaLLM:ResourceProviders:Vectorization\" Field Value string FoundationaLLM_Vectorization_Queues Dependency injection key used to inject the IConfiguration section for vectorization queues. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues\" Field Value string FoundationaLLM_Vectorization_StateService_Storage Dependency injection key used to inject storage settings for the Vectorization state service. public const string FoundationaLLM_Vectorization_StateService_Storage = \"FoundationaLLM:Vectorization:StateService:Storage\" Field Value string FoundationaLLM_Vectorization_Steps Dependency injection key used to inject the IConfiguration section for vectorization steps. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps\" Field Value string FoundationaLLM_Vectorization_TextEmbedding_Gateway Dependency injection key used to inject the ITextEmbeddingService implementation that uses the FoundationaLLM Gateway for embedding. public const string FoundationaLLM_Vectorization_TextEmbedding_Gateway = \"FoundationaLLM:Vectorization:TextEmbedding:Gateway\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentTypes.html",
    "title": "Class EnvironmentTypes | FoundationaLLM",
    "keywords": "Class EnvironmentTypes Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Constants defining the types of FoundationaLLM environments public static class EnvironmentTypes Inheritance object EnvironmentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields E2ETest An environment used to run end-to-end integration tests. public const string E2ETest = \"E2ETest\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentVariables.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentVariables.html",
    "title": "Class EnvironmentVariables | FoundationaLLM",
    "keywords": "Class EnvironmentVariables Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Contains constants for environment variables used by the application. public static class EnvironmentVariables Inheritance object EnvironmentVariables Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureClientId The client id of the user assigned managed identity. public const string AzureClientId = \"AZURE_CLIENT_ID\" Field Value string FoundationaLLM_AppConfig_ConnectionString The key for the FoundationaLLM:AppConfig:ConnectionString environment variable. This allows the caller to connect to the Azure App Configuration service. public const string FoundationaLLM_AppConfig_ConnectionString = \"FoundationaLLM_AppConfig_ConnectionString\" Field Value string FoundationaLLM_AuthorizationAPI_KeyVaultURI They key for the FoundationaLLM:Configuration:KeyVaultURI environment variable. public const string FoundationaLLM_AuthorizationAPI_KeyVaultURI = \"FoundationaLLM_AuthorizationAPI_KeyVaultURI\" Field Value string FoundationaLLM_Environment Indicates whether the application is running in an end-to-end test environment. The string value should be either \"true\" or \"false\". public const string FoundationaLLM_Environment = \"FOUNDATIONALLM_ENVIRONMENT\" Field Value string FoundationaLLM_Version The build version of the container. This is also used for the app version used to validate the minimum version of the app required to use certain configuration entries. public const string FoundationaLLM_Version = \"FOUNDATIONALLM_VERSION\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.KeyVaultSecretNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.KeyVaultSecretNames.html",
    "title": "Class KeyVaultSecretNames | FoundationaLLM",
    "keywords": "Class KeyVaultSecretNames Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all Azure Key vault secret names referred by the Azure App Configuration keys. public static class KeyVaultSecretNames Inheritance object KeyVaultSecretNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey = \"foundationallm-apiendpoints-azurecontentsafety-apikey\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey = \"foundationallm-apiendpoints-azureeventgrid-apikey\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey = \"foundationallm-apiendpoints-azureopenai-apikey\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey = \"foundationallm-apiendpoints-coreworker-apikey\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatekeeperapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatekeeperintegrationapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatewayapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatewayadapterapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey = \"foundationallm-apiendpoints-langchainapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey = \"foundationallm-apiendpoints-orchestrationapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey = \"foundationallm-apiendpoints-semantickernelapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey = \"foundationallm-apiendpoints-stateapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey = \"foundationallm-apiendpoints-vectorizationapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey = \"foundationallm-apiendpoints-vectorizationworker-apikey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.Configuration Classes APIEndpointProviders Language Model provider constants. AppConfigurationKeyFilters Defines all configuration section filters used to select subsets of configuration settings. AppConfigurationKeySections Defines all configuration section names used to map configuration values to settings classes. AppConfigurationKeys Defines all App Configuration key names used by FoundationaLLM. AuthorizationDependencyInjectionKeys Defines all keys used for named dependency injection. AuthorizationKeyVaultSecretNames Defines all Azure Key vault secret names referred by the Azure App Configuration keys. DependencyInjectionKeys Defines all keys used for named dependency injection. EnvironmentTypes Constants defining the types of FoundationaLLM environments EnvironmentVariables Contains constants for environment variables used by the application. KeyVaultSecretNames Defines all Azure Key vault secret names referred by the Azure App Configuration keys."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.CorsPolicyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.CorsPolicyNames.html",
    "title": "Class CorsPolicyNames | FoundationaLLM",
    "keywords": "Class CorsPolicyNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Names for CORS policies. public static class CorsPolicyNames Inheritance object CorsPolicyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowAllOrigins All origins are allowed. public const string AllowAllOrigins = \"AllowAllOrigins\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.CosmosDbContainers.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.CosmosDbContainers.html",
    "title": "Class CosmosDbContainers | FoundationaLLM",
    "keywords": "Class CosmosDbContainers Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM Cosmos DB container names. public static class CosmosDbContainers Inheritance object CosmosDbContainers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Leases The Cosmos DB change feed leases container. public const string Leases = \"leases\" Field Value string Sessions Stores chat sessions and related messages. public const string Sessions = \"Sessions\" Field Value string State Stores state data for background processing. public const string State = \"State\" Field Value string UserProfiles Stores user profile data. public const string UserProfiles = \"UserProfiles\" Field Value string UserSessions Stores a mapping between user identities and chat sessions. public const string UserSessions = \"UserSessions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventGridEventTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventGridEventTypes.html",
    "title": "Class EventGridEventTypes | FoundationaLLM",
    "keywords": "Class EventGridEventTypes Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Types of Azure Event Grid events. public static class EventGridEventTypes Inheritance object EventGridEventTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Microsoft_Storage_BlobCreated The type of event emitted by an Azure storage account when a blob is created/updated. public const string Microsoft_Storage_BlobCreated = \"Microsoft.Storage.BlobCreated\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopicSubscriptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopicSubscriptions.html",
    "title": "Class EventGridTopicSubscriptions | FoundationaLLM",
    "keywords": "Class EventGridTopicSubscriptions Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Azure Event Grid topic subscription names. public static class EventGridTopicSubscriptions Inheritance object EventGridTopicSubscriptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Storage_Core The name of the FoundationaLLM Core API subscription to the [storage] Azure Event Grid topic. public const string FoundationaLLM_Storage_Core = \"storage-core\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopics.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventGridTopics.html",
    "title": "Class EventGridTopics | FoundationaLLM",
    "keywords": "Class EventGridTopics Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Azure Event Grid topic names. public static class EventGridTopics Inheritance object EventGridTopics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Storage The name of the FoundationaLLM storage Azure Event Grid topic. public const string FoundationaLLM_Storage = \"storage\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.EventSetEventNamespaces.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.EventSetEventNamespaces.html",
    "title": "Class EventSetEventNamespaces | FoundationaLLM",
    "keywords": "Class EventSetEventNamespaces Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Namespace names for event set events. public static class EventSetEventNamespaces Inheritance object EventSetEventNamespaces Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_ResourceProvider_AIModel The namespace name for events concerning the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProvider_AIModel = \"ResourceProvider.FoundationaLLM.AIModel\" Field Value string FoundationaLLM_ResourceProvider_Agent The namespace name for events concerning the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProvider_Agent = \"ResourceProvider.FoundationaLLM.Agent\" Field Value string FoundationaLLM_ResourceProvider_Attachment The namespace name for events concerning the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProvider_Attachment = \"ResourceProvider.FoundationaLLM.Attachment\" Field Value string FoundationaLLM_ResourceProvider_AzureOpenAI The namespace name for events concerning the FoundationaLLM.AzureOpenAI resource provider. public const string FoundationaLLM_ResourceProvider_AzureOpenAI = \"ResourceProvider.FoundationaLLM.AzureOpenAI\" Field Value string FoundationaLLM_ResourceProvider_Configuration The namespace name for events concerning the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProvider_Configuration = \"ResourceProvider.FoundationaLLM.Configuration\" Field Value string FoundationaLLM_ResourceProvider_DataSource The namespace name for events concerning the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProvider_DataSource = \"ResourceProvider.FoundationaLLM.DataSource\" Field Value string FoundationaLLM_ResourceProvider_Vectorization The namespace name for events concerning the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProvider_Vectorization = \"ResourceProvider.FoundationaLLM.Vectorization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.FileExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.FileExtensions.html",
    "title": "Class FileExtensions | FoundationaLLM",
    "keywords": "Class FileExtensions Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used to identify file extension. public static class FileExtensions Inheritance object FileExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowedFileExtensions Allowed file extensions for vectorization. public static readonly ImmutableArray<string> AllowedFileExtensions Field Value ImmutableArray<string> Excel File extension for Microsoft Office Excel files. public const string Excel = \".xlsx\" Field Value string JSON File extension for JSON files. public const string JSON = \".json\" Field Value string Markdown File extension for Markdown files. public const string Markdown = \".md\" Field Value string Mp3 File extension for mp3 files. public const string Mp3 = \".mp3\" Field Value string PDF File extension for PDF files. public const string PDF = \".pdf\" Field Value string PowerPoint File extension for Microsoft Office PowerPoint files. public const string PowerPoint = \".pptx\" Field Value string Text File extension for text files. public const string Text = \".txt\" Field Value string Wav File extension for wav files. public const string Wav = \".wav\" Field Value string Word File extension for Microsoft Office Word files. public const string Word = \".docx\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.GatekeeperOptionNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.GatekeeperOptionNames.html",
    "title": "Class GatekeeperOptionNames | FoundationaLLM",
    "keywords": "Class GatekeeperOptionNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains the names of the Agent Base Gatekeeper Options. public static class GatekeeperOptionNames Inheritance object GatekeeperOptionNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureContentSafety The name of the Azure Content Safety option. public const string AzureContentSafety = \"AzureContentSafety\" Field Value string AzureContentSafetyPromptShield The name of the Azure Content Safety Prompt Shield option. public const string AzureContentSafetyPromptShield = \"AzureContentSafetyPromptShield\" Field Value string EnkryptGuardrails The name of the Enkrypt Guardrails option. public const string EnkryptGuardrails = \"EnkryptGuardrails\" Field Value string LakeraGuard The name of the Lakera Guard option. public const string LakeraGuard = \"LakeraGuard\" Field Value string MicrosoftPresidio The name of the Microsoft Presidio option. public const string MicrosoftPresidio = \"MicrosoftPresidio\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpClientFactoryServiceKeyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpClientFactoryServiceKeyNames.html",
    "title": "Class HttpClientFactoryServiceKeyNames | FoundationaLLM",
    "keywords": "Class HttpClientFactoryServiceKeyNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used for the key names of the dictionary generated by IHttpClientFactoryService implementations. public static class HttpClientFactoryServiceKeyNames Inheritance object HttpClientFactoryServiceKeyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKey The dictionary key identifying the API key of an HTTP client. public const string APIKey = \"APIKey\" Field Value string AuthenticationType The dictionary key identifying the authentication type of an HTTP client. public const string AuthenticationType = \"AuthenticationType\" Field Value string Endpoint The dictionary key identifying the endpoint of an HTTP client. public const string Endpoint = \"Endpoint\" Field Value string TimeoutSeconds The dictionary key identifying the timeout in seconds associated with an HTTP client. public const string TimeoutSeconds = \"TimeoutSeconds\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpClientNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpClientNames.html",
    "title": "Class HttpClientNames | FoundationaLLM",
    "keywords": "Class HttpClientNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used to configure and retrieve API endpoint configurations. public static class HttpClientNames Inheritance object HttpClientNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentHubAPI Named client with matching configuration for the Agent Hub API. public const string AgentHubAPI = \"AgentHubAPI\" Field Value string All All HTTP client names. public static readonly string[] All Field Value string[] AllDownstream All HTTP client names used in IDownstreamAPIService implementations. public static readonly string[] AllDownstream Field Value string[] AuthorizationAPI Named client with matching configuration for the Authorization API. public const string AuthorizationAPI = \"AuthorizationAPI\" Field Value string AzureContentSafety Named client with matching configuration for the Azure Content Safety service. public const string AzureContentSafety = \"AzureContentSafety\" Field Value string AzureEventGrid Named client with matching configuration for the Azure Event Grid service. public const string AzureEventGrid = \"AzureEventGrid\" Field Value string CoreAPI Named client with matching configuration for the Core API. public const string CoreAPI = \"CoreAPI\" Field Value string DataSourceHubAPI Named client with matching configuration for the DataSource Hub API. public const string DataSourceHubAPI = \"DataSourceHubAPI\" Field Value string EnkryptGuardrails Named client with matching configuration for the Enkrypt Guardrails service. public const string EnkryptGuardrails = \"EnkryptGuardrails\" Field Value string GatekeeperAPI Named client with matching configuration for the Gatekeeper API. public const string GatekeeperAPI = \"GatekeeperAPI\" Field Value string GatekeeperIntegrationAPI Named client with matching configuration for the Gatekeeper Integration API. public const string GatekeeperIntegrationAPI = \"GatekeeperIntegrationAPI\" Field Value string GatewayAPI Named client with matching configuration for the Gateway API. public const string GatewayAPI = \"GatewayAPI\" Field Value string GatewayAdapterAPI Named client with matching configuration for the Gateway Adapter API. public const string GatewayAdapterAPI = \"GatewayAdapterAPI\" Field Value string LakeraGuard Named client with matching configuration for the Lakera Guard service. public const string LakeraGuard = \"LakeraGuard\" Field Value string LangChainAPI Named client with matching configuration for the LangChain API. public const string LangChainAPI = \"LangChainAPI\" Field Value string ManagementAPI Named client with matching configuration for the Management API. public const string ManagementAPI = \"ManagementAPI\" Field Value string OrchestrationAPI Named client with matching configuration for the Orchestration API. public const string OrchestrationAPI = \"OrchestrationAPI\" Field Value string PromptHubAPI Named client with matching configuration for the Prompt Hub API. public const string PromptHubAPI = \"PromptHubAPI\" Field Value string SemanticKernelAPI Named client with matching configuration for the Semantic Kernel API. public const string SemanticKernelAPI = \"SemanticKernelAPI\" Field Value string StateAPI Named client with matching configuration for the State API. public const string StateAPI = \"StateAPI\" Field Value string VectorizationAPI Named client with matching configuration for the Vectorization API. public const string VectorizationAPI = \"VectorizationAPI\" Field Value string VectorizationWorker Named client with matching configuration for the Vectorization Worker. public const string VectorizationWorker = \"VectorizationWorker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html",
    "title": "Class HttpHeaders | FoundationaLLM",
    "keywords": "Class HttpHeaders Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common HTTP headers used throughout the FoundationaLLM infrastructure. public static class HttpHeaders Inheritance object HttpHeaders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKey API key header used by APIs to authenticate requests. public const string APIKey = \"X-API-KEY\" Field Value string UserIdentity User identity header used by APIs to pass user identity information. public const string UserIdentity = \"X-USER-IDENTITY\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Instance.SecurityGroupRetrievalStrategies.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Instance.SecurityGroupRetrievalStrategies.html",
    "title": "Class SecurityGroupRetrievalStrategies | FoundationaLLM",
    "keywords": "Class SecurityGroupRetrievalStrategies Namespace FoundationaLLM.Common.Constants.Instance Assembly FoundationaLLM.Common.dll Security group retrieval strategies for the FoundationaLLM instance. public static class SecurityGroupRetrievalStrategies Inheritance object SecurityGroupRetrievalStrategies Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AccessToken Access token groups claim. public const string AccessToken = \"AccessToken\" Field Value string IdentityManagementService Identity management service. public const string IdentityManagementService = \"IdentityManagementService\" Field Value string None None. public const string None = \"None\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Instance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Instance.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Instance | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.Instance Classes SecurityGroupRetrievalStrategies Security group retrieval strategies for the FoundationaLLM instance."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.LLMOrchestrationServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.LLMOrchestrationServiceNames.html",
    "title": "Class LLMOrchestrationServiceNames | FoundationaLLM",
    "keywords": "Class LLMOrchestrationServiceNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Constants for the LLM Orchestration Service Names. public static class LLMOrchestrationServiceNames Inheritance object LLMOrchestrationServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureAIDirect Handles completion requests using real-time scoring endpoint deployed in Azure AI Studio. public const string AzureAIDirect = \"AzureAIDirect\" Field Value string AzureOpenAIDirect Handles completion requests using Azure OpenAI endpoints. public const string AzureOpenAIDirect = \"AzureOpenAIDirect\" Field Value string LangChain Handles completion requests using LangChain. public const string LangChain = \"LangChain\" Field Value string SemanticKernel Handles completion requests using Semantic Kernel. public const string SemanticKernel = \"SemanticKernel\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.OpenAIAgentCapabilityParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.OpenAIAgentCapabilityParameterNames.html",
    "title": "Class OpenAIAgentCapabilityParameterNames | FoundationaLLM",
    "keywords": "Class OpenAIAgentCapabilityParameterNames Namespace FoundationaLLM.Common.Constants.OpenAI Assembly FoundationaLLM.Common.dll Provides the names of the parameters that can be used to create OpenAI agent capabilities. public static class OpenAIAgentCapabilityParameterNames Inheritance object OpenAIAgentCapabilityParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The constants are used by the callers of the IGatewayServiceClient implementations. Fields AddAssistantFileToVectorStore Indicates the need to add an existing OpenAI assistant file to the OpenAI assistant vector store. public const string AddAssistantFileToVectorStore = \"OpenAI.Assistants.AddAssistantFileToVectorStore\" Field Value string AssistantFileId Provides the identifier of an existing OpenAI assistant file. public const string AssistantFileId = \"OpenAI.Assistants.AssistantFileId\" Field Value string AssistantId Provides the identifier of an existing OpenAI assistant. public const string AssistantId = \"OpenAI.Assistants.AssistantId\" Field Value string AssistantPrompt Provides the prompt used by the OpenAI assistant. public const string AssistantPrompt = \"OpenAI.Assistants.AssistantPrompt\" Field Value string AssistantThreadId Provides the identifier of an existing OpenAI assistant thread. public const string AssistantThreadId = \"OpenAI.Assistants.AssistantThreadId\" Field Value string AssistantVectorStoreId Provides the identifier of an existing OpenAI assistant vector store. public const string AssistantVectorStoreId = \"OpenAI.Assistants.AssistantVectorStoreId\" Field Value string AttachmentObjectId The object identifier of the FoundationaLLM attachment resource. public const string AttachmentObjectId = \"OpenAI.Assistants.AttachmentObjectId\" Field Value string CreateAssistant Indicates the need to create a new OpenAI assistant. public const string CreateAssistant = \"OpenAI.Assistants.CreateAssistant\" Field Value string CreateAssistantFile Indicates the need to create a new OpenAI assistant file. public const string CreateAssistantFile = \"OpenAI.Assistants.CreateAssistantFile\" Field Value string CreateAssistantThread Indicates the need to create a new OpenAI assistant thread. public const string CreateAssistantThread = \"OpenAI.Assistants.CreateAssistantThread\" Field Value string Endpoint Provides the Azure OpenAI endpoint used to manage Open AI assistants. public const string Endpoint = \"OpenAI.Assistants.Endpoint\" Field Value string ModelDeploymentName Provides the model deployment name used by the OpenAI assistant. public const string ModelDeploymentName = \"OpenAI.Assistants.ModelDeploymentName\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.html",
    "title": "Namespace FoundationaLLM.Common.Constants.OpenAI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.OpenAI Classes OpenAIAgentCapabilityParameterNames Provides the names of the parameters that can be used to create OpenAI agent capabilities."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.LongRunningOperationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.LongRunningOperationTypes.html",
    "title": "Class LongRunningOperationTypes | FoundationaLLM",
    "keywords": "Class LongRunningOperationTypes Namespace FoundationaLLM.Common.Constants.Orchestration Assembly FoundationaLLM.Common.dll The types of long-running operations. public static class LongRunningOperationTypes Inheritance object LongRunningOperationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LongRunningOperation The document type for a long-running operation. public const string LongRunningOperation = \"LongRunningOperation\" Field Value string LongRunningOperationLogEntry The document type for a long-running operation log entry. public const string LongRunningOperationLogEntry = \"LongRunningOperationLogEntry\" Field Value string LongRunningOperationResult The document type for a long-running operation result. public const string LongRunningOperationResult = \"LongRunningOperationResult\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.MessageContentItemTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.MessageContentItemTypes.html",
    "title": "Class MessageContentItemTypes | FoundationaLLM",
    "keywords": "Class MessageContentItemTypes Namespace FoundationaLLM.Common.Constants.Orchestration Assembly FoundationaLLM.Common.dll Contains constants for the types of message content items. public static class MessageContentItemTypes Inheritance object MessageContentItemTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FilePath File path content. public const string FilePath = \"file_path\" Field Value string HTML HTML file content. public const string HTML = \"html\" Field Value string ImageFile Image file content. public const string ImageFile = \"image_file\" Field Value string Text Text content. public const string Text = \"text\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.Orchestration Classes LongRunningOperationTypes The types of long-running operations. MessageContentItemTypes Contains constants for the types of message content items."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Participants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Participants.html",
    "title": "Enum Participants | FoundationaLLM",
    "keywords": "Enum Participants Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Specifies the participants, such as a user and an assistant. public enum Participants Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Assistant = 1 Represents an assistant type. User = 0 Represents a user type."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.PrincipalTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.PrincipalTypes.html",
    "title": "Class PrincipalTypes | FoundationaLLM",
    "keywords": "Class PrincipalTypes Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll The types of security principals. public static class PrincipalTypes Inheritance object PrincipalTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Group The group security principal type. public const string Group = \"Group\" Field Value string ServicePrincipal The service principal security principal type. public const string ServicePrincipal = \"ServicePrincipal\" Field Value string User The user security principal type. public const string User = \"User\" Field Value string Methods IsValidPrincipalType(string) Determines if the specified principal type is valid. public static bool IsValidPrincipalType(string principalType) Parameters principalType string The name of the principal type to validate. Returns bool True if the specified principal type is valid."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceProviderMetadata.html",
    "title": "Class AIModelResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class AIModelResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.AIModel resource provider. public static class AIModelResourceProviderMetadata Inheritance object AIModelResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceTypeNames.html",
    "title": "Class AIModelResourceTypeNames | FoundationaLLM",
    "keywords": "Class AIModelResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.AIModel resource provider. public static class AIModelResourceTypeNames Inheritance object AIModelResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AIModels AIModels. public const string AIModels = \"aiModels\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelTypes.html",
    "title": "Class AIModelTypes | FoundationaLLM",
    "keywords": "Class AIModelTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll public static class AIModelTypes Inheritance object AIModelTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Basic Basic AIModel type without practical functionality. Used as base for all other model types. public const string Basic = \"basic\" Field Value string Completion Completion model type public const string Completion = \"completion\" Field Value string Embedding Embedding model type public const string Embedding = \"embedding\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceProviderMetadata.html",
    "title": "Class AgentResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class AgentResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Agent resource provider. public static class AgentResourceProviderMetadata Inheritance object AgentResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceTypeNames.html",
    "title": "Class AgentResourceTypeNames | FoundationaLLM",
    "keywords": "Class AgentResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Agent resource provider. public class AgentResourceTypeNames Inheritance object AgentResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Agents Agents. public const string Agents = \"agents\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceProviderMetadata.html",
    "title": "Class AttachmentResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class AttachmentResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Attachment resource provider. public static class AttachmentResourceProviderMetadata Inheritance object AttachmentResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceTypeNames.html",
    "title": "Class AttachmentResourceTypeNames | FoundationaLLM",
    "keywords": "Class AttachmentResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Attachment resource provider. public static class AttachmentResourceTypeNames Inheritance object AttachmentResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Attachments Data sources. public const string Attachments = \"attachments\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentTypes.html",
    "title": "Class AttachmentTypes | FoundationaLLM",
    "keywords": "Class AttachmentTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Names of the different attachment types. public static class AttachmentTypes Inheritance object AttachmentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields File The attachment is a file. public const string File = \"file\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceProviderMetadata.html",
    "title": "Class AuthorizationResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class AuthorizationResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Authorization resource provider. public class AuthorizationResourceProviderMetadata Inheritance object AuthorizationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceTypeNames.html",
    "title": "Class AuthorizationResourceTypeNames | FoundationaLLM",
    "keywords": "Class AuthorizationResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Authorization resource provider. public static class AuthorizationResourceTypeNames Inheritance object AuthorizationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RoleAssignments Role assignments. public const string RoleAssignments = \"roleAssignments\" Field Value string RoleDefinitions Role definitions. public const string RoleDefinitions = \"roleDefinitions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceProviderMetadata.html",
    "title": "Class AzureOpenAIResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class AzureOpenAIResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.AzureOpenAI resource provider. public static class AzureOpenAIResourceProviderMetadata Inheritance object AzureOpenAIResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceTypeNames.html",
    "title": "Class AzureOpenAIResourceTypeNames | FoundationaLLM",
    "keywords": "Class AzureOpenAIResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.AzureOpenAI resource provider. public class AzureOpenAIResourceTypeNames Inheritance object AzureOpenAIResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AssistantUserContexts OpenAI assistant user contexts. public const string AssistantUserContexts = \"assistantUserContexts\" Field Value string FileUserContexts OpenAI files. public const string FileUserContexts = \"fileUserContexts\" Field Value string FilesContent OpenAI files content. public const string FilesContent = \"filesContent\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAITypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAITypes.html",
    "title": "Class AzureOpenAITypes | FoundationaLLM",
    "keywords": "Class AzureOpenAITypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants for the types of resources managed by the FoundationaLLM.AzureOpenAI resource provider. public static class AzureOpenAITypes Inheritance object AzureOpenAITypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssistantUserContext OpenAI assistant resources associated with a FoundationaLLM user. public const string AssistantUserContext = \"assistant-user-context\" Field Value string FileUserContext OpenAI assistant files associated with a FoundationaLLM user. public const string FileUserContext = \"file-user-context\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceProviderMetadata.html",
    "title": "Class ConfigurationResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class ConfigurationResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Configuration resource provider. public static class ConfigurationResourceProviderMetadata Inheritance object ConfigurationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceTypeNames.html",
    "title": "Class ConfigurationResourceTypeNames | FoundationaLLM",
    "keywords": "Class ConfigurationResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Configuration resource provider. public static class ConfigurationResourceTypeNames Inheritance object ConfigurationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIEndpointConfigurations API Endpoint key values. public const string APIEndpointConfigurations = \"apiEndpointConfigurations\" Field Value string AppConfigurations Azure App Configuration key values. public const string AppConfigurations = \"appConfigurations\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationTypes.html",
    "title": "Class ConfigurationTypes | FoundationaLLM",
    "keywords": "Class ConfigurationTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll String constants for the types of configurations. public class ConfigurationTypes Inheritance object ConfigurationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields APIEndpointConfiguration Api endpoint resource. public const string APIEndpointConfiguration = \"api-endpoint\" Field Value string AppConfigurationKeyValue Azure App Configuration key value. public const string AppConfigurationKeyValue = \"appconfiguration-key-value\" Field Value string AppConfigurationKeyVaultReference Azure App Configuration key vault reference. public const string AppConfigurationKeyVaultReference = \"appconfiguration-key-vault-reference\" Field Value string Basic Basic configuration without practical functionality. Used as base for all other configurations. public const string Basic = \"basic\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceProviderMetadata.html",
    "title": "Class DataSourceResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class DataSourceResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.DataSource resource provider. public static class DataSourceResourceProviderMetadata Inheritance object DataSourceResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceTypeNames.html",
    "title": "Class DataSourceResourceTypeNames | FoundationaLLM",
    "keywords": "Class DataSourceResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.DataSource resource provider. public static class DataSourceResourceTypeNames Inheritance object DataSourceResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataSources Data sources. public const string DataSources = \"dataSources\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceTypes.html",
    "title": "Class DataSourceTypes | FoundationaLLM",
    "keywords": "Class DataSourceTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll String constants for the types of data sources. public static class DataSourceTypes Inheritance object DataSourceTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureDataLake Azure Data Lake data source. public const string AzureDataLake = \"azure-data-lake\" Field Value string AzureSQLDatabase Azure SQL Database data source. public const string AzureSQLDatabase = \"azure-sql-database\" Field Value string Basic Basic data source without practical functionality. Used as base for all other data sources. public const string Basic = \"basic\" Field Value string OneLake Fabric OneLake data source. public const string OneLake = \"onelake\" Field Value string SharePointOnlineSite SharePoint Online Site data source. public const string SharePointOnlineSite = \"sharepoint-online-site\" Field Value string WebSite Web Site data source. public const string WebSite = \"web-site\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceProviderMetadata.html",
    "title": "Class PromptResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class PromptResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Prompt resource provider. public static class PromptResourceProviderMetadata Inheritance object PromptResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceTypeNames.html",
    "title": "Class PromptResourceTypeNames | FoundationaLLM",
    "keywords": "Class PromptResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Prompt resource provider. public class PromptResourceTypeNames Inheritance object PromptResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Prompts Prompts. public const string Prompts = \"prompts\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptTypes.html",
    "title": "Class PromptTypes | FoundationaLLM",
    "keywords": "Class PromptTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants for the types of prompts. public static class PromptTypes Inheritance object PromptTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Basic Basic agent without practical functionality. Used as base for all the other agents. public const string Basic = \"basic\" Field Value string Multipart Multipart prompt composed of a prefix and a suffix. public const string Multipart = \"multipart\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderActions.html",
    "title": "Class ResourceProviderActions | FoundationaLLM",
    "keywords": "Class ResourceProviderActions Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll The names of the actions implemented by most of the FoundationaLLM resource providers. public static class ResourceProviderActions Inheritance object ResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CheckName Check the validity of a resource name. public const string CheckName = \"checkname\" Field Value string Filter Filter resources. public const string Filter = \"filter\" Field Value string Purge Purges a soft-deleted resource. public const string Purge = \"purge\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderNames.html",
    "title": "Class ResourceProviderNames | FoundationaLLM",
    "keywords": "Class ResourceProviderNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the resource provider names. public static class ResourceProviderNames Inheritance object ResourceProviderNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All Contains all the resource provider names. public static readonly ImmutableList<string> All Field Value ImmutableList<string> FoundationaLLM_AIModel The name of the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_AIModel = \"FoundationaLLM.AIModel\" Field Value string FoundationaLLM_Agent The name of the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_Agent = \"FoundationaLLM.Agent\" Field Value string FoundationaLLM_Attachment The name of the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_Attachment = \"FoundationaLLM.Attachment\" Field Value string FoundationaLLM_Authorization The name of the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_Authorization = \"FoundationaLLM.Authorization\" Field Value string FoundationaLLM_AzureOpenAI The name of the FoundationaLLM.AzureOpenAI resource provider. public const string FoundationaLLM_AzureOpenAI = \"FoundationaLLM.AzureOpenAI\" Field Value string FoundationaLLM_Configuration The name of the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_Configuration = \"FoundationaLLM.Configuration\" Field Value string FoundationaLLM_DataSource The name of the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_DataSource = \"FoundationaLLM.DataSource\" Field Value string FoundationaLLM_Prompt The name of the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_Prompt = \"FoundationaLLM.Prompt\" Field Value string FoundationaLLM_Vectorization The name of the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_Vectorization = \"FoundationaLLM.Vectorization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderActions.html",
    "title": "Class VectorizationResourceProviderActions | FoundationaLLM",
    "keywords": "Class VectorizationResourceProviderActions Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll The names of the actions implemented by the Agent resource provider. public static class VectorizationResourceProviderActions Inheritance object VectorizationResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activate Activate a vectorization pipeline. public const string Activate = \"activate\" Field Value string Deactivate Deactivate a vectorization pipeline. public const string Deactivate = \"deactivate\" Field Value string Process Process a vectorization request. public const string Process = \"process\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderMetadata.html",
    "title": "Class VectorizationResourceProviderMetadata | FoundationaLLM",
    "keywords": "Class VectorizationResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Vectorization resource provider. public static class VectorizationResourceProviderMetadata Inheritance object VectorizationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceTypeNames.html",
    "title": "Class VectorizationResourceTypeNames | FoundationaLLM",
    "keywords": "Class VectorizationResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Vectorization resource provider. public static class VectorizationResourceTypeNames Inheritance object VectorizationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IndexingProfiles Indexing profiles. public const string IndexingProfiles = \"indexingProfiles\" Field Value string TextEmbeddingProfiles Text embedding profiles. public const string TextEmbeddingProfiles = \"textEmbeddingProfiles\" Field Value string TextPartitioningProfiles Text partitioning profiles. public const string TextPartitioningProfiles = \"textPartitioningProfiles\" Field Value string VectorizationPipelines Vectorization pipelines. public const string VectorizationPipelines = \"vectorizationPipelines\" Field Value string VectorizationRequests Vectorization requests. public const string VectorizationRequests = \"vectorizationRequests\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationSettingsNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationSettingsNames.html",
    "title": "Class VectorizationSettingsNames | FoundationaLLM",
    "keywords": "Class VectorizationSettingsNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the settings contained within vectorization profiles. public class VectorizationSettingsNames Inheritance object VectorizationSettingsNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields EmbeddingProfileModelName The settings name/key of the embedding model for an embedding profile. public const string EmbeddingProfileModelName = \"model_name\" Field Value string IndexingProfileApiEndpointConfigurationObjectId The settings/key name of the api endpoint configuration object id for an indexing profile. public const string IndexingProfileApiEndpointConfigurationObjectId = \"api_endpoint_configuration_object_id\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Constants.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants.ResourceProviders Classes AIModelResourceProviderMetadata Provides metadata for the FoundationaLLM.AIModel resource provider. AIModelResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.AIModel resource provider. AIModelTypes AgentResourceProviderMetadata Provides metadata for the FoundationaLLM.Agent resource provider. AgentResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Agent resource provider. AttachmentResourceProviderMetadata Provides metadata for the FoundationaLLM.Attachment resource provider. AttachmentResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Attachment resource provider. AttachmentTypes Names of the different attachment types. AuthorizationResourceProviderMetadata Provides metadata for the FoundationaLLM.Authorization resource provider. AuthorizationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Authorization resource provider. AzureOpenAIResourceProviderMetadata Provides metadata for the FoundationaLLM.AzureOpenAI resource provider. AzureOpenAIResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.AzureOpenAI resource provider. AzureOpenAITypes Contains constants for the types of resources managed by the FoundationaLLM.AzureOpenAI resource provider. ConfigurationResourceProviderMetadata Provides metadata for the FoundationaLLM.Configuration resource provider. ConfigurationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Configuration resource provider. ConfigurationTypes String constants for the types of configurations. DataSourceResourceProviderMetadata Provides metadata for the FoundationaLLM.DataSource resource provider. DataSourceResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.DataSource resource provider. DataSourceTypes String constants for the types of data sources. PromptResourceProviderMetadata Provides metadata for the FoundationaLLM.Prompt resource provider. PromptResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Prompt resource provider. PromptTypes Contains constants for the types of prompts. ResourceProviderActions The names of the actions implemented by most of the FoundationaLLM resource providers. ResourceProviderNames Contains constants of the resource provider names. VectorizationResourceProviderActions The names of the actions implemented by the Agent resource provider. VectorizationResourceProviderMetadata Provides metadata for the FoundationaLLM.Vectorization resource provider. VectorizationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Vectorization resource provider. VectorizationSettingsNames Contains constants of the names of the settings contained within vectorization profiles."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ServiceNames.html",
    "title": "Class ServiceNames | FoundationaLLM",
    "keywords": "Class ServiceNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains the names of the FoundationaLLM services. public static class ServiceNames Inheritance object ServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentHubAPI The name of the Agent Hub API service. public const string AgentHubAPI = \"AgentHubAPI\" Field Value string AuthorizationAPI The name of the Authorization API service. public const string AuthorizationAPI = \"AuthorizationAPI\" Field Value string CoreAPI The name of the Core API service. public const string CoreAPI = \"CoreAPI\" Field Value string CoreWorker The name of the Core Worker service. public const string CoreWorker = \"CoreWorker\" Field Value string DataSourceHubAPI The name of the Data Source Hub API service. public const string DataSourceHubAPI = \"DataSourceHubAPI\" Field Value string GatekeeperAPI The name of the Gatekeeper API service. public const string GatekeeperAPI = \"GatekeeperAPI\" Field Value string GatekeeperIntegrationAPI The name of the Gatekeeper Integration API service. public const string GatekeeperIntegrationAPI = \"GatekeeperIntegrationAPI\" Field Value string GatewayAPI The name of the Gateway API service. public const string GatewayAPI = \"GatewayAPI\" Field Value string GatewayAdapterAPI The name of the Gateway Adapter API service. public const string GatewayAdapterAPI = \"GatewayAdapterAPI\" Field Value string LangChainAPI The name of the Lang Chain API service. public const string LangChainAPI = \"LangChainAPI\" Field Value string ManagementAPI The name of the Management API service. public const string ManagementAPI = \"ManagementAPI\" Field Value string OrchestrationAPI The name of the Orchestration API service. public const string OrchestrationAPI = \"OrchestrationAPI\" Field Value string PromptHubAPI The name of the Prompt Hub API service. public const string PromptHubAPI = \"PromptHubAPI\" Field Value string SemanticKernelAPI The name of the Semantic Kernel API service. public const string SemanticKernelAPI = \"SemanticKernelAPI\" Field Value string StateAPI The name of the State API service. public const string StateAPI = \"StateAPI\" Field Value string VectorizationAPI The name of the Vectorization API service. public const string VectorizationAPI = \"VectorizationAPI\" Field Value string VectorizationWorker The name of the Vectorization Worker service. public const string VectorizationWorker = \"VectorizationWorker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ServiceStatuses.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ServiceStatuses.html",
    "title": "Class ServiceStatuses | FoundationaLLM",
    "keywords": "Class ServiceStatuses Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Service status constants. public static class ServiceStatuses Inheritance object ServiceStatuses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error The service is in an error state. public const string Error = \"Error\" Field Value string Initializing The service is in an initializing state. public const string Initializing = \"Initializing\" Field Value string Ready The service is operational and ready to accept requests. public const string Ready = \"Ready\" Field Value string Warning The service is in a warning state. public const string Warning = \"Warning\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.StorageNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.StorageNames.html",
    "title": "Class StorageNames | FoundationaLLM",
    "keywords": "Class StorageNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants for storage names used by the application. public static class StorageNames Inheritance object StorageNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OneLake_Storage_Account The name of the account when using Microsoft Fabric storage. ref: https://learn.microsoft.com/en-us/fabric/onelake/onelake-access-api#uri-syntax public const string OneLake_Storage_Account = \"onelake\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html",
    "title": "Class Swagger | FoundationaLLM",
    "keywords": "Class Swagger Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common Swagger strings used throughout the FoundationaLLM infrastructure. public static class Swagger Inheritance object Swagger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SecurityDefinitionName The OpenAPI security definition name. public const string SecurityDefinitionName = \"ApiKey\" Field Value string SecuritySchemeDescription The OpenAPI security scheme description. public const string SecuritySchemeDescription = \"API Key auth\" Field Value string SecuritySchemeName The OpenAPI security scheme name. public const string SecuritySchemeName = \"ApiKeyScheme\" Field Value string SecuritySchemeReferenceId The OpenAPI security scheme reference identifier. public const string SecuritySchemeReferenceId = \"ApiKey\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html",
    "title": "Class VectorizationSteps | FoundationaLLM",
    "keywords": "Class VectorizationSteps Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM vectorization step names. public class VectorizationSteps Inheritance object VectorizationSteps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Embed Embed text chunks into a latent vector space. public const string Embed = \"embed\" Field Value string Extract Extract the text from the content of the document. public const string Extract = \"extract\" Field Value string Index Persist vector embeddings into a vector index. public const string Index = \"index\" Field Value string Partition Partition the text into multiple chunks. public const string Partition = \"partition\" Field Value string Methods ValidateStepName(string) Validates a given vectorization step name. public static bool ValidateStepName(string stepName) Parameters stepName string The vectorization step name to be validated. Returns bool Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.html",
    "title": "Namespace FoundationaLLM.Common.Constants | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Constants Namespaces FoundationaLLM.Common.Constants.Agents FoundationaLLM.Common.Constants.Authentication FoundationaLLM.Common.Constants.Authorization FoundationaLLM.Common.Constants.Chat FoundationaLLM.Common.Constants.Configuration FoundationaLLM.Common.Constants.Instance FoundationaLLM.Common.Constants.OpenAI FoundationaLLM.Common.Constants.Orchestration FoundationaLLM.Common.Constants.ResourceProviders Classes AuthorizationClaims Claims that are used in the authorization process. CorsPolicyNames Names for CORS policies. CosmosDbContainers Core FoundationaLLM Cosmos DB container names. EventGridEventTypes Types of Azure Event Grid events. EventGridTopicSubscriptions Azure Event Grid topic subscription names. EventGridTopics Azure Event Grid topic names. EventSetEventNamespaces Namespace names for event set events. FileExtensions Name constants used to identify file extension. GatekeeperOptionNames Contains the names of the Agent Base Gatekeeper Options. HttpClientFactoryServiceKeyNames Name constants used for the key names of the dictionary generated by IHttpClientFactoryService implementations. HttpClientNames Name constants used to configure and retrieve API endpoint configurations. HttpHeaders Common HTTP headers used throughout the FoundationaLLM infrastructure. LLMOrchestrationServiceNames Constants for the LLM Orchestration Service Names. PrincipalTypes The types of security principals. ServiceNames Contains the names of the FoundationaLLM services. ServiceStatuses Service status constants. StorageNames Contains constants for storage names used by the application. Swagger Common Swagger strings used throughout the FoundationaLLM infrastructure. VectorizationSteps Core FoundationaLLM vectorization step names. Enums Participants Specifies the participants, such as a user and an assistant."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.AuthorizationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.AuthorizationException.html",
    "title": "Class AuthorizationException | FoundationaLLM",
    "keywords": "Class AuthorizationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by FoundationaLLM.Authoriztion resource provider. public class AuthorizationException : Exception, ISerializable Inheritance object Exception AuthorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationException() Initializes a new instance of the AuthorizationException class with a default message. public AuthorizationException() AuthorizationException(string?) Initializes a new instance of the AuthorizationException class with its message set to message. public AuthorizationException(string? message) Parameters message string A string that describes the error. AuthorizationException(string?, Exception?) Initializes a new instance of the AuthorizationException class with its message set to message. public AuthorizationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValidationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValidationException.html",
    "title": "Class ConfigurationValidationException | FoundationaLLM",
    "keywords": "Class ConfigurationValidationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an exception that occurs when configuration validation fails. public class ConfigurationValidationException : Exception, ISerializable Inheritance object Exception ConfigurationValidationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the ConfigurationValidationException class. Constructors ConfigurationValidationException(IEnumerable<string?>?, IEnumerable<string?>?, IEnumerable<string?>?) Represents an exception that occurs when configuration validation fails. public ConfigurationValidationException(IEnumerable<string?>? missingConfigurations, IEnumerable<string?>? missingKeyVaultSecrets, IEnumerable<string?>? missingEnvironmentVariables) Parameters missingConfigurations IEnumerable<string> Provide a list of missing or empty app configurations. missingKeyVaultSecrets IEnumerable<string> Provide a list of missing or empty Key Vault secrets. missingEnvironmentVariables IEnumerable<string> Provide a list of missing environment variables. Remarks Initializes a new instance of the ConfigurationValidationException class. Properties MissingConfigurations The list of keys for missing or empty configurations. public IEnumerable<string?>? MissingConfigurations { get; } Property Value IEnumerable<string> MissingEnvironmentVariables The list of missing environment variables. public IEnumerable<string?>? MissingEnvironmentVariables { get; } Property Value IEnumerable<string> MissingKeyVaultSecrets The list of missing or empty Key Vault secrets. public IEnumerable<string?>? MissingKeyVaultSecrets { get; } Property Value IEnumerable<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValueException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValueException.html",
    "title": "Class ConfigurationValueException | FoundationaLLM",
    "keywords": "Class ConfigurationValueException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with a configuration value. public class ConfigurationValueException : Exception, ISerializable Inheritance object Exception ConfigurationValueException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationValueException() Initializes a new instance of the ConfigurationValueException class with a default message. public ConfigurationValueException() ConfigurationValueException(string?) Initializes a new instance of the ConfigurationValueException class with its message set to message. public ConfigurationValueException(string? message) Parameters message string A string that describes the error. ConfigurationValueException(string?, Exception?) Initializes a new instance of the ConfigurationValueException class with its message set to message. public ConfigurationValueException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ContentException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ContentException.html",
    "title": "Class ContentException | FoundationaLLM",
    "keywords": "Class ContentException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class ContentException : Exception, ISerializable Inheritance object Exception ContentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentException() Initializes a new instance of the ContentException class with a default message. public ContentException() ContentException(string?) Initializes a new instance of the ContentException class with its message set to message. public ContentException(string? message) Parameters message string A string that describes the error. ContentException(string?, Exception?) Initializes a new instance of the ContentException class with its message set to message. public ContentException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ContentIdentifierException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ContentIdentifierException.html",
    "title": "Class ContentIdentifierException | FoundationaLLM",
    "keywords": "Class ContentIdentifierException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with a configuration value. public class ContentIdentifierException : Exception, ISerializable Inheritance object Exception ContentIdentifierException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentIdentifierException() Initializes a new instance of the ContentIdentifierException class with a default message. public ContentIdentifierException() ContentIdentifierException(string?) Initializes a new instance of the ContentIdentifierException class with its message set to message. public ContentIdentifierException(string? message) Parameters message string A string that describes the error. ContentIdentifierException(string?, Exception?) Initializes a new instance of the ContentIdentifierException class with its message set to message. public ContentIdentifierException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.EventException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.EventException.html",
    "title": "Class EventException | FoundationaLLM",
    "keywords": "Class EventException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the eventing system. public class EventException : Exception, ISerializable Inheritance object Exception EventException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventException() Initializes a new instance of the EventException class with a default message. public EventException() EventException(string?) Initializes a new instance of the EventException class with its message set to message. public EventException(string? message) Parameters message string A string that describes the error. EventException(string?, Exception?) Initializes a new instance of the EventException class with its message set to message. public EventException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.GatewayException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.GatewayException.html",
    "title": "Class GatewayException | FoundationaLLM",
    "keywords": "Class GatewayException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the FoundationaLLM Gateway. public class GatewayException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException GatewayException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayException() Initializes a new instance of the GatewayException class with a default message. public GatewayException() GatewayException(string?, Exception?, int) Initializes a new instance of the GatewayException class with its message set to message. public GatewayException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. GatewayException(string?, int) Initializes a new instance of the GatewayException class with its message set to message. public GatewayException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.HttpStatusCodeException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.HttpStatusCodeException.html",
    "title": "Class HttpStatusCodeException | FoundationaLLM",
    "keywords": "Class HttpStatusCodeException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an exception that maps to a HTTP status code. public class HttpStatusCodeException : Exception, ISerializable Inheritance object Exception HttpStatusCodeException Implements ISerializable Derived GatewayException ResourceProviderException SemanticKernelException StateException Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors HttpStatusCodeException() Initializes a new instance of the HttpStatusCodeException class with a default message. public HttpStatusCodeException() HttpStatusCodeException(string?, Exception?, int) Initializes a new instance of the HttpStatusCodeException class with its message set to message. public HttpStatusCodeException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. HttpStatusCodeException(string?, int) Initializes a new instance of the HttpStatusCodeException class with its message set to message. public HttpStatusCodeException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception. Properties StatusCode Provides the HTTP status code associated with the exception. public int StatusCode { get; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.OrchestrationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.OrchestrationException.html",
    "title": "Class OrchestrationException | FoundationaLLM",
    "keywords": "Class OrchestrationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class OrchestrationException : Exception, ISerializable Inheritance object Exception OrchestrationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationException() Initializes a new instance of the OrchestrationException class with a default message. public OrchestrationException() OrchestrationException(string?) Initializes a new instance of the OrchestrationException class with its message set to message. public OrchestrationException(string? message) Parameters message string A string that describes the error. OrchestrationException(string?, Exception?) Initializes a new instance of the OrchestrationException class with its message set to message. public OrchestrationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ResourceProviderException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ResourceProviderException.html",
    "title": "Class ResourceProviderException | FoundationaLLM",
    "keywords": "Class ResourceProviderException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by a resource provider. public class ResourceProviderException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException ResourceProviderException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderException() Initializes a new instance of the ResourceProviderException class with a default message. public ResourceProviderException() ResourceProviderException(string?, Exception?, int) Initializes a new instance of the ResourceProviderException class with its message set to message. public ResourceProviderException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. ResourceProviderException(string?, int) Initializes a new instance of the ResourceProviderException class with its message set to message. public ResourceProviderException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.StorageException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.StorageException.html",
    "title": "Class StorageException | FoundationaLLM",
    "keywords": "Class StorageException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class StorageException : Exception, ISerializable Inheritance object Exception StorageException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageException() Initializes a new instance of the StorageException class with a default message. public StorageException() StorageException(string?) Initializes a new instance of the StorageException class with its message set to message. public StorageException(string? message) Parameters message string A string that describes the error. StorageException(string?, Exception?) Initializes a new instance of the StorageException class with its message set to message. public StorageException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.TextProcessingException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.TextProcessingException.html",
    "title": "Class TextProcessingException | FoundationaLLM",
    "keywords": "Class TextProcessingException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error in the tokenization process. public class TextProcessingException : Exception, ISerializable Inheritance object Exception TextProcessingException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextProcessingException() Initializes a new instance of the TextProcessingException class with a default message. public TextProcessingException() TextProcessingException(string?) Initializes a new instance of the TextProcessingException class with its message set to message. public TextProcessingException(string? message) Parameters message string A string that describes the error. TextProcessingException(string?, Exception?) Initializes a new instance of the TextProcessingException class with its message set to message. public TextProcessingException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.VectorizationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.VectorizationException.html",
    "title": "Class VectorizationException | FoundationaLLM",
    "keywords": "Class VectorizationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents errors that occur during the vectorization process. public class VectorizationException : Exception, ISerializable Inheritance object Exception VectorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationException() Initializes a new instance of the VectorizationException class with a default message. public VectorizationException() VectorizationException(string?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message) Parameters message string A string that describes the error. VectorizationException(string?, Exception?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.html",
    "title": "Namespace FoundationaLLM.Common.Exceptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Exceptions Classes AuthorizationException Represents an error generated by FoundationaLLM.Authoriztion resource provider. ConfigurationValidationException Represents an exception that occurs when configuration validation fails. ConfigurationValueException Represents an error with a configuration value. ContentException Represents an error with accessing content. ContentIdentifierException Represents an error with a configuration value. EventException Represents an error generated by the eventing system. GatewayException Represents an error generated by the FoundationaLLM Gateway. HttpStatusCodeException Represents an exception that maps to a HTTP status code. OrchestrationException Represents an error with accessing content. ResourceProviderException Represents an error generated by a resource provider. StorageException Represents an error with accessing content. TextProcessingException Represents an error in the tokenization process. VectorizationException Represents errors that occur during the vectorization process."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.AuthorizationServiceExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.AuthorizationServiceExtensions.html",
    "title": "Class AuthorizationServiceExtensions | FoundationaLLM",
    "keywords": "Class AuthorizationServiceExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the IAuthorizationService interface with helper methods. public static class AuthorizationServiceExtensions Inheritance object AuthorizationServiceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterResourcesByAuthorizableAction<T>(IAuthorizationService, string, UnifiedUserIdentity, List<T>, string) Filters the list of resources based on the authorizable action. public static Task<List<ResourceProviderGetResult<T>>> FilterResourcesByAuthorizableAction<T>(this IAuthorizationService authorizationService, string instanceId, UnifiedUserIdentity userIdentity, List<T> resources, string authorizableAction) where T : ResourceBase Parameters authorizationService IAuthorizationService The IAuthorizationService service. instanceId string The FoundationaLLM instance identifier. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. resources List<T> The list of all resources. authorizableAction string The authorizable action to be checked. Returns Task<List<ResourceProviderGetResult<T>>> A list of resources on which the user identity is allowed to perform the authorizable action. Type Parameters T The object type of the resource being retrieved."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.BlobStorageExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.BlobStorageExtensions.html",
    "title": "Class BlobStorageExtensions | FoundationaLLM",
    "keywords": "Class BlobStorageExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends Azure Blob Storage classes with helper methods. public static class BlobStorageExtensions Inheritance object BlobStorageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AcquireAsyncWithWait(BlobLeaseClient, TimeSpan, int, int, CancellationToken) Attempts to acquire a lease on a blob item using a retry pattern. public static Task<BlobLease?> AcquireAsyncWithWait(this BlobLeaseClient blobLeaseClient, TimeSpan duration, int maxRetryCount = 5, int retryWaitSeconds = 5, CancellationToken cancellationToken = default) Parameters blobLeaseClient BlobLeaseClient The BlobLeaseClient client used to acquire the lease. duration TimeSpan The TimeSpan specifying the intended duration of the lease. maxRetryCount int The maximum number of attempts to acquire the lease. retryWaitSeconds int The number of seconds to wait between subsequent attempts to acquire the lease. cancellationToken CancellationToken The CancellationToken that signals the cancellation of the procedure. Returns Task<BlobLease> The BlobLease acquired or null if the acquire operation was not completed."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.DictionaryExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | FoundationaLLM",
    "keywords": "Class DictionaryExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Provides extension methods for Dictionary<TKey, TValue>. public static class DictionaryExtensions Inheritance object DictionaryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToObject<T>(Dictionary<string, object>, Dictionary<string, object>?) Converts a dictionary to an object of type T with optional overrides. public static T ToObject<T>(this Dictionary<string, object> source, Dictionary<string, object>? overrides = null) where T : new() Parameters source Dictionary<string, object> The source properties for the returned object. overrides Dictionary<string, object> Optional overrides to apply to the returned object parameters. Returns T Type Parameters T The type of the object to which you want to convert from a source dictionary."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.HttpClientExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.HttpClientExtensions.html",
    "title": "Class HttpClientExtensions | FoundationaLLM",
    "keywords": "Class HttpClientExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Adds extension methods to the HttpClient class. public static class HttpClientExtensions Inheritance object HttpClientExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetBearerToken(HttpClient, string) Sets the bearer token for the HttpClient if the passed in token is not null or empty. public static void SetBearerToken(this HttpClient httpClient, string token) Parameters httpClient HttpClient The HttpClient to extend. token string An auth token."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.ResourceProviderServiceExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.ResourceProviderServiceExtensions.html",
    "title": "Class ResourceProviderServiceExtensions | FoundationaLLM",
    "keywords": "Class ResourceProviderServiceExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the IResourceProviderService interface with helper methods. public static class ResourceProviderServiceExtensions Inheritance object ResourceProviderServiceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) Checks a resource name for availability. public static Task<ResourceNameCheckResult> CheckResourceName(this IResourceProviderService resourceProviderService, string instanceId, string resourceName, string resourceTypeName, UnifiedUserIdentity userIdentity) Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. instanceId string The FoundationaLLM instance ID. resourceName string The resource name being checked. resourceTypeName string The name of the resource type. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<ResourceNameCheckResult> A ResourceNameCheckResult object with the result of the name check. CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) Creates or updates a resource. public static Task<TResult> CreateOrUpdateResource<T, TResult>(this IResourceProviderService resourceProviderService, string instanceId, T resource, string resourceTypeName, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. instanceId string The FoundationaLLM instance ID. resource T The resource object. resourceTypeName string The name of the resource type. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> A TResult object with the result of the operation. Type Parameters T The object type of the resource being created or updated. TResult The object type of the response returned by the operation Exceptions ResourceProviderException GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) Gets a list of resources with RBAC information from the resource provider service. public static Task<List<ResourceProviderGetResult<T>>> GetResourcesWithRBAC<T>(this IResourceProviderService resourceProviderService, string instanceId, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. instanceId string The FoundationaLLM instance ID. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<List<ResourceProviderGetResult<T>>> A list of resource objects of type T. Type Parameters T The object type of the resources being retrieved. Exceptions ResourceProviderException GetResources<T>(IResourceProviderService, UnifiedUserIdentity) Gets a list of resources from the resource provider service. public static Task<List<T>> GetResources<T>(this IResourceProviderService resourceProviderService, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<List<T>> A list of resource objects of type T. Type Parameters T The object type of the resources being retrieved. Exceptions ResourceProviderException HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) Gets a resource from the resource provider service. public static Task<T> HandleGet<T>(this IResourceProviderService resourceProviderService, string objectId, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. objectId string The resource object identifier. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<T> A resource object of type T. Type Parameters T The object type of the resource being retrieved. HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) Gets a resource from the resource provider service. public static Task<T> HandleGet<T>(this IResourceProviderService resourceProviderService, string instanceId, string resourceName, string resourceTypeName, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. instanceId string The FoundationaLLM instance ID. resourceName string The resource name being checked. resourceTypeName string The name of the resource type. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<T> A resource object of type T. Type Parameters T The object type of the resource being retrieved. ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) Checks if a resource exists. public static Task<bool> ResourceExists(this IResourceProviderService resourceProviderService, string instanceId, string resourceName, string resourceTypeName, UnifiedUserIdentity userIdentity) Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. instanceId string The FoundationaLLM instance ID. resourceName string The resource name being checked. resourceTypeName string The name of the resource type. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<bool> True if the resource exists, False otherwise. Remarks If a resource was logically deleted but not purged, this method will return True, indicating the existence of the resource. WaitForInitialization(IResourceProviderService) Waits for the resource provider service to be initialized. public static Task WaitForInitialization(this IResourceProviderService resourceProviderService) Parameters resourceProviderService IResourceProviderService The IResourceProviderService providing the resource provider services. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.StringExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | FoundationaLLM",
    "keywords": "Class StringExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the string interface with helper methods. public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NormalizeUserPrincipalName(string) Converts a UPN (User Principal Name) to a string that is better suited to be used as an identifier. public static string NormalizeUserPrincipalName(this string upn) Parameters upn string The original UPN (User Principal Name). Returns string A string containing the normalized UPN (User Principal Name)."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html",
    "title": "Class SwaggerGenOptionsExtensions | FoundationaLLM",
    "keywords": "Class SwaggerGenOptionsExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs. public static class SwaggerGenOptionsExtensions Inheritance object SwaggerGenOptionsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAPIKeyAuth(SwaggerGenOptions) Extension method that configures API Key auth for the APIs that use it. public static void AddAPIKeyAuth(this SwaggerGenOptions options) Parameters options SwaggerGenOptions The base options."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.UrlExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.UrlExtensions.html",
    "title": "Class UrlExtensions | FoundationaLLM",
    "keywords": "Class UrlExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends string with helper methods. public static class UrlExtensions Inheritance object UrlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromKnownNeutralUrl(string) Translates a URL into its neutral form. public static string FromKnownNeutralUrl(this string url) Parameters url string Returns string"
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.html",
    "title": "Namespace FoundationaLLM.Common.Extensions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Extensions Classes AuthorizationServiceExtensions Extends the IAuthorizationService interface with helper methods. BlobStorageExtensions Extends Azure Blob Storage classes with helper methods. DictionaryExtensions Provides extension methods for Dictionary<TKey, TValue>. HttpClientExtensions Adds extension methods to the HttpClient class. ResourceProviderServiceExtensions Extends the IResourceProviderService interface with helper methods. StringExtensions Extends the string interface with helper methods. SwaggerGenOptionsExtensions Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs. UrlExtensions Extends string with helper methods."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html",
    "title": "Interface IAPIKeyValidationService | FoundationaLLM",
    "keywords": "Interface IAPIKeyValidationService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Common interface for X-API-Key header validation. public interface IAPIKeyValidationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods IsValid(string) Checks if an API key is valid or not. bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean representing the validity of the API key parameter."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationService.html",
    "title": "Interface IAuthorizationService | FoundationaLLM",
    "keywords": "Interface IAuthorizationService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines methods exposed by the Authorization service. public interface IAuthorizationService Extension Methods AuthorizationServiceExtensions.FilterResourcesByAuthorizableAction<T>(IAuthorizationService, string, UnifiedUserIdentity, List<T>, string) ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetRoleAssignments(string, RoleAssignmentQueryParameters, UnifiedUserIdentity) Returns a list of role assignments for the specified instance and resource. Task<List<object>> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. userIdentity UnifiedUserIdentity The user identity. Returns Task<List<object>> The list of all role assignments for the specified instance. ProcessAuthorizationRequest(string, string, List<string>, UnifiedUserIdentity) Processes an action authorization request. Task<ActionAuthorizationResult> ProcessAuthorizationRequest(string instanceId, string action, List<string> resourcePaths, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. action string The action identifier. resourcePaths List<string> The resource paths. userIdentity UnifiedUserIdentity The user identity. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing. ProcessRoleAssignmentRequest(string, RoleAssignmentRequest, UnifiedUserIdentity) Processes a role assignment request. Task<RoleAssignmentResult> ProcessRoleAssignmentRequest(string instanceId, RoleAssignmentRequest roleAssignmentRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentRequest The role assignment request. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentResult> ProcessRoleAssignmentsWithActionsRequest(string, RoleAssignmentsWithActionsRequest, UnifiedUserIdentity) Returns a list of role names and a list of allowed actions for the specified scope. Task<Dictionary<string, RoleAssignmentsWithActionsResult>> ProcessRoleAssignmentsWithActionsRequest(string instanceId, RoleAssignmentsWithActionsRequest request, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. request RoleAssignmentsWithActionsRequest The get roles with actions request. userIdentity UnifiedUserIdentity The user identity. Returns Task<Dictionary<string, RoleAssignmentsWithActionsResult>> The get roles and actions result. RevokeRoleAssignment(string, string, UnifiedUserIdentity) Revokes a role assignment for a specified instance. Task<RoleAssignmentResult> RevokeRoleAssignment(string instanceId, string roleAssignment, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentResult> The role assignment result."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureAIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureAIService.html",
    "title": "Interface IAzureAIService | FoundationaLLM",
    "keywords": "Interface IAzureAIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for the Azure AI service. public interface IAzureAIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateDataSet(InputsMapping, string) Creates a new data set. Task<string> CreateDataSet(InputsMapping data, string blobName) Parameters data InputsMapping blobName string Returns Task<string> CreateDataSetVersion(string, string, int) Creates a data set version request. Task<DataVersionResponse> CreateDataSetVersion(string dataSetName, string dataSetPath, int version = 1) Parameters dataSetName string dataSetPath string version int Returns Task<DataVersionResponse> DownloadResults(Guid) Downloads the results of a job. Task<string> DownloadResults(Guid jobId) Parameters jobId Guid Returns Task<string> GetJobStatus(Guid) Retrieves the status of a job. Task<string> GetJobStatus(Guid jobId) Parameters jobId Guid Returns Task<string> GetResultsByIndex(Guid, int, int) Retrieves the results of a job by index. Task<string> GetResultsByIndex(Guid jobId, int startIndex = 0, int endIndex = 149) Parameters jobId Guid startIndex int endIndex int Returns Task<string> SubmitJob(string, string, int, string) Submits a job to the Azure AI service. Task<Guid> SubmitJob(string displayName, string dataSetName, int dataSetVersion, string metrics) Parameters displayName string dataSetName string dataSetVersion int metrics string Returns Task<Guid>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureResourceManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureResourceManagerService.html",
    "title": "Interface IAzureResourceManagerService | FoundationaLLM",
    "keywords": "Interface IAzureResourceManagerService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public interface IAzureResourceManagerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Creates a new Azure Event Grid namespace topic subscription. Task<bool> CreateEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be created. topicSubscriptionName string The name of the subscription to be created. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task<bool> True if the subscription was successfully created, false otherwise. DeleteEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Deletes an Azure Event Grid namespace topic subscription. Task DeleteEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be deleted. topicSubscriptionName string The name of the subscription to be deleted. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task GetOpenAIAccountProperties(string) Retrieves the properties of an Azure OpenAI account. Task<AzureOpenAIAccount> GetOpenAIAccountProperties(string openAIAccountResourceId) Parameters openAIAccountResourceId string The Azure resource identifier of the Azure OpenAI account. Returns Task<AzureOpenAIAccount> An AzureOpenAIAccount object with the properties of the account, including model deployments."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheControlAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheControlAPIService.html",
    "title": "Interface ICacheControlAPIService | FoundationaLLM",
    "keywords": "Interface ICacheControlAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Contains base functionality for calling the underlying API service. public interface ICacheControlAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods RefreshCache(string) Refreshes the named cache. Task<APICacheRefreshResult> RefreshCache(string name) Parameters name string The name of the cache item to refresh. Returns Task<APICacheRefreshResult> RefreshConfigurationCache() Refreshes the configuration cache. Task<APICacheRefreshResult> RefreshConfigurationCache() Returns Task<APICacheRefreshResult>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheService.html",
    "title": "Interface ICacheService | FoundationaLLM",
    "keywords": "Interface ICacheService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Caches objects. public interface ICacheService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetItemsCount(string) Gets the number of items in the cache that belong to a specified category. int GetItemsCount(string categoryName) Parameters categoryName string The name of the category. Returns int Get<T>(CacheKey) Gets an object from the cache. T? Get<T>(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Returns T The object identified by the key. Type Parameters T The type of object retrieved from the cache. Get<T>(CacheKey, Func<Task<T>>, bool, TimeSpan?) Gets an object from the cache. If the object is not found in the cache, will attempt to retrieve it using a specified retriever. Task<T?> Get<T>(CacheKey key, Func<Task<T>> valueRetriever, bool allowNull, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. valueRetriever Func<Task<T>> The retriever used to get the value to populate the cache. allowNull bool Indicates whether null values returned by the value retriever should be cached or not. expirationTime TimeSpan? The TimeSpan time to live. Returns Task<T> The object identified by the key. Type Parameters T The type of object retrieved from the cache. Remove(CacheKey) Removes an object from the cache. void Remove(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. RemoveByCategory(CacheKey) Removes all objects belonging to a category from the cache. void RemoveByCategory(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Set<T>(CacheKey, T?, TimeSpan?) Adds an object to the cache. void Set<T>(CacheKey key, T? value, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. value T The object to be added to the cache. expirationTime TimeSpan? The TimeSpan time to live. Type Parameters T The type of object retrieved from the cache."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICallContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICallContext.html",
    "title": "Interface ICallContext | FoundationaLLM",
    "keywords": "Interface ICallContext Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Stores context information for the current HTTP request. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. public interface ICallContext Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity InstanceId The unique identifier of the current FoundationaLLM deployment instance. string? InstanceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPIService.html",
    "title": "Interface IDownstreamAPIService | FoundationaLLM",
    "keywords": "Interface IDownstreamAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for calling a downstream API. public interface IDownstreamAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIName The name of the downstream API. string APIName { get; } Property Value string Methods GetCompletion(string, CompletionRequest) Gets a completion from the downstream API. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a completion response GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IEventService.html",
    "title": "Interface IEventService | FoundationaLLM",
    "keywords": "Interface IEventService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with an eventing engine. public interface IEventService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExecuteAsync(CancellationToken) Executes the event service until cancellation is signaled. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartAsync(CancellationToken) Starts the event service, allowing it to initialize. Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the event service, allowing it to cleanup. Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SubscribeToEventSetEvent(string, EventSetEventDelegate) Adds an event set event delgate to the list of event handlers for a specified event set namespace. void SubscribeToEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling. UnsubscribeFromEventSetEvent(string, EventSetEventDelegate) Removes an event set event delegate from the list of event handlers for a specified event set namespace. void UnsubscribeFromEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html",
    "title": "Interface IHttpClientFactoryService | FoundationaLLM",
    "keywords": "Interface IHttpClientFactoryService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. public interface IHttpClientFactoryService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateClient(APIEndpointConfiguration, UnifiedUserIdentity?) Creates a HttpClient instance based on the endpoint configuration. Task<HttpClient> CreateClient(APIEndpointConfiguration endpointConfiguration, UnifiedUserIdentity? userIdentity) Parameters endpointConfiguration APIEndpointConfiguration The APIEndpointConfiguration resource used to create the client. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClient(string, UnifiedUserIdentity) Creates a HttpClient instance based on the client name. The client name must be registered in the IHttpClientFactory configuration. Task<HttpClient> CreateClient(string clientName, UnifiedUserIdentity userIdentity) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClient<T>(string, UnifiedUserIdentity, Func<Dictionary<string, object>, T>) Creates a T client instance based on the client name and a client builder delegate. Task<T> CreateClient<T>(string clientName, UnifiedUserIdentity userIdentity, Func<Dictionary<string, object>, T> clientBuilder) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. clientBuilder Func<Dictionary<string, object>, T> A delegate that creates the T client instance based on a dictionary of values. The keys available in the dictionary are defined in HttpClientFactoryServiceKeyNames. Returns Task<T> A T client instance. Type Parameters T The type of the client to create. CreateUnregisteredClient(TimeSpan?) Creates a new unregistered HttpClient instance with a timeout. HttpClient CreateUnregisteredClient(TimeSpan? timeout = null) Parameters timeout TimeSpan? The timeout for the HttpClient. If not specified, the default timeout in seconds is applied. For an infinite waiting period, use InfiniteTimeSpan Returns HttpClient An HttpClient instance."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IHubAPIService.html",
    "title": "Interface IHubAPIService | FoundationaLLM",
    "keywords": "Interface IHubAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Calls endpoints available on all hub API services. public interface IHubAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Status() Gets the status of the Hub API service. Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IIdentityManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IIdentityManagementService.html",
    "title": "Interface IIdentityManagementService | FoundationaLLM",
    "keywords": "Interface IIdentityManagementService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides identity management services. public interface IIdentityManagementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetGroupsForPrincipal(string) Retrieves the group identifiers list of the groups where the specified user principal is a member. Task<List<string>> GetGroupsForPrincipal(string userIdentifier) Parameters userIdentifier string The user identifier for which group membership is retrieved. Can be either an object id or a user principal name (UPN). Returns Task<List<string>> GetObjectsByIds(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. Task<List<ObjectQueryResult>> GetObjectsByIds(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<List<ObjectQueryResult>> GetUserById(string) Retrieves a user account by its identifier. Task<ObjectQueryResult> GetUserById(string userId) Parameters userId string The user identifier used to retrieve a single user account. Returns Task<ObjectQueryResult> GetUserGroupById(string) Retrieves a group account by its identifier. Task<ObjectQueryResult> GetUserGroupById(string groupId) Parameters groupId string The group account identifier used to retrieve a single group account. Returns Task<ObjectQueryResult> GetUserGroups(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. Task<PagedResponse<ObjectQueryResult>> GetUserGroups(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving group accounts. Returns Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving users. Returns Task<PagedResponse<ObjectQueryResult>>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IIndexingService.html",
    "title": "Interface IIndexingService | FoundationaLLM",
    "keywords": "Interface IIndexingService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides indexing capabilities for embedding vectors. public interface IIndexingService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IManagementProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IManagementProviderService.html",
    "title": "Interface IManagementProviderService | FoundationaLLM",
    "keywords": "Interface IManagementProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides core services required by the Management API. public interface IManagementProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HandleDeleteAsync(string, UnifiedUserIdentity) Handles a HTTP DELETE request for a specified resource path. Task HandleDeleteAsync(string resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task HandleGetAsync(string, UnifiedUserIdentity) Handles a HTTP GET request for a specified resource path. Task<object> HandleGetAsync(string resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request. HandlePostAsync(string, string, UnifiedUserIdentity) Handles a HTTP POST request for a specified resource path. Task<object> HandlePostAsync(string resourcePath, string requestPayload, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. requestPayload string The request payload. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderService.html",
    "title": "Interface IResourceProviderService | FoundationaLLM",
    "keywords": "Interface IResourceProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides the core services implemented by all resource providers. public interface IResourceProviderService : IManagementProviderService Inherited Members IManagementProviderService.HandleGetAsync(string, UnifiedUserIdentity) IManagementProviderService.HandlePostAsync(string, string, UnifiedUserIdentity) IManagementProviderService.HandleDeleteAsync(string, UnifiedUserIdentity) Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor> IsInitialized Indicates whether the resource provider is initialized or not. bool IsInitialized { get; } Property Value bool Name The name of the resource provider. string Name { get; } Property Value string StorageAccountName The name of the storage account used by the resource provider. string StorageAccountName { get; } Property Value string StorageContainerName The name of the storage account container used by the resource provider. string StorageContainerName { get; } Property Value string Methods GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions?) Gets a resource based on its logical path. Task<T> GetResource<T>(string resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath string The logical path of the resource. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. Initialize() Initializes the resource provider. Task Initialize() Returns Task UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) Creates or updates a resource based on its logical path. Task<TResult> UpsertResourceAsync<T, TResult>(string resourcePath, T resource, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult Parameters resourcePath string The logical path of the resource. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> The object id of the resource. Type Parameters T The type of the resource. TResult The type of the result returned"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceValidatorFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceValidatorFactory.html",
    "title": "Interface IResourceValidatorFactory | FoundationaLLM",
    "keywords": "Interface IResourceValidatorFactory Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides methods for getting validators. public interface IResourceValidatorFactory Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetValidator(Type) Gets a validator for the Type parameter, providing a non-generic option to resolve validators at runtime. object? GetValidator(Type type) Parameters type Type The type of object being validated. Returns object GetValidator<T>() Gets a validator for the specified type. IValidator<T>? GetValidator<T>() where T : class Returns IValidator<T> Type Parameters T The type of object being validated."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html",
    "title": "Interface IStorageService | FoundationaLLM",
    "keywords": "Interface IStorageService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with a storage. public interface IStorageService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceName The optional instance name of the storage service. string? InstanceName { get; set; } Property Value string StorageAccountName The name of the storage account. string StorageAccountName { get; } Property Value string Methods DeleteFileAsync(string, string, CancellationToken) Deletes a file from storage. Task DeleteFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to delete. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> GetFilePathsAsync(string, string?, bool, CancellationToken) Retrieves a list file paths in the specific directory. Task<List<string>> GetFilePathsAsync(string containerName, string? directoryPath = null, bool recursive = true, CancellationToken cancellationToken = default) Parameters containerName string Name of the container, file system or Workspace name. directoryPath string Directory to list file contents recursive bool Recurse through child folders cancellationToken CancellationToken Determines if a request should be cancelled. Returns Task<List<string>> List of individual file paths located in the container. ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITextEmbeddingService.html",
    "title": "Interface ITextEmbeddingService | FoundationaLLM",
    "keywords": "Interface ITextEmbeddingService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides text embedding capabilities. public interface ITextEmbeddingService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetEmbeddingsAsync(IList<TextChunk>, string, bool) Initializes the text embedding operation. Depending on the implementation, this can be an atomic operation or a long-running one. Task<TextEmbeddingResult> GetEmbeddingsAsync(IList<TextChunk> textChunks, string deploymentName, bool Prioritized) Parameters textChunks IList<TextChunk> The list of text chunks which need to be embedded. deploymentName string The name of the model deployment to use for embedding. Prioritized bool Indicates whether the request should be prioritized. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation. GetEmbeddingsAsync(string) Retrieves the result of a long-running text embedding operation. Task<TextEmbeddingResult> GetEmbeddingsAsync(string operationId) Parameters operationId string The unique identifier of the long-running operation. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITextSplitterService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITextSplitterService.html",
    "title": "Interface ITextSplitterService | FoundationaLLM",
    "keywords": "Interface ITextSplitterService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Represents a text splitter. public interface ITextSplitterService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods SplitPlainText(string) Splits plain text into multiple chunks. List<TextChunk> SplitPlainText(string text) Parameters text string The plain text to split. Returns List<TextChunk> A list of TextChunk items containing the text chunks and their sizes in tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITokenizerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITokenizerService.html",
    "title": "Interface ITokenizerService | FoundationaLLM",
    "keywords": "Interface ITokenizerService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Represents a text tokenizer. public interface ITokenizerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Decode(int[], string) Decode an array of integer token ids. string Decode(int[] tokens, string encoderName) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string) Encode a string with a set of allowed special tokens that are not broken apart. List<int> Encode(string text, string encoderName) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html",
    "title": "Interface IUserClaimsProviderService | FoundationaLLM",
    "keywords": "Interface IUserClaimsProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object. public interface IUserClaimsProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetSecurityGroupIds(ClaimsPrincipal?) Returns a list of security group identifiers from the provided ClaimsPrincipal. List<string>? GetSecurityGroupIds(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns List<string> GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity IsServicePrincipal(ClaimsPrincipal) Inidicates whether the specified principal is a service principal or not. bool IsServicePrincipal(ClaimsPrincipal userPrincipal) Parameters userPrincipal ClaimsPrincipal The ClaimsPrincipal object providing details about the security principal. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.html",
    "title": "Namespace FoundationaLLM.Common.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Interfaces Interfaces IAPIKeyValidationService Common interface for X-API-Key header validation. IAuthorizationService Defines methods exposed by the Authorization service. IAzureAIService Interface for the Azure AI service. IAzureResourceManagerService Provides services to interact with the Azure Resource Manager (ARM) infrastructure. ICacheControlAPIService Contains base functionality for calling the underlying API service. ICacheService Caches objects. ICallContext Stores context information for the current HTTP request. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. IDownstreamAPIService Interface for calling a downstream API. IEventService Provides services to interact with an eventing engine. IHttpClientFactoryService Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. IHubAPIService Calls endpoints available on all hub API services. IIdentityManagementService Provides identity management services. IIndexingService Provides indexing capabilities for embedding vectors. IManagementProviderService Provides core services required by the Management API. IResourceProviderService Provides the core services implemented by all resource providers. IResourceValidatorFactory Provides methods for getting validators. IStorageService Provides services to interact with a storage. ITextEmbeddingService Provides text embedding capabilities. ITextSplitterService Represents a text splitter. ITokenizerService Represents a text tokenizer. IUserClaimsProviderService Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object."
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html",
    "title": "Class CallContextMiddleware | FoundationaLLM",
    "keywords": "Class CallContextMiddleware Namespace FoundationaLLM.Common.Middleware Assembly FoundationaLLM.Common.dll Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method. public class CallContextMiddleware Inheritance object CallContextMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CallContextMiddleware(RequestDelegate) Initializes a new instance of the CallContextMiddleware class. public CallContextMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, IUserClaimsProviderService, IIdentityManagementService, ICallContext, IOptions<InstanceSettings>) Executes the middleware. public Task InvokeAsync(HttpContext context, IUserClaimsProviderService claimsProviderService, IIdentityManagementService identityManagementService, ICallContext callContext, IOptions<InstanceSettings> instanceSettings) Parameters context HttpContext The current HTTP request context. claimsProviderService IUserClaimsProviderService Resolves user claims to a UnifiedUserIdentity object. identityManagementService IIdentityManagementService Provides group membership services for user principals. callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. instanceSettings IOptions<InstanceSettings> Contains the FoundationaLLM instance configuration settings. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.html",
    "title": "Namespace FoundationaLLM.Common.Middleware | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Middleware Classes CallContextMiddleware Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryParameters.html",
    "title": "Class ObjectQueryParameters | FoundationaLLM",
    "keywords": "Class ObjectQueryParameters Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll Parameters for querying user and group accounts. public class ObjectQueryParameters Inheritance object ObjectQueryParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Ids The IDs of the account objects to query. [JsonPropertyName(\"ids\")] public required string[] Ids { get; set; } Property Value string[] Name Account name. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string PageNumber The current page number. [JsonPropertyName(\"page_number\")] public int? PageNumber { get; set; } Property Value int? PageSize The number of items to return in each page. [JsonPropertyName(\"page_size\")] public int? PageSize { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryResult.html",
    "title": "Class ObjectQueryResult | FoundationaLLM",
    "keywords": "Class ObjectQueryResult Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll The result of an object query. public class ObjectQueryResult Inheritance object ObjectQueryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DisplayName The display name of the object. [JsonPropertyName(\"display_name\")] public string? DisplayName { get; set; } Property Value string Email User account email address. [JsonPropertyName(\"email\")] public string? Email { get; set; } Property Value string Id The unique identifier of the object. [JsonPropertyName(\"id\")] public string? Id { get; set; } Property Value string ObjectType The type of the object. [JsonPropertyName(\"object_type\")] public string? ObjectType { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html",
    "title": "Class UnifiedUserIdentity | FoundationaLLM",
    "keywords": "Class UnifiedUserIdentity Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll Represents strongly-typed user identity information, regardless of the identity provider. public class UnifiedUserIdentity Inheritance object UnifiedUserIdentity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties GroupIds The list of the identifiers of the groups to which the user belongs. [JsonPropertyName(\"group_ids\")] public List<string> GroupIds { get; set; } Property Value List<string> Name The user's display name. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string UPN The User Principal Name (UPN) of the user. [JsonPropertyName(\"upn\")] public string? UPN { get; set; } Property Value string UserId The unique identifier of the user. [JsonPropertyName(\"user_id\")] public string? UserId { get; set; } Property Value string Username The username of the user used to authenticate. [JsonPropertyName(\"user_name\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Authentication Classes ObjectQueryParameters Parameters for querying user and group accounts. ObjectQueryResult The result of an object query. UnifiedUserIdentity Represents strongly-typed user identity information, regardless of the identity provider."
  },
  "api/dotnet/FoundationaLLM.Common.Models.AuthorizableAction.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AuthorizableAction.html",
    "title": "Class AuthorizableAction | FoundationaLLM",
    "keywords": "Class AuthorizableAction Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. public record AuthorizableAction : IEquatable<AuthorizableAction> Inheritance object AuthorizableAction Implements IEquatable<AuthorizableAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizableAction(string, string, string) Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. public AuthorizableAction(string Name, string Description, string Category) Parameters Name string The name of the authorizable action. Description string The description of the authorizable action. Category string The category of the authorizable action. Properties Category The category of the authorizable action. public string Category { get; init; } Property Value string Description The description of the authorizable action. public string Description { get; init; } Property Value string Name The name of the authorizable action. public string Name { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationRequest.html",
    "title": "Class ActionAuthorizationRequest | FoundationaLLM",
    "keywords": "Class ActionAuthorizationRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a request to authorize an action. public class ActionAuthorizationRequest Inheritance object ActionAuthorizationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Action The authorizable action for which authorization is requested. [JsonPropertyName(\"action\")] public required string Action { get; set; } Property Value string PrincipalId The id of the security principal requesting authorization. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string ResourcePaths The list of resources for which authorization is requested. [JsonPropertyName(\"resources\")] public required List<string> ResourcePaths { get; set; } Property Value List<string> SecurityGroupIds The list of security group ids to which the principal belongs. [JsonPropertyName(\"security_group_ids\")] public List<string> SecurityGroupIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationResult.html",
    "title": "Class ActionAuthorizationResult | FoundationaLLM",
    "keywords": "Class ActionAuthorizationResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of an action authorization request. public class ActionAuthorizationResult Inheritance object ActionAuthorizationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AuthorizationResults Indicates whether the action is authorized or not for each resource path. [JsonPropertyName(\"authorization_results\")] public required Dictionary<string, bool> AuthorizationResults { get; set; } Property Value Dictionary<string, bool> InvalidResourcePaths Contains a list of invalid resource paths, for which authorization could not be completed. [JsonPropertyName(\"invalid_resources\")] public List<string>? InvalidResourcePaths { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.AuthorizableActions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.AuthorizableActions.html",
    "title": "Class AuthorizableActions | FoundationaLLM",
    "keywords": "Class AuthorizableActions Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Defines all authorizable actions managed by the FoundationaLLM.Authorization resource provider. public static class AuthorizableActions Inheritance object AuthorizableActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Actions public static readonly ReadOnlyDictionary<string, AuthorizableAction> Actions Field Value ReadOnlyDictionary<string, AuthorizableAction> Methods GetMatchingActions(string) Selects all actions whose names match the specified action pattern. public static List<string> GetMatchingActions(string actionPattern) Parameters actionPattern string The action pattern used for selection. Returns List<string> The list of matching action names."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentQueryParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentQueryParameters.html",
    "title": "Class RoleAssignmentQueryParameters | FoundationaLLM",
    "keywords": "Class RoleAssignmentQueryParameters Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Parameters for querying role assignments. public class RoleAssignmentQueryParameters Inheritance object RoleAssignmentQueryParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Scope The role assignment scope (resource object id). [JsonPropertyName(\"scope\")] public string? Scope { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentRequest.html",
    "title": "Class RoleAssignmentRequest | FoundationaLLM",
    "keywords": "Class RoleAssignmentRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a role assignment request. public class RoleAssignmentRequest Inheritance object RoleAssignmentRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CreatedBy The entity who created the role assignment request. [JsonPropertyName(\"created_by\")] [JsonPropertyOrder(502)] public string? CreatedBy { get; set; } Property Value string Description The description of the resource. [JsonPropertyName(\"description\")] [JsonPropertyOrder(-2)] public string? Description { get; set; } Property Value string Name The name of the resource. [JsonPropertyName(\"name\")] [JsonPropertyOrder(-5)] public required string Name { get; set; } Property Value string ObjectId The unique identifier of the resource. [JsonPropertyName(\"object_id\")] public string? ObjectId { get; set; } Property Value string PrincipalId The unique identifier of the security principal to which the role is assigned. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string PrincipalType The type of the security principal to which the role is assigned. Can be User, Group, or ServicePrincipal. [JsonPropertyName(\"principal_type\")] public required string PrincipalType { get; set; } Property Value string RoleDefinitionId The unique identifier of the role definition. [JsonPropertyName(\"role_definition_id\")] public required string RoleDefinitionId { get; set; } Property Value string Scope The scope at which the role is assigned. [JsonPropertyName(\"scope\")] public required string Scope { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentResult.html",
    "title": "Class RoleAssignmentResult | FoundationaLLM",
    "keywords": "Class RoleAssignmentResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of a role assignment request. public class RoleAssignmentResult Inheritance object RoleAssignmentResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Success Indicates whether the role assignment was successful or not. [JsonPropertyName(\"success\")] public required bool Success { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsRequest.html",
    "title": "Class RoleAssignmentsWithActionsRequest | FoundationaLLM",
    "keywords": "Class RoleAssignmentsWithActionsRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a request to fetch the roles and allowed actions for a resource scope. public class RoleAssignmentsWithActionsRequest Inheritance object RoleAssignmentsWithActionsRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PrincipalId The id of the security principal requesting authorization. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string Scopes The scope of the request. [JsonPropertyName(\"scopes\")] public required List<string> Scopes { get; set; } Property Value List<string> SecurityGroupIds The list of security group ids to which the principal belongs. [JsonPropertyName(\"security_group_ids\")] public List<string> SecurityGroupIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsResult.html",
    "title": "Class RoleAssignmentsWithActionsResult | FoundationaLLM",
    "keywords": "Class RoleAssignmentsWithActionsResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of a GET roles with actions request. public class RoleAssignmentsWithActionsResult Inheritance object RoleAssignmentsWithActionsResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions List of authorized actions on the resource. [JsonPropertyName(\"actions\")] public required List<string> Actions { get; set; } Property Value List<string> Roles List of roles on the resource. [JsonPropertyName(\"roles\")] public required List<string> Roles { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleDefinitions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleDefinitions.html",
    "title": "Class RoleDefinitions | FoundationaLLM",
    "keywords": "Class RoleDefinitions Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll public static class RoleDefinitions Inheritance object RoleDefinitions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All public static readonly ReadOnlyDictionary<string, RoleDefinition> All Field Value ReadOnlyDictionary<string, RoleDefinition>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.Authorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Authorization Classes ActionAuthorizationRequest Represents a request to authorize an action. ActionAuthorizationResult Represents the result of an action authorization request. AuthorizableActions Defines all authorizable actions managed by the FoundationaLLM.Authorization resource provider. RoleAssignmentQueryParameters Parameters for querying role assignments. RoleAssignmentRequest Represents a role assignment request. RoleAssignmentResult Represents the result of a role assignment request. RoleAssignmentsWithActionsRequest Represents a request to fetch the roles and allowed actions for a resource scope. RoleAssignmentsWithActionsResult Represents the result of a GET roles with actions request. RoleDefinitions"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccount.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccount.html",
    "title": "Class AzureOpenAIAccount | FoundationaLLM",
    "keywords": "Class AzureOpenAIAccount Namespace FoundationaLLM.Common.Models.Azure Assembly FoundationaLLM.Common.dll Provides information about an Azure OpenAI account. public class AzureOpenAIAccount Inheritance object AzureOpenAIAccount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deployments The list of AzureOpenAIAccountDeployment objects providing information about the deployments in the account. public List<AzureOpenAIAccountDeployment> Deployments { get; set; } Property Value List<AzureOpenAIAccountDeployment> Endpoint The endpoint of the Azure OpenAI account. public required string Endpoint { get; set; } Property Value string Name The name of the Azure OpenAI account. public required string Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccountDeployment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccountDeployment.html",
    "title": "Class AzureOpenAIAccountDeployment | FoundationaLLM",
    "keywords": "Class AzureOpenAIAccountDeployment Namespace FoundationaLLM.Common.Models.Azure Assembly FoundationaLLM.Common.dll Provides information about a model deployment in an Azure OpenAI account. public class AzureOpenAIAccountDeployment Inheritance object AzureOpenAIAccountDeployment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountEndpoint The endpoint of the account in which the model is deployed. public required string AccountEndpoint { get; set; } Property Value string CanDoEmbeddings Indicates whether the model in the deployment can perform embeddings. public bool CanDoEmbeddings { get; } Property Value bool Capabilities The capabilities of the model in the deployment. public IReadOnlyDictionary<string, string>? Capabilities { get; set; } Property Value IReadOnlyDictionary<string, string> EmbeddingsMaxInputs The maximum number of inputs that can be sent to the model for embeddings. public int EmbeddingsMaxInputs { get; } Property Value int ModelName The name of the model in the deployment. public required string ModelName { get; set; } Property Value string ModelVersion The version of the model in the deployment. public required string ModelVersion { get; set; } Property Value string Name The name of the deployment. public required string Name { get; set; } Property Value string RequestRateLimit The limit placed on requests sent to the model. public int RequestRateLimit { get; set; } Property Value int RequestRateRenewalPeriod The period (in seconds) to which RequestRateLimit applies. public int RequestRateRenewalPeriod { get; set; } Property Value int TokenRateLimit The limit placed on tokens sent to the model. public int TokenRateLimit { get; set; } Property Value int TokenRateRenewalPeriod The period (in seconds) to which TokenRateLimit applies. public int TokenRateRenewalPeriod { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.html",
    "title": "Namespace FoundationaLLM.Common.Models.Azure | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Azure Classes AzureOpenAIAccount Provides information about an Azure OpenAI account. AzureOpenAIAccountDeployment Provides information about a model deployment in an Azure OpenAI account."
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.AzureAIJobRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.AzureAIJobRequest.html",
    "title": "Class AzureAIJobRequest | FoundationaLLM",
    "keywords": "Class AzureAIJobRequest Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll Azure AI Evaluation Job Request public class AzureAIJobRequest Inheritance object AzureAIJobRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BatchDataInput Uri to the data to test. [JsonPropertyName(\"batchDataInput\")] public BatchDataInput? BatchDataInput { get; set; } Property Value BatchDataInput Connections All model connection information for the various tests. [JsonPropertyName(\"connections\")] public GptConnections? Connections { get; set; } Property Value GptConnections FlowDefinitionResourceId The target flow to run against. [JsonPropertyName(\"flowDefinitionResourceId\")] public string? FlowDefinitionResourceId { get; set; } Property Value string InputsMapping How each of the input fields map to the testing fields. [JsonPropertyName(\"inputsMapping\")] public InputsMapping? InputsMapping { get; set; } Property Value InputsMapping Properties Any extra properties to pass to the job. [JsonPropertyName(\"properties\")] public Dictionary<string, string>? Properties { get; set; } Property Value Dictionary<string, string> RunDisplayNameGenerationType The generation type name. [JsonPropertyName(\"runDisplayNameGenerationType\")] public string? RunDisplayNameGenerationType { get; set; } Property Value string RunExperimentName A name for the job, can be the run Name. [JsonPropertyName(\"runExpermimentName\")] public string? RunExperimentName { get; set; } Property Value string RunId The user generated job id. [JsonPropertyName(\"runId\")] public string? RunId { get; set; } Property Value string RuntimeName The target run time for Azure AI studio. [JsonPropertyName(\"runtimeName\")] public string? RuntimeName { get; set; } Property Value string SessionSetupMode The setup mode, typically \"SystemWait\". [JsonPropertyName(\"sessionSetupMode\")] public string? SessionSetupMode { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.BatchDataInput.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.BatchDataInput.html",
    "title": "Class BatchDataInput | FoundationaLLM",
    "keywords": "Class BatchDataInput Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll Batch data input class. public class BatchDataInput Inheritance object BatchDataInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataUri The uri to the data set. [JsonPropertyName(\"dataUri\")] public string DataUri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.CreatedBy.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.CreatedBy.html",
    "title": "Class CreatedBy | FoundationaLLM",
    "keywords": "Class CreatedBy Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class CreatedBy Inheritance object CreatedBy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Upn [JsonPropertyName(\"upn\")] public string Upn { get; set; } Property Value string UserAltSecId [JsonPropertyName(\"userAltSecId\")] public object UserAltSecId { get; set; } Property Value object UserIdp [JsonPropertyName(\"userIdp\")] public object UserIdp { get; set; } Property Value object UserIss [JsonPropertyName(\"userIss\")] public string UserIss { get; set; } Property Value string UserName [JsonPropertyName(\"userName\")] public string UserName { get; set; } Property Value string UserObjectId [JsonPropertyName(\"userObjectId\")] public string UserObjectId { get; set; } Property Value string UserPuId [JsonPropertyName(\"userPuId\")] public string UserPuId { get; set; } Property Value string UserTenantId [JsonPropertyName(\"userTenantId\")] public string UserTenantId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersion.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersion.html",
    "title": "Class DataVersion | FoundationaLLM",
    "keywords": "Class DataVersion Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class DataVersion Inheritance object DataVersion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssetId [JsonPropertyName(\"assetId\")] public string AssetId { get; set; } Property Value string DataContainerName [JsonPropertyName(\"dataContainerName\")] public string DataContainerName { get; set; } Property Value string DataType [JsonPropertyName(\"dataType\")] public string DataType { get; set; } Property Value string DataUri [JsonPropertyName(\"dataUri\")] public string DataUri { get; set; } Property Value string InitialAssetId [JsonPropertyName(\"initialAssetId\")] public string InitialAssetId { get; set; } Property Value string IsRegistered [JsonPropertyName(\"isRegistered\")] public bool IsRegistered { get; set; } Property Value bool MutableProps [JsonPropertyName(\"mutableProps\")] public MutableProps MutableProps { get; set; } Property Value MutableProps OriginAssetId [JsonPropertyName(\"originAssetId\")] public object OriginAssetId { get; set; } Property Value object Properties [JsonPropertyName(\"properties\")] public object Properties { get; set; } Property Value object ReferencedDataUris [JsonPropertyName(\"referencedDataUris\")] public object ReferencedDataUris { get; set; } Property Value object RunId [JsonPropertyName(\"runId\")] public object RunId { get; set; } Property Value object VersionId [JsonPropertyName(\"versionId\")] public string VersionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersionResponse.html",
    "title": "Class DataVersionResponse | FoundationaLLM",
    "keywords": "Class DataVersionResponse Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class DataVersionResponse Inheritance object DataVersionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataVersion [JsonPropertyName(\"dataVersion\")] public DataVersion DataVersion { get; set; } Property Value DataVersion EntityMetadata [JsonPropertyName(\"entityMetadata\")] public EntityMetadata EntityMetadata { get; set; } Property Value EntityMetadata IsV2 [JsonPropertyName(\"isV2\")] public bool IsV2 { get; set; } Property Value bool LegacyDataflow [JsonPropertyName(\"legacyDataflow\")] public object LegacyDataflow { get; set; } Property Value object LegacyDataflowType [JsonPropertyName(\"legacyDataflowType\")] public object LegacyDataflowType { get; set; } Property Value object LegacyDatasetId [JsonPropertyName(\"legacyDatasetId\")] public string LegacyDatasetId { get; set; } Property Value string LegacyDatasetType [JsonPropertyName(\"legacyDatasetType\")] public object LegacyDatasetType { get; set; } Property Value object LegacySavedDatasetId [JsonPropertyName(\"legacySavedDatasetId\")] public object LegacySavedDatasetId { get; set; } Property Value object PutAssetLROResponseDto [JsonPropertyName(\"putAssetLROResponseDto\")] public object PutAssetLROResponseDto { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DatasetVersionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DatasetVersionRequest.html",
    "title": "Class DatasetVersionRequest | FoundationaLLM",
    "keywords": "Class DatasetVersionRequest Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll A data set version request. public class DatasetVersionRequest Inheritance object DatasetVersionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataContainerName The container to save the data to. [JsonPropertyName(\"dataContainerName\")] public string DataContainerName { get; set; } Property Value string DataType The data type of the data. [JsonPropertyName(\"dataType\")] public string DataType { get; set; } Property Value string DataUri The uri to the data set. [JsonPropertyName(\"dataUri\")] public string DataUri { get; set; } Property Value string IsRegistered Using registered data. [JsonPropertyName(\"isRegistered\")] public bool IsRegistered { get; set; } Property Value bool MutableProps Any mutable properties to pass to the data [JsonPropertyName(\"mutableProps\")] public Dictionary<string, string>? MutableProps { get; set; } Property Value Dictionary<string, string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.EntityMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.EntityMetadata.html",
    "title": "Class EntityMetadata | FoundationaLLM",
    "keywords": "Class EntityMetadata Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class EntityMetadata Inheritance object EntityMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CreatedBy [JsonPropertyName(\"createdBy\")] public CreatedBy CreatedBy { get; set; } Property Value CreatedBy CreatedTime [JsonPropertyName(\"createdTime\")] public DateTime CreatedTime { get; set; } Property Value DateTime Etag [JsonPropertyName(\"etag\")] public string Etag { get; set; } Property Value string ModifiedBy [JsonPropertyName(\"modifiedBy\")] public object ModifiedBy { get; set; } Property Value object ModifiedTime [JsonPropertyName(\"modifiedTime\")] public DateTime ModifiedTime { get; set; } Property Value DateTime"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnection.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnection.html",
    "title": "Class GptConnection | FoundationaLLM",
    "keywords": "Class GptConnection Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll A connection to an Azure AI Service model. public class GptConnection Inheritance object GptConnection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Connection Name of the Azure AI studio connection. [JsonPropertyName(\"connection\")] public string? Connection { get; set; } Property Value string DeploymentName Name of the deployment to use. [JsonPropertyName(\"deployment_name\")] public string? DeploymentName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnections.html",
    "title": "Class GptConnections | FoundationaLLM",
    "keywords": "Class GptConnections Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll The GPT connections for the Azure AI Service. public class GptConnections Inheritance object GptConnections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties GptCoherence The GPT Coherence connection [JsonPropertyName(\"gpt_coherence\")] public GptConnection? GptCoherence { get; set; } Property Value GptConnection GptFluency The uri to the data set. [JsonPropertyName(\"gpt_fluency\")] public GptConnection? GptFluency { get; set; } Property Value GptConnection GptGroundedness The uri to the data set. [JsonPropertyName(\"gpt_groundedness\")] public GptConnection? GptGroundedness { get; set; } Property Value GptConnection GptRelevance The uri to the data set. [JsonPropertyName(\"gpt_relevance\")] public GptConnection? GptRelevance { get; set; } Property Value GptConnection GptSimilarity The uri to the data set. [JsonPropertyName(\"gpt_similarity\")] public GptConnection? GptSimilarity { get; set; } Property Value GptConnection"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.InputsMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.InputsMapping.html",
    "title": "Class InputsMapping | FoundationaLLM",
    "keywords": "Class InputsMapping Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll How each of the input fields map to the testing fields. public class InputsMapping Inheritance object InputsMapping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Answer Name of the input field for the answer [JsonPropertyName(\"answer\")] public string? Answer { get; set; } Property Value string Context Name of the input field for the context [JsonPropertyName(\"context\")] public string? Context { get; set; } Property Value string GroundTruth Name of the input field for the ground truth. [JsonPropertyName(\"ground_truth\")] public string? GroundTruth { get; set; } Property Value string Metrics Name of the input field for the metrics to run. [JsonPropertyName(\"metrics\")] public string? Metrics { get; set; } Property Value string Question Name of the input field for the question [JsonPropertyName(\"question\")] public string? Question { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.MutableProps.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.MutableProps.html",
    "title": "Class MutableProps | FoundationaLLM",
    "keywords": "Class MutableProps Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class MutableProps Inheritance object MutableProps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AutoDeleteSetting [JsonPropertyName(\"autoDeleteSetting\")] public object AutoDeleteSetting { get; set; } Property Value object DataExpiryTime [JsonPropertyName(\"dataExpiryTime\")] public object DataExpiryTime { get; set; } Property Value object Description [JsonPropertyName(\"description\")] public object Description { get; set; } Property Value object IsArchived [JsonPropertyName(\"isArchived\")] public bool IsArchived { get; set; } Property Value bool Stage [JsonPropertyName(\"stage\")] public string Stage { get; set; } Property Value string Tags [JsonPropertyName(\"tags\")] public object Tags { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.html",
    "title": "Namespace FoundationaLLM.Common.Models.AzureAIService | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.AzureAIService Classes AzureAIJobRequest Azure AI Evaluation Job Request BatchDataInput Batch data input class. CreatedBy DataVersion DataVersionResponse DatasetVersionRequest A data set version request. EntityMetadata GptConnection A connection to an Azure AI Service model. GptConnections The GPT connections for the Azure AI Service. InputsMapping How each of the input fields map to the testing fields. MutableProps"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.APICacheRefreshResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.APICacheRefreshResult.html",
    "title": "Class APICacheRefreshResult | FoundationaLLM",
    "keywords": "Class APICacheRefreshResult Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll Contains the result of a cache refresh operation. public class APICacheRefreshResult Inheritance object APICacheRefreshResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Detail Details of the cache refresh operation from the called API. public string? Detail { get; set; } Property Value string Success Indicates whether the cache refresh operation was successful. public bool Success { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheItem.html",
    "title": "Class CacheItem | FoundationaLLM",
    "keywords": "Class CacheItem Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll The cached object. public class CacheItem Inheritance object CacheItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ExpirationTimeUtc The UTC expiration time of the object being cached. public DateTime? ExpirationTimeUtc { get; set; } Property Value DateTime? IsExpired Indicates whether the cached object expired or not. public bool IsExpired { get; } Property Value bool Value The value of the object being cached. public required object? Value { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheKey.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheKey.html",
    "title": "Class CacheKey | FoundationaLLM",
    "keywords": "Class CacheKey Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll Composite caching key. public class CacheKey Inheritance object CacheKey Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CacheKey(string, string) Composite caching key. public CacheKey(string name, string category) Parameters name string The name of the object identified by the cache key. category string The category of the object identified by the cache key. Fields Category The category of the object from the cache. public string Category Field Value string Name The name of the object from the cache. public string Name Field Value string Methods Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.html",
    "title": "Namespace FoundationaLLM.Common.Models.Cache | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Cache Classes APICacheRefreshResult Contains the result of a cache refresh operation. CacheItem The cached object. CacheKey Composite caching key."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.AttachmentDetail.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.AttachmentDetail.html",
    "title": "Class AttachmentDetail | FoundationaLLM",
    "keywords": "Class AttachmentDetail Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll Represents an attachment in a chat message or session. public class AttachmentDetail Inheritance object AttachmentDetail Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The mime content type of the attachment. [JsonPropertyName(\"contentType\")] public string? ContentType { get; set; } Property Value string DisplayName The attachment file name. [JsonPropertyName(\"displayName\")] public string? DisplayName { get; set; } Property Value string ObjectId The unique identifier of the attachment resource. [JsonPropertyName(\"objectId\")] public string? ObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.ChatSessionProperties.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.ChatSessionProperties.html",
    "title": "Class ChatSessionProperties | FoundationaLLM",
    "keywords": "Class ChatSessionProperties Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The session properties object. public class ChatSessionProperties Inheritance object ChatSessionProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The session name. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Completion.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Completion.html",
    "title": "Class Completion | FoundationaLLM",
    "keywords": "Class Completion Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The completion object. public class Completion Inheritance object Completion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Text The completion text. public string? Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.CompletionPrompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.CompletionPrompt.html",
    "title": "Class CompletionPrompt | FoundationaLLM",
    "keywords": "Class CompletionPrompt Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The completion prompt object. public class CompletionPrompt Inheritance object CompletionPrompt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionPrompt(string, string, string, Citation[]?) Constructor for Completion Prompt. public CompletionPrompt(string sessionId, string messageId, string prompt, Citation[]? citations = null) Parameters sessionId string messageId string prompt string citations Citation[] Properties Citations The sources used in the creation of the completion response. public Citation[]? Citations { get; set; } Property Value Citation[] Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string MessageId The messageId of the completion. public string MessageId { get; set; } Property Value string Prompt The completion prompt. public string Prompt { get; set; } Property Value string SessionId The sessionId associated with the completion. public string SessionId { get; set; } Property Value string Type The type of the completion. public string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.DocumentVector.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.DocumentVector.html",
    "title": "Class DocumentVector | FoundationaLLM",
    "keywords": "Class DocumentVector Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The document vector object. public record DocumentVector : IEquatable<DocumentVector> Inheritance object DocumentVector Implements IEquatable<DocumentVector> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DocumentVector(string, string, string, float[]?) Constructor for Document Vector. public DocumentVector(string itemId, string partitionKey, string containerName, float[]? vector = null) Parameters itemId string partitionKey string containerName string vector float[] Properties containerName The name of the container associated with the document vector. public string containerName { get; set; } Property Value string id The unique identifier. public string id { get; set; } Property Value string itemId The identifier of the item associated with the document vector. public string itemId { get; set; } Property Value string partitionKey The partition key associated with the document vector. public string partitionKey { get; set; } Property Value string vector The vector associated with the document. public float[]? vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Message.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Message.html",
    "title": "Class Message | FoundationaLLM",
    "keywords": "Class Message Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The message object. public record Message : IEquatable<Message> Inheritance object Message Implements IEquatable<Message> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Message(string, string, int?, string, float[]?, bool?, string, string?, Citation[]?, string?, List<MessageContent>?, List<string>?, List<AttachmentDetail>, List<AnalysisResult>?) Constructor for Message. public Message(string sessionId, string sender, int? tokens, string text, float[]? vector, bool? rating, string upn, string? senderDisplayName = null, Citation[]? citations = null, string? expectedCompletion = null, List<MessageContent>? content = null, List<string>? attachments = null, List<AttachmentDetail> attachmentDetails = null, List<AnalysisResult>? analysisResults = null) Parameters sessionId string sender string tokens int? text string vector float[] rating bool? upn string senderDisplayName string citations Citation[] expectedCompletion string content List<MessageContent> attachments List<string> attachmentDetails List<AttachmentDetail> analysisResults List<AnalysisResult> Properties AnalysisResults A list of results from the analysis. public List<AnalysisResult>? AnalysisResults { get; set; } Property Value List<AnalysisResult> AttachmentDetails Contains the details of the attachments. This is not stored in the database. [JsonIgnore] public List<AttachmentDetail>? AttachmentDetails { get; set; } Property Value List<AttachmentDetail> Attachments One or more attachments included with the orchestration request. The values should be the Object ID of the attachment(s). [JsonPropertyName(\"attachments\")] public List<string>? Attachments { get; init; } Property Value List<string> Citations The sources associated with the completion prompt. public Citation[]? Citations { get; set; } Property Value Citation[] CompletionPromptId The identifier for the completion prompt associated with the message. public string? CompletionPromptId { get; set; } Property Value string Content The content of the message. [JsonPropertyName(\"content\")] public List<MessageContent>? Content { get; set; } Property Value List<MessageContent> Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool ExpectedCompletion Stores the expected completion for the message and used for evaluating the actual vs. expected agent completion. This should be stored in the agent response. public string? ExpectedCompletion { get; set; } Property Value string Id The unique identifier. [SearchableField(IsKey = true, IsFilterable = true)] public string Id { get; set; } Property Value string Rating The rating associated with the message, if any. [SimpleField] public bool? Rating { get; set; } Property Value bool? Sender The sender of the message. [SimpleField] public string Sender { get; set; } Property Value string SenderDisplayName The display name of the message sender. This could be the name of the signed in user or the name of the agent. [SimpleField] public string? SenderDisplayName { get; set; } Property Value string SessionId The Partition key. [SimpleField] public string SessionId { get; set; } Property Value string Text The text content of the message. [SimpleField] public string Text { get; set; } Property Value string TimeStamp The timestamp when the message was created. [SimpleField] public DateTime TimeStamp { get; set; } Property Value DateTime Tokens The number of tokens associated with the message, if any. [SimpleField] public int? Tokens { get; set; } Property Value int? Type The type of the message. [SimpleField] public string Type { get; set; } Property Value string UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Vector The vector associated with the message. [FieldBuilderIgnore] public float[]? Vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageContent.html",
    "title": "Class MessageContent | FoundationaLLM",
    "keywords": "Class MessageContent Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll Contains parts that compose the message content. public class MessageContent Inheritance object MessageContent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileName The file name related to the Value, if applicable. [JsonPropertyName(\"fileName\")] public string? FileName { get; set; } Property Value string Type The type of the message content. Could be text, image, etc. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string Value The value of the message content. [JsonPropertyName(\"value\")] public string? Value { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageHistoryItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.MessageHistoryItem.html",
    "title": "Class MessageHistoryItem | FoundationaLLM",
    "keywords": "Class MessageHistoryItem Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll Represents an historic message sender and text item. public class MessageHistoryItem Inheritance object MessageHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MessageHistoryItem(string, string) Message history item public MessageHistoryItem(string sender, string text) Parameters sender string The sender of the message (e.g., \"Agent\", \"User\") text string The message text. Properties Sender The sender of the message (e.g. \"Agent\", \"User\"). [JsonPropertyName(\"sender\")] public string Sender { get; set; } Property Value string Text The message text. [JsonPropertyName(\"text\")] public string Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.Session.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.Session.html",
    "title": "Class Session | FoundationaLLM",
    "keywords": "Class Session Namespace FoundationaLLM.Common.Models.Chat Assembly FoundationaLLM.Common.dll The session object. public record Session : IEquatable<Session> Inheritance object Session Implements IEquatable<Session> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Session() Constructor for Session. public Session() Properties Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string Messages The list of messages associated with the session. [JsonIgnore] public List<Message> Messages { get; set; } Property Value List<Message> Name The name of the session. public string Name { get; set; } Property Value string SessionId The Partition key. public string SessionId { get; set; } Property Value string TokensUsed The number of tokens used in the session. public int? TokensUsed { get; set; } Property Value int? Type The type of the session. public string Type { get; set; } Property Value string UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Methods AddMessage(Message) Adds a message to the list of messages associated with the session. public void AddMessage(Message message) Parameters message Message The message to be added. UpdateMessage(Message) Updates an existing message in the list of messages associated with the session. public void UpdateMessage(Message message) Parameters message Message The updated message."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Chat.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Chat.html",
    "title": "Namespace FoundationaLLM.Common.Models.Chat | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Chat Classes AttachmentDetail Represents an attachment in a chat message or session. ChatSessionProperties The session properties object. Completion The completion object. CompletionPrompt The completion prompt object. DocumentVector The document vector object. Message The message object. MessageContent Contains parts that compose the message content. MessageHistoryItem Represents an historic message sender and text item. Session The session object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Collections.PagedResponse-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Collections.PagedResponse-1.html",
    "title": "Class PagedResponse<T> | FoundationaLLM",
    "keywords": "Class PagedResponse<T> Namespace FoundationaLLM.Common.Models.Collections Assembly FoundationaLLM.Common.dll Represents a paged response that includes a list of items and a flag indicating if there are more items to retrieve. public class PagedResponse<T> Type Parameters T The type of items to return. Inheritance object PagedResponse<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties HasNextPage Indicates if there are more items to retrieve. [JsonPropertyName(\"has_next_page\")] public bool HasNextPage { get; set; } Property Value bool Items The list of items to return. [JsonPropertyName(\"items\")] public IEnumerable<T>? Items { get; set; } Property Value IEnumerable<T> TotalItems The total number of items available. This is the total count, not necessarily the number of items returned in the response. Please note that certain APIs only return a count on the first page of results. [JsonPropertyName(\"total_items\")] public long? TotalItems { get; set; } Property Value long?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Collections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Collections.html",
    "title": "Namespace FoundationaLLM.Common.Models.Collections | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Collections Classes PagedResponse<T> Represents a paged response that includes a list of items and a flag indicating if there are more items to retrieve."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.APIClientSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.APIClientSettings.html",
    "title": "Class APIClientSettings | FoundationaLLM",
    "keywords": "Class APIClientSettings Namespace FoundationaLLM.Common.Models.Configuration.API Assembly FoundationaLLM.Common.dll Standard settings for an API client. public record APIClientSettings : IEquatable<APIClientSettings> Inheritance object APIClientSettings Implements IEquatable<APIClientSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Timeout Specifies the timeout for the downstream API HTTP client. If this value is null, the default timeout is used. For an infinite waiting period, use InfiniteTimeSpan public TimeSpan? Timeout { get; set; } Property Value TimeSpan?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.API Classes APIClientSettings Standard settings for an API client."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEntry.html",
    "title": "Class AppConfigurationEntry | FoundationaLLM",
    "keywords": "Class AppConfigurationEntry Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll Represents a single entry in the app configuration catalog. public class AppConfigurationEntry Inheritance object AppConfigurationEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AppConfigurationEntry(string, string?, string?, string?, string?, string?, object?, bool) Represents a single entry in the app configuration catalog. public AppConfigurationEntry(string key, string? minimumVersion, string? keyVaultSecretName = null, string? description = null, string? defaultValue = null, string? contentType = null, object? sampleObject = null, bool canBeEmpty = false) Parameters key string minimumVersion string keyVaultSecretName string description string defaultValue string contentType string sampleObject object canBeEmpty bool Properties CanBeEmpty If true, the configuration entry must exist but can be empty. public bool CanBeEmpty { get; } Property Value bool ContentType The content type of the configuration entry. public string? ContentType { get; } Property Value string DefaultValue The default value for the configuration entry. public string? DefaultValue { get; } Property Value string Description A description of the configuration entry. public string? Description { get; } Property Value string Key The App Configuration key. public string Key { get; } Property Value string KeyVaultSecretName The name of the Key Vault secret that contains the value for this configuration entry. public string? KeyVaultSecretName { get; } Property Value string MinimumVersion The minimum version of the app that is required to use this configuration entry. public string? MinimumVersion { get; } Property Value string SampleObject A sample object that represents the configuration entry. public object? SampleObject { get; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEventData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEventData.html",
    "title": "Class AppConfigurationEventData | FoundationaLLM",
    "keywords": "Class AppConfigurationEventData Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll The data associated with an Azure App Configuration Event Grid event. public class AppConfigurationEventData Inheritance object AppConfigurationEventData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Etag The app configuration etag. [JsonPropertyName(\"etag\")] public required string Etag { get; set; } Property Value string Key The app configuration key name. [JsonPropertyName(\"key\")] public required string Key { get; set; } Property Value string Label The app configuration label. [JsonPropertyName(\"label\")] public required string Label { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationKeyVaultUri.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationKeyVaultUri.html",
    "title": "Class AppConfigurationKeyVaultUri | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyVaultUri Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll Provides details about an Azure Key Vault secret. public class AppConfigurationKeyVaultUri Inheritance object AppConfigurationKeyVaultUri Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Uri The URI identifying the Azure Key Vault secret. [JsonPropertyName(\"uri\")] public string? Uri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Classes AppConfigurationEntry Represents a single entry in the app configuration catalog. AppConfigurationEventData The data associated with an Azure App Configuration Event Grid event. AppConfigurationKeyVaultUri Provides details about an Azure Key Vault secret."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html",
    "title": "Class EntraSettings | FoundationaLLM",
    "keywords": "Class EntraSettings Namespace FoundationaLLM.Common.Models.Configuration.Authentication Assembly FoundationaLLM.Common.dll Represents settings specific to Entra. public class EntraSettings Inheritance object EntraSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Scopes The scopes associated with the Entra settings. public string? Scopes { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication Classes EntraSettings Represents settings specific to Entra."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.AzureAISettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.AzureAISettings.html",
    "title": "Class AzureAISettings | FoundationaLLM",
    "keywords": "Class AzureAISettings Namespace FoundationaLLM.Common.Models.Configuration.AzureAI Assembly FoundationaLLM.Common.dll Settings for submitting jobs to Azure AI Studio public class AzureAISettings Inheritance object AzureAISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIEndpointConfigurationName The name of the API endpoint configuration object that provides the properties of the API endpoint used to connect to the service. public required string APIEndpointConfigurationName { get; init; } Property Value string BlobStorageServiceSettings The storage backing the Azure AI Studio deployment. public BlobStorageServiceSettings? BlobStorageServiceSettings { get; set; } Property Value BlobStorageServiceSettings ContainerName Container where Azure AI Studio stores the data sets. public string? ContainerName { get; init; } Property Value string Deployment Azure AI Studio GPT model deployment name. public string? Deployment { get; init; } Property Value string FlowDefinitionResourceId The Flow Definition Resource ID of the Azure AI Studio. public string? FlowDefinitionResourceId { get; init; } Property Value string Metrics Metrics to run on the Azure AI Studio. public string? Metrics { get; init; } Property Value string ProjectName Project Name of the Azure AI Studio deployment. public string? ProjectName { get; init; } Property Value string Region Region of the Azure AI Studio deployment. public string? Region { get; init; } Property Value string ResourceGroup Resource Group of the Azure AI Studio deployment. public string? ResourceGroup { get; init; } Property Value string SubscriptionId Subscription ID associated with the Azure AI Studio deployment. public string? SubscriptionId { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.AzureAI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.AzureAI Classes AzureAISettings Settings for submitting jobs to Azure AI Studio"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html",
    "title": "Class ClientBrandingConfiguration | FoundationaLLM",
    "keywords": "Class ClientBrandingConfiguration Namespace FoundationaLLM.Common.Models.Configuration.Branding Assembly FoundationaLLM.Common.dll Provides configuration for client branding. public class ClientBrandingConfiguration Inheritance object ClientBrandingConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccentColor The accent color of the client in hex format. public string? AccentColor { get; set; } Property Value string AccentTextColor The accent text color of the client in hex format. public string? AccentTextColor { get; set; } Property Value string AgentIconUrl The agent icon that displays next to the agent select list and agent responses. Can be an absolute URL, relative path, or base64string value. public string? AgentIconUrl { get; set; } Property Value string BackgroundColor The background color of the client in hex format. public string? BackgroundColor { get; set; } Property Value string CompanyName The display name of the client. public string? CompanyName { get; set; } Property Value string FavIconUrl The URL of the client's favicon. Can be an absolute URL, relative path, or base64string value. public string? FavIconUrl { get; set; } Property Value string FooterText The footer text displayed in the client. public string? FooterText { get; set; } Property Value string KioskMode Flag indicating whether we use kiosk mode or not. public bool KioskMode { get; set; } Property Value bool LogoText The text to display next to the logo in the nav pane. Leave blank to not display any text. public string? LogoText { get; set; } Property Value string LogoUrl The URL of the client's logo. Can be an absolute URL or a relative URL. public string? LogoUrl { get; set; } Property Value string PageTitle The page title of the client. public string? PageTitle { get; set; } Property Value string PrimaryButtonBackgroundColor The background color of the client's primary button in hex format. public string? PrimaryButtonBackgroundColor { get; set; } Property Value string PrimaryButtonTextColor The text color of the client's primary button in hex format. public string? PrimaryButtonTextColor { get; set; } Property Value string PrimaryColor The primary color of the client in hex format. public string? PrimaryColor { get; set; } Property Value string PrimaryTextColor The text color that overlays the PrimaryColor of the client in hex format. public string? PrimaryTextColor { get; set; } Property Value string SecondaryButtonBackgroundColor The background color of the client's secondary button in hex format. public string? SecondaryButtonBackgroundColor { get; set; } Property Value string SecondaryButtonTextColor The text color of the client's secondary button in hex format. public string? SecondaryButtonTextColor { get; set; } Property Value string SecondaryColor The secondary color of the client in hex format. public string? SecondaryColor { get; set; } Property Value string SecondaryTextColor The text color that overlays the SecondaryColor of the client in hex format. public string? SecondaryTextColor { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Branding | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Branding Classes ClientBrandingConfiguration Provides configuration for client branding."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.CosmosDbSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.CosmosDbSettings.html",
    "title": "Class CosmosDbSettings | FoundationaLLM",
    "keywords": "Class CosmosDbSettings Namespace FoundationaLLM.Common.Models.Configuration.CosmosDB Assembly FoundationaLLM.Common.dll Stores the Azure Cosmos DB settings from the app configuration. public record CosmosDbSettings : IEquatable<CosmosDbSettings> Inheritance object CosmosDbSettings Implements IEquatable<CosmosDbSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ChangeFeedLeaseContainer The name of the Azure Cosmos DB container used for change feed leases. public required string ChangeFeedLeaseContainer { get; set; } Property Value string Containers Comma-separated list of Azure Cosmos DB container names. public required string Containers { get; set; } Property Value string Database The name of the Azure Cosmos DB database. public required string Database { get; set; } Property Value string EnableTracing Specifies whether to enable Azure Cosmos DB tracing. Disabling tracing reduces the number of logs generated by the Azure Cosmos DB SDK. public bool EnableTracing { get; set; } Property Value bool Endpoint The Azure Cosmos DB endpoint URL. public required string Endpoint { get; set; } Property Value string MonitoredContainers Comma-separated list of Azure Cosmos DB container names to monitor for changes. public required string MonitoredContainers { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.CosmosDB | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.CosmosDB Classes CosmosDbSettings Stores the Azure Cosmos DB settings from the app configuration."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.EnvironmentVariableEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.EnvironmentVariableEntry.html",
    "title": "Class EnvironmentVariableEntry | FoundationaLLM",
    "keywords": "Class EnvironmentVariableEntry Namespace FoundationaLLM.Common.Models.Configuration.Environment Assembly FoundationaLLM.Common.dll Represents a single entry in the environment variable catalog. public class EnvironmentVariableEntry Inheritance object EnvironmentVariableEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EnvironmentVariableEntry(string, string, string?) Represents a single entry in the environment variable catalog. public EnvironmentVariableEntry(string name, string description, string? defaultValue = null) Parameters name string description string defaultValue string Properties DefaultValue The default value of the environment variable, if any. public string? DefaultValue { get; } Property Value string Description A description of the environment variable. public string Description { get; } Property Value string Name The name of the environment variable. public string Name { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Environment | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Environment Classes EnvironmentVariableEntry Represents a single entry in the environment variable catalog."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceProfile.html",
    "title": "Class AzureEventGridEventServiceProfile | FoundationaLLM",
    "keywords": "Class AzureEventGridEventServiceProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling in the AzureEventGridEventService event service. public class AzureEventGridEventServiceProfile Inheritance object AzureEventGridEventServiceProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventProcessingCycleSeconds The time interval in seconds between successive event processing cycles. public int EventProcessingCycleSeconds { get; set; } Property Value int Topics The list of EventGridTopicProfile topic profiles used to configure event handling for an Azure Event Grid namespace topic. public List<EventGridTopicProfile> Topics { get; set; } Property Value List<EventGridTopicProfile>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceSettings.html",
    "title": "Class AzureEventGridEventServiceSettings | FoundationaLLM",
    "keywords": "Class AzureEventGridEventServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll Provides configuration settings to intialize the AzureEventGridEventService service. public class AzureEventGridEventServiceSettings Inheritance object AzureEventGridEventServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NamespaceId The Azure resource identifier for the Azure Event Grid namespace. public required string NamespaceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventSet.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventSet.html",
    "title": "Class EventGridEventSet | FoundationaLLM",
    "keywords": "Class EventGridEventSet Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The event set used to configure event handling for a specific subset of events of a specified event type. public class EventGridEventSet Inheritance object EventGridEventSet Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Namespace The namespace associated with the event set. FoundationaLLM event subscribers can use this to attach handlers that process events from this set. public required string Namespace { get; set; } Property Value string Source The event source that defines the set. public required string Source { get; set; } Property Value string SubjectPrefix The event subject prefix that defines the set. public required string SubjectPrefix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventTypeProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridEventTypeProfile.html",
    "title": "Class EventGridEventTypeProfile | FoundationaLLM",
    "keywords": "Class EventGridEventTypeProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling for a specified Azure Event Grid event type. public class EventGridEventTypeProfile Inheritance object EventGridEventTypeProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventSets The list of EventGridEventSet event sets used to configure event handling for a specific subset of events of a specified event type. public List<EventGridEventSet> EventSets { get; set; } Property Value List<EventGridEventSet> EventType The name of the Azure Event Grid event type. public required string EventType { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridTopicProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridTopicProfile.html",
    "title": "Class EventGridTopicProfile | FoundationaLLM",
    "keywords": "Class EventGridTopicProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling for an Azure Event Grid namespace topic. public class EventGridTopicProfile Inheritance object EventGridTopicProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventTypeProfiles The list of EventGridEventTypeProfile event type profiles used to configure handling for event types. public List<EventGridEventTypeProfile> EventTypeProfiles { get; set; } Property Value List<EventGridEventTypeProfile> Name The name of the Azure Event Grid namespace topic. public required string Name { get; set; } Property Value string SubscriptionAvailable Indicates whether the subscription is available for use or not. [JsonIgnore] public bool SubscriptionAvailable { get; set; } Property Value bool SubscriptionName The topic subscription name. [JsonIgnore] public string? SubscriptionName { get; set; } Property Value string SubscriptionPrefix The prefix used for the topic subscription name. public required string SubscriptionPrefix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.LocalEventServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.LocalEventServiceSettings.html",
    "title": "Class LocalEventServiceSettings | FoundationaLLM",
    "keywords": "Class LocalEventServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll Provides configuration settings to initialize the LocalEventService service. public class LocalEventServiceSettings Inheritance object LocalEventServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventProcessingCycleSeconds The time interval in seconds between successive event processing cycles. public int EventProcessingCycleSeconds { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Events | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Events Classes AzureEventGridEventServiceProfile The profile used to configure event handling in the AzureEventGridEventService event service. AzureEventGridEventServiceSettings Provides configuration settings to intialize the AzureEventGridEventService service. EventGridEventSet The event set used to configure event handling for a specific subset of events of a specified event type. EventGridEventTypeProfile The profile used to configure event handling for a specified Azure Event Grid event type. EventGridTopicProfile The profile used to configure event handling for an Azure Event Grid namespace topic. LocalEventServiceSettings Provides configuration settings to initialize the LocalEventService service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.InstanceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.InstanceSettings.html",
    "title": "Class InstanceSettings | FoundationaLLM",
    "keywords": "Class InstanceSettings Namespace FoundationaLLM.Common.Models.Configuration.Instance Assembly FoundationaLLM.Common.dll Provides configuration settings for the current FoundationaLLM deployment instance. public class InstanceSettings Inheritance object InstanceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The unique identifier of the current FoundationaLLM deployment instance. Format is a GUID. public required string Id { get; set; } Property Value string IdentitySubstitutionSecurityPrincipalId The object identifier of the security principal who is allowed to substitute its identity with a value provided in the X-USER-IDENTITY header. public string? IdentitySubstitutionSecurityPrincipalId { get; set; } Property Value string IdentitySubstitutionUserPrincipalNamePattern The Regex pattern used to validate the values allowed as User Principal Name (UPN) substitutes in the X-USER-IDENTITY header. public string? IdentitySubstitutionUserPrincipalNamePattern { get; set; } Property Value string SecurityGroupRetrievalStrategy The security group retrieval strategy of the FoundationaLLM instance. public string? SecurityGroupRetrievalStrategy { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Instance | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Instance Classes InstanceSettings Provides configuration settings for the current FoundationaLLM deployment instance."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.KeyVaultSecretEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.KeyVaultSecretEntry.html",
    "title": "Class KeyVaultSecretEntry | FoundationaLLM",
    "keywords": "Class KeyVaultSecretEntry Namespace FoundationaLLM.Common.Models.Configuration.KeyVault Assembly FoundationaLLM.Common.dll Represents a single entry in the Key Vault catalog. public class KeyVaultSecretEntry Inheritance object KeyVaultSecretEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KeyVaultSecretEntry(string, string?, string?) Represents a single entry in the Key Vault catalog. public KeyVaultSecretEntry(string secretName, string? minimumVersion, string? description = null) Parameters secretName string minimumVersion string description string Properties Description A description of the Key Vault secret. public string? Description { get; set; } Property Value string MinimumVersion The minimum version of the app that is required to use this Key Vault secret. public string? MinimumVersion { get; } Property Value string SecretName The name of the secret in the Key Vault. public string SecretName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.KeyVault | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.KeyVault Classes KeyVaultSecretEntry Represents a single entry in the Key Vault catalog."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageServiceSettings.html",
    "title": "Class BlobStorageServiceSettings | FoundationaLLM",
    "keywords": "Class BlobStorageServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Provides configuration settings to initialize a blob storage service. public record BlobStorageServiceSettings : IEquatable<BlobStorageServiceSettings> Inheritance object BlobStorageServiceSettings Implements IEquatable<BlobStorageServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountKey The account key used for authentication. This value should be set only if AuthenticationType has a value of AccountKey. public string? AccountKey { get; set; } Property Value string AccountName The name of the blob storage account. public string? AccountName { get; set; } Property Value string AuthenticationType A AuthenticationTypes value indicating the type of authentication used. [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes ConnectionString The connection string used for authentication. This value should be set only if AuthenticationType has a value of ConnectionString. public string? ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html",
    "title": "Class BlobStorageSettings | FoundationaLLM",
    "keywords": "Class BlobStorageSettings Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Provides configuration options for a Blob Storage service. public record BlobStorageSettings : IEquatable<BlobStorageSettings> Inheritance object BlobStorageSettings Implements IEquatable<BlobStorageSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BlobStorageConnection The connection string for the blob storage. public required string BlobStorageConnection { get; set; } Property Value string BlobStorageContainer The name of the blob storage container. public required string BlobStorageContainer { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Storage | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Storage Classes BlobStorageServiceSettings Provides configuration settings to initialize a blob storage service. BlobStorageSettings Provides configuration options for a Blob Storage service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.TokenTextSplitterServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.TokenTextSplitterServiceSettings.html",
    "title": "Class TokenTextSplitterServiceSettings | FoundationaLLM",
    "keywords": "Class TokenTextSplitterServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Text Assembly FoundationaLLM.Common.dll Provides configuration settings that control token-based text splitting. public record TokenTextSplitterServiceSettings : IEquatable<TokenTextSplitterServiceSettings> Inheritance object TokenTextSplitterServiceSettings Implements IEquatable<TokenTextSplitterServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TokenTextSplitterServiceSettings(string, string, int, int) Provides configuration settings that control token-based text splitting. public TokenTextSplitterServiceSettings(string Tokenizer, string TokenizerEncoder, int ChunkSizeTokens, int OverlapSizeTokens) Parameters Tokenizer string The tokenizer used to split the test into tokens. TokenizerEncoder string The name of the encoder used for tokenization. ChunkSizeTokens int The target size in tokens for the resulting text chunks. OverlapSizeTokens int Teh target size in tokens for the overlapping parts of the adjacent text chunks. Properties ChunkSizeTokens The target size in tokens for the resulting text chunks. public int ChunkSizeTokens { get; init; } Property Value int OverlapSizeTokens Teh target size in tokens for the overlapping parts of the adjacent text chunks. public int OverlapSizeTokens { get; init; } Property Value int Tokenizer The tokenizer used to split the test into tokens. public string Tokenizer { get; init; } Property Value string TokenizerEncoder The name of the encoder used for tokenization. public string TokenizerEncoder { get; init; } Property Value string Methods FromDictionary(Dictionary<string, string>) Creates and instance of the class based on a dictionary. public static TokenTextSplitterServiceSettings FromDictionary(Dictionary<string, string> settings) Parameters settings Dictionary<string, string> The dictionary containing the settings. Returns TokenTextSplitterServiceSettings A TokenTextSplitterServiceSettings instance initialized with the values from the dictionary."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Text | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Text Classes TokenTextSplitterServiceSettings Provides configuration settings that control token-based text splitting."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html",
    "title": "Class UserProfile | FoundationaLLM",
    "keywords": "Class UserProfile Namespace FoundationaLLM.Common.Models.Configuration.Users Assembly FoundationaLLM.Common.dll The user profile object persisted in long-term storage. public record UserProfile : IEquatable<UserProfile> Inheritance object UserProfile Implements IEquatable<UserProfile> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfile(string) The user profile object persisted in long-term storage. public UserProfile(string UPN) Parameters UPN string The user's account user principal name. Properties Id The unique identifier. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Type The document type. [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string UPN The user principal name. [JsonPropertyName(\"upn\")] public string UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Users | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration.Users Classes UserProfile The user profile object persisted in long-term storage."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Configuration Namespaces FoundationaLLM.Common.Models.Configuration.API FoundationaLLM.Common.Models.Configuration.AppConfiguration FoundationaLLM.Common.Models.Configuration.Authentication FoundationaLLM.Common.Models.Configuration.AzureAI FoundationaLLM.Common.Models.Configuration.Branding FoundationaLLM.Common.Models.Configuration.CosmosDB FoundationaLLM.Common.Models.Configuration.Environment FoundationaLLM.Common.Models.Configuration.Events FoundationaLLM.Common.Models.Configuration.Instance FoundationaLLM.Common.Models.Configuration.KeyVault FoundationaLLM.Common.Models.Configuration.Storage FoundationaLLM.Common.Models.Configuration.Text FoundationaLLM.Common.Models.Configuration.Users"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.CallContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.CallContext.html",
    "title": "Class CallContext | FoundationaLLM",
    "keywords": "Class CallContext Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CallContext : ICallContext Inheritance object CallContext Implements ICallContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. public UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity InstanceId The unique identifier of the current FoundationaLLM deployment instance. public string? InstanceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.html",
    "title": "Namespace FoundationaLLM.Common.Models.Context | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Context Classes CallContext Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventGridTopicSubscription.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventGridTopicSubscription.html",
    "title": "Class EventGridTopicSubscription | FoundationaLLM",
    "keywords": "Class EventGridTopicSubscription Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll The identifier of an Azure Event Grid topic subscription. public record EventGridTopicSubscription : IEquatable<EventGridTopicSubscription> Inheritance object EventGridTopicSubscription Implements IEquatable<EventGridTopicSubscription> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventGridTopicSubscription(string, string) The identifier of an Azure Event Grid topic subscription. public EventGridTopicSubscription(string Topic, string Subscription) Parameters Topic string The name of the Azure Event Grid namespace topic. Subscription string The name of the Azure Event Grid namespace topic subscription. Properties Subscription The name of the Azure Event Grid namespace topic subscription. public string Subscription { get; init; } Property Value string Topic The name of the Azure Event Grid namespace topic. public string Topic { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventArgs.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventArgs.html",
    "title": "Class EventSetEventArgs | FoundationaLLM",
    "keywords": "Class EventSetEventArgs Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll Event arguments required for event set event delegates. public class EventSetEventArgs : EventArgs Inheritance object EventArgs EventSetEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Events The list of subjects associated with the event. public required IList<CloudEvent> Events { get; set; } Property Value IList<CloudEvent> Namespace The namespace associated with the event set. public required string Namespace { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventDelegate.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventSetEventDelegate.html",
    "title": "Delegate EventSetEventDelegate | FoundationaLLM",
    "keywords": "Delegate EventSetEventDelegate Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll Multicast delegate used by the Azure Event Grid event service to provide support for subscribing to event namespaces. public delegate void EventSetEventDelegate(object sender, EventSetEventArgs e) Parameters sender object The object raising the event. e EventSetEventArgs The EventSetEventArgs that contains the details about the events being raised. Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.html",
    "title": "Namespace FoundationaLLM.Common.Models.Events | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Events Classes EventGridTopicSubscription The identifier of an Azure Event Grid topic subscription. EventSetEventArgs Event arguments required for event set event delegates. Delegates EventSetEventDelegate Multicast delegate used by the Azure Event Grid event service to provide support for subscribing to event namespaces."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Gateway.AgentCapabilityRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Gateway.AgentCapabilityRequest.html",
    "title": "Class AgentCapabilityRequest | FoundationaLLM",
    "keywords": "Class AgentCapabilityRequest Namespace FoundationaLLM.Common.Models.Gateway Assembly FoundationaLLM.Common.dll Provides the details required to create an agent capability. public class AgentCapabilityRequest Inheritance object AgentCapabilityRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CapabilityCategory The category of the capability. public required string CapabilityCategory { get; set; } Property Value string CapabilityName The name of the capability to be created. public required string CapabilityName { get; set; } Property Value string Parameters The dictionary of parameter values used to create the capability. public required Dictionary<string, object> Parameters { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Gateway.GatewayTextEmbeddingRequestMetrics.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Gateway.GatewayTextEmbeddingRequestMetrics.html",
    "title": "Class GatewayTextEmbeddingRequestMetrics | FoundationaLLM",
    "keywords": "Class GatewayTextEmbeddingRequestMetrics Namespace FoundationaLLM.Common.Models.Gateway Assembly FoundationaLLM.Common.dll Provides metrics related to text embedding requests submitted by the FoundationaLLM Gateway. public class GatewayTextEmbeddingRequestMetrics Inheritance object GatewayTextEmbeddingRequestMetrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountName The name of the account used for text embedding. [JsonPropertyName(\"account_name\")] public required string AccountName { get; set; } Property Value string CurrentRequestTokenCount The toal number of tokens used in the current request. [JsonPropertyName(\"current_request_token_count\")] public int CurrentRequestTokenCount { get; set; } Property Value int CurrentTextChunkCount The number of text chunks in the current request. [JsonPropertyName(\"current_text_chunk_count\")] public int CurrentTextChunkCount { get; set; } Property Value int Id The unique identifier of the request. [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string ModelName The name of the embedding model used for text embedding. [JsonPropertyName(\"model_name\")] public required string ModelName { get; set; } Property Value string ModelVersion The version of the embedding model used for text embedding. [JsonPropertyName(\"model_version\")] public required string ModelVersion { get; set; } Property Value string OperationsDetails The details of the embedding operations from the text chunks. For each embedding operation id, holds the list of the positions of the text chunks from the current request. [JsonPropertyName(\"operations_details\")] public Dictionary<string, List<int>> OperationsDetails { get; set; } Property Value Dictionary<string, List<int>> RequestRateWindowRequestCount The cummulated number of requests for the current request rate window. Includes all calls performed so far in the current call rate window. [JsonPropertyName(\"request_rate_window_request_count\")] public int RequestRateWindowRequestCount { get; set; } Property Value int RequestRateWindowStart The start timestamp of the current request rate window. [JsonPropertyName(\"request_rate_window_start\")] public DateTime RequestRateWindowStart { get; set; } Property Value DateTime TokenRateWindowStart The start timestamp of the current token rate window. [JsonPropertyName(\"token_rate_window_start\")] public DateTime TokenRateWindowStart { get; set; } Property Value DateTime TokenRateWindowTokenCount The cummulated number of tokens for the current token rate window. Includes all tokens used so far in the current token rate window. [JsonPropertyName(\"token_rate_window_token_count\")] public int TokenRateWindowTokenCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Gateway.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Gateway.html",
    "title": "Namespace FoundationaLLM.Common.Models.Gateway | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Gateway Classes AgentCapabilityRequest Provides the details required to create an agent capability. GatewayTextEmbeddingRequestMetrics Provides metrics related to text embedding requests submitted by the FoundationaLLM Gateway."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.ServiceStatusInfo.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.ServiceStatusInfo.html",
    "title": "Class ServiceStatusInfo | FoundationaLLM",
    "keywords": "Class ServiceStatusInfo Namespace FoundationaLLM.Common.Models.Infrastructure Assembly FoundationaLLM.Common.dll Represents the status of a service. public class ServiceStatusInfo Inheritance object ServiceStatusInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceId The instance ID of the service. [JsonPropertyName(\"instance_id\")] public string? InstanceId { get; set; } Property Value string InstanceName The instance of the service. [JsonPropertyName(\"instance_name\")] public string? InstanceName { get; set; } Property Value string Message The message associated with the status. [JsonPropertyName(\"message\")] public string? Message { get; set; } Property Value string Name The name of the service. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string Status The status of the service. [JsonPropertyName(\"status\")] public string? Status { get; set; } Property Value string SubordinateServices The status of all the subordinate services. [JsonPropertyName(\"subordinate_services\")] public List<ServiceStatusInfo>? SubordinateServices { get; set; } Property Value List<ServiceStatusInfo> Version The deployed FoundationaLLM version of the service. [JsonPropertyName(\"version\")] public string? Version { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.html",
    "title": "Namespace FoundationaLLM.Common.Models.Infrastructure | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Infrastructure Classes ServiceStatusInfo Represents the status of a service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.EmbeddingModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.EmbeddingModel.html",
    "title": "Class EmbeddingModel | FoundationaLLM",
    "keywords": "Class EmbeddingModel Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll public class EmbeddingModel Inheritance object EmbeddingModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ApiEndpoint The endpoint to use to access the language model. [JsonPropertyName(\"api_endpoint\")] public string? ApiEndpoint { get; set; } Property Value string ApiKey The API key of the language model endpoint to use to access the language model. [JsonPropertyName(\"api_key\")] public string? ApiKey { get; set; } Property Value string ApiVersion API version of the language model endpoint. [JsonPropertyName(\"api_version\")] public string? ApiVersion { get; set; } Property Value string ChunkSize The chunk size to use when creating vectors from the embedding model. [JsonPropertyName(\"chunk_size\")] public int ChunkSize { get; set; } Property Value int Deployment Name of the embedding model deployment. [JsonPropertyName(\"deployment\")] public string? Deployment { get; set; } Property Value string Model Name of the embedding model. [JsonPropertyName(\"model\")] public string? Model { get; set; } Property Value string Provider The provider of the emberdding model. [JsonPropertyName(\"provider\")] public string? Provider { get; set; } Property Value string Type The type of the embedding model. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.MetadataBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.MetadataBase.html",
    "title": "Class MetadataBase | FoundationaLLM",
    "keywords": "Class MetadataBase Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll Metadata model base class. public class MetadataBase Inheritance object MetadataBase Derived DataSourceBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Description property. [JsonPropertyName(\"description\")] public string? Description { get; set; } Property Value string Name Name property. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string Type Type property. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.html",
    "title": "Namespace FoundationaLLM.Common.Models.Metadata | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Metadata Classes EmbeddingModel MetadataBase Metadata model base class."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html",
    "title": "Class BlobStorageConfiguration | FoundationaLLM",
    "keywords": "Class BlobStorageConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Blob storage configuration settings. public class BlobStorageConfiguration Inheritance object BlobStorageConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string ConnectionStringSecretName The connection string key vault secret name that is retrieved from key vault. [JsonPropertyName(\"connection_string_secret\")] public string? ConnectionStringSecretName { get; set; } Property Value string ContainerName The name of the container [JsonPropertyName(\"container\")] public string? ContainerName { get; set; } Property Value string Files The list of files to get [JsonPropertyName(\"files\")] public List<string>? Files { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.CXOConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.CXOConfiguration.html",
    "title": "Class CXOConfiguration | FoundationaLLM",
    "keywords": "Class CXOConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Configuration for the CXO agent. public class CXOConfiguration : SearchServiceConfiguration Inheritance object SearchServiceConfiguration CXOConfiguration Inherited Members SearchServiceConfiguration.Endpoint SearchServiceConfiguration.KeySecret SearchServiceConfiguration.IndexName SearchServiceConfiguration.TopN SearchServiceConfiguration.EmbeddingFieldName SearchServiceConfiguration.TextFieldName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Company The name of the CXO's company. [JsonPropertyName(\"company\")] public required string Company { get; set; } Property Value string ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string RetrieverMode The vector database. [JsonPropertyName(\"retriever_mode\")] public required string RetrieverMode { get; set; } Property Value string Sources Search filter elements. [JsonPropertyName(\"sources\")] public string[]? Sources { get; set; } Property Value string[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html",
    "title": "Class SQLDatabaseConfiguration | FoundationaLLM",
    "keywords": "Class SQLDatabaseConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll SQL Database configuration settings. public class SQLDatabaseConfiguration Inheritance object SQLDatabaseConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string DatabaseName The name of the database on the server. [JsonPropertyName(\"database_name\")] public string? DatabaseName { get; set; } Property Value string Dialect The SQL dialect [JsonPropertyName(\"dialect\")] public string? Dialect { get; set; } Property Value string ExcludeTables List of tables to allow access to in the database. [JsonPropertyName(\"exclude_tables\")] public List<string> ExcludeTables { get; set; } Property Value List<string> FewShotExampleCount The number of rows from each table to provide as examples to the language model. [JsonPropertyName(\"few_shot_example_count\")] public int FewShotExampleCount { get; set; } Property Value int Host The database server host name. [JsonPropertyName(\"host\")] public string? Host { get; set; } Property Value string IncludeTables List of tables to allow access to in the database. [JsonPropertyName(\"include_tables\")] public List<string> IncludeTables { get; set; } Property Value List<string> PasswordSecretSettingKeyName The name of the secret in Key Vault from where the password can be retrieved. [JsonPropertyName(\"password_secret_setting_key_name\")] public string? PasswordSecretSettingKeyName { get; set; } Property Value string Port The port number of the database on the host. [JsonPropertyName(\"port\")] public int Port { get; set; } Property Value int RowLevelSecurityEnabled Flag indicating whether row level security is enabled. [JsonPropertyName(\"row_level_security_enabled\")] public bool RowLevelSecurityEnabled { get; set; } Property Value bool Username The username for connecting to the database. [JsonPropertyName(\"username\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html",
    "title": "Class SearchServiceConfiguration | FoundationaLLM",
    "keywords": "Class SearchServiceConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Search Service configuration settings. public class SearchServiceConfiguration Inheritance object SearchServiceConfiguration Derived CXOConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string EmbeddingFieldName (Optional) The name of the field to use for embedding in the Search Service. [JsonPropertyName(\"embedding_field_name\")] public string? EmbeddingFieldName { get; set; } Property Value string Endpoint The endpoint of the Search Service [JsonPropertyName(\"endpoint\")] public string? Endpoint { get; set; } Property Value string IndexName The name of the index in Azure AI Search [JsonPropertyName(\"index_name\")] public string? IndexName { get; set; } Property Value string KeySecret The name of key vault secret containing the access key [JsonPropertyName(\"key_secret\")] public string? KeySecret { get; set; } Property Value string TextFieldName (Optional) The name of the field to use for raw text in the Search Service. [JsonPropertyName(\"text_field_name\")] public string? TextFieldName { get; set; } Property Value string TopN (Optional) The number of rows to return from the index search [JsonPropertyName(\"top_n\")] public int? TopN { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Classes BlobStorageConfiguration Blob storage configuration settings. CXOConfiguration Configuration for the CXO agent. SQLDatabaseConfiguration SQL Database configuration settings. SearchServiceConfiguration Search Service configuration settings."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.BlobStorageDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.BlobStorageDataSource.html",
    "title": "Class BlobStorageDataSource | FoundationaLLM",
    "keywords": "Class BlobStorageDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Blob storage data source metadata model. public class BlobStorageDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase BlobStorageDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Blob storage configuration settings. [JsonPropertyName(\"configuration\")] public BlobStorageConfiguration? Configuration { get; set; } Property Value BlobStorageConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.CXODataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.CXODataSource.html",
    "title": "Class CXODataSource | FoundationaLLM",
    "keywords": "Class CXODataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll CXO data source metadata model. public class CXODataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase CXODataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Search Service configuration settings. [JsonPropertyName(\"configuration\")] public CXOConfiguration? Configuration { get; set; } Property Value CXOConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.DataSourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.DataSourceBase.html",
    "title": "Class DataSourceBase | FoundationaLLM",
    "keywords": "Class DataSourceBase Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Data Source base class. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"underlying_implementation\")] [JsonDerivedType(typeof(BlobStorageDataSource), \"blob-storage\")] [JsonDerivedType(typeof(CXODataSource), \"cxo\")] [JsonDerivedType(typeof(SearchServiceDataSource), \"search-service\")] [JsonDerivedType(typeof(SQLDatabaseDataSource), \"sql\")] public class DataSourceBase : MetadataBase Inheritance object MetadataBase DataSourceBase Derived BlobStorageDataSource CXODataSource SQLDatabaseDataSource SearchServiceDataSource Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataDescription Descriptor for the type of data in the data source. [JsonPropertyName(\"data_description\")] public string? DataDescription { get; set; } Property Value string Examples Survey data for a CSV file that contains survey results."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SQLDatabaseDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SQLDatabaseDataSource.html",
    "title": "Class SQLDatabaseDataSource | FoundationaLLM",
    "keywords": "Class SQLDatabaseDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll SQL Database data source metadata model. public class SQLDatabaseDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SQLDatabaseDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration SQL Database configuration settings. [JsonPropertyName(\"configuration\")] public SQLDatabaseConfiguration? Configuration { get; set; } Property Value SQLDatabaseConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SearchServiceDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SearchServiceDataSource.html",
    "title": "Class SearchServiceDataSource | FoundationaLLM",
    "keywords": "Class SearchServiceDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Search service data source metadata model. public class SearchServiceDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SearchServiceDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Search Service configuration settings. [JsonPropertyName(\"configuration\")] public SearchServiceConfiguration? Configuration { get; set; } Property Value SearchServiceConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Classes BlobStorageDataSource Blob storage data source metadata model. CXODataSource CXO data source metadata model. DataSourceBase Data Source base class. SQLDatabaseDataSource SQL Database data source metadata model. SearchServiceDataSource Search service data source metadata model."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AssistantCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AssistantCompletionMessage.html",
    "title": "Class AssistantCompletionMessage | FoundationaLLM",
    "keywords": "Class AssistantCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Assistant input message for a direct orchestration request. public class AssistantCompletionMessage : CompletionMessage Inheritance object CompletionMessage AssistantCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AssistantCompletionMessage() Initializes a new instance of the AssistantCompletionMessage class. public AssistantCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionInputData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionInputData.html",
    "title": "Class AzureAICompletionInputData | FoundationaLLM",
    "keywords": "Class AzureAICompletionInputData Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input data for a direct request to an Azure AI model. public class AzureAICompletionInputData Inheritance object AzureAICompletionInputData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InputString Object defining the required input role and content key value pairs. [JsonPropertyName(\"input_string\")] public CompletionMessage[]? InputString { get; set; } Property Value CompletionMessage[] Parameters Model configuration parameters. [JsonPropertyName(\"parameters\")] public AzureAICompletionParameters? Parameters { get; set; } Property Value AzureAICompletionParameters"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionParameters.html",
    "title": "Class AzureAICompletionParameters | FoundationaLLM",
    "keywords": "Class AzureAICompletionParameters Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Supported model configuration parameters. public class AzureAICompletionParameters Inheritance object AzureAICompletionParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DoSample Whether or not to use sampling; use greedy decoding otherwise. [JsonPropertyName(\"do_sample\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? DoSample { get; set; } Property Value bool? IgnoreEOS Whether to ignore the EOS token and continue generating tokens after the EOS token is generated. Defaults to False. [JsonPropertyName(\"ignore_eos\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? IgnoreEOS { get; set; } Property Value bool? MaxNewTokens The maximum number of tokens to generate. [JsonPropertyName(\"max_new_tokens\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? MaxNewTokens { get; set; } Property Value int? ReturnFullText Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. [JsonPropertyName(\"return_full_text\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? ReturnFullText { get; set; } Property Value bool? Temperature Controls randomness in the model. Lower values will make the model more deterministic and higher values will make the model more random. [JsonPropertyName(\"temperature\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? Temperature { get; set; } Property Value float? TopK The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. [JsonPropertyName(\"top_k\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopK { get; set; } Property Value float? TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling, defaults to null. [JsonPropertyName(\"top_p\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopP { get; set; } Property Value float?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionRequest.html",
    "title": "Class AzureAICompletionRequest | FoundationaLLM",
    "keywords": "Class AzureAICompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input for a direct Azure AI request. public class AzureAICompletionRequest Inheritance object AzureAICompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InputData Input data for a direct request to an Azure AI model. [JsonPropertyName(\"input_data\")] public AzureAICompletionInputData? InputData { get; set; } Property Value AzureAICompletionInputData"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionResponse.html",
    "title": "Class AzureAICompletionResponse | FoundationaLLM",
    "keywords": "Class AzureAICompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The response from the Azure AI orchestration service. public class AzureAICompletionResponse Inheritance object AzureAICompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Output The completion output from an Azure AI model. [JsonPropertyName(\"output\")] public string? Output { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionParameters.html",
    "title": "Class AzureOpenAICompletionParameters | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionParameters Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Supported model configuration parameters. public class AzureOpenAICompletionParameters Inheritance object AzureOpenAICompletionParameters Derived AzureOpenAICompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BestOf Generates best_of completions server-side and returns the \"best\" (the one with the lowest log probability per token). [JsonPropertyName(\"best_of\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? BestOf { get; set; } Property Value int? Echo Echo back the prompt in addition to the completion. This parameter cannot be used with gpt-35-turbo. [JsonPropertyName(\"echo\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? Echo { get; set; } Property Value bool? FrequencyPenalty Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. [JsonPropertyName(\"frequency_penalty\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? FrequencyPenalty { get; set; } Property Value float? LogProbs Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. [JsonPropertyName(\"logprobs\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? LogProbs { get; set; } Property Value int? LogitBias Modify the likelihood of specified tokens appearing in the completion. [JsonPropertyName(\"logit_bias\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public LogitBias? LogitBias { get; set; } Property Value LogitBias MaxTokens The maximum number of tokens to generate. [JsonPropertyName(\"max_tokens\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? MaxTokens { get; set; } Property Value int? N How many completions to generate for each prompt. [JsonPropertyName(\"n\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? N { get; set; } Property Value int? PresencePenalty Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. [JsonPropertyName(\"presence_penalty\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? PresencePenalty { get; set; } Property Value float? Stop Up to four sequences where the API will stop generating further tokens. The returned text won't contain the stop sequence. For GPT-4 Turbo with Vision, up to two sequences are supported. [JsonPropertyName(\"stop\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string[]? Stop { get; set; } Property Value string[] Stream Whether to stream back partial progress. [JsonPropertyName(\"stream\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? Stream { get; set; } Property Value bool? Suffix The suffix that comes after a completion of inserted text. [JsonPropertyName(\"suffix\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Suffix { get; set; } Property Value string Temperature Controls randomness in the model. Lower values will make the model more deterministic and higher values will make the model more random. [JsonPropertyName(\"temperature\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? Temperature { get; set; } Property Value float? TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling, defaults to null. [JsonPropertyName(\"top_p\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopP { get; set; } Property Value float? User A unique identifier representing your end-user, which can help monitoring and detecting abuse. [JsonPropertyName(\"user\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? User { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionRequest.html",
    "title": "Class AzureOpenAICompletionRequest | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input for a direct Azure OpenAI request. public class AzureOpenAICompletionRequest : AzureOpenAICompletionParameters Inheritance object AzureOpenAICompletionParameters AzureOpenAICompletionRequest Inherited Members AzureOpenAICompletionParameters.MaxTokens AzureOpenAICompletionParameters.Temperature AzureOpenAICompletionParameters.TopP AzureOpenAICompletionParameters.LogitBias AzureOpenAICompletionParameters.User AzureOpenAICompletionParameters.N AzureOpenAICompletionParameters.Stream AzureOpenAICompletionParameters.LogProbs AzureOpenAICompletionParameters.Suffix AzureOpenAICompletionParameters.Echo AzureOpenAICompletionParameters.Stop AzureOpenAICompletionParameters.PresencePenalty AzureOpenAICompletionParameters.FrequencyPenalty AzureOpenAICompletionParameters.BestOf object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Messages Object defining the required input role and content key value pairs. [JsonPropertyName(\"messages\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionMessage[]? Messages { get; set; } Property Value CompletionMessage[] Prompt The prompt for which to generate completions. [JsonPropertyName(\"prompt\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Prompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponse.html",
    "title": "Class AzureOpenAICompletionResponse | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The response from the Azure OpenAI orchestration service. public class AzureOpenAICompletionResponse Inheritance object AzureOpenAICompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Choices The completion response choices. [JsonPropertyName(\"choices\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public AzureOpenAICompletionResponseChoice[]? Choices { get; set; } Property Value AzureOpenAICompletionResponseChoice[] Created The completion response created timestamp. [JsonPropertyName(\"created\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? Created { get; set; } Property Value int? Id The completion response ID. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Model The completion model used for the response. [JsonPropertyName(\"model\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Model { get; set; } Property Value string Object The completion response object. [JsonPropertyName(\"object\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Object { get; set; } Property Value string Usage Completion usage statistics. [JsonPropertyName(\"usage\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionUsage? Usage { get; set; } Property Value CompletionUsage"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponseChoice.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponseChoice.html",
    "title": "Class AzureOpenAICompletionResponseChoice | FoundationaLLM",
    "keywords": "Class AzureOpenAICompletionResponseChoice Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The completion response choice. public class AzureOpenAICompletionResponseChoice Inheritance object AzureOpenAICompletionResponseChoice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FinishReason The finish reason for the completion response. [JsonPropertyName(\"finish_reason\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? FinishReason { get; set; } Property Value string Index The completion response index. [JsonPropertyName(\"index\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? Index { get; set; } Property Value int? LogProbs The log probabilities on the logprobs most likely tokens, as well the chosen tokens. [JsonPropertyName(\"logprobs\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? LogProbs { get; set; } Property Value int? Message Contains the completion response message if any. [JsonPropertyName(\"message\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionMessage? Message { get; set; } Property Value CompletionMessage Text The completion response text. [JsonPropertyName(\"text\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionMessage.html",
    "title": "Class CompletionMessage | FoundationaLLM",
    "keywords": "Class CompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Object defining the completion role and content key value pairs. public class CompletionMessage Inheritance object CompletionMessage Derived AssistantCompletionMessage SystemCompletionMessage ToolCompletionMessage UserCompletionMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text either input into or output by the model. [JsonPropertyName(\"content\")] public string? Content { get; set; } Property Value string Role The role of the chat persona creating content. Value will be one of: \"user\", \"assistant\", \"tool\", or \"system\". [JsonPropertyName(\"role\")] public string? Role { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionUsage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionUsage.html",
    "title": "Class CompletionUsage | FoundationaLLM",
    "keywords": "Class CompletionUsage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Contains the usage statistics for a completion. public class CompletionUsage Inheritance object CompletionUsage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletionTokens The number of tokens used for the completion. [JsonPropertyName(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int PromptTokens The number of tokens used for the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalTokens The total number of tokens used for the completion. [JsonPropertyName(\"total_tokens\")] public int TotalTokens { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.LogitBias.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.LogitBias.html",
    "title": "Class LogitBias | FoundationaLLM",
    "keywords": "Class LogitBias Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect varies per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\": -100} to prevent the endoftext token from being generated. public class LogitBias Inheritance object LogitBias Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Bias The bias value to apply to the token. public float? Bias { get; set; } Property Value float? TokenId The token ID of which to modify the likelihood. public string? TokenId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.SystemCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.SystemCompletionMessage.html",
    "title": "Class SystemCompletionMessage | FoundationaLLM",
    "keywords": "Class SystemCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll System input message for a direct orchestration request. public class SystemCompletionMessage : CompletionMessage Inheritance object CompletionMessage SystemCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SystemCompletionMessage() Initializes a new instance of the SystemCompletionMessage class. public SystemCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.ToolCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.ToolCompletionMessage.html",
    "title": "Class ToolCompletionMessage | FoundationaLLM",
    "keywords": "Class ToolCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Tool input message for a direct orchestration request. public class ToolCompletionMessage : CompletionMessage Inheritance object CompletionMessage ToolCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ToolCompletionMessage() Initializes a new instance of the ToolCompletionMessage class. public ToolCompletionMessage() Properties ToolCallId Tool call to which this message is responding. [JsonPropertyName(\"tool_call_id\")] public required string ToolCallId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.UserCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.UserCompletionMessage.html",
    "title": "Class UserCompletionMessage | FoundationaLLM",
    "keywords": "Class UserCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll User input message for a direct orchestration request. public class UserCompletionMessage : CompletionMessage Inheritance object CompletionMessage UserCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserCompletionMessage() Initializes a new instance of the UserCompletionMessage class. public UserCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Direct | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.Direct Classes AssistantCompletionMessage Assistant input message for a direct orchestration request. AzureAICompletionInputData Input data for a direct request to an Azure AI model. AzureAICompletionParameters Supported model configuration parameters. AzureAICompletionRequest Input for a direct Azure AI request. AzureAICompletionResponse The response from the Azure AI orchestration service. AzureOpenAICompletionParameters Supported model configuration parameters. AzureOpenAICompletionRequest Input for a direct Azure OpenAI request. AzureOpenAICompletionResponse The response from the Azure OpenAI orchestration service. AzureOpenAICompletionResponseChoice The completion response choice. CompletionMessage Object defining the completion role and content key value pairs. CompletionUsage Contains the usage statistics for a completion. LogitBias Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect varies per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\": -100} to prevent the endoftext token from being generated. SystemCompletionMessage System input message for a direct orchestration request. ToolCompletionMessage Tool input message for a direct orchestration request. UserCompletionMessage User input message for a direct orchestration request."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperation.html",
    "title": "Class LongRunningOperation | FoundationaLLM",
    "keywords": "Class LongRunningOperation Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Represents the current state of a long-running operation. public class LongRunningOperation Inheritance object LongRunningOperation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The identifier of the long-running operation. [JsonPropertyName(\"id\")] public string? Id { get; } Property Value string LastUpdated The time stamp of the last update to the operation. [JsonPropertyName(\"last_updated\")] public DateTime? LastUpdated { get; set; } Property Value DateTime? OperationId The identifier of the long-running operation. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string Status The status of the long-running operation. [JsonPropertyName(\"status\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required OperationStatus Status { get; set; } Property Value OperationStatus StatusMessage The message describing the current state of the operation. [JsonPropertyName(\"status_message\")] public string? StatusMessage { get; set; } Property Value string TTL The time-to-live (TTL) for the log entry. [JsonPropertyName(\"ttl\")] public int TTL { get; set; } Property Value int Type The document type. [JsonPropertyName(\"type\")] public string Type { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperationLogEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperationLogEntry.html",
    "title": "Class LongRunningOperationLogEntry | FoundationaLLM",
    "keywords": "Class LongRunningOperationLogEntry Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The point-in-time state of a long-running operation. public class LongRunningOperationLogEntry Inheritance object LongRunningOperationLogEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LongRunningOperationLogEntry() Initializes a new instance of the LongRunningOperationLogEntry class. public LongRunningOperationLogEntry() LongRunningOperationLogEntry(string, OperationStatus, string?) Initializes a new instance of the LongRunningOperationLogEntry class with the specified values. public LongRunningOperationLogEntry(string operationId, OperationStatus status, string? statusMessage) Parameters operationId string The identifier of the long-running operation. status OperationStatus The status of the long-running operation. statusMessage string The message describing the current state of the operation. Properties Id The identifier of the long-running operation log entry. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string OperationId The identifier of the long-running operation. [JsonPropertyName(\"operation_id\")] public string OperationId { get; set; } Property Value string Status The status of the long-running operation. [JsonPropertyName(\"status\")] [JsonConverter(typeof(JsonStringEnumConverter))] public OperationStatus Status { get; set; } Property Value OperationStatus StatusMessage The message describing the current state of the operation. [JsonPropertyName(\"status_message\")] public string? StatusMessage { get; set; } Property Value string TTL The time-to-live (TTL) for the log entry. [JsonPropertyName(\"ttl\")] public int TTL { get; set; } Property Value int TimeStamp The time stamp of the log entry. [JsonPropertyName(\"time_stamp\")] public DateTime TimeStamp { get; set; } Property Value DateTime Type The document type. [JsonPropertyName(\"type\")] public string Type { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OperationStatus.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OperationStatus.html",
    "title": "Enum OperationStatus | FoundationaLLM",
    "keywords": "Enum OperationStatus Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Represents the status of a long running operation. public enum OperationStatus Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Completed = 2 Operation has been completed. Failed = 3 Operation has completed in a failed state InProgress = 1 Operation is in progress. Pending = 0 Operation is new and Pending processing."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.AttachmentProperties.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.AttachmentProperties.html",
    "title": "Class AttachmentProperties | FoundationaLLM",
    "keywords": "Class AttachmentProperties Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll Provides a set of properties that are used to define an attachment. public class AttachmentProperties Inheritance object AttachmentProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The content type of the attachment. [JsonPropertyName(\"content_type\")] public required string ContentType { get; set; } Property Value string OriginalFileName The original file name of the attachment. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string Provider The name of the provider that is used to manage the attachment. [JsonPropertyName(\"provider\")] public required string Provider { get; set; } Property Value string Remarks The following file providers are supported: FoundationaLLM.Attachment FoundationaLLM.AzureOpenAI ProviderFileName The file name of the attachment that is stored by the provider. [JsonPropertyName(\"provider_file_name\")] public required string ProviderFileName { get; set; } Property Value string Remarks In the case of the FoundationaLLM.Attachment provider, this is the full path of the file in the storage account. In the case of the FoundationaLLM.AzureOpenAI provider, this is the OpenAI file ID. ProviderStorageAccountName The name of the storage account that is used by the provider. [JsonPropertyName(\"provider_storage_account_name\")] public string? ProviderStorageAccountName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequest.html",
    "title": "Class CompletionRequest | FoundationaLLM",
    "keywords": "Class CompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll The completion request object. public class CompletionRequest : CompletionRequestBase Inheritance object CompletionRequestBase CompletionRequest Inherited Members CompletionRequestBase.OperationId CompletionRequestBase.SessionId CompletionRequestBase.UserPrompt CompletionRequestBase.MessageHistory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the selected agent. [JsonPropertyName(\"agent_name\")] public string? AgentName { get; set; } Property Value string Attachments One or more attachments to include with the orchestration request. The values should be the ObjectID of the attachment(s). [JsonPropertyName(\"attachments\")] public List<string> Attachments { get; init; } Property Value List<string> GatekeeperOptions A list of Gatekeeper feature names used by the orchestration request. [JsonPropertyName(\"gatekeeper_options\")] public string[]? GatekeeperOptions { get; set; } Property Value string[] Settings Settings that override some aspects of behaviour of the orchestration. [JsonPropertyName(\"settings\")] public OrchestrationSettings? Settings { get; set; } Property Value OrchestrationSettings"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequestBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequestBase.html",
    "title": "Class CompletionRequestBase | FoundationaLLM",
    "keywords": "Class CompletionRequestBase Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll Base for completion requests public class CompletionRequestBase Inheritance object CompletionRequestBase Derived CompletionRequest LLMCompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MessageHistory The message history associated with the completion request. [JsonPropertyName(\"message_history\")] public List<MessageHistoryItem>? MessageHistory { get; set; } Property Value List<MessageHistoryItem> OperationId The Operation ID identifying the completion request. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string SessionId The session ID. [JsonPropertyName(\"session_id\")] public string? SessionId { get; set; } Property Value string UserPrompt Represent the input or user prompt. [JsonPropertyName(\"user_prompt\")] public required string UserPrompt { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.LLMCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.LLMCompletionRequest.html",
    "title": "Class LLMCompletionRequest | FoundationaLLM",
    "keywords": "Class LLMCompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll The completion request sent by the Orchestration API to any of the downstream orchestrator APIs. public class LLMCompletionRequest : CompletionRequestBase Inheritance object CompletionRequestBase LLMCompletionRequest Inherited Members CompletionRequestBase.OperationId CompletionRequestBase.SessionId CompletionRequestBase.UserPrompt CompletionRequestBase.MessageHistory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIModel The AIModelBase object from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the agent. [JsonIgnore] public AIModelBase AIModel { get; } Property Value AIModelBase AIModelEndpointConfiguration The APIEndpointConfiguration object from the Objects dictionary corresponding to the AIModelBase object from the same dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the AIModel object associated with the agent. [JsonIgnore] public APIEndpointConfiguration AIModelEndpointConfiguration { get; } Property Value APIEndpointConfiguration Agent The agent that will process the completion request. [JsonPropertyName(\"agent\")] public required AgentBase Agent { get; set; } Property Value AgentBase Attachments A list of AttachmentProperties objects with the properties of the attachments to include with the orchestration request. [JsonPropertyName(\"attachments\")] public List<AttachmentProperties> Attachments { get; init; } Property Value List<AttachmentProperties> IndexingProfiles The list of IndexingProfile objects from the Objects dictionary. Ensure the Validate method is called before accessing this property. These objects are supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifiers set on the agent's vectorization settings. [JsonIgnore] public List<IndexingProfile>? IndexingProfiles { get; } Property Value List<IndexingProfile> Objects Dictionary of objects (indexed by names) resulting from exploding object identifiers in the Orchestration API. Can also contain objects that are not the direct result of exploding an object identifier. The dictionary supports the following keys: /instances/{instanceId}/providers/FoundationaLLM.Prompt/prompts/{name} /instances/{instanceId}/providers/FoundationaLLM.AIModel/aiModels/{name} /instances/{instanceId}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/{name} /instances/{instanceId}/providers/FoundationaLLM.Vectorization/indexingProfiles/{name} /instances/{instanceId}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/{name} AllAgents [JsonPropertyName(\"objects\")] public Dictionary<string, object> Objects { get; set; } Property Value Dictionary<string, object> OtherAgentsDescriptions The dictionary of other agent descriptions from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the descriptions of all agents the calling identity has access to, except for the agent associated with the request. [JsonIgnore] public Dictionary<string, string> OtherAgentsDescriptions { get; } Property Value Dictionary<string, string> Prompt The MultipartPrompt object from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the agent. [JsonIgnore] public MultipartPrompt Prompt { get; } Property Value MultipartPrompt TextEmbeddingProfile The TextEmbeddingProfile object from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the agent's vectorization settings. [JsonIgnore] public TextEmbeddingProfile? TextEmbeddingProfile { get; } Property Value TextEmbeddingProfile Methods Validate() Validates the content of this LLMCompletionRequest. public void Validate() Exceptions OrchestrationException"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.OrchestrationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.OrchestrationSettings.html",
    "title": "Class OrchestrationSettings | FoundationaLLM",
    "keywords": "Class OrchestrationSettings Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll Provides settings for a completion request of type CompletionRequest. public class OrchestrationSettings Inheritance object OrchestrationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ModelParameters Dictionary with override values for the model parameters. For the list of supported keys, see ModelParametersKeys. [JsonPropertyName(\"model_parameters\")] public Dictionary<string, object>? ModelParameters { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Request | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.Request Classes AttachmentProperties Provides a set of properties that are used to define an attachment. CompletionRequest The completion request object. CompletionRequestBase Base for completion requests LLMCompletionRequest The completion request sent by the Orchestration API to any of the downstream orchestrator APIs. OrchestrationSettings Provides settings for a completion request of type CompletionRequest."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.AnalysisResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.AnalysisResult.html",
    "title": "Class AnalysisResult | FoundationaLLM",
    "keywords": "Class AnalysisResult Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Represents the result of an analysis. public class AnalysisResult Inheritance object AnalysisResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentCapabilityCategory The category of the agent's capability that was used in the analysis. [JsonPropertyName(\"agent_capability_category\")] public string? AgentCapabilityCategory { get; set; } Property Value string ToolInput The input provided to the tool for analysis. [JsonPropertyName(\"tool_input\")] public string? ToolInput { get; set; } Property Value string ToolName The name of the tool that performed the analysis. [JsonPropertyName(\"tool_name\")] public string? ToolName { get; set; } Property Value string ToolOutput The output generated by the tool after analysis. [JsonPropertyName(\"tool_output\")] public string? ToolOutput { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.Citation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.Citation.html",
    "title": "Class Citation | FoundationaLLM",
    "keywords": "Class Citation Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Encapsulates data about the sources used in building a completion response. public class Citation Inheritance object Citation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Filepath The location of the source information. [JsonPropertyName(\"filepath\")] public string? Filepath { get; set; } Property Value string Id The index identifier of the document containing the source information. [JsonPropertyName(\"id\")] public string? Id { get; set; } Property Value string Title The title of the document containing the source information. [JsonPropertyName(\"title\")] public string? Title { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponse.html",
    "title": "Class CompletionResponse | FoundationaLLM",
    "keywords": "Class CompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Response from a language model. public class CompletionResponse : CompletionResponseBase Inheritance object CompletionResponseBase CompletionResponse Inherited Members CompletionResponseBase.OperationId CompletionResponseBase.Completion CompletionResponseBase.Content CompletionResponseBase.AnalysisResults CompletionResponseBase.Citations CompletionResponseBase.UserPrompt CompletionResponseBase.FullPrompt CompletionResponseBase.PromptTemplate CompletionResponseBase.AgentName CompletionResponseBase.PromptTokens CompletionResponseBase.CompletionTokens CompletionResponseBase.TotalTokens CompletionResponseBase.TotalCost CompletionResponseBase.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionResponse() Initialize a completion response. public CompletionResponse() CompletionResponse(string, string, string, int, int, float[]?) Initialize a completion response public CompletionResponse(string operationId, string completion, string userPrompt, int userPromptTokens, int responseTokens, float[]? userPromptEmbedding) Parameters operationId string The operation id of the completion request. completion string The completion response from the language model. userPrompt string The user prompt the language model responded to. userPromptTokens int The number of tokens in the prompt. responseTokens int The number of tokens in the completion. userPromptEmbedding float[] User prompt embedding. Properties UserPromptEmbedding User prompt embedding. [JsonPropertyName(\"user_prompt_embedding\")] public float[]? UserPromptEmbedding { get; set; } Property Value float[] Methods FromJSONDocument(JsonDocument) Returns a CompletionResponse object from a JSON document. public static CompletionResponse? FromJSONDocument(JsonDocument json) Parameters json JsonDocument The JSON document to deserialize. Returns CompletionResponse"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponseBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponseBase.html",
    "title": "Class CompletionResponseBase | FoundationaLLM",
    "keywords": "Class CompletionResponseBase Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Base model for a response from a language model. public class CompletionResponseBase Inheritance object CompletionResponseBase Derived CompletionResponse LLMCompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the FoundationaLLM agent. [JsonPropertyName(\"agent_name\")] public string? AgentName { get; set; } Property Value string AnalysisResults A list of results from the analysis. [JsonPropertyName(\"analysis_results\")] public List<AnalysisResult>? AnalysisResults { get; set; } Property Value List<AnalysisResult> Citations The citations used in building the completion response. [JsonPropertyName(\"citations\")] public Citation[]? Citations { get; set; } Property Value Citation[] Completion The completion response from the language model. [JsonPropertyName(\"completion\")] public string? Completion { get; set; } Property Value string CompletionTokens The number of tokens in the completion. [JsonPropertyName(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int Content Content returned from the Assistants API. [JsonPropertyName(\"content\")] public List<MessageContentItemBase>? Content { get; set; } Property Value List<MessageContentItemBase> Deleted Deleted flag used for soft delete. [JsonPropertyName(\"deleted\")] public bool Deleted { get; set; } Property Value bool FullPrompt The full prompt composed by the LLM. [JsonPropertyName(\"full_prompt\")] public string? FullPrompt { get; set; } Property Value string OperationId The Operation ID identifying the completion request. [JsonPropertyName(\"operation_id\")] public string OperationId { get; set; } Property Value string PromptTemplate The prompt template used by the LLM. [JsonPropertyName(\"prompt_template\")] public string? PromptTemplate { get; set; } Property Value string PromptTokens The number of tokens in the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalCost The total cost of executing the completion operation. [JsonPropertyName(\"total_cost\")] public float TotalCost { get; set; } Property Value float TotalTokens The total number of tokens. [JsonPropertyName(\"total_tokens\")] public int TotalTokens { get; } Property Value int UserPrompt The user prompt the language model responded to. [JsonPropertyName(\"user_prompt\")] public string UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.LLMCompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.LLMCompletionResponse.html",
    "title": "Class LLMCompletionResponse | FoundationaLLM",
    "keywords": "Class LLMCompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll LLMOrchestrationCompletionResponse class public class LLMCompletionResponse : CompletionResponseBase Inheritance object CompletionResponseBase LLMCompletionResponse Inherited Members CompletionResponseBase.OperationId CompletionResponseBase.Completion CompletionResponseBase.Content CompletionResponseBase.AnalysisResults CompletionResponseBase.Citations CompletionResponseBase.UserPrompt CompletionResponseBase.FullPrompt CompletionResponseBase.PromptTemplate CompletionResponseBase.AgentName CompletionResponseBase.PromptTokens CompletionResponseBase.CompletionTokens CompletionResponseBase.TotalTokens CompletionResponseBase.TotalCost CompletionResponseBase.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.MessageContentItemBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.MessageContentItemBase.html",
    "title": "Class MessageContentItemBase | FoundationaLLM",
    "keywords": "Class MessageContentItemBase Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Base message content item model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(OpenAITextMessageContentItem), \"text\")] [JsonDerivedType(typeof(OpenAIImageFileMessageContentItem), \"image_file\")] [JsonDerivedType(typeof(OpenAIFilePathContentItem), \"file_path\")] public class MessageContentItemBase Inheritance object MessageContentItemBase Derived OpenAIFilePathContentItem OpenAIImageFileMessageContentItem OpenAITextMessageContentItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentCapabilityCategory The FoundationaLLM agent capability category that generated the message content item. [JsonPropertyName(\"agent_capability_category\")] [JsonPropertyOrder(-99)] public required string AgentCapabilityCategory { get; set; } Property Value string Remarks Must be one of the values defined in AgentCapabilityCategoryNames. Type The type of the message content item. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-100)] public virtual string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.OpenAIFilePathContentItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.OpenAIFilePathContentItem.html",
    "title": "Class OpenAIFilePathContentItem | FoundationaLLM",
    "keywords": "Class OpenAIFilePathContentItem Namespace FoundationaLLM.Common.Models.Orchestration.Response.OpenAI Assembly FoundationaLLM.Common.dll File content item used to generate a message content item. public class OpenAIFilePathContentItem : MessageContentItemBase Inheritance object MessageContentItemBase OpenAIFilePathContentItem Inherited Members MessageContentItemBase.AgentCapabilityCategory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OpenAIFilePathContentItem() Set default property values. public OpenAIFilePathContentItem() Properties EndIndex The ending index of the annotation. [JsonPropertyName(\"end_index\")] public int? EndIndex { get; set; } Property Value int? FileId The ID of the file referenced by the annotation. [JsonPropertyName(\"file_id\")] public string? FileId { get; set; } Property Value string FileUrl The URL of the image file. [JsonPropertyName(\"file_url\")] public string? FileUrl { get; set; } Property Value string StartIndex The starting index of the annotation. [JsonPropertyName(\"start_index\")] public int? StartIndex { get; set; } Property Value int? Text The text of the annotation. [JsonPropertyName(\"text\")] public string? Text { get; set; } Property Value string Type The type of the message content item. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.OpenAIImageFileMessageContentItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.OpenAIImageFileMessageContentItem.html",
    "title": "Class OpenAIImageFileMessageContentItem | FoundationaLLM",
    "keywords": "Class OpenAIImageFileMessageContentItem Namespace FoundationaLLM.Common.Models.Orchestration.Response.OpenAI Assembly FoundationaLLM.Common.dll An OpenAI image file message content item. public class OpenAIImageFileMessageContentItem : MessageContentItemBase Inheritance object MessageContentItemBase OpenAIImageFileMessageContentItem Inherited Members MessageContentItemBase.AgentCapabilityCategory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OpenAIImageFileMessageContentItem() Set default property values. public OpenAIImageFileMessageContentItem() Properties FileId The ID of the image file. [JsonPropertyName(\"file_id\")] public string? FileId { get; set; } Property Value string FileUrl The URL of the image file. [JsonPropertyName(\"file_url\")] public string? FileUrl { get; set; } Property Value string Type The type of the message content item. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.OpenAITextMessageContentItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.OpenAITextMessageContentItem.html",
    "title": "Class OpenAITextMessageContentItem | FoundationaLLM",
    "keywords": "Class OpenAITextMessageContentItem Namespace FoundationaLLM.Common.Models.Orchestration.Response.OpenAI Assembly FoundationaLLM.Common.dll An OpenAI text message content item. public class OpenAITextMessageContentItem : MessageContentItemBase Inheritance object MessageContentItemBase OpenAITextMessageContentItem Inherited Members MessageContentItemBase.AgentCapabilityCategory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OpenAITextMessageContentItem() Set default property values. public OpenAITextMessageContentItem() Properties Annotations A list of file annotations used to generate the message content item. [JsonPropertyName(\"annotations\")] public List<OpenAIFilePathContentItem> Annotations { get; set; } Property Value List<OpenAIFilePathContentItem> Type The type of the message content item. [JsonIgnore] public override string? Type { get; set; } Property Value string Value The text value of the message content item. [JsonPropertyName(\"value\")] public string? Value { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.OpenAI.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Response.OpenAI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.Response.OpenAI Classes OpenAIFilePathContentItem File content item used to generate a message content item. OpenAIImageFileMessageContentItem An OpenAI image file message content item. OpenAITextMessageContentItem An OpenAI text message content item."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Response | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration.Response Namespaces FoundationaLLM.Common.Models.Orchestration.Response.OpenAI Classes AnalysisResult Represents the result of an analysis. Citation Encapsulates data about the sources used in building a completion response. CompletionResponse Response from a language model. CompletionResponseBase Base model for a response from a language model. LLMCompletionResponse LLMOrchestrationCompletionResponse class MessageContentItemBase Base message content item model."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html",
    "title": "Class SummaryResponse | FoundationaLLM",
    "keywords": "Class SummaryResponse Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The summary response object. public class SummaryResponse Inheritance object SummaryResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Summary The summary response. public string? Summary { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Orchestration Namespaces FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations FoundationaLLM.Common.Models.Orchestration.DataSources FoundationaLLM.Common.Models.Orchestration.Direct FoundationaLLM.Common.Models.Orchestration.Request FoundationaLLM.Common.Models.Orchestration.Response Classes LongRunningOperation Represents the current state of a long-running operation. LongRunningOperationLogEntry The point-in-time state of a long-running operation. SummaryResponse The summary response object. Enums OperationStatus Represents the status of a long running operation."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.AIModelBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.AIModelBase.html",
    "title": "Class AIModelBase | FoundationaLLM",
    "keywords": "Class AIModelBase Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Assembly FoundationaLLM.Common.dll Provides a set of standard properties for all AIModel objects. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(EmbeddingAIModel), \"embedding\")] [JsonDerivedType(typeof(CompletionAIModel), \"completion\")] public class AIModelBase : ResourceBase Inheritance object ResourceName ResourceBase AIModelBase Derived CompletionAIModel EmbeddingAIModel Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DeploymentName The name of the deployment corresponding to the AI model. [JsonPropertyName(\"deployment_name\")] public string? DeploymentName { get; set; } Property Value string EndpointObjectId The object id of the APIEndpointConfiguration object providing the configuration for the API endpoint used to interact with the model. [JsonPropertyName(\"endpoint_object_id\")] public required string EndpointObjectId { get; set; } Property Value string ModelParameters Dictionary with default values for the model parameters. For the list of supported keys, see ModelParametersKeys. [JsonPropertyName(\"model_parameters\")] public Dictionary<string, object> ModelParameters { get; set; } Property Value Dictionary<string, object> Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string Version The version of the AI model. [JsonPropertyName(\"version\")] public string? Version { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.CompletionAIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.CompletionAIModel.html",
    "title": "Class CompletionAIModel | FoundationaLLM",
    "keywords": "Class CompletionAIModel Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Assembly FoundationaLLM.Common.dll Provides the properties for AI models used for completions. public class CompletionAIModel : AIModelBase Inheritance object ResourceName ResourceBase AIModelBase CompletionAIModel Inherited Members AIModelBase.Type AIModelBase.EndpointObjectId AIModelBase.Version AIModelBase.DeploymentName AIModelBase.ModelParameters ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionAIModel() Creates a new instance of the CompletionAIModel AI model. public CompletionAIModel()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.EmbeddingAIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.EmbeddingAIModel.html",
    "title": "Class EmbeddingAIModel | FoundationaLLM",
    "keywords": "Class EmbeddingAIModel Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Assembly FoundationaLLM.Common.dll Provides the properties for AI models used for embeddings. public class EmbeddingAIModel : AIModelBase Inheritance object ResourceName ResourceBase AIModelBase EmbeddingAIModel Inherited Members AIModelBase.Type AIModelBase.EndpointObjectId AIModelBase.Version AIModelBase.DeploymentName AIModelBase.ModelParameters ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingAIModel() Creates a new instance of the EmbeddingAIModel AI model. public EmbeddingAIModel()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Classes AIModelBase Provides a set of standard properties for all AIModel objects. CompletionAIModel Provides the properties for AI models used for completions. EmbeddingAIModel Provides the properties for AI models used for embeddings."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentBase.html",
    "title": "Class AgentBase | FoundationaLLM",
    "keywords": "Class AgentBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Base agent metadata model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(KnowledgeManagementAgent), \"knowledge-management\")] [JsonDerivedType(typeof(AudioClassificationAgent), \"audio-classification\")] public class AgentBase : ResourceBase Inheritance object ResourceName ResourceBase AgentBase Derived KnowledgeManagementAgent Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIModelObjectId The object identifier of the AIModelBase object providing the AI model for the agent. [JsonPropertyName(\"ai_model_object_id\")] public string? AIModelObjectId { get; set; } Property Value string AgentType The object type of the agent. [JsonIgnore] public Type AgentType { get; } Property Value Type Capabilities List of capabilities that the agent supports. [JsonPropertyName(\"capabilities\")] public string[]? Capabilities { get; set; } Property Value string[] ConversationHistorySettings The agent's conversation history configuration. [JsonPropertyName(\"conversation_history_settings\")] public ConversationHistorySettings? ConversationHistorySettings { get; set; } Property Value ConversationHistorySettings GatekeeperSettings The agent's Gatekeeper configuration. [JsonPropertyName(\"gatekeeper_settings\")] public GatekeeperSettings? GatekeeperSettings { get; set; } Property Value GatekeeperSettings OrchestrationSettings Settings for the orchestration service. [JsonPropertyName(\"orchestration_settings\")] public AgentOrchestrationSettings? OrchestrationSettings { get; set; } Property Value AgentOrchestrationSettings PromptObjectId The object identifier of the PromptBase object providing the prompt for the agent. [JsonPropertyName(\"prompt_object_id\")] public string? PromptObjectId { get; set; } Property Value string SessionsEnabled Indicates whether sessions are enabled for the agent. [JsonPropertyName(\"sessions_enabled\")] public bool SessionsEnabled { get; set; } Property Value bool Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string Methods HasCapability(string) Checks whether the agent has a specified capbability. public bool HasCapability(string capabilityName) Parameters capabilityName string The name of the capability. Returns bool True if the agent has the capability, False otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentOrchestrationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentOrchestrationSettings.html",
    "title": "Class AgentOrchestrationSettings | FoundationaLLM",
    "keywords": "Class AgentOrchestrationSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related orchestration settings. public class AgentOrchestrationSettings Inheritance object AgentOrchestrationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentParameters Dictionary with override values for the agent parameters. For the list of supported keys, see AgentParametersKeys. [JsonPropertyName(\"agent_parameters\")] public Dictionary<string, object>? AgentParameters { get; set; } Property Value Dictionary<string, object> Orchestrator The agent's LLM orchestrator type. [JsonPropertyName(\"orchestrator\")] public string? Orchestrator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTypes.html",
    "title": "Class AgentTypes | FoundationaLLM",
    "keywords": "Class AgentTypes Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Contains constants for the types of agents. public static class AgentTypes Inheritance object AgentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Analytic Analytic agents are best for querying, analyzing, calculating, and reporting on tabular data. public const string Analytic = \"analytic\" Field Value string AudioClassification An audio classification agent. public const string AudioClassification = \"audio-classification\" Field Value string Basic Basic agent without practical functionality. Used as base for all the other agents. public const string Basic = \"basic\" Field Value string KnowledgeManagement Knowledge Management agents are best for Q&A, summarization, and reasoning over textual data. public const string KnowledgeManagement = \"knowledge-management\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentVectorizationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentVectorizationSettings.html",
    "title": "Class AgentVectorizationSettings | FoundationaLLM",
    "keywords": "Class AgentVectorizationSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Vectorization settings related to a knowledge management agent. public class AgentVectorizationSettings Inheritance object AgentVectorizationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSourceObjectId The data source resource path. [JsonPropertyName(\"data_source_object_id\")] public string? DataSourceObjectId { get; set; } Property Value string DedicatedPipeline Determines if the agent uses a dedicated pipeline. [JsonPropertyName(\"dedicated_pipeline\")] public bool DedicatedPipeline { get; set; } Property Value bool IndexingProfileObjectIds The vectorization indexing profile resource paths. [JsonPropertyName(\"indexing_profile_object_ids\")] public List<string>? IndexingProfileObjectIds { get; set; } Property Value List<string> TextEmbeddingProfileObjectId The vectorization text embedding profile resource path. [JsonPropertyName(\"text_embedding_profile_object_id\")] public string? TextEmbeddingProfileObjectId { get; set; } Property Value string TextPartitioningProfileObjectId The vectorization text partitioning profile resource path. [JsonPropertyName(\"text_partitioning_profile_object_id\")] public string? TextPartitioningProfileObjectId { get; set; } Property Value string TriggerCronSchedule The schedule of the trigger in Cron format. This property is valid only when TriggerType = Schedule. [JsonPropertyName(\"trigger_cron_schedule\")] public string? TriggerCronSchedule { get; set; } Property Value string TriggerType The type of trigger that initiates the execution of the pipeline. [JsonPropertyName(\"trigger_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationPipelineTriggerType? TriggerType { get; set; } Property Value VectorizationPipelineTriggerType? VectorizationDataPipelineObjectId The vectorization data pipeline object path. [JsonPropertyName(\"vectorization_data_pipeline_object_id\")] public string? VectorizationDataPipelineObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AudioClassificationAgent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AudioClassificationAgent.html",
    "title": "Class AudioClassificationAgent | FoundationaLLM",
    "keywords": "Class AudioClassificationAgent Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll The Knowledge Management agent metadata model. public class AudioClassificationAgent : KnowledgeManagementAgent Inheritance object ResourceName ResourceBase AgentBase KnowledgeManagementAgent AudioClassificationAgent Inherited Members KnowledgeManagementAgent.Vectorization KnowledgeManagementAgent.InlineContext AgentBase.Type AgentBase.SessionsEnabled AgentBase.ConversationHistorySettings AgentBase.GatekeeperSettings AgentBase.OrchestrationSettings AgentBase.PromptObjectId AgentBase.AIModelObjectId AgentBase.Capabilities AgentBase.AgentType AgentBase.HasCapability(string) ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AudioClassificationAgent() Set default property values. public AudioClassificationAgent()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.ConversationHistorySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.ConversationHistorySettings.html",
    "title": "Class ConversationHistorySettings | FoundationaLLM",
    "keywords": "Class ConversationHistorySettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Agent conversation history settings. public class ConversationHistorySettings Inheritance object ConversationHistorySettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Enabled Indicates whether the conversation history is enabled. [JsonPropertyName(\"enabled\")] public bool Enabled { get; set; } Property Value bool MaxHistory The maximum number of turns to store in the conversation history. [JsonPropertyName(\"max_history\")] public int MaxHistory { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.GatekeeperSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.GatekeeperSettings.html",
    "title": "Class GatekeeperSettings | FoundationaLLM",
    "keywords": "Class GatekeeperSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Agent Gatekeeper settings. public class GatekeeperSettings Inheritance object GatekeeperSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Options If UseSystemSetting is false, provides Gatekeeper feature selection. [JsonPropertyName(\"options\")] public string[]? Options { get; set; } Property Value string[] UseSystemSetting Indicates whether to abide by or override the system settings for the Gatekeeper. [JsonPropertyName(\"use_system_setting\")] public bool UseSystemSetting { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.KnowledgeManagementAgent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.KnowledgeManagementAgent.html",
    "title": "Class KnowledgeManagementAgent | FoundationaLLM",
    "keywords": "Class KnowledgeManagementAgent Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll The Knowledge Management agent metadata model. public class KnowledgeManagementAgent : AgentBase Inheritance object ResourceName ResourceBase AgentBase KnowledgeManagementAgent Derived AudioClassificationAgent Inherited Members AgentBase.Type AgentBase.SessionsEnabled AgentBase.ConversationHistorySettings AgentBase.GatekeeperSettings AgentBase.OrchestrationSettings AgentBase.PromptObjectId AgentBase.AIModelObjectId AgentBase.Capabilities AgentBase.AgentType AgentBase.HasCapability(string) ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementAgent() Set default property values. public KnowledgeManagementAgent() Properties InlineContext Whether the agent has an inline context and does not rely on an external resource. [JsonPropertyName(\"inline_context\")] public bool InlineContext { get; set; } Property Value bool Vectorization The vectorization settings for the agent. [JsonPropertyName(\"vectorization\")] public AgentVectorizationSettings Vectorization { get; set; } Property Value AgentVectorizationSettings"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Classes AgentBase Base agent metadata model. AgentOrchestrationSettings Provides agent-related orchestration settings. AgentTypes Contains constants for the types of agents. AgentVectorizationSettings Vectorization settings related to a knowledge management agent. AudioClassificationAgent The Knowledge Management agent metadata model. ConversationHistorySettings Agent conversation history settings. GatekeeperSettings Agent Gatekeeper settings. KnowledgeManagementAgent The Knowledge Management agent metadata model."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.AttachmentFile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.AttachmentFile.html",
    "title": "Class AttachmentFile | FoundationaLLM",
    "keywords": "Class AttachmentFile Namespace FoundationaLLM.Common.Models.ResourceProviders.Attachment Assembly FoundationaLLM.Common.dll Attachment resource. public class AttachmentFile : ResourceBase Inheritance object ResourceName ResourceBase AttachmentFile Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content File stream of the attachment contents. [JsonPropertyName(\"content\")] public byte[]? Content { get; set; } Property Value byte[] ContentType The mime content type of the attachment. [JsonPropertyName(\"content_type\")] public string? ContentType { get; set; } Property Value string OriginalFileName The original name of the file (as it was uploaded). [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string Path Path for the attachment, starting with the container name. [JsonPropertyName(\"path\")] public string Path { get; set; } Property Value string SecondaryProvider Indicates if the attachment has a secondary provider. [JsonPropertyName(\"secondary_provider\")] public string? SecondaryProvider { get; set; } Property Value string Remarks The only secondary provider currently supported is FoundationaLLM.AzureOpenAI. Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Attachment | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Attachment Classes AttachmentFile Attachment resource."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AssistantUserContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AssistantUserContext.html",
    "title": "Class AssistantUserContext | FoundationaLLM",
    "keywords": "Class AssistantUserContext Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Provides information about the OpenAI artifacts associated with a user. public class AssistantUserContext : AzureOpenAIResourceBase Inheritance object ResourceName ResourceBase AzureOpenAIResourceBase AssistantUserContext Inherited Members AzureOpenAIResourceBase.Type ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AssistantUserContext() Set default property values. public AssistantUserContext() Properties Conversations The dictionary of ConversationMapping objects providing information about the conversations driven by the OpenAI assistant. [JsonPropertyName(\"conversations\")] [JsonPropertyOrder(106)] public Dictionary<string, ConversationMapping> Conversations { get; set; } Property Value Dictionary<string, ConversationMapping> Remarks The keys of the dictionary are the FoundationaLLM session identifiers. Endpoint The Azure OpenAI endpoint used to manage the assistant. [JsonPropertyName(\"endpoint\")] [JsonPropertyOrder(101)] public required string Endpoint { get; set; } Property Value string ModelDeploymentName The Azure OpenAI model deployment name used by the assistant. [JsonPropertyName(\"model_name\")] [JsonPropertyOrder(102)] public required string ModelDeploymentName { get; set; } Property Value string OpenAIAssistantCreatedOn The time at which the assistant was created. [JsonPropertyName(\"openai_assistant_created_on\")] [JsonPropertyOrder(105)] public DateTimeOffset? OpenAIAssistantCreatedOn { get; set; } Property Value DateTimeOffset? OpenAIAssistantId The OpenAI identifier of the assistant. [JsonPropertyName(\"openai_assistant_id\")] [JsonPropertyOrder(104)] public string? OpenAIAssistantId { get; set; } Property Value string Prompt The time at which the assistant was created. [JsonPropertyName(\"prompt\")] [JsonPropertyOrder(103)] public required string Prompt { get; set; } Property Value string UserPrincipalName The UPN (user principal name) to which the context is associated. [JsonPropertyName(\"user_principal_name\")] [JsonPropertyOrder(100)] public required string UserPrincipalName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AssistantUserContextUpsertResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AssistantUserContextUpsertResult.html",
    "title": "Class AssistantUserContextUpsertResult | FoundationaLLM",
    "keywords": "Class AssistantUserContextUpsertResult Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Represents the result of an upsert operation for an AssistantUserContext object. public class AssistantUserContextUpsertResult : ResourceProviderUpsertResult Inheritance object ResourceProviderUpsertResult AssistantUserContextUpsertResult Inherited Members ResourceProviderUpsertResult.ObjectId ResourceProviderUpsertResult.ResourceExists object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NewOpenAIAssistantId The identifier of the newly created OpenAI assistant (if any). public string? NewOpenAIAssistantId { get; set; } Property Value string NewOpenAIAssistantThreadId The identifier of the newly created OpenAI assistant thread id (if any). public string? NewOpenAIAssistantThreadId { get; set; } Property Value string NewOpenAIAssistantVectorStoreId The identifier of the newly created OpenAI assistant vector store id (if any). public string? NewOpenAIAssistantVectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIResourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIResourceBase.html",
    "title": "Class AzureOpenAIResourceBase | FoundationaLLM",
    "keywords": "Class AzureOpenAIResourceBase Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Basic model for resources managed by the FoundationaLLM.AzureOpenAI resource manager. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AssistantUserContext), \"assistant-user-context\")] [JsonDerivedType(typeof(FileUserContext), \"file-user-context\")] public class AzureOpenAIResourceBase : ResourceBase Inheritance object ResourceName ResourceBase AzureOpenAIResourceBase Derived AssistantUserContext FileUserContext Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.ConversationMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.ConversationMapping.html",
    "title": "Class ConversationMapping | FoundationaLLM",
    "keywords": "Class ConversationMapping Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Provides information about a conversation driven by an OpenAI assistant. public class ConversationMapping Inheritance object ConversationMapping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FoundationaLLMSessionId The FoundationaLLM session (conversation) id. [JsonPropertyName(\"foundationallm_session_id\")] public required string FoundationaLLMSessionId { get; set; } Property Value string OpenAIThreadCreatedOn The time at which the thread was created. [JsonPropertyName(\"openai_thread_created_on\")] public DateTimeOffset? OpenAIThreadCreatedOn { get; set; } Property Value DateTimeOffset? OpenAIThreadId The OpenAI thread id associated with the FoundationaLLM session (conversation) id. [JsonPropertyName(\"openai_thread_id\")] public string? OpenAIThreadId { get; set; } Property Value string OpenAIVectorStoreId The OpenAI vector store id associated with the FoundationaLLM session (conversation) id. [JsonPropertyName(\"openai_vector_store_id\")] public string? OpenAIVectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.FileMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.FileMapping.html",
    "title": "Class FileMapping | FoundationaLLM",
    "keywords": "Class FileMapping Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Provides information about a file used by OpenAI assistants. public class FileMapping Inheritance object FileMapping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The content type of the file. [JsonPropertyName(\"content_type\")] public required string ContentType { get; set; } Property Value string FoundationaLLMObjectId The FoundationaLLM.Attachment resource object id. [JsonPropertyName(\"foundationallm_object_id\")] public required string FoundationaLLMObjectId { get; set; } Property Value string Generated Indictes whether the file was generated by OpenAI or not. [JsonPropertyName(\"generated\")] public bool Generated { get; set; } Property Value bool OpenAIFileGeneratedOn The time when the file was generated by OpenAI. [JsonPropertyName(\"openai_file_generated_on\")] public DateTimeOffset? OpenAIFileGeneratedOn { get; set; } Property Value DateTimeOffset? OpenAIFileId The OpenAI file id associated with the FoundationaLLM file (attachment) id. [JsonPropertyName(\"openai_file_id\")] public string? OpenAIFileId { get; set; } Property Value string OpenAIFileUploadedOn The time when the file was uploaded to OpenAI. [JsonPropertyName(\"openai_file_uploaded_on\")] public DateTimeOffset? OpenAIFileUploadedOn { get; set; } Property Value DateTimeOffset? OpenAIVectorStoreId The OpenAI vector store id holding the vectorized content of the OpenAI file. [JsonPropertyName(\"openai_vector_store_id\")] public string? OpenAIVectorStoreId { get; set; } Property Value string OriginalFileName The original file name of the file. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string RequiresVectorization Indicates whether the file requires vectorization or not. [JsonPropertyName(\"requires_vectorization\")] public bool RequiresVectorization { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.FileUserContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.FileUserContext.html",
    "title": "Class FileUserContext | FoundationaLLM",
    "keywords": "Class FileUserContext Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Provides information about the OpenAI artifacts associated with a user. public class FileUserContext : AzureOpenAIResourceBase Inheritance object ResourceName ResourceBase AzureOpenAIResourceBase FileUserContext Inherited Members AzureOpenAIResourceBase.Type ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors FileUserContext() Set default property values. public FileUserContext() Properties AssistantUserContextName The name of the assistant user context name. [JsonPropertyName(\"assistant_user_context_name\")] [JsonPropertyOrder(103)] public required string AssistantUserContextName { get; set; } Property Value string Endpoint The Azure OpenAI endpoint used to manage the assistant. [JsonPropertyName(\"endpoint\")] [JsonPropertyOrder(101)] public required string Endpoint { get; set; } Property Value string Files The dictionary of FileMapping objects providing information about the files uploaded to the OpenAI assistant. [JsonPropertyName(\"files\")] [JsonPropertyOrder(102)] public Dictionary<string, FileMapping> Files { get; set; } Property Value Dictionary<string, FileMapping> Remarks The keys of the dictionary are the FoundationaLLM attachment identifiers. UserPrincipalName The UPN (user principal name) to which the context is associated. [JsonPropertyName(\"user_principal_name\")] [JsonPropertyOrder(100)] public required string UserPrincipalName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.FileUserContextUpsertResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.FileUserContextUpsertResult.html",
    "title": "Class FileUserContextUpsertResult | FoundationaLLM",
    "keywords": "Class FileUserContextUpsertResult Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Represents the result of an upsert operation for an FileUserContext object. public class FileUserContextUpsertResult : ResourceProviderUpsertResult Inheritance object ResourceProviderUpsertResult FileUserContextUpsertResult Inherited Members ResourceProviderUpsertResult.ObjectId ResourceProviderUpsertResult.ResourceExists object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NewOpenAIFileId The identifier of the newly created OpenAI assistant file. public required string NewOpenAIFileId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Classes AssistantUserContext Provides information about the OpenAI artifacts associated with a user. AssistantUserContextUpsertResult Represents the result of an upsert operation for an AssistantUserContext object. AzureOpenAIResourceBase Basic model for resources managed by the FoundationaLLM.AzureOpenAI resource manager. ConversationMapping Provides information about a conversation driven by an OpenAI assistant. FileMapping Provides information about a file used by OpenAI assistants. FileUserContext Provides information about the OpenAI artifacts associated with a user. FileUserContextUpsertResult Represents the result of an upsert operation for an FileUserContext object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointCategory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointCategory.html",
    "title": "Enum APIEndpointCategory | FoundationaLLM",
    "keywords": "Enum APIEndpointCategory Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll The category for api endpoint class. public enum APIEndpointCategory Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureAIDirect = 4 Endpoints for direct interactions with Microsoft Azure AI services. AzureOpenAIDirect = 5 Endpoints for direct interactions with Microsoft Azure OpenAI services. ExternalOrchestration = 1 Endpoints for external orchestration services. Gatekeeper = 3 Endpoints related to Gatekeeper. General = 6 General endpoints (internal APIs other than Orchestration, ExternalOrchestration, LLM, Gatekeeper, AzureAIDirect, or AzureOpenAIDirect. LLM = 2 Endpoints for Large Language Models. Orchestration = 0 Endpoints for internal orchestration services (e.g. LangChain API, SemanticKernel API)."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointConfiguration.html",
    "title": "Class APIEndpointConfiguration | FoundationaLLM",
    "keywords": "Class APIEndpointConfiguration Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Provides the configuration for an API endpoint resource. public class APIEndpointConfiguration : ResourceBase Inheritance object ResourceName ResourceBase APIEndpointConfiguration Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors APIEndpointConfiguration() Creates a new instance of APIEndpointConfiguration. public APIEndpointConfiguration() Properties APIVersion The version to use when calling the API represented by the endpoint. [JsonPropertyName(\"api_version\")] public string? APIVersion { get; set; } Property Value string AuthenticationParameters Dictionary with values used for authentication. For the list of supported keys, see AuthenticationParametersKeys. [JsonPropertyName(\"authentication_parameters\")] public Dictionary<string, object> AuthenticationParameters { get; set; } Property Value Dictionary<string, object> AuthenticationType The type of authentication required for accessing the API. [JsonPropertyName(\"authentication_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes Category The api endpoint category. [JsonPropertyName(\"category\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required APIEndpointCategory Category { get; set; } Property Value APIEndpointCategory OperationType Type of operation the endpoint is performing. This value should be completions or chat. Default value is chat. [JsonPropertyName(\"operation_type\")] public string? OperationType { get; set; } Property Value string Provider The API endpoint provider. For a list of available API endpoint providers, see APIEndpointProviders. [JsonPropertyName(\"provider\")] public string? Provider { get; set; } Property Value string RetryStrategyName The name of the retry strategy. [JsonPropertyName(\"retry_strategy_name\")] public required string RetryStrategyName { get; set; } Property Value string StatusUrl The status URL of the API endpoint, if available. [JsonPropertyName(\"status_url\")] public string? StatusUrl { get; set; } Property Value string TimeoutSeconds The timeout duration in seconds for API calls. [JsonPropertyName(\"timeout_seconds\")] public required int TimeoutSeconds { get; set; } Property Value int Url The base URL of the API endpoint. [JsonPropertyName(\"url\")] public required string Url { get; set; } Property Value string UrlExceptions A list of URL exceptions. [JsonPropertyName(\"url_exceptions\")] public List<UrlException> UrlExceptions { get; set; } Property Value List<UrlException>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyBase.html",
    "title": "Class AppConfigurationKeyBase | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Azure App Configuration key model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AppConfigurationKeyValue), \"appconfiguration-key-value\")] [JsonDerivedType(typeof(AppConfigurationKeyVaultReference), \"appconfiguration-key-vault-reference\")] public class AppConfigurationKeyBase : ResourceBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase Derived AppConfigurationKeyValue AppConfigurationKeyVaultReference Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The content type of the value. [JsonPropertyName(\"content_type\")] public string? ContentType { get; set; } Property Value string Key The name of the App Configuration key. [JsonPropertyName(\"key\")] public string? Key { get; set; } Property Value string Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string Value The value of the App Configuration key. [JsonPropertyName(\"value\")] public string? Value { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyValue.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyValue.html",
    "title": "Class AppConfigurationKeyValue | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyValue Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Azure App Configuration key value model. public class AppConfigurationKeyValue : AppConfigurationKeyBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase AppConfigurationKeyValue Inherited Members AppConfigurationKeyBase.Type AppConfigurationKeyBase.Key AppConfigurationKeyBase.Value AppConfigurationKeyBase.ContentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyVaultReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyVaultReference.html",
    "title": "Class AppConfigurationKeyVaultReference | FoundationaLLM",
    "keywords": "Class AppConfigurationKeyVaultReference Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Azure App Configuration key vault reference. public class AppConfigurationKeyVaultReference : AppConfigurationKeyBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase AppConfigurationKeyVaultReference Inherited Members AppConfigurationKeyBase.Type AppConfigurationKeyBase.Key AppConfigurationKeyBase.Value AppConfigurationKeyBase.ContentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KeyVaultSecretName The name of the Azure Key Vault secret being referenced. [JsonPropertyName(\"key_vault_secret_name\")] public string? KeyVaultSecretName { get; set; } Property Value string KeyVaultUri The URI of the Azure Key Vault service being referenced. [JsonPropertyName(\"key_vault_uri\")] public string? KeyVaultUri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.UrlException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.UrlException.html",
    "title": "Class UrlException | FoundationaLLM",
    "keywords": "Class UrlException Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Represents an exception to the base URL. public class UrlException Inheritance object UrlException Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Enabled Indicates whether the exception is enabled. [JsonPropertyName(\"enabled\")] public required bool Enabled { get; set; } Property Value bool Url The alternative URL. [JsonPropertyName(\"url\")] public required string Url { get; set; } Property Value string UserPrincipalName The user principal name. [JsonPropertyName(\"user_principal_name\")] public required string UserPrincipalName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Classes APIEndpointConfiguration Provides the configuration for an API endpoint resource. AppConfigurationKeyBase Azure App Configuration key model. AppConfigurationKeyValue Azure App Configuration key value model. AppConfigurationKeyVaultReference Azure App Configuration key vault reference. UrlException Represents an exception to the base URL. Enums APIEndpointCategory The category for api endpoint class."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureDataLakeDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureDataLakeDataSource.html",
    "title": "Class AzureDataLakeDataSource | FoundationaLLM",
    "keywords": "Class AzureDataLakeDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Azure Data Lake data source. public class AzureDataLakeDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase AzureDataLakeDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSource() Creates a new instance of the AzureDataLakeDataSource data source. public AzureDataLakeDataSource() Properties Folders The list of folders from the data lake. The format is [container_name]/[folder_path]. [JsonPropertyName(\"folders\")] public List<string> Folders { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureSQLDatabaseDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureSQLDatabaseDataSource.html",
    "title": "Class AzureSQLDatabaseDataSource | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Azure SQL Database data source. public class AzureSQLDatabaseDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase AzureSQLDatabaseDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSource() Creates a new instance of the AzureSQLDatabaseDataSource data source. public AzureSQLDatabaseDataSource() Properties Tables The list of tables from the database. The format is [schema].[table_name]. [JsonPropertyName(\"tables\")] public List<string> Tables { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.DataSourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.DataSourceBase.html",
    "title": "Class DataSourceBase | FoundationaLLM",
    "keywords": "Class DataSourceBase Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Basic data source. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(OneLakeDataSource), \"onelake\")] [JsonDerivedType(typeof(AzureDataLakeDataSource), \"azure-data-lake\")] [JsonDerivedType(typeof(AzureSQLDatabaseDataSource), \"azure-sql-database\")] [JsonDerivedType(typeof(SharePointOnlineSiteDataSource), \"sharepoint-online-site\")] [JsonDerivedType(typeof(WebSiteDataSource), \"web-site\")] public class DataSourceBase : ResourceBase Inheritance object ResourceName ResourceBase DataSourceBase Derived AzureDataLakeDataSource AzureSQLDatabaseDataSource OneLakeDataSource SharePointOnlineSiteDataSource WebSiteDataSource Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationReferences Configuration references associated with the data source. [JsonPropertyName(\"configuration_references\")] public Dictionary<string, string>? ConfigurationReferences { get; set; } Property Value Dictionary<string, string> Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.OneLakeDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.OneLakeDataSource.html",
    "title": "Class OneLakeDataSource | FoundationaLLM",
    "keywords": "Class OneLakeDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Azure Data Lake data source. public class OneLakeDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase OneLakeDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OneLakeDataSource() Creates a new instance of the OneLakeDataSource data source. public OneLakeDataSource() Properties Workspaces The list of workspaces from the data lake. The format is [workspace_name]. [JsonPropertyName(\"workspaces\")] public List<string> Workspaces { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.SharePointOnlineSiteDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.SharePointOnlineSiteDataSource.html",
    "title": "Class SharePointOnlineSiteDataSource | FoundationaLLM",
    "keywords": "Class SharePointOnlineSiteDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll SharePoint Online Site data source. public class SharePointOnlineSiteDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase SharePointOnlineSiteDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineSiteDataSource() Creates a new instance of the SharePointOnlineSiteDataSource data source. public SharePointOnlineSiteDataSource() Properties DocumentLibraries The list of paths of document libraries from the SharePoint online site. The paths must be relative to the site URL. [JsonPropertyName(\"document_libraries\")] public List<string> DocumentLibraries { get; set; } Property Value List<string> SiteUrl The URL of the SharePoint Online site. [JsonPropertyName(\"site_url\")] public string? SiteUrl { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.WebSiteDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.WebSiteDataSource.html",
    "title": "Class WebSiteDataSource | FoundationaLLM",
    "keywords": "Class WebSiteDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Web Site data source. public class WebSiteDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase WebSiteDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors WebSiteDataSource() Initializes a web site data source. public WebSiteDataSource() Properties SiteUrls The list of site URLs covered by the data source. A URL can point to a specific path within the site. The list can contain URLs with different base paths. [JsonPropertyName(\"site_urls\")] public List<string> SiteUrls { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Classes AzureDataLakeDataSource Azure Data Lake data source. AzureSQLDatabaseDataSource Azure SQL Database data source. DataSourceBase Basic data source. OneLakeDataSource Azure Data Lake data source. SharePointOnlineSiteDataSource SharePoint Online Site data source. WebSiteDataSource Web Site data source."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.FileContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.FileContent.html",
    "title": "Class FileContent | FoundationaLLM",
    "keywords": "Class FileContent Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Holds the content of an OpenAI file. public class FileContent : ResourceBase Inheritance object ResourceName ResourceBase FileContent Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BinaryContent The binary content of the file. [JsonIgnore] public ReadOnlyMemory<byte>? BinaryContent { get; set; } Property Value ReadOnlyMemory<byte>? ContentType The content type of the file. [JsonPropertyName(\"content_type\")] public required string ContentType { get; set; } Property Value string OriginalFileName The original file name of the file. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.NameCheckResultType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.NameCheckResultType.html",
    "title": "Enum NameCheckResultType | FoundationaLLM",
    "keywords": "Enum NameCheckResultType Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll The result types of resource name checks. public enum NameCheckResultType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Allowed = 0 The name is valid and is allowed. Denied = 1 The name is invalid and cannot be used"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.MultipartPrompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.MultipartPrompt.html",
    "title": "Class MultipartPrompt | FoundationaLLM",
    "keywords": "Class MultipartPrompt Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt Assembly FoundationaLLM.Common.dll Multipart prompt composed of a prefix and a suffix. public class MultipartPrompt : PromptBase Inheritance object ResourceName ResourceBase PromptBase MultipartPrompt Inherited Members PromptBase.Type ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MultipartPrompt() Set default property values. public MultipartPrompt() Properties Prefix The prompt prefix. [JsonPropertyName(\"prefix\")] public string? Prefix { get; set; } Property Value string Suffix The prompt suffix. [JsonPropertyName(\"suffix\")] public string? Suffix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.PromptBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.PromptBase.html",
    "title": "Class PromptBase | FoundationaLLM",
    "keywords": "Class PromptBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt Assembly FoundationaLLM.Common.dll Basic prompt. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(MultipartPrompt), \"multipart\")] public class PromptBase : ResourceBase Inheritance object ResourceName ResourceBase PromptBase Derived MultipartPrompt Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt Classes MultipartPrompt Multipart prompt composed of a prefix and a suffix. PromptBase Basic prompt."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceBase.html",
    "title": "Class ResourceBase | FoundationaLLM",
    "keywords": "Class ResourceBase Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Basic properties for all resources. public class ResourceBase : ResourceName Inheritance object ResourceName ResourceBase Derived AIModelBase AgentBase AttachmentFile AzureOpenAIResourceBase APIEndpointConfiguration AppConfigurationKeyBase DataSourceBase FileContent PromptBase VectorizationProfileBase VectorizationRequest RoleAssignment RoleDefinition VectorizationPipeline Inherited Members ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CostCenter The cost center of the resource. [JsonPropertyName(\"cost_center\")] [JsonPropertyOrder(-1)] public string? CostCenter { get; set; } Property Value string CreatedBy The entity who created the security role definition. [JsonPropertyName(\"created_by\")] [JsonPropertyOrder(502)] public string? CreatedBy { get; set; } Property Value string CreatedOn The time at which the security role definition was created. [JsonPropertyName(\"created_on\")] [JsonPropertyOrder(500)] public DateTimeOffset CreatedOn { get; set; } Property Value DateTimeOffset Deleted Indicates whether the resource has been logically deleted. [JsonPropertyName(\"deleted\")] [JsonPropertyOrder(504)] public virtual bool Deleted { get; set; } Property Value bool Description The description of the resource. [JsonPropertyName(\"description\")] [JsonPropertyOrder(-2)] public string? Description { get; set; } Property Value string DisplayName The display name of the resource. [JsonPropertyName(\"display_name\")] [JsonPropertyOrder(-3)] public string? DisplayName { get; set; } Property Value string ExpirationDate The date and time on which the resource expires and is no longer usable. [JsonPropertyName(\"expiration_date\")] [JsonPropertyOrder(505)] public DateTimeOffset? ExpirationDate { get; set; } Property Value DateTimeOffset? ObjectId The unique identifier of the resource. [JsonPropertyName(\"object_id\")] [JsonPropertyOrder(-4)] public string? ObjectId { get; set; } Property Value string UpdatedBy The entity who last updated the security role definition. [JsonPropertyName(\"updated_by\")] [JsonPropertyOrder(503)] public string? UpdatedBy { get; set; } Property Value string UpdatedOn The time at which the security role definition was last updated. [JsonPropertyName(\"updated_on\")] [JsonPropertyOrder(501)] public DateTimeOffset UpdatedOn { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceFilter.html",
    "title": "Class ResourceFilter | FoundationaLLM",
    "keywords": "Class ResourceFilter Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Filters resources based on the specified criteria. public class ResourceFilter Inheritance object ResourceFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Default Specify whether to filter by resources designated as default. If null, the filter will not be applied. If true, only default resources will be returned. [JsonPropertyName(\"default\")] public bool? Default { get; set; } Property Value bool? ObjectIDs Retrieve resources or resource references that match the list of Object IDs. [JsonPropertyName(\"object_ids\")] public List<string>? ObjectIDs { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceName.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceName.html",
    "title": "Class ResourceName | FoundationaLLM",
    "keywords": "Class ResourceName Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll A named resource with a type. public class ResourceName Inheritance object ResourceName Derived ResourceBase ResourceNameCheckResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the resource. [JsonPropertyName(\"name\")] [JsonPropertyOrder(-5)] public required string Name { get; set; } Property Value string Type The type of the resource. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-100)] public virtual string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceNameCheckResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceNameCheckResult.html",
    "title": "Class ResourceNameCheckResult | FoundationaLLM",
    "keywords": "Class ResourceNameCheckResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll The result of a resource name check. public class ResourceNameCheckResult : ResourceName Inheritance object ResourceName ResourceNameCheckResult Inherited Members ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Message An optional message indicating why is the name not allowed. public string? Message { get; set; } Property Value string Status The NameCheckResultType indicating whether the name is allowed or not. [JsonConverter(typeof(JsonStringEnumConverter))] public NameCheckResultType Status { get; set; } Property Value NameCheckResultType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourcePath.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourcePath.html",
    "title": "Class ResourcePath | FoundationaLLM",
    "keywords": "Class ResourcePath Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides the logic for handling FoundationaLLM resource identifiers. public class ResourcePath Inheritance object ResourcePath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourcePath(string, ImmutableList<string>, Dictionary<string, ResourceTypeDescriptor>, bool) Creates a new resource identifier from a resource path optionally allowing an action. public ResourcePath(string resourcePath, ImmutableList<string> allowedResourceProviders, Dictionary<string, ResourceTypeDescriptor> allowedResourceTypes, bool allowAction = true) Parameters resourcePath string The resource path used to create the resource identifier. allowedResourceProviders ImmutableList<string> Provides a list of allowed resource providers. allowedResourceTypes Dictionary<string, ResourceTypeDescriptor> Provides a dictionary of ResourceTypeDescriptor used to validate resource types. allowAction bool Optional parameter that indicates whether an action name is allowed as part of the resource identifier. Properties InstanceId The instance id of the resource identifier. Can be null if the resource path does not contain an instance id. public string? InstanceId { get; } Property Value string IsInstancePath Indicates whether the resource path is an instance path or not (i.e., only contains the FoundationaLLM instance identifier). public bool IsInstancePath { get; } Property Value bool IsResourceTypePath Indicates whether the resource path refers to a resource type (does not contain a resource name). public bool IsResourceTypePath { get; } Property Value bool IsRootPath Indicates whether the resource path is a root path (\"/\") or not. public bool IsRootPath { get; } Property Value bool MainResourceType The main resource type of the path. public string? MainResourceType { get; } Property Value string ResourceProvider The resource provider of the resource identifier. Can be null if the resource path does not contain a resource provider. public string? ResourceProvider { get; } Property Value string ResourceTypeInstances The resource type instances of the resource identifier. public List<ResourceTypeInstance> ResourceTypeInstances { get; } Property Value List<ResourceTypeInstance> Methods GetObjectId(string?, string?) Computes the object id of the resource identifier. public string GetObjectId(string? instanceId, string? resourceProvider) Parameters instanceId string The FoundationaLLM instance id. Provide this if the resource does not have a fully-qualified resource identifier. resourceProvider string The name of the resource provider. Provide this if the resource does not have a fully-qualified resource identifier. Returns string The object id. GetObjectId(string, string, string, string) Computes the object id of the resource identifier. public static string GetObjectId(string instanceId, string resourceProviderName, string resourceTypeName, string resourceName) Parameters instanceId string The FoundationaLLM instance id. resourceProviderName string The name of the resource provider. resourceTypeName string The name of the resource type. resourceName string The name of the resource. Returns string The object id. IncludesResourcePath(ResourcePath) Determines whether the resource path includes another specified resource path. public bool IncludesResourcePath(ResourcePath other) Parameters other ResourcePath The ResourcePath to check for inclusion. Returns bool True if the specified resource path is included in the resource path. TryParse(string, ImmutableList<string>, Dictionary<string, ResourceTypeDescriptor>, bool, out ResourcePath?) Tries to parse a resource path and create a resource identifier from it. public static bool TryParse(string resourcePath, ImmutableList<string> allowedResourceProviders, Dictionary<string, ResourceTypeDescriptor> allowedResourceTypes, bool allowAction, out ResourcePath? resourcePathInstance) Parameters resourcePath string The resource path used to create the resource identifier. allowedResourceProviders ImmutableList<string> Provides a list of allowed resource providers. allowedResourceTypes Dictionary<string, ResourceTypeDescriptor> Provides a dictionary of ResourceTypeDescriptor used to validate resource types. allowAction bool Optional parameter that indicates whether an action name is allowed as part of the resource identifier. resourcePathInstance ResourcePath The parsed resource path. Returns bool True if the resource path is parsed successfully. TryParseInstanceId(string, out string?) Tries to retrieve the identifier of the FoundationaLLM instance from a resource path. public static bool TryParseInstanceId(string resourcePath, out string? instanceId) Parameters resourcePath string The resource path to analyze. instanceId string The FoundationaLLM instance identifier. Returns bool True if a valid intance identifier is retrieved successfully. TryParseResourceProvider(string, out string?) Tries to retrieve the name of the resource provider from a resource path. public static bool TryParseResourceProvider(string resourcePath, out string? resourceProvider) Parameters resourcePath string The resource path to analyze. resourceProvider string The resource provider name. Returns bool True if a valid resource provider name is retrieved successfully."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderActionResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderActionResult.html",
    "title": "Class ResourceProviderActionResult | FoundationaLLM",
    "keywords": "Class ResourceProviderActionResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll The result of an action executed by a resource provider. public record ResourceProviderActionResult : IEquatable<ResourceProviderActionResult> Inheritance object ResourceProviderActionResult Implements IEquatable<ResourceProviderActionResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderActionResult(bool) The result of an action executed by a resource provider. public ResourceProviderActionResult(bool IsSuccessResult) Parameters IsSuccessResult bool Indicates whether the action executed successfully or not. Properties IsSuccessResult Indicates whether the action executed successfully or not. public bool IsSuccessResult { get; init; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderDeleteResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderDeleteResult.html",
    "title": "Class ResourceProviderDeleteResult | FoundationaLLM",
    "keywords": "Class ResourceProviderDeleteResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the result of a delete operation. public class ResourceProviderDeleteResult Inheritance object ResourceProviderDeleteResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deleted A flag denoting whether the resource was deleted or not. public required bool Deleted { get; set; } Property Value bool Reason The reason why the resource was not deleted. public string? Reason { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderGetResult-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderGetResult-1.html",
    "title": "Class ResourceProviderGetResult<T> | FoundationaLLM",
    "keywords": "Class ResourceProviderGetResult<T> Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the result of a fetch operation. public class ResourceProviderGetResult<T> where T : ResourceBase Type Parameters T Inheritance object ResourceProviderGetResult<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions List of authorized actions on the resource. [JsonPropertyName(\"actions\")] public required List<string> Actions { get; set; } Property Value List<string> Resource The resource resulting from the fetch operation. [JsonPropertyName(\"resource\")] public required T Resource { get; set; } Property Value T Roles List of roles on the resource. [JsonPropertyName(\"roles\")] public required List<string> Roles { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderOptions.html",
    "title": "Class ResourceProviderOptions | FoundationaLLM",
    "keywords": "Class ResourceProviderOptions Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Options for the resource provider requests. public class ResourceProviderOptions Inheritance object ResourceProviderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties LoadContent Indicates whether to load content such as files or images. public bool LoadContent { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertResult.html",
    "title": "Class ResourceProviderUpsertResult | FoundationaLLM",
    "keywords": "Class ResourceProviderUpsertResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the result of an upsert operation. public class ResourceProviderUpsertResult Inheritance object ResourceProviderUpsertResult Derived AssistantUserContextUpsertResult FileUserContextUpsertResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ObjectId The id of the object that was created or updated. public string? ObjectId { get; set; } Property Value string ResourceExists A flag denoting whether the upserted resource already exists. public bool? ResourceExists { get; set; } Property Value bool?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReference.html",
    "title": "Class ResourceReference | FoundationaLLM",
    "keywords": "Class ResourceReference Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Resource reference used by resource providers to index the resources they manage. public class ResourceReference Inheritance object ResourceReference Derived AIModelReference AgentReference AttachmentReference AzureOpenAIResourceReference APIEndpointReference DataSourceReference PromptReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deleted Indicates whether the resource has been logically deleted. public bool Deleted { get; set; } Property Value bool Filename The filename of the resource. public required string Filename { get; set; } Property Value string Name The name of the resource. public required string Name { get; set; } Property Value string ObjectId The unique identifier of the resource. [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? ObjectId { get; set; } Property Value string ResourceType The object type of the resource. [JsonIgnore] public virtual Type ResourceType { get; } Property Value Type Remarks Derived classes should override this property to provide the type of the resource reference. Type The type of the resource. public required string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReferenceList-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReferenceList-1.html",
    "title": "Class ResourceReferenceList<T> | FoundationaLLM",
    "keywords": "Class ResourceReferenceList<T> Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Maintains a collection of resource references. public class ResourceReferenceList<T> where T : ResourceReference Type Parameters T The type of resource reference kept in the store. Inheritance object ResourceReferenceList<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceReferences The dictionary of resource references indexed by their unique names. public required List<T> ResourceReferences { get; set; } Property Value List<T>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAction.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAction.html",
    "title": "Class ResourceTypeAction | FoundationaLLM",
    "keywords": "Class ResourceTypeAction Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about a resource type action. public record ResourceTypeAction : IEquatable<ResourceTypeAction> Inheritance object ResourceTypeAction Implements IEquatable<ResourceTypeAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeAction(string, bool, bool, List<ResourceTypeAllowedTypes>) Provides details about a resource type action. public ResourceTypeAction(string Name, bool AllowedOnResource, bool AllowedOnResourceType, List<ResourceTypeAllowedTypes> AllowedTypes) Parameters Name string The name of the action. AllowedOnResource bool Indicates whether the action can be executed on individual resources. AllowedOnResourceType bool Indicates whether the action can be executed on the resource type itself. AllowedTypes List<ResourceTypeAllowedTypes> The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. Properties AllowedOnResource Indicates whether the action can be executed on individual resources. public bool AllowedOnResource { get; init; } Property Value bool AllowedOnResourceType Indicates whether the action can be executed on the resource type itself. public bool AllowedOnResourceType { get; init; } Property Value bool AllowedTypes The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. public List<ResourceTypeAllowedTypes> AllowedTypes { get; init; } Property Value List<ResourceTypeAllowedTypes> Name The name of the action. public string Name { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAllowedTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAllowedTypes.html",
    "title": "Class ResourceTypeAllowedTypes | FoundationaLLM",
    "keywords": "Class ResourceTypeAllowedTypes Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about the types that are allowed for the body and return of a specific HTTP method. public record ResourceTypeAllowedTypes : IEquatable<ResourceTypeAllowedTypes> Inheritance object ResourceTypeAllowedTypes Implements IEquatable<ResourceTypeAllowedTypes> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeAllowedTypes(string, Dictionary<string, Type>, List<Type>, List<Type>) Provides details about the types that are allowed for the body and return of a specific HTTP method. public ResourceTypeAllowedTypes(string HttpMethod, Dictionary<string, Type> AllowedParameterTypes, List<Type> AllowedBodyTypes, List<Type> AllowedReturnTypes) Parameters HttpMethod string The name of the HTTP method. Can be one of GET, POST, PUT, PATCH, or DELETE. AllowedParameterTypes Dictionary<string, Type> The dictionary of query parameter names and types that are allowed for the method. AllowedBodyTypes List<Type> The list of types that are allowed as payloads for the HTTP request. AllowedReturnTypes List<Type> The list of types the are allowed as return types for the HTTP request. Properties AllowedBodyTypes The list of types that are allowed as payloads for the HTTP request. public List<Type> AllowedBodyTypes { get; init; } Property Value List<Type> AllowedParameterTypes The dictionary of query parameter names and types that are allowed for the method. public Dictionary<string, Type> AllowedParameterTypes { get; init; } Property Value Dictionary<string, Type> AllowedReturnTypes The list of types the are allowed as return types for the HTTP request. public List<Type> AllowedReturnTypes { get; init; } Property Value List<Type> HttpMethod The name of the HTTP method. Can be one of GET, POST, PUT, PATCH, or DELETE. public string HttpMethod { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeDescriptor.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeDescriptor.html",
    "title": "Class ResourceTypeDescriptor | FoundationaLLM",
    "keywords": "Class ResourceTypeDescriptor Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about a resource type managed by a resource provider. public class ResourceTypeDescriptor Inheritance object ResourceTypeDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeDescriptor(string) Provides details about a resource type managed by a resource provider. public ResourceTypeDescriptor(string resourceType) Parameters resourceType string The name of the resource type. Properties Actions The list of actions supported by the resource type. public List<ResourceTypeAction> Actions { get; set; } Property Value List<ResourceTypeAction> AllowedTypes The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. public List<ResourceTypeAllowedTypes> AllowedTypes { get; set; } Property Value List<ResourceTypeAllowedTypes> ResourceType The name of the resource type. public string ResourceType { get; set; } Property Value string SubTypes The dictionary of resource descriptors specifying the resource's allowed subtypes. public Dictionary<string, ResourceTypeDescriptor> SubTypes { get; set; } Property Value Dictionary<string, ResourceTypeDescriptor> Methods TypeAllowedForHttpGet(Type) Indicates whether the resource type allows the the retrieval of the specified type. public bool TypeAllowedForHttpGet(Type type) Parameters type Type The Type being checked. Returns bool true is the specified type can be retrieved, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeInstance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeInstance.html",
    "title": "Class ResourceTypeInstance | FoundationaLLM",
    "keywords": "Class ResourceTypeInstance Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Identifies a specific resource type instance. public record ResourceTypeInstance : IEquatable<ResourceTypeInstance> Inheritance object ResourceTypeInstance Implements IEquatable<ResourceTypeInstance> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeInstance(string) Identifies a specific resource type instance. public ResourceTypeInstance(string ResourceType) Parameters ResourceType string The name of the resource type. Fields Action An optional action to be executed on the resource instance. public string? Action Field Value string ResourceId An optional resource type instance unique identifier. public string? ResourceId Field Value string Properties ResourceType The name of the resource type. public string ResourceType { get; init; } Property Value string Methods Includes(ResourceTypeInstance?) Checks whether the current instance includes another ResourceTypeInstance instance. public bool Includes(ResourceTypeInstance? other) Parameters other ResourceTypeInstance The ResourceTypeInstance to check for inclusion. Returns bool True if the current instance includes the other instance."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexerType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexerType.html",
    "title": "Enum IndexerType | FoundationaLLM",
    "keywords": "Enum IndexerType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Types of vectori indexes available to store embeddings. public enum IndexerType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureAISearchIndexer = 0 Indexer using Azure AI Search vector indexes. AzureCosmosDBNoSQLIndexer = 1 Indexer using Azure Cosmos DB NoSQL indexes. PostgresIndexer = 2 Indexer using PostgreSQL indexes."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexingProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexingProfile.html",
    "title": "Class IndexingProfile | FoundationaLLM",
    "keywords": "Class IndexingProfile Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides details about an indexing profile. public class IndexingProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase IndexingProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Indexer The type of the indexer. [JsonPropertyName(\"indexer\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required IndexerType Indexer { get; set; } Property Value IndexerType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingProfile.html",
    "title": "Class TextEmbeddingProfile | FoundationaLLM",
    "keywords": "Class TextEmbeddingProfile Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides details about a text embedding profile. public class TextEmbeddingProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase TextEmbeddingProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TextEmbedding The type of the text splitter. [JsonPropertyName(\"text_embedding\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required TextEmbeddingType TextEmbedding { get; set; } Property Value TextEmbeddingType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingType.html",
    "title": "Enum TextEmbeddingType | FoundationaLLM",
    "keywords": "Enum TextEmbeddingType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Types of text embeddings available for text embedding. public enum TextEmbeddingType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields GatewayTextEmbedding = 0 Text emebdding that uses the Gateway API to embed text."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextPartitioningProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextPartitioningProfile.html",
    "title": "Class TextPartitioningProfile | FoundationaLLM",
    "keywords": "Class TextPartitioningProfile Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides details about a text partitioning profile. public class TextPartitioningProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase TextPartitioningProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TextSplitter The type of the text splitter. [JsonPropertyName(\"text_splitter\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required TextSplitterType TextSplitter { get; set; } Property Value TextSplitterType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextSplitterType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextSplitterType.html",
    "title": "Enum TextSplitterType | FoundationaLLM",
    "keywords": "Enum TextSplitterType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Types of text splitters available for text partitioning. public enum TextSplitterType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields TokenTextSplitter = 0 Text splitter that uses token counts to partition text."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationLongRunningOperation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationLongRunningOperation.html",
    "title": "Class VectorizationLongRunningOperation | FoundationaLLM",
    "keywords": "Class VectorizationLongRunningOperation Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides the details of a long-running vectorization operation. public class VectorizationLongRunningOperation Inheritance object VectorizationLongRunningOperation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Complete Indicates whether the operation is complete or not. [JsonPropertyOrder(10)] [JsonPropertyName(\"complete\")] public bool Complete { get; set; } Property Value bool FirstResponseTime The first time we learned about the operation being run. [JsonPropertyOrder(5)] [JsonPropertyName(\"first_response_time\")] public DateTime FirstResponseTime { get; set; } Property Value DateTime LastResponseTime The last time we learned about the operation being run. [JsonPropertyOrder(6)] [JsonPropertyName(\"last_response_time\")] public DateTime LastResponseTime { get; set; } Property Value DateTime OperationId The unique identifier of the long-running operation. [JsonPropertyOrder(-5)] [JsonPropertyName(\"operation_id\")] public required string OperationId { get; set; } Property Value string PollingCount The number of times an attempt was made to retrieve the result. [JsonPropertyOrder(15)] [JsonPropertyName(\"polling_count\")] public int PollingCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingState.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingState.html",
    "title": "Enum VectorizationProcessingState | FoundationaLLM",
    "keywords": "Enum VectorizationProcessingState Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Describes the state of a vectorization request. [JsonConverter(typeof(JsonStringEnumConverter))] public enum VectorizationProcessingState Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Completed = 2 All steps of the request have completed successfully. Failed = 3 An error occurred during processing. InProgress = 1 The request is being processed. New = 0 The vectorization request is new and has not been processed."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingType.html",
    "title": "Enum VectorizationProcessingType | FoundationaLLM",
    "keywords": "Enum VectorizationProcessingType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll The type of vectorization request processing. public enum VectorizationProcessingType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Asynchronous = 0 Asynchronous processing using vectorization workers. Synchronous = 1 Synchronous processing using the vectorization API."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProfileBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProfileBase.html",
    "title": "Class VectorizationProfileBase | FoundationaLLM",
    "keywords": "Class VectorizationProfileBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Basic properties for vectorization profiles. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(TextPartitioningProfile), \"text-partitioning-profile\")] [JsonDerivedType(typeof(TextEmbeddingProfile), \"text-embedding-profile\")] [JsonDerivedType(typeof(IndexingProfile), \"indexing-profile\")] public class VectorizationProfileBase : ResourceBase Inheritance object ResourceName ResourceBase VectorizationProfileBase Derived IndexingProfile TextEmbeddingProfile TextPartitioningProfile Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationReferences Configuration references associated with the vectorization profile. [JsonPropertyName(\"configuration_references\")] public Dictionary<string, string>? ConfigurationReferences { get; set; } Property Value Dictionary<string, string> Settings The configuration associated with the vectorization profile. [JsonPropertyName(\"settings\")] public Dictionary<string, string>? Settings { get; set; } Property Value Dictionary<string, string> Type The type of the vectorization profile. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationRequest.html",
    "title": "Class VectorizationRequest | FoundationaLLM",
    "keywords": "Class VectorizationRequest Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Represents a vectorization request. public class VectorizationRequest : ResourceBase Inheritance object ResourceName ResourceBase VectorizationRequest Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationRequest() Set default property values. public VectorizationRequest() Properties Complete Indicates whether the vectorization process is complete or not. [JsonIgnore] public bool Complete { get; } Property Value bool CompletedSteps The ordered list of the names of the vectorization steps that were already completed. [JsonPropertyOrder(201)] [JsonPropertyName(\"completed_steps\")] public List<string> CompletedSteps { get; set; } Property Value List<string> ContentIdentifier The ContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(2)] [JsonPropertyName(\"content_identifier\")] public required ContentIdentifier ContentIdentifier { get; set; } Property Value ContentIdentifier CurrentStep The current step of the vectorization request. [JsonPropertyOrder(203)] [JsonPropertyName(\"current_step\")] public string? CurrentStep { get; } Property Value string ErrorCount The number of times the processing of the current step resulted in an error. [JsonPropertyOrder(204)] [JsonPropertyName(\"error_count\")] public int ErrorCount { get; set; } Property Value int ErrorMessages Error messages that occurred during the processing of the vectorization request. [JsonPropertyOrder(103)] [JsonPropertyName(\"error_messages\")] public List<string> ErrorMessages { get; set; } Property Value List<string> ExecutionEnd The time when the vectorization request finished being processed. [JsonPropertyOrder(102)] [JsonPropertyName(\"execution_end\")] public DateTime? ExecutionEnd { get; set; } Property Value DateTime? ExecutionStart The time when the vectorization request started being processed. [JsonPropertyOrder(101)] [JsonPropertyName(\"execution_start\")] public DateTime? ExecutionStart { get; set; } Property Value DateTime? Expired Identifies whether the request is expired or not. Vectorization requests that had no successful step executions in the last 10 days are considered expired. public bool Expired { get; } Property Value bool this[string] Gets the vectorization pipeline step that has a specific identifier. public VectorizationStep? this[string step] { get; } Parameters step string The identifier of the vectorization pipeline step. Property Value VectorizationStep An instances of the VectorizationStep class with the details required by the step handler. LastSuccessfulStepTime The time of the last successful processing of a step. [JsonPropertyOrder(206)] [JsonPropertyName(\"last_successful_step_time\")] public DateTime LastSuccessfulStepTime { get; set; } Property Value DateTime PipelineExecutionId If run in the context of a pipeline, the unique identifier of the pipeline execution. [JsonPropertyOrder(52)] [JsonPropertyName(\"pipeline_execution_id\")] public string? PipelineExecutionId { get; set; } Property Value string PipelineName If run in the context of a pipeline, the name of the pipeline resource being executed. [JsonPropertyOrder(51)] [JsonPropertyName(\"pipeline_name\")] public string? PipelineName { get; set; } Property Value string PipelineObjectId If run in the context of a pipeline, the object id of the pipeline resource being executed. [JsonPropertyOrder(50)] [JsonPropertyName(\"pipeline_object_id\")] public string? PipelineObjectId { get; set; } Property Value string ProcessingState The VectorizationProcessingState indicating the current state of the vectorization request. [JsonPropertyOrder(100)] [JsonPropertyName(\"processing_state\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationProcessingState ProcessingState { get; set; } Property Value VectorizationProcessingState ProcessingType The VectorizationProcessingType indicating how should the request be processed. [JsonPropertyOrder(3)] [JsonPropertyName(\"processing_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required VectorizationProcessingType ProcessingType { get; set; } Property Value VectorizationProcessingType RemainingSteps The ordered list of the names of the vectorization steps that still need to be executed. [JsonPropertyOrder(202)] [JsonPropertyName(\"remaining_steps\")] public List<string> RemainingSteps { get; set; } Property Value List<string> ResourceFilePath Path to the vectorization request resource file. [JsonPropertyOrder(1)] [JsonPropertyName(\"resource_filepath\")] public string? ResourceFilePath { get; set; } Property Value string RunningOperations A dictionary of running operation identifiers indexed by step name. Some steps can be executed via long-running operations that required the persistence of operation identifiers. [JsonPropertyOrder(205)] [JsonPropertyName(\"running_operations\")] public Dictionary<string, VectorizationLongRunningOperation> RunningOperations { get; set; } Property Value Dictionary<string, VectorizationLongRunningOperation> Steps The list of vectorization steps requested by the vectorization request. Vectorization steps are identified by unique names like \"extract\", \"partition\", \"embed\", \"index\", etc. [JsonPropertyOrder(200)] [JsonPropertyName(\"steps\")] public required List<VectorizationStep> Steps { get; set; } Property Value List<VectorizationStep> Methods MoveToNextStep() Advances the vectorization pipeline to the next step. The newly set current step is used to choose the next request source to which the vectorization request will be added. public (string PreviousStep, string? CurrentStep) MoveToNextStep() Returns (string PreviousStep, string CurrentStep) A tuple containing the name of the previous step and the name of the next step to execute if there are steps left to execute or null if the processing of the vectorization request is complete."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationResult.html",
    "title": "Class VectorizationResult | FoundationaLLM",
    "keywords": "Class VectorizationResult Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Represents the result of executing a vectorization action. public record VectorizationResult : IEquatable<VectorizationResult> Inheritance object VectorizationResult Implements IEquatable<VectorizationResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationResult(string, bool, string?) Represents the result of executing a vectorization action. public VectorizationResult(string ObjectId, bool IsSuccess, string? ErrorMessage) Parameters ObjectId string The object id to which the result refers to. IsSuccess bool Indicates whether the execution was completed successfully. ErrorMessage string When IsSuccess is false, contains an error message with details. Properties ErrorMessage When IsSuccess is false, contains an error message with details. [JsonPropertyName(\"error_message\")] public string? ErrorMessage { get; init; } Property Value string IsSuccess Indicates whether the execution was completed successfully. [JsonPropertyName(\"is_success\")] public bool IsSuccess { get; init; } Property Value bool ObjectId The object id to which the result refers to. [JsonPropertyName(\"object_id\")] public string ObjectId { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationStep.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationStep.html",
    "title": "Class VectorizationStep | FoundationaLLM",
    "keywords": "Class VectorizationStep Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Represents a vectorization step in a vectorization request. public class VectorizationStep Inheritance object VectorizationStep Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The identifier of the step. [JsonPropertyOrder(0)] [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string Parameters Dictionary-based configuration for the step. [JsonPropertyOrder(1)] [JsonPropertyName(\"parameters\")] public required Dictionary<string, string> Parameters { get; set; } Property Value Dictionary<string, string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Classes IndexingProfile Provides details about an indexing profile. TextEmbeddingProfile Provides details about a text embedding profile. TextPartitioningProfile Provides details about a text partitioning profile. VectorizationLongRunningOperation Provides the details of a long-running vectorization operation. VectorizationProfileBase Basic properties for vectorization profiles. VectorizationRequest Represents a vectorization request. VectorizationResult Represents the result of executing a vectorization action. VectorizationStep Represents a vectorization step in a vectorization request. Enums IndexerType Types of vectori indexes available to store embeddings. TextEmbeddingType Types of text embeddings available for text embedding. TextSplitterType Types of text splitters available for text partitioning. VectorizationProcessingState Describes the state of a vectorization request. VectorizationProcessingType The type of vectorization request processing."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.ResourceProviders Namespaces FoundationaLLM.Common.Models.ResourceProviders.AIModel FoundationaLLM.Common.Models.ResourceProviders.Agent FoundationaLLM.Common.Models.ResourceProviders.Attachment FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI FoundationaLLM.Common.Models.ResourceProviders.Configuration FoundationaLLM.Common.Models.ResourceProviders.DataSource FoundationaLLM.Common.Models.ResourceProviders.Prompt FoundationaLLM.Common.Models.ResourceProviders.Vectorization Classes FileContent Holds the content of an OpenAI file. ResourceBase Basic properties for all resources. ResourceFilter Filters resources based on the specified criteria. ResourceName A named resource with a type. ResourceNameCheckResult The result of a resource name check. ResourcePath Provides the logic for handling FoundationaLLM resource identifiers. ResourceProviderActionResult The result of an action executed by a resource provider. ResourceProviderDeleteResult Represents the result of a delete operation. ResourceProviderGetResult<T> Represents the result of a fetch operation. ResourceProviderOptions Options for the resource provider requests. ResourceProviderUpsertResult Represents the result of an upsert operation. ResourceReference Resource reference used by resource providers to index the resources they manage. ResourceReferenceList<T> Maintains a collection of resource references. ResourceTypeAction Provides details about a resource type action. ResourceTypeAllowedTypes Provides details about the types that are allowed for the body and return of a specific HTTP method. ResourceTypeDescriptor Provides details about a resource type managed by a resource provider. ResourceTypeInstance Identifies a specific resource type instance. Enums NameCheckResultType The result types of resource name checks."
  },
  "api/dotnet/FoundationaLLM.Common.Models.RoleAssignment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.RoleAssignment.html",
    "title": "Class RoleAssignment | FoundationaLLM",
    "keywords": "Class RoleAssignment Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll Represents a security role assignment. public class RoleAssignment : ResourceBase Inheritance object ResourceName ResourceBase RoleAssignment Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedActions The explicit list of all allowed actions resulting from expanding all wildcards. [JsonIgnore] public HashSet<string> AllowedActions { get; set; } Property Value HashSet<string> PrincipalId The unique identifier of the security principal to which the role is assigned. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string PrincipalType The type of the security principal to which the role is assigned. Can be User, Group, or ServicePrincipal. [JsonPropertyName(\"principal_type\")] public required string PrincipalType { get; set; } Property Value string RoleDefinition The RoleDefinition referenced by the RoleDefinitionId property. [JsonIgnore] public RoleDefinition? RoleDefinition { get; set; } Property Value RoleDefinition RoleDefinitionId The unique identifier of the role definition. [JsonPropertyName(\"role_definition_id\")] public required string RoleDefinitionId { get; set; } Property Value string Scope The scope at which the role is assigned. [JsonPropertyName(\"scope\")] public required string Scope { get; set; } Property Value string ScopeResourcePath The ResourcePath resulting from parsing the scope path. [JsonIgnore] public ResourcePath? ScopeResourcePath { get; set; } Property Value ResourcePath Methods Enrich(List<string>) public void Enrich(List<string> allowedInstanceIds) Parameters allowedInstanceIds List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.RoleDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.RoleDefinition.html",
    "title": "Class RoleDefinition | FoundationaLLM",
    "keywords": "Class RoleDefinition Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll Contains information about a security role definition. public class RoleDefinition : ResourceBase Inheritance object ResourceName ResourceBase RoleDefinition Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssignableScopes The list of scopes at which the role can be assigned. [JsonPropertyName(\"assignable_scopes\")] [JsonPropertyOrder(1)] public List<string> AssignableScopes { get; set; } Property Value List<string> Deleted Indicates whether the resource has been logically deleted. [JsonIgnore] public override bool Deleted { get; set; } Property Value bool Permissions The permissions associated with the security role definition. [JsonPropertyName(\"permissions\")] [JsonPropertyOrder(2)] public List<RoleDefinitionPermissions> Permissions { get; set; } Property Value List<RoleDefinitionPermissions> Methods GetAllowedActions() public List<string> GetAllowedActions() Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.RoleDefinitionPermissions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.RoleDefinitionPermissions.html",
    "title": "Class RoleDefinitionPermissions | FoundationaLLM",
    "keywords": "Class RoleDefinitionPermissions Namespace FoundationaLLM.Common.Models Assembly FoundationaLLM.Common.dll Manages the permissions associated with a security role definition. public class RoleDefinitionPermissions Inheritance object RoleDefinitionPermissions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions Allowed control plane actions. [JsonPropertyName(\"actions\")] [JsonPropertyOrder(1)] public List<string> Actions { get; set; } Property Value List<string> DataActions Allowed data plane actions. [JsonPropertyName(\"data_actions\")] [JsonPropertyOrder(3)] public List<string> DataActions { get; set; } Property Value List<string> NotActions Denied control plane actions. [JsonPropertyName(\"not_actions\")] [JsonPropertyOrder(2)] public List<string> NotActions { get; set; } Property Value List<string> NotDataActions Denied data plane actions. [JsonPropertyName(\"not_data_actions\")] [JsonPropertyOrder(4)] public List<string> NotDataActions { get; set; } Property Value List<string> Methods GetAllowedActions() public List<string> GetAllowedActions() Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.ContentIdentifier.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.ContentIdentifier.html",
    "title": "Class ContentIdentifier | FoundationaLLM",
    "keywords": "Class ContentIdentifier Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Represents the content associated with a vectorization request. public class ContentIdentifier Inheritance object ContentIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the content being vectorized. Vectorization state services use it to derive the location of the state in the underlying storage. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public required string CanonicalId { get; set; } Property Value string DataSourceObjectId The name of the vectorization content source profile that provides settings to connect to the content source. [JsonPropertyOrder(0)] [JsonPropertyName(\"data_source_object_id\")] public required string DataSourceObjectId { get; set; } Property Value string FileName The file name part of the content identifier. [JsonIgnore] public string FileName { get; } Property Value string this[int] The indexer allowing to access the components of the multipart identifier using [] notation. [JsonIgnore] public string this[int i] { get; } Parameters i int The index of component being retrieved. Property Value string Metadata Additional metadata associated with the content being vectorized. [JsonPropertyOrder(3)] [JsonPropertyName(\"metadata\")] public Dictionary<string, object>? Metadata { get; set; } Property Value Dictionary<string, object> MultipartId The multipart unique identifier of the the content (i.e. document) being vectorized. [JsonInclude] [JsonPropertyOrder(1)] [JsonPropertyName(\"multipart_id\")] public required List<string> MultipartId { get; set; } Property Value List<string> UniqueId The unique identifier of the content (i.e., document) being vectorized. The identifier is determined by concatenating the parts from MultipartId. [JsonIgnore] public string UniqueId { get; } Property Value string Methods ValidateMultipartId(int) Validates a multipart unique content identifier. public void ValidateMultipartId(int expectedPartsCount) Parameters expectedPartsCount int The expected number of parts in the multipart identifier. Exceptions ContentIdentifierException"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContent.html",
    "title": "Class EmbeddedContent | FoundationaLLM",
    "keywords": "Class EmbeddedContent Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Provides information about embedded content. public class EmbeddedContent Inheritance object EmbeddedContent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentId The canonical identifier of the content. public required ContentIdentifier ContentId { get; set; } Property Value ContentIdentifier ContentParts The list of conent public required List<EmbeddedContentPart> ContentParts { get; set; } Property Value List<EmbeddedContentPart>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContentPart.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContentPart.html",
    "title": "Class EmbeddedContentPart | FoundationaLLM",
    "keywords": "Class EmbeddedContentPart Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Provides information about an embedded content part. public class EmbeddedContentPart Inheritance object EmbeddedContentPart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text content that was embedded. public required string Content { get; set; } Property Value string Embedding The vector embedding associated with the content. public required Embedding Embedding { get; set; } Property Value Embedding Id The unique identifier of the embedded content part. public required string Id { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.JsonConverter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.JsonConverter.html",
    "title": "Class Embedding.JsonConverter | FoundationaLLM",
    "keywords": "Class Embedding.JsonConverter Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Serializes the content of an Embedding value. Note: use Embedding.JsonConverter to serialize objects using the Embedding type, for example: [JsonPropertyName(\"vector\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding Vector { get; set; } public sealed class Embedding.JsonConverter : JsonConverter<Embedding> Inheritance object JsonConverter JsonConverter<Embedding> Embedding.JsonConverter Inherited Members JsonConverter<Embedding>.CanConvert(Type) JsonConverter<Embedding>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Embedding>.WriteAsPropertyName(Utf8JsonWriter, Embedding, JsonSerializerOptions) JsonConverter<Embedding>.HandleNull JsonConverter<Embedding>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type Embedding. public override Embedding Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Embedding The converted value. Write(Utf8JsonWriter, Embedding, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, Embedding value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value Embedding The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.html",
    "title": "Struct Embedding | FoundationaLLM",
    "keywords": "Struct Embedding Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Stores a vector embedding. This type should be serialized using Emedding.JsonConverter. public struct Embedding : IEquatable<Embedding> Implements IEquatable<Embedding> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Embedding(int) Creates an embedding with a zero-initialzed vector of a specified size. public Embedding(int size) Parameters size int The size of the vector representing the embedding. Embedding(ReadOnlyMemory<float>) Creates an embedding from a vector represents as a ReadOnlyMemory<T> object. public Embedding(ReadOnlyMemory<float> vector) Parameters vector ReadOnlyMemory<float> Embedding(float[]) Creates an embedding from a vector represented as an array of real numbers. public Embedding(float[] vector) Parameters vector float[] The array containing the vector values. Properties Length Length of the vector representing the embedding. This property is only serialized when Embedding.JsonConverter is used. [JsonIgnore] public readonly int Length { get; } Property Value int Vector The vector that represents the embedding. This property is only serialized when Embedding.JsonConverter is used. [JsonIgnore] public ReadOnlyMemory<float> Vector { readonly get; set; } Property Value ReadOnlyMemory<float> Methods Equals(Embedding) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Embedding other) Parameters other Embedding An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Inidicates whether the current object is equal to another object. public override readonly bool Equals(object? obj) Parameters obj object An object to compare with this object. Returns bool True if the object is equal to the obj param and False otherwise. GetHashCode() Calculated the hashcode for this Embedding. public override readonly int GetHashCode() Returns int The hash value represented by an integer. Operators operator ==(Embedding, Embedding) Checks if two Embedding values are equal. public static bool operator ==(Embedding v1, Embedding v2) Parameters v1 Embedding The first Embedding value to be cheched. v2 Embedding The second Embedding value to be checked. Returns bool True if the two values are equal, False otherwise. operator !=(Embedding, Embedding) Checks if two Embedding values are different. public static bool operator !=(Embedding v1, Embedding v2) Parameters v1 Embedding The first Embedding value to be cheched. v2 Embedding The second Embedding value to be checked. Returns bool True if the two values are different, False otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextChunk.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextChunk.html",
    "title": "Class TextChunk | FoundationaLLM",
    "keywords": "Class TextChunk Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Represents a chunk of text produced by a text splitter. public class TextChunk Inheritance object TextChunk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text content of the chunk. [JsonPropertyName(\"content\")] public string? Content { get; set; } Property Value string Embedding The embedding of the text content. [JsonPropertyName(\"embedding\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding? Embedding { get; set; } Property Value Embedding? OperationId The identifier of the operation the text chunk belongs to. Can be null if the chunk is not associated with an operation. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string Position The position of the text chunk in the content it belongs to. [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value int TokensCount The size of the chunk in tokens. [JsonPropertyName(\"tokens_count\")] public int TokensCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextEmbeddingRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextEmbeddingRequest.html",
    "title": "Class TextEmbeddingRequest | FoundationaLLM",
    "keywords": "Class TextEmbeddingRequest Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Models a request to embed a list of text chunks. public class TextEmbeddingRequest Inheritance object TextEmbeddingRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingModelName The name of the embedding model to use. If not specified, a default embedding model should be used. [JsonPropertyName(\"embedding_model_name\")] public string EmbeddingModelName { get; set; } Property Value string Prioritized Indicates whether the request should be prioritized. Example: Synchronous vectorization and user prompt embedding for completions. [JsonPropertyName(\"prioritized\")] public bool Prioritized { get; set; } Property Value bool TextChunks The list of TextChunk objects containing the texts to embed. [JsonPropertyName(\"text_chunks\")] public IList<TextChunk> TextChunks { get; set; } Property Value IList<TextChunk>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextEmbeddingResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextEmbeddingResult.html",
    "title": "Class TextEmbeddingResult | FoundationaLLM",
    "keywords": "Class TextEmbeddingResult Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll The result of a text embedding request. public class TextEmbeddingResult Inheritance object TextEmbeddingResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ErrorMessage The message describing the error that lead to the cancellation of the operation. [JsonPropertyName(\"error_message\")] public string? ErrorMessage { get; set; } Property Value string Failed Indicates whether the text embedding operation failed due to an error. When true, the ErrorMessage property contains a message describing the error. [JsonPropertyName(\"cancelled\")] public bool Failed { get; set; } Property Value bool InProgress Indicates whether the text embedding operation is still in progress. When true, the OperationId property contains an operation identifier. [JsonPropertyName(\"in_progress\")] public bool InProgress { get; set; } Property Value bool OperationId Optional operation identifier that can be used to retrieve the final result. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string TextChunks The list of TextChunk objects containing the embeddings. [JsonPropertyName(\"text_chunks\")] public IList<TextChunk> TextChunks { get; set; } Property Value IList<TextChunk> TokenCount The number of tokens used during the embedding operation. [JsonPropertyName(\"token_count\")] public int TokenCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipeline.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipeline.html",
    "title": "Class VectorizationPipeline | FoundationaLLM",
    "keywords": "Class VectorizationPipeline Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Defines a vectorization pipeline. public class VectorizationPipeline : ResourceBase Inheritance object ResourceName ResourceBase VectorizationPipeline Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationPipeline() Set default property values. public VectorizationPipeline() Properties Active Indicates whether the pipeline is active or not. When the pipeline is inactive, it cannot be triggered to execute. [JsonPropertyName(\"active\")] public bool Active { get; set; } Property Value bool DataSourceObjectId The object identifier of the data source used to retrieve content for vectorization. [JsonPropertyName(\"data_source_object_id\")] public required string DataSourceObjectId { get; set; } Property Value string IndexingProfileObjectId The object identifier of the indexing profile used to index text embeddings. [JsonPropertyName(\"indexing_profile_object_id\")] public required string IndexingProfileObjectId { get; set; } Property Value string TextEmbeddingProfileObjectId The object identifier of the text embedding profile used to embed text. [JsonPropertyName(\"text_embedding_profile_object_id\")] public required string TextEmbeddingProfileObjectId { get; set; } Property Value string TextPartitioningProfileObjectId The object identifier of the text partitioning profile used to split text. [JsonPropertyName(\"text_partitioning_profile_object_id\")] public required string TextPartitioningProfileObjectId { get; set; } Property Value string TriggerCronSchedule The schedule of the trigger in Cron format. This propoerty is valid only when TriggerType = Schedule. [JsonPropertyName(\"trigger_cron_schedule\")] public string? TriggerCronSchedule { get; set; } Property Value string TriggerType The type of trigger that initiates the execution of the pipeline. [JsonPropertyName(\"trigger_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required VectorizationPipelineTriggerType TriggerType { get; set; } Property Value VectorizationPipelineTriggerType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineTriggerType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineTriggerType.html",
    "title": "Enum VectorizationPipelineTriggerType | FoundationaLLM",
    "keywords": "Enum VectorizationPipelineTriggerType Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Types of vectorization pipeline triggers. public enum VectorizationPipelineTriggerType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Event = 2 The vectorization pipeline is triggered based on content change events (e.g., an existing file is updated or a new file is added). Manual = 0 The vectorization pipeline is triggered manually. Schedule = 1 The vectorization pipeline is triggered based on a regular schedule."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.Vectorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models.Vectorization Classes ContentIdentifier Represents the content associated with a vectorization request. EmbeddedContent Provides information about embedded content. EmbeddedContentPart Provides information about an embedded content part. Embedding.JsonConverter Serializes the content of an Embedding value. Note: use Embedding.JsonConverter to serialize objects using the Embedding type, for example: [JsonPropertyName(\"vector\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding Vector { get; set; } TextChunk Represents a chunk of text produced by a text splitter. TextEmbeddingRequest Models a request to embed a list of text chunks. TextEmbeddingResult The result of a text embedding request. VectorizationPipeline Defines a vectorization pipeline. Structs Embedding Stores a vector embedding. This type should be serialized using Emedding.JsonConverter. Enums VectorizationPipelineTriggerType Types of vectorization pipeline triggers."
  },
  "api/dotnet/FoundationaLLM.Common.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.html",
    "title": "Namespace FoundationaLLM.Common.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Models Namespaces FoundationaLLM.Common.Models.Authentication FoundationaLLM.Common.Models.Authorization FoundationaLLM.Common.Models.Azure FoundationaLLM.Common.Models.AzureAIService FoundationaLLM.Common.Models.Cache FoundationaLLM.Common.Models.Chat FoundationaLLM.Common.Models.Collections FoundationaLLM.Common.Models.Configuration FoundationaLLM.Common.Models.Context FoundationaLLM.Common.Models.Events FoundationaLLM.Common.Models.Gateway FoundationaLLM.Common.Models.Infrastructure FoundationaLLM.Common.Models.Metadata FoundationaLLM.Common.Models.Orchestration FoundationaLLM.Common.Models.ResourceProviders FoundationaLLM.Common.Models.Vectorization Classes AuthorizableAction Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. RoleAssignment Represents a security role assignment. RoleDefinition Contains information about a security role definition. RoleDefinitionPermissions Manages the permissions associated with a security role definition."
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html",
    "title": "Class ConfigureSwaggerOptions | FoundationaLLM",
    "keywords": "Class ConfigureSwaggerOptions Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Configures the Swagger generation options. public class ConfigureSwaggerOptions : IConfigureOptions<SwaggerGenOptions> Inheritance object ConfigureSwaggerOptions Implements IConfigureOptions<SwaggerGenOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This allows API versioning to define a Swagger document per API version after the Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider service has been resolved from the service container. Constructors ConfigureSwaggerOptions(IApiVersionDescriptionProvider) Initializes a new instance of the ConfigureSwaggerOptions class. public ConfigureSwaggerOptions(IApiVersionDescriptionProvider provider) Parameters provider IApiVersionDescriptionProvider The provider used to generate Swagger documents. Methods Configure(SwaggerGenOptions) Invoked to configure a SwaggerGenOptions instance. public void Configure(SwaggerGenOptions options) Parameters options SwaggerGenOptions The options instance to configure."
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html",
    "title": "Class SwaggerDefaultValues | FoundationaLLM",
    "keywords": "Class SwaggerDefaultValues Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used. public class SwaggerDefaultValues : IOperationFilter Inheritance object SwaggerDefaultValues Implements IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This IOperationFilter is only required due to bugs in the SwaggerGenerator. Once they are fixed and published, this class can be removed. Methods Apply(OpenApiOperation, OperationFilterContext) public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters operation OpenApiOperation context OperationFilterContext"
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.html",
    "title": "Namespace FoundationaLLM.Common.OpenAPI | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.OpenAPI Classes ConfigureSwaggerOptions Configures the Swagger generation options. SwaggerDefaultValues Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.DownstreamAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.DownstreamAPIService.html",
    "title": "Class DownstreamAPIService | FoundationaLLM",
    "keywords": "Class DownstreamAPIService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Contains methods for interacting with the downstream API. public class DownstreamAPIService : IDownstreamAPIService Inheritance object DownstreamAPIService Implements IDownstreamAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DownstreamAPIService(string, ICallContext, IHttpClientFactoryService, ILogger<DownstreamAPIService>) Contains methods for interacting with the downstream API. public DownstreamAPIService(string downstreamHttpClientName, ICallContext callContext, IHttpClientFactoryService httpClientFactoryService, ILogger<DownstreamAPIService> logger) Parameters downstreamHttpClientName string The name of the downstream HTTP client. callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. logger ILogger<DownstreamAPIService> The ILogger used for logging. Properties APIName The name of the downstream API. public string APIName { get; } Property Value string Methods GetCompletion(string, CompletionRequest) Gets a completion from the downstream API. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. public Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a completion response GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.HttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.HttpClientFactoryService.html",
    "title": "Class HttpClientFactoryService | FoundationaLLM",
    "keywords": "Class HttpClientFactoryService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class HttpClientFactoryService : IHttpClientFactoryService Inheritance object HttpClientFactoryService Implements IHttpClientFactoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors HttpClientFactoryService(IServiceProvider, IConfiguration, IHttpClientFactory) Creates a new instance of the HttpClientFactoryService class. public HttpClientFactoryService(IServiceProvider serviceProvider, IConfiguration configuration, IHttpClientFactory httpClientFactory) Parameters serviceProvider IServiceProvider The IServiceProvider for the main DI container. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. httpClientFactory IHttpClientFactory A fully configured IHttpClientFactory. Exceptions ArgumentNullException Methods CreateClient(APIEndpointConfiguration, UnifiedUserIdentity?) Creates a HttpClient instance based on the endpoint configuration. public Task<HttpClient> CreateClient(APIEndpointConfiguration endpointConfiguration, UnifiedUserIdentity? userIdentity) Parameters endpointConfiguration APIEndpointConfiguration The APIEndpointConfiguration resource used to create the client. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClient(string, UnifiedUserIdentity) Creates a HttpClient instance based on the client name. The client name must be registered in the IHttpClientFactory configuration. public Task<HttpClient> CreateClient(string clientName, UnifiedUserIdentity userIdentity) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClient<T>(string, UnifiedUserIdentity, Func<Dictionary<string, object>, T>) Creates a T client instance based on the client name and a client builder delegate. public Task<T> CreateClient<T>(string clientName, UnifiedUserIdentity userIdentity, Func<Dictionary<string, object>, T> clientBuilder) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. clientBuilder Func<Dictionary<string, object>, T> A delegate that creates the T client instance based on a dictionary of values. The keys available in the dictionary are defined in HttpClientFactoryServiceKeyNames. Returns Task<T> A T client instance. Type Parameters T The type of the client to create. CreateUnregisteredClient(TimeSpan?) Creates a new unregistered HttpClient instance with a timeout. public HttpClient CreateUnregisteredClient(TimeSpan? timeout = null) Parameters timeout TimeSpan? The timeout for the HttpClient. If not specified, the default timeout in seconds is applied. For an infinite waiting period, use InfiniteTimeSpan Returns HttpClient An HttpClient instance."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.html",
    "title": "Namespace FoundationaLLM.Common.Services.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.API Classes DownstreamAPIService Contains methods for interacting with the downstream API. HttpClientFactoryService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAIService.html",
    "title": "Class AzureAIService | FoundationaLLM",
    "keywords": "Class AzureAIService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Service to interact with Azure AI Studio. public class AzureAIService : IAzureAIService Inheritance object AzureAIService Implements IAzureAIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for Azure AI Service. Constructors AzureAIService(IOptions<AzureAISettings>, ILogger<AzureAIService>, IStorageService, ICallContext, IHttpClientFactoryService) Service to interact with Azure AI Studio. public AzureAIService(IOptions<AzureAISettings> azureAISettings, ILogger<AzureAIService> logger, IStorageService blobStorageService, ICallContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters azureAISettings IOptions<AzureAISettings> logger ILogger<AzureAIService> blobStorageService IStorageService callContext ICallContext httpClientFactoryService IHttpClientFactoryService Remarks Constructor for Azure AI Service. Methods CreateDataSet(InputsMapping, string) Creates a new data set. public Task<string> CreateDataSet(InputsMapping data, string blobName) Parameters data InputsMapping blobName string Returns Task<string> CreateDataSetVersion(string, string, int) Creates a data set version request. public Task<DataVersionResponse> CreateDataSetVersion(string dataSetName, string dataSetPath, int version = 1) Parameters dataSetName string dataSetPath string version int Returns Task<DataVersionResponse> DownloadResults(Guid) Downloads the results of a job. public Task<string> DownloadResults(Guid jobId) Parameters jobId Guid Returns Task<string> GetJobStatus(Guid) Retrieves the status of a job. public Task<string> GetJobStatus(Guid jobId) Parameters jobId Guid Returns Task<string> GetResultsByIndex(Guid, int, int) Retrieves the results of a job by index. public Task<string> GetResultsByIndex(Guid jobId, int startIndex = 0, int endIndex = 149) Parameters jobId Guid startIndex int endIndex int Returns Task<string> SubmitJob(string, string, int, string) Submits a job to the Azure AI service. public Task<Guid> SubmitJob(string displayName, string dataSetName, int dataSetVersion, string metrics) Parameters displayName string dataSetName string dataSetVersion int metrics string Returns Task<Guid>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAppConfigurationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAppConfigurationService.html",
    "title": "Class AzureAppConfigurationService | FoundationaLLM",
    "keywords": "Class AzureAppConfigurationService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides access to and management of Azure App Configuration. public class AzureAppConfigurationService : IAzureAppConfigurationService Inheritance object AzureAppConfigurationService Implements IAzureAppConfigurationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAppConfigurationService(ConfigurationClient, ILogger<AzureAppConfigurationService>) Provides access to and management of Azure App Configuration. public AzureAppConfigurationService(ConfigurationClient configurationClient, ILogger<AzureAppConfigurationService> logger) Parameters configurationClient ConfigurationClient The Azure App Configuration ConfigurationClient. logger ILogger<AzureAppConfigurationService> The logger. Methods CheckAppConfigurationSettingExistsAsync(string) Check if an individual Azure App Configuration key exists. public Task<bool> CheckAppConfigurationSettingExistsAsync(string key) Parameters key string Returns Task<bool> CheckAppConfigurationSettingsExistAsync() Returns a map of configuration setting keys and whether they exist in Azure App Configuration. public Task<Dictionary<string, bool>> CheckAppConfigurationSettingsExistAsync() Returns Task<Dictionary<string, bool>> DeleteAppConfigurationSettingAsync(string) Deletes an Azure App Configuration setting and its associated Azure Key Vault secret. public Task DeleteAppConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task GetConfigurationSettingAsync(string) Gets the value of a configuration setting from Azure App Configuration. public Task<string?> GetConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task<string> GetConfigurationSettingsAsync(string) Gets the values of configuration settings from Azure App Configuration. public Task<List<(string Key, string? Value, string ContentType)>> GetConfigurationSettingsAsync(string keyFilter) Parameters keyFilter string The key name filter used to select the settings keys for which values are retrieved. Returns Task<List<(string Key, string Value, string ContentType)>> GetFeatureFlagAsync(string) Gets the value of a feature flag from Azure App Configuration. public Task<bool> GetFeatureFlagAsync(string key) Parameters key string The App Configuration feature flag key. Returns Task<bool> SetConfigurationSettingAsync(string, string, string) Sets the value of a configuration setting in Azure App Configuration. public Task SetConfigurationSettingAsync(string key, string value, string contentType) Parameters key string The App Configuration setting key. value string The value to set. contentType string The content type of the value. Returns Task SetFeatureFlagAsync(string, bool) Sets the value of a feature flag in Azure App Configuration. public Task SetFeatureFlagAsync(string key, bool flagEnabled) Parameters key string The App Configuration feature flag key. flagEnabled bool Whether to enable the feature flag. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureKeyVaultService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureKeyVaultService.html",
    "title": "Class AzureKeyVaultService | FoundationaLLM",
    "keywords": "Class AzureKeyVaultService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides access to and management of Azure Key Vault. public class AzureKeyVaultService : IAzureKeyVaultService Inheritance object AzureKeyVaultService Implements IAzureKeyVaultService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureKeyVaultService(SecretClient) Provides access to and management of Azure Key Vault. public AzureKeyVaultService(SecretClient secretClient) Parameters secretClient SecretClient The Key Vault SecretClient. Properties KeyVaultUri Gets the URI of the Key Vault. public string KeyVaultUri { get; } Property Value string Methods CheckKeyVaultSecretsExistAsync(IEnumerable<string?>) Returns a map of secret names and whether they exist in Key Vault. public Task<Dictionary<string, bool>> CheckKeyVaultSecretsExistAsync(IEnumerable<string?> secretNames) Parameters secretNames IEnumerable<string> The list of secret names to check. Returns Task<Dictionary<string, bool>> CheckSecretExistsAsync(string) Returns whether a secret exists in Key Vault. public Task<bool> CheckSecretExistsAsync(string secretName) Parameters secretName string The secret name to check. Returns Task<bool> GetSecretValue(string) Gets the value of a secret from Key Vault. public string? GetSecretValue(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns string GetSecretValueAsync(string) Gets the value of a secret from Key Vault. public Task<string?> GetSecretValueAsync(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns Task<string> SetSecretValueAsync(string, string) Sets the value of a secret in Key Vault. public Task SetSecretValueAsync(string secretName, string secretValue) Parameters secretName string The name of the secret whose value you wish to set. secretValue string The secret value. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureResourceManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureResourceManagerService.html",
    "title": "Class AzureResourceManagerService | FoundationaLLM",
    "keywords": "Class AzureResourceManagerService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public class AzureResourceManagerService : IAzureResourceManagerService Inheritance object AzureResourceManagerService Implements IAzureResourceManagerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureResourceManagerService(ILogger<AzureResourceManagerService>) Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public AzureResourceManagerService(ILogger<AzureResourceManagerService> logger) Parameters logger ILogger<AzureResourceManagerService> The logger used for logging. Methods CreateEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Creates a new Azure Event Grid namespace topic subscription. public Task<bool> CreateEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be created. topicSubscriptionName string The name of the subscription to be created. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task<bool> True if the subscription was successfully created, false otherwise. DeleteEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Deletes an Azure Event Grid namespace topic subscription. public Task DeleteEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be deleted. topicSubscriptionName string The name of the subscription to be deleted. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task GetOpenAIAccountProperties(string) Retrieves the properties of an Azure OpenAI account. public Task<AzureOpenAIAccount> GetOpenAIAccountProperties(string openAIAccountResourceId) Parameters openAIAccountResourceId string The Azure resource identifier of the Azure OpenAI account. Returns Task<AzureOpenAIAccount> An AzureOpenAIAccount object with the properties of the account, including model deployments."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.html",
    "title": "Namespace FoundationaLLM.Common.Services.Azure | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Azure Classes AzureAIService Service to interact with Azure AI Studio. AzureAppConfigurationService Provides access to and management of Azure App Configuration. AzureKeyVaultService Provides access to and management of Azure Key Vault. AzureResourceManagerService Provides services to interact with the Azure Resource Manager (ARM) infrastructure."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Cache.MemoryCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Cache.MemoryCacheService.html",
    "title": "Class MemoryCacheService | FoundationaLLM",
    "keywords": "Class MemoryCacheService Namespace FoundationaLLM.Common.Services.Cache Assembly FoundationaLLM.Common.dll Provides an in-memory cache service. public class MemoryCacheService : ICacheService Inheritance object MemoryCacheService Implements ICacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MemoryCacheService(ILogger<MemoryCacheService>) Provides an in-memory cache service. public MemoryCacheService(ILogger<MemoryCacheService> logger) Parameters logger ILogger<MemoryCacheService> The logger used for logging. Methods GetItemsCount(string) Gets the number of items in the cache that belong to a specified category. public int GetItemsCount(string categoryName) Parameters categoryName string The name of the category. Returns int Get<T>(CacheKey) Gets an object from the cache. public T? Get<T>(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Returns T The object identified by the key. Type Parameters T The type of object retrieved from the cache. Get<T>(CacheKey, Func<Task<T>>, bool, TimeSpan?) Gets an object from the cache. If the object is not found in the cache, will attempt to retrieve it using a specified retriever. public Task<T?> Get<T>(CacheKey key, Func<Task<T>> valueRetriever, bool allowNull, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. valueRetriever Func<Task<T>> The retriever used to get the value to populate the cache. allowNull bool Indicates whether null values returned by the value retriever should be cached or not. expirationTime TimeSpan? The TimeSpan time to live. Returns Task<T> The object identified by the key. Type Parameters T The type of object retrieved from the cache. Remove(CacheKey) Removes an object from the cache. public void Remove(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. RemoveByCategory(CacheKey) Removes all objects belonging to a category from the cache. public void RemoveByCategory(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Set<T>(CacheKey, T?, TimeSpan?) Adds an object to the cache. public void Set<T>(CacheKey key, T? value, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. value T The object to be added to the cache. expirationTime TimeSpan? The TimeSpan time to live. Type Parameters T The type of object retrieved from the cache."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Cache.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Cache.html",
    "title": "Namespace FoundationaLLM.Common.Services.Cache | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Cache Classes MemoryCacheService Provides an in-memory cache service."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.AzureEventGridEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.AzureEventGridEventService.html",
    "title": "Class AzureEventGridEventService | FoundationaLLM",
    "keywords": "Class AzureEventGridEventService Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Provides services to integrate with the Azure Event Grid eventing platform. public class AzureEventGridEventService : IEventService Inheritance object AzureEventGridEventService Implements IEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureEventGridEventService(IOptions<AzureEventGridEventServiceSettings>, IOptions<AzureEventGridEventServiceProfile>, IAzureResourceManagerService, IHttpClientFactoryService, ILogger<AzureEventGridEventService>) Creates a new instance of the AzureEventGridEventService event service. public AzureEventGridEventService(IOptions<AzureEventGridEventServiceSettings> settingsOptions, IOptions<AzureEventGridEventServiceProfile> profileOptions, IAzureResourceManagerService azureResourceManager, IHttpClientFactoryService httpClientFactory, ILogger<AzureEventGridEventService> logger) Parameters settingsOptions IOptions<AzureEventGridEventServiceSettings> The options providing the settings for the service. profileOptions IOptions<AzureEventGridEventServiceProfile> The options providing the profile for the service. azureResourceManager IAzureResourceManagerService The IAzureResourceManagerService service providing access to Azure ARM services. httpClientFactory IHttpClientFactoryService The IHttpClientFactoryService service used to create HTTP clients. logger ILogger<AzureEventGridEventService> The logger used for logging. Methods ExecuteAsync(CancellationToken) Executes the event service until cancellation is signaled. public Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartAsync(CancellationToken) Starts the event service, allowing it to initialize. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the event service, allowing it to cleanup. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SubscribeToEventSetEvent(string, EventSetEventDelegate) Adds an event set event delgate to the list of event handlers for a specified event set namespace. public void SubscribeToEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling. UnsubscribeFromEventSetEvent(string, EventSetEventDelegate) Removes an event set event delegate from the list of event handlers for a specified event set namespace. public void UnsubscribeFromEventSetEvent(string eventNamespace, EventSetEventDelegate eventHandler) Parameters eventNamespace string The name of the event namespace. eventHandler EventSetEventDelegate The function to be invoked during event handling."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.EventsWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.EventsWorker.html",
    "title": "Class EventsWorker | FoundationaLLM",
    "keywords": "Class EventsWorker Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Background worker used to execute the event service. public class EventsWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService EventsWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventsWorker(IEventService, ILogger<EventsWorker>) Background worker used to execute the event service. public EventsWorker(IEventService eventService, ILogger<EventsWorker> logger) Parameters eventService IEventService The IEventService to run. logger ILogger<EventsWorker> The logger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.LocalEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.LocalEventService.html",
    "title": "Class LocalEventService | FoundationaLLM",
    "keywords": "Class LocalEventService Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern. public class LocalEventService Inheritance object LocalEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LocalEventService(LocalEventServiceSettings, IEventService, ILogger) Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern. public LocalEventService(LocalEventServiceSettings settings, IEventService eventService, ILogger logger) Parameters settings LocalEventServiceSettings The LocalEventServiceSettings containing configuration settings for the service. eventService IEventService The IEventService event service that is publishing events through event namespaces. logger ILogger The logger used for logging. Methods StartLocalEventProcessing(Func<EventSetEventArgs, Task>) Kicks off the extraction of events from the events queue. The events are initially received from the events service and are queued internally. In the background, the extraction thread will dequeue and submit them to final processing using the provided event handler. public void StartLocalEventProcessing(Func<EventSetEventArgs, Task> eventHandler) Parameters eventHandler Func<EventSetEventArgs, Task> The event handler invoked to process each set of events. SubscribeToEventNamespaces(List<string>) Subscribes this instance to a specified list of event namespaces supported by the IEventService. public void SubscribeToEventNamespaces(List<string> eventNamespaces) Parameters eventNamespaces List<string> The list with the namespace to subscribe to."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.html",
    "title": "Namespace FoundationaLLM.Common.Services.Events | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Events Classes AzureEventGridEventService Provides services to integrate with the Azure Event Grid eventing platform. EventsWorker Background worker used to execute the event service. LocalEventService Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern."
  },
  "api/dotnet/FoundationaLLM.Common.Services.IAzureAppConfigurationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.IAzureAppConfigurationService.html",
    "title": "Interface IAzureAppConfigurationService | FoundationaLLM",
    "keywords": "Interface IAzureAppConfigurationService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure App Configuration. public interface IAzureAppConfigurationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckAppConfigurationSettingExistsAsync(string) Check if an individual Azure App Configuration key exists. Task<bool> CheckAppConfigurationSettingExistsAsync(string key) Parameters key string Returns Task<bool> CheckAppConfigurationSettingsExistAsync() Returns a map of configuration setting keys and whether they exist in Azure App Configuration. Task<Dictionary<string, bool>> CheckAppConfigurationSettingsExistAsync() Returns Task<Dictionary<string, bool>> DeleteAppConfigurationSettingAsync(string) Deletes an Azure App Configuration setting and its associated Azure Key Vault secret. Task DeleteAppConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task GetConfigurationSettingAsync(string) Gets the value of a configuration setting from Azure App Configuration. Task<string?> GetConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task<string> GetConfigurationSettingsAsync(string) Gets the values of configuration settings from Azure App Configuration. Task<List<(string Key, string? Value, string ContentType)>> GetConfigurationSettingsAsync(string keyFilter) Parameters keyFilter string The key name filter used to select the settings keys for which values are retrieved. Returns Task<List<(string Key, string Value, string ContentType)>> GetFeatureFlagAsync(string) Gets the value of a feature flag from Azure App Configuration. Task<bool> GetFeatureFlagAsync(string key) Parameters key string The App Configuration feature flag key. Returns Task<bool> SetConfigurationSettingAsync(string, string, string) Sets the value of a configuration setting in Azure App Configuration. Task SetConfigurationSettingAsync(string key, string value, string contentType) Parameters key string The App Configuration setting key. value string The value to set. contentType string The content type of the value. Returns Task SetFeatureFlagAsync(string, bool) Sets the value of a feature flag in Azure App Configuration. Task SetFeatureFlagAsync(string key, bool flagEnabled) Parameters key string The App Configuration feature flag key. flagEnabled bool Whether to enable the feature flag. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.IAzureKeyVaultService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.IAzureKeyVaultService.html",
    "title": "Interface IAzureKeyVaultService | FoundationaLLM",
    "keywords": "Interface IAzureKeyVaultService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure Key Vault. public interface IAzureKeyVaultService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KeyVaultUri Gets the URI of the Key Vault. string KeyVaultUri { get; } Property Value string Methods CheckKeyVaultSecretsExistAsync(IEnumerable<string?>) Returns a map of secret names and whether they exist in Key Vault. Task<Dictionary<string, bool>> CheckKeyVaultSecretsExistAsync(IEnumerable<string?> secretNames) Parameters secretNames IEnumerable<string> The list of secret names to check. Returns Task<Dictionary<string, bool>> CheckSecretExistsAsync(string) Returns whether a secret exists in Key Vault. Task<bool> CheckSecretExistsAsync(string secretName) Parameters secretName string The secret name to check. Returns Task<bool> GetSecretValue(string) Gets the value of a secret from Key Vault. string? GetSecretValue(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns string GetSecretValueAsync(string) Gets the value of a secret from Key Vault. Task<string?> GetSecretValueAsync(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns Task<string> SetSecretValueAsync(string, string) Sets the value of a secret in Key Vault. Task SetSecretValueAsync(string secretName, string secretValue) Parameters secretName string The name of the secret whose value you wish to set. secretValue string The secret value. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderResourceReferenceStore-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderResourceReferenceStore-1.html",
    "title": "Class ResourceProviderResourceReferenceStore<T> | FoundationaLLM",
    "keywords": "Class ResourceProviderResourceReferenceStore<T> Namespace FoundationaLLM.Common.Services.ResourceProviders Assembly FoundationaLLM.Common.dll Maintains a collection of resource references used by FoundationaLLM resource providers. public class ResourceProviderResourceReferenceStore<T> where T : ResourceReference Type Parameters T The type of resource reference kept in the store. Inheritance object ResourceProviderResourceReferenceStore<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderResourceReferenceStore(IResourceProviderService, IStorageService, ILogger, CancellationToken) Maintains a collection of resource references used by FoundationaLLM resource providers. public ResourceProviderResourceReferenceStore(IResourceProviderService resourceProvider, IStorageService resourceProviderStorageService, ILogger logger, CancellationToken cancellationToken = default) Parameters resourceProvider IResourceProviderService The IResourceProviderService resource provider service that uses the reference store. resourceProviderStorageService IStorageService The IStorageService used by the resource provider. logger ILogger The ILogger service used by the resource provider. cancellationToken CancellationToken The CancellationToken used by the resource provider to signal the need to cancel operations. Methods AddResourceReference(T) Adds a resource reference to the store. public Task AddResourceReference(T resourceReference) Parameters resourceReference T The resource reference to add. Returns Task AddResourceReferences(IEnumerable<T>) Adds a resource reference to the store. public Task AddResourceReferences(IEnumerable<T> resourceReferences) Parameters resourceReferences IEnumerable<T> The list of resource references to add. Returns Task DeleteResourceReference(T) Deletes a resource reference from the store. public Task DeleteResourceReference(T resourceReference) Parameters resourceReference T The name of the resource to delete. Returns Task Exceptions ResourceProviderException GetAllResourceReferences() Gets all resource references in the store. public Task<List<T>> GetAllResourceReferences() Returns Task<List<T>> A List<T> contain Remarks This method is not safe in scenarios where multiple instances of a resource provider are running at the same time. GetResourceReference(string) Gets a resource reference by the unique name of the resource. public Task<T?> GetResourceReference(string resourceName) Parameters resourceName string The name of the resource. Returns Task<T> GetResourceReferences(IEnumerable<string>) Gets the resource references for the specified resource names. public Task<IEnumerable<T>> GetResourceReferences(IEnumerable<string> resourceNames) Parameters resourceNames IEnumerable<string> The list of resource names for which the references should be retrieved. Returns Task<IEnumerable<T>> GetResourceReferences(Func<T, bool>) Filters the resource references in the store based on the predicate. public Task<IEnumerable<T>> GetResourceReferences(Func<T, bool> predicate) Parameters predicate Func<T, bool> The predicate to filter the resource references. Returns Task<IEnumerable<T>> Remarks This method is not safe in scenarios where multiple instances of a resource provider are running at the same time. LoadResourceReferences() Loads the resource references from the storage service. public Task LoadResourceReferences() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderServiceBase-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderServiceBase-1.html",
    "title": "Class ResourceProviderServiceBase<TResourceReference> | FoundationaLLM",
    "keywords": "Class ResourceProviderServiceBase<TResourceReference> Namespace FoundationaLLM.Common.Services.ResourceProviders Assembly FoundationaLLM.Common.dll Implements basic resource provider functionality public class ResourceProviderServiceBase<TResourceReference> : IResourceProviderService, IManagementProviderService where TResourceReference : ResourceReference Type Parameters TResourceReference The type of the resource reference used by the resource provider. Inheritance object ResourceProviderServiceBase<TResourceReference> Implements IResourceProviderService IManagementProviderService Derived AIModelResourceProviderService AgentResourceProviderService AttachmentResourceProviderService AuthorizationResourceProviderService AzureOpenAIResourceProviderService ConfigurationResourceProviderService DataSourceResourceProviderService PromptResourceProviderService VectorizationResourceProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderServiceBase(InstanceSettings, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILogger, List<string>?, bool) Creates a new instance of the resource provider. public ResourceProviderServiceBase(InstanceSettings instanceSettings, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILogger logger, List<string>? eventNamespacesToSubscribe = null, bool useInternalStore = false) Parameters instanceSettings InstanceSettings The InstanceSettings that provides instance-wide settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services to the resource provider. storageService IStorageService The IStorageService providing storage services to the resource provider. eventService IEventService The IEventService providing event services to the resource provider. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing services to instantiate resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger The logger used for logging. eventNamespacesToSubscribe List<string> The list of Event Service event namespaces to subscribe to for local event processing. useInternalStore bool Indicates whether the resource provider should use the internal resource store or provide one of its own. Fields _authorizationService The IAuthorizationService providing authorization services to the resource provider. protected readonly IAuthorizationService _authorizationService Field Value IAuthorizationService _eventService The IEventService providing event services to the resource provider. protected readonly IEventService _eventService Field Value IEventService _instanceSettings The InstanceSettings that provides instance-wide settings. protected readonly InstanceSettings _instanceSettings Field Value InstanceSettings _logger The logger used for logging. protected readonly ILogger _logger Field Value ILogger _resourceReferenceStore The resource reference store used by the resource provider. protected ResourceProviderResourceReferenceStore<TResourceReference>? _resourceReferenceStore Field Value ResourceProviderResourceReferenceStore<TResourceReference> _resourceValidatorFactory The IResourceValidatorFactory providing services to instantiate resource validators. protected readonly IResourceValidatorFactory _resourceValidatorFactory Field Value IResourceValidatorFactory _serviceProvider The IServiceProvider tha provides dependency injection services. protected readonly IServiceProvider _serviceProvider Field Value IServiceProvider _storageService The IStorageService providing storage services to the resource provider. protected readonly IStorageService _storageService Field Value IStorageService Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor> IsInitialized Indicates whether the resource provider is initialized or not. public bool IsInitialized { get; } Property Value bool Name The name of the resource provider. public string Name { get; } Property Value string StorageAccountName The name of the storage account used by the resource provider. public string StorageAccountName { get; } Property Value string StorageContainerName The name of the storage account container used by the resource provider. public string StorageContainerName { get; } Property Value string _name The name of the resource provider. Must be overridden in derived classes. protected virtual string _name { get; } Property Value string _serializerSettings Default JSON serialization settings. protected virtual JsonSerializerOptions _serializerSettings { get; } Property Value JsonSerializerOptions _storageContainerName The name of the storage container name used by the resource provider to store its internal data. protected virtual string _storageContainerName { get; } Property Value string Methods CreateResource(TResourceReference, Stream, string?) Creates a resource based on a resource reference and the resource itself. protected Task CreateResource(TResourceReference resourceReference, Stream content, string? contentType) Parameters resourceReference TResourceReference The resource reference used to identify the resource. content Stream The resource itself. contentType string The resource content type, if applicable. Returns Task Exceptions ResourceProviderException CreateResource<T>(TResourceReference, T) Creates a resource based on a resource reference and the resource itself. protected Task CreateResource<T>(TResourceReference resourceReference, T resource) where T : ResourceBase Parameters resourceReference TResourceReference The resource reference used to identify the resource. resource T The resource itself. Returns Task Type Parameters T The type of resource to create. Exceptions ResourceProviderException CreateResources<T1, T2>(TResourceReference, T1, TResourceReference, T2) Creates two resources based on their resource references and the resources themselves. protected Task CreateResources<T1, T2>(TResourceReference resourceReference1, T1 resource1, TResourceReference resourceReference2, T2 resource2) where T1 : ResourceBase where T2 : ResourceBase Parameters resourceReference1 TResourceReference The resource reference used to identify the first resource. resource1 T1 The first resource to create. resourceReference2 TResourceReference The resource reference used to identify the second resource. resource2 T2 The second resource to create. Returns Task Type Parameters T1 The type of the first resource to create. T2 The type of the second resource to create. Exceptions ResourceProviderException DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected virtual Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task DeleteResource<T>(string) Deletes a resource and its reference. protected Task DeleteResource<T>(string resourceName) Parameters resourceName string The name of the resource. Returns Task Type Parameters T The type of resource to delete. Exceptions ResourceProviderException ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected virtual Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected virtual Task<T> GetResourceInternal<T>(ResourcePath resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourcePath(string, bool) Gets a ResourcePath object for the specified string resource path. public ResourcePath GetResourcePath(string resourcePath, bool allowAction = true) Parameters resourcePath string The resource path. allowAction bool Indicates whether actions are allowed in the resource path. Returns ResourcePath A ResourcePath object. GetResourceProviderServiceByName(string) Gets a resource provider service by name. protected IResourceProviderService GetResourceProviderServiceByName(string name) Parameters name string The name of the resource provider. Returns IResourceProviderService The IResourceProviderService used to interact with the resource provider. GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected virtual Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions?) Gets a resource based on its logical path. public Task<T> GetResource<T>(string resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath string The logical path of the resource. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected virtual Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> HandleDeleteAsync(string, UnifiedUserIdentity) Handles a HTTP DELETE request for a specified resource path. public Task HandleDeleteAsync(string resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected virtual Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task HandleGetAsync(string, UnifiedUserIdentity) Handles a HTTP GET request for a specified resource path. public Task<object> HandleGetAsync(string resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request. HandlePostAsync(string, string, UnifiedUserIdentity) Handles a HTTP POST request for a specified resource path. public Task<object> HandlePostAsync(string resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. serializedResource string userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request. Initialize() Initializes the resource provider. public Task Initialize() Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected virtual Task InitializeInternal() Returns Task LoadResource<T>(string) Loads a resource based on its name. protected Task<T?> LoadResource<T>(string resourceName) where T : ResourceBase Parameters resourceName string The name of the resource. Returns Task<T> The loaded resource. Type Parameters T The type of resource to load. Exceptions ResourceProviderException LoadResource<T>(TResourceReference) Loads a resource based on its resource reference. protected Task<T?> LoadResource<T>(TResourceReference resourceReference) where T : ResourceBase Parameters resourceReference TResourceReference The type of resource reference used to indetify the resource to load. Returns Task<T> The loaded resource. Type Parameters T The type of resource to load. Exceptions ResourceProviderException LoadResources<T>(ResourceTypeInstance) Loads one or more resources of a specific type. protected Task<List<ResourceProviderGetResult<T>>> LoadResources<T>(ResourceTypeInstance instance) where T : ResourceBase Parameters instance ResourceTypeInstance The ResourceTypeInstance that indicates a specific resource to load. Returns Task<List<ResourceProviderGetResult<T>>> A list of ResourceProviderGetResult<T> objects. Type Parameters T The type of resources to load. SaveResource<T>(TResourceReference, T) Saves a resource based on its resource reference and the resource itself. protected Task SaveResource<T>(TResourceReference resourceReference, T resource) where T : ResourceBase Parameters resourceReference TResourceReference The resource reference used to identify the resource. resource T The resource to be saved. Returns Task Type Parameters T The type of resource to save. UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) Updates the base properties of an object derived from ResourceBase. protected void UpdateBaseProperties(ResourceBase resource, UnifiedUserIdentity userIdentity, bool isNew = false) Parameters resource ResourceBase The ResourceBase object to be updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the information about the identity of the user that performed a create or update operation on the resource. isNew bool Indicates whether the resource is new or being updated. UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected virtual Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected virtual Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, T resource, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned. UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) Creates or updates a resource based on its logical path. public Task<TResult> UpsertResourceAsync<T, TResult>(string resourcePath, T resource, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult Parameters resourcePath string The logical path of the resource. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> The object id of the resource. Type Parameters T The type of the resource. TResult The type of the result returned"
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Services.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.ResourceProviders Classes ResourceProviderResourceReferenceStore<T> Maintains a collection of resource references used by FoundationaLLM resource providers. ResourceProviderServiceBase<TResourceReference> Implements basic resource provider functionality"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.EntraUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.EntraUserClaimsProviderService.html",
    "title": "Class EntraUserClaimsProviderService | FoundationaLLM",
    "keywords": "Class EntraUserClaimsProviderService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. public class EntraUserClaimsProviderService : IUserClaimsProviderService Inheritance object EntraUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetSecurityGroupIds(ClaimsPrincipal?) Returns a list of security group identifiers from the provided ClaimsPrincipal. public List<string>? GetSecurityGroupIds(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns List<string> GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity IsServicePrincipal(ClaimsPrincipal) Inidicates whether the specified principal is a service principal or not. public bool IsServicePrincipal(ClaimsPrincipal userPrincipal) Parameters userPrincipal ClaimsPrincipal The ClaimsPrincipal object providing details about the security principal. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.MicrosoftGraphIdentityManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.MicrosoftGraphIdentityManagementService.html",
    "title": "Class MicrosoftGraphIdentityManagementService | FoundationaLLM",
    "keywords": "Class MicrosoftGraphIdentityManagementService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll Implements group membership services using the Microsoft Graph API. public class MicrosoftGraphIdentityManagementService : IIdentityManagementService Inheritance object MicrosoftGraphIdentityManagementService Implements IIdentityManagementService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the MicrosoftGraphIdentityManagementService class. Constructors MicrosoftGraphIdentityManagementService(GraphServiceClient, ILogger<MicrosoftGraphIdentityManagementService>) Implements group membership services using the Microsoft Graph API. public MicrosoftGraphIdentityManagementService(GraphServiceClient graphServiceClient, ILogger<MicrosoftGraphIdentityManagementService> logger) Parameters graphServiceClient GraphServiceClient The GraphServiceClient to be used for API interactions. logger ILogger<MicrosoftGraphIdentityManagementService> The logger used for logging. Remarks Initializes a new instance of the MicrosoftGraphIdentityManagementService class. Methods GetGroupsForPrincipal(string) Retrieves the group identifiers list of the groups where the specified user principal is a member. public Task<List<string>> GetGroupsForPrincipal(string userIdentifier) Parameters userIdentifier string The user identifier for which group membership is retrieved. Can be either an object id or a user principal name (UPN). Returns Task<List<string>> GetObjectsByIds(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. public Task<List<ObjectQueryResult>> GetObjectsByIds(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<List<ObjectQueryResult>> GetUserById(string) Retrieves a user account by its identifier. public Task<ObjectQueryResult> GetUserById(string userId) Parameters userId string The user identifier used to retrieve a single user account. Returns Task<ObjectQueryResult> GetUserGroupById(string) Retrieves a group account by its identifier. public Task<ObjectQueryResult> GetUserGroupById(string groupId) Parameters groupId string The group account identifier used to retrieve a single group account. Returns Task<ObjectQueryResult> GetUserGroups(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. public Task<PagedResponse<ObjectQueryResult>> GetUserGroups(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving group accounts. Returns Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. public Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving users. Returns Task<PagedResponse<ObjectQueryResult>>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.NoOpUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.NoOpUserClaimsProviderService.html",
    "title": "Class NoOpUserClaimsProviderService | FoundationaLLM",
    "keywords": "Class NoOpUserClaimsProviderService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed. public class NoOpUserClaimsProviderService : IUserClaimsProviderService Inheritance object NoOpUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetSecurityGroupIds(ClaimsPrincipal?) Returns a list of security group identifiers from the provided ClaimsPrincipal. public List<string>? GetSecurityGroupIds(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns List<string> GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity IsServicePrincipal(ClaimsPrincipal) Inidicates whether the specified principal is a service principal or not. public bool IsServicePrincipal(ClaimsPrincipal userPrincipal) Parameters userPrincipal ClaimsPrincipal The ClaimsPrincipal object providing details about the security principal. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.html",
    "title": "Namespace FoundationaLLM.Common.Services.Security | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Security Classes EntraUserClaimsProviderService Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. MicrosoftGraphIdentityManagementService Implements group membership services using the Microsoft Graph API. NoOpUserClaimsProviderService No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.BlobStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.BlobStorageService.html",
    "title": "Class BlobStorageService | FoundationaLLM",
    "keywords": "Class BlobStorageService Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to Azure blob storage. public class BlobStorageService : StorageServiceBase, IStorageService Inheritance object StorageServiceBase BlobStorageService Implements IStorageService Inherited Members StorageServiceBase._logger StorageServiceBase.InstanceName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the BlobStorageService with the specified options and logger. Constructors BlobStorageService(IOptions<BlobStorageServiceSettings>, ILogger<BlobStorageService>) Provides access to Azure blob storage. public BlobStorageService(IOptions<BlobStorageServiceSettings> storageOptions, ILogger<BlobStorageService> logger) Parameters storageOptions IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the settings. logger ILogger<BlobStorageService> The logger used for logging. Remarks Initializes a new instance of the BlobStorageService with the specified options and logger. Properties StorageAccountName The name of the storage account. public string StorageAccountName { get; } Property Value string Methods CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected override void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected override void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected override void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name. DeleteFileAsync(string, string, CancellationToken) Deletes a file from storage. public Task DeleteFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to delete. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. public Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> GetFilePathsAsync(string, string?, bool, CancellationToken) Retrieves a list file paths in the specific directory. public Task<List<string>> GetFilePathsAsync(string containerName, string? directoryPath = null, bool recursive = true, CancellationToken cancellationToken = default) Parameters containerName string Name of the container, file system or Workspace name. directoryPath string Directory to list file contents recursive bool Recurse through child folders cancellationToken CancellationToken Determines if a request should be cancelled. Returns Task<List<string>> List of individual file paths located in the container. ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. public Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.DataLakeStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.DataLakeStorageService.html",
    "title": "Class DataLakeStorageService | FoundationaLLM",
    "keywords": "Class DataLakeStorageService Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to Azure Data Lake blob storage. public class DataLakeStorageService : StorageServiceBase, IStorageService Inheritance object StorageServiceBase DataLakeStorageService Implements IStorageService Inherited Members StorageServiceBase._logger StorageServiceBase.InstanceName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataLakeStorageService(BlobStorageServiceSettings, ILogger<DataLakeStorageService>) Initializes a new instance of the DataLakeStorageService with the specified options and logger. public DataLakeStorageService(BlobStorageServiceSettings storageSettings, ILogger<DataLakeStorageService> logger) Parameters storageSettings BlobStorageServiceSettings The BlobStorageServiceSettings object with the blob storage settings. logger ILogger<DataLakeStorageService> The logger used for logging. DataLakeStorageService(IOptions<BlobStorageServiceSettings>, ILogger<DataLakeStorageService>) Initializes a new instance of the DataLakeStorageService with the specified options and logger. public DataLakeStorageService(IOptions<BlobStorageServiceSettings> options, ILogger<DataLakeStorageService> logger) Parameters options IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the blob storage settings. logger ILogger<DataLakeStorageService> The logger used for logging. Properties StorageAccountName The name of the storage account. public string StorageAccountName { get; } Property Value string Methods CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected override void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected override void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected override void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name. DeleteFileAsync(string, string, CancellationToken) Deletes a file from storage. public Task DeleteFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to delete. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. public Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> GetFilePathsAsync(string, string?, bool, CancellationToken) Retrieves a list file paths in the specific directory. public Task<List<string>> GetFilePathsAsync(string containerName, string? directoryPath = null, bool recursive = true, CancellationToken cancellationToken = default) Parameters containerName string Name of the container, file system or Workspace name. directoryPath string Directory to list file contents recursive bool Recurse through child folders cancellationToken CancellationToken Determines if a request should be cancelled. Returns Task<List<string>> List of individual file paths located in the container. ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. public Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.StorageServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.StorageServiceBase.html",
    "title": "Class StorageServiceBase | FoundationaLLM",
    "keywords": "Class StorageServiceBase Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to storage. public abstract class StorageServiceBase Inheritance object StorageServiceBase Derived BlobStorageService DataLakeStorageService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageServiceBase(BlobStorageServiceSettings, ILogger<StorageServiceBase>) Initializes a new instance of the StorageServiceBase with the specified settings and logger. public StorageServiceBase(BlobStorageServiceSettings settings, ILogger<StorageServiceBase> logger) Parameters settings BlobStorageServiceSettings The BlobStorageServiceSettings object with the settings. logger ILogger<StorageServiceBase> The logger used for logging. StorageServiceBase(IOptions<BlobStorageServiceSettings>, ILogger<StorageServiceBase>) Initializes a new instance of the StorageServiceBase with the specified options and logger. public StorageServiceBase(IOptions<BlobStorageServiceSettings> storageOptions, ILogger<StorageServiceBase> logger) Parameters storageOptions IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the settings. logger ILogger<StorageServiceBase> The logger used for logging. Fields _logger The logger used for logging. protected readonly ILogger<StorageServiceBase> _logger Field Value ILogger<StorageServiceBase> Properties InstanceName The optional instance name of the storage service. public string? InstanceName { get; set; } Property Value string Methods CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected abstract void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected abstract void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected abstract void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.html",
    "title": "Namespace FoundationaLLM.Common.Services.Storage | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Storage Classes BlobStorageService Provides access to Azure blob storage. DataLakeStorageService Provides access to Azure Data Lake blob storage. StorageServiceBase Provides access to storage."
  },
  "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.TokenTextSplitterService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.TokenTextSplitterService.html",
    "title": "Class TokenTextSplitterService | FoundationaLLM",
    "keywords": "Class TokenTextSplitterService Namespace FoundationaLLM.Common.Services.TextSplitters Assembly FoundationaLLM.Common.dll Splits text based on number of tokens. public class TokenTextSplitterService : ITextSplitterService Inheritance object TokenTextSplitterService Implements ITextSplitterService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TokenTextSplitterService(ITokenizerService, IOptions<TokenTextSplitterServiceSettings>, ILogger<TokenTextSplitterService>) Splits text based on number of tokens. public TokenTextSplitterService(ITokenizerService tokenizerService, IOptions<TokenTextSplitterServiceSettings> options, ILogger<TokenTextSplitterService> logger) Parameters tokenizerService ITokenizerService The ITokenizerService used to tokenize the input text. options IOptions<TokenTextSplitterServiceSettings> The IOptions<TOptions> providing the settings for the service. logger ILogger<TokenTextSplitterService> The logger used for logging. Methods SplitPlainText(string) Splits plain text into multiple chunks. public List<TextChunk> SplitPlainText(string text) Parameters text string The plain text to split. Returns List<TextChunk> A list of TextChunk items containing the text chunks and their sizes in tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.html",
    "title": "Namespace FoundationaLLM.Common.Services.TextSplitters | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.TextSplitters Classes TokenTextSplitterService Splits text based on number of tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.LeasedTikTokenizer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.LeasedTikTokenizer.html",
    "title": "Class LeasedTikTokenizer | FoundationaLLM",
    "keywords": "Class LeasedTikTokenizer Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Extends the TikTokenizer class to support leasing to multiple clients. public class LeasedTikTokenizer : TikTokenizer, ITokenizer Inheritance object TikTokenizer LeasedTikTokenizer Implements ITokenizer Inherited Members TikTokenizer.DefaultCacheSize TikTokenizer.Encode(string, IReadOnlyCollection<string>) TikTokenizer.Encode(string, bool) TikTokenizer.EncodeTrimSuffix(string, IReadOnlyCollection<string>, int) TikTokenizer.EncodeTrimSuffix(string, int, bool) TikTokenizer.EncodeTrimPrefix(string, IReadOnlyCollection<string>, int) TikTokenizer.EncodeTrimPrefix(string, int, bool) TikTokenizer.Decode(int[]) TikTokenizer.NumOfCacheEntries object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LeasedTikTokenizer(Stream, IReadOnlyDictionary<string, int>, string, int) Extends the TikTokenizer class to support leasing to multiple clients. public LeasedTikTokenizer(Stream tikTokenBpeFileStream, IReadOnlyDictionary<string, int> specialTokensEncoder, string pattern, int cacheSize) Parameters tikTokenBpeFileStream Stream specialTokensEncoder IReadOnlyDictionary<string, int> pattern string cacheSize int Properties IsLeased Indicates whether the tokenizer is leased or not. public bool IsLeased { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftBPETokenizerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftBPETokenizerService.html",
    "title": "Class MicrosoftBPETokenizerService | FoundationaLLM",
    "keywords": "Class MicrosoftBPETokenizerService Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Implements an ITokenizerService using the Microsoft BPE tokenizer (https://github.com/microsoft/Tokenizer). This class should always be instantiated as a singleton when used in dependency injection scenarios. public class MicrosoftBPETokenizerService : ITokenizerService Inheritance object MicrosoftBPETokenizerService Implements ITokenizerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MicrosoftBPETokenizerService(ILogger<MicrosoftBPETokenizerService>) Initializes a new instance of the MicrosoftBPETokenizerService class. public MicrosoftBPETokenizerService(ILogger<MicrosoftBPETokenizerService> logger) Parameters logger ILogger<MicrosoftBPETokenizerService> The logger used for logging. Methods Decode(int[], string) Decode an array of integer token ids. public string Decode(int[] tokens, string encoderName) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string) Encode a string with a set of allowed special tokens that are not broken apart. public List<int> Encode(string text, string encoderName) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerConfig.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerConfig.html",
    "title": "Class TikTokenizerConfig | FoundationaLLM",
    "keywords": "Class TikTokenizerConfig Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Provides the configuration values required to create a new TikTokenizer instance. public record TikTokenizerConfig : IEquatable<TikTokenizerConfig> Inheritance object TikTokenizerConfig Implements IEquatable<TikTokenizerConfig> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TikTokenizerConfig(string, string, Dictionary<string, int>) Provides the configuration values required to create a new TikTokenizer instance. public TikTokenizerConfig(string RegexPattern, string MergeableRanksFileUrl, Dictionary<string, int> SpecialTokens) Parameters RegexPattern string Regex pattern to break a long string. MergeableRanksFileUrl string The URL used to download the BPE rank file. SpecialTokens Dictionary<string, int> Special tokens mapping. Properties MergeableRanksFileContent The raw content of the BPE rank file. public byte[]? MergeableRanksFileContent { get; set; } Property Value byte[] MergeableRanksFileUrl The URL used to download the BPE rank file. public string MergeableRanksFileUrl { get; init; } Property Value string RegexPattern Regex pattern to break a long string. public string RegexPattern { get; init; } Property Value string SpecialTokens Special tokens mapping. public Dictionary<string, int> SpecialTokens { get; init; } Property Value Dictionary<string, int>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerEncoders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerEncoders.html",
    "title": "Class TikTokenizerEncoders | FoundationaLLM",
    "keywords": "Class TikTokenizerEncoders Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Well-known TikTokenizer encoder names. public static class TikTokenizerEncoders Inheritance object TikTokenizerEncoders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CL100K_BASE Encoder used by OpenAI models like GPT-4, GPT-3.5-Turbo, and Text-Embedding-ADA-002. public const string CL100K_BASE = \"cl100k_base\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerTokens.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerTokens.html",
    "title": "Class TikTokenizerTokens | FoundationaLLM",
    "keywords": "Class TikTokenizerTokens Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Well-known special TikTokenizer token names. public static class TikTokenizerTokens Inheritance object TikTokenizerTokens Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ENDOFPROMPT End of prompt token. public const string ENDOFPROMPT = \"<|endofprompt|>\" Field Value string ENDOFTEXT End of text token. public const string ENDOFTEXT = \"<|endoftext|>\" Field Value string FIM_MIDDLE Fill-In-the-Middle (FIM) middle token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_MIDDLE = \"<|fim_middle|>\" Field Value string FIM_PREFIX Fill-In-the-Middle (FIM) prefix token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_PREFIX = \"<|fim_prefix|>\" Field Value string FIM_SUFFIX Fill-In-the-Middle (FIM) suffix token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_SUFFIX = \"<|fim_suffix|>\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TokenizerServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TokenizerServiceNames.html",
    "title": "Class TokenizerServiceNames | FoundationaLLM",
    "keywords": "Class TokenizerServiceNames Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Names of tokenizer services supported by the platform. public static class TokenizerServiceNames Inheritance object TokenizerServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MICROSOFT_BPE_TOKENIZER Tokenizer service implemented by Microsoft. For details, see https://github.com/microsoft/Tokenizer. public const string MICROSOFT_BPE_TOKENIZER = \"MicrosoftBPETokenizer\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.html",
    "title": "Namespace FoundationaLLM.Common.Services.Tokenizers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services.Tokenizers Classes LeasedTikTokenizer Extends the TikTokenizer class to support leasing to multiple clients. MicrosoftBPETokenizerService Implements an ITokenizerService using the Microsoft BPE tokenizer (https://github.com/microsoft/Tokenizer). This class should always be instantiated as a singleton when used in dependency injection scenarios. TikTokenizerConfig Provides the configuration values required to create a new TikTokenizer instance. TikTokenizerEncoders Well-known TikTokenizer encoder names. TikTokenizerTokens Well-known special TikTokenizer token names. TokenizerServiceNames Names of tokenizer services supported by the platform."
  },
  "api/dotnet/FoundationaLLM.Common.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.html",
    "title": "Namespace FoundationaLLM.Common.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Services Namespaces FoundationaLLM.Common.Services.API FoundationaLLM.Common.Services.Azure FoundationaLLM.Common.Services.Cache FoundationaLLM.Common.Services.Events FoundationaLLM.Common.Services.ResourceProviders FoundationaLLM.Common.Services.Security FoundationaLLM.Common.Services.Storage FoundationaLLM.Common.Services.TextSplitters FoundationaLLM.Common.Services.Tokenizers Interfaces IAzureAppConfigurationService Provides access to and management of Azure App Configuration. IAzureKeyVaultService Provides access to and management of Azure Key Vault."
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html",
    "title": "Class CommonHttpRetryStrategyOptions | FoundationaLLM",
    "keywords": "Class CommonHttpRetryStrategyOptions Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Common Http retry resiliency strategy options used by the API classes and their libraries. public static class CommonHttpRetryStrategyOptions Inheritance object CommonHttpRetryStrategyOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCommonHttpRetryStrategyOptions() Configures the commonly used Polly Http retry resiliency strategy options. public static HttpRetryStrategyOptions GetCommonHttpRetryStrategyOptions() Returns HttpRetryStrategyOptions"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerOptions.html",
    "title": "Class CommonJsonSerializerOptions | FoundationaLLM",
    "keywords": "Class CommonJsonSerializerOptions Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll JSON serializer settings for the API classes and their libraries. public static class CommonJsonSerializerOptions Inheritance object CommonJsonSerializerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetJsonSerializerOptions() Configures the System.Text.Json JSON serializer settings. public static JsonSerializerOptions GetJsonSerializerOptions() Returns JsonSerializerOptions GetJsonSerializerOptions(Func<JsonSerializerOptions, JsonSerializerOptions>) Configures the System.Text.Json JSON serializer settings. public static JsonSerializerOptions GetJsonSerializerOptions(Func<JsonSerializerOptions, JsonSerializerOptions> customizer) Parameters customizer Func<JsonSerializerOptions, JsonSerializerOptions> A function that customizes the default settings. Returns JsonSerializerOptions"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.html",
    "title": "Namespace FoundationaLLM.Common.Settings | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Settings Classes CommonHttpRetryStrategyOptions Common Http retry resiliency strategy options used by the API classes and their libraries. CommonJsonSerializerOptions JSON serializer settings for the API classes and their libraries."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.ConcurrentTaskPool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.ConcurrentTaskPool.html",
    "title": "Class ConcurrentTaskPool | FoundationaLLM",
    "keywords": "Class ConcurrentTaskPool Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents a pool of active tasks with a predefined capacity. public class ConcurrentTaskPool Inheritance object ConcurrentTaskPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This class is thread safe. Constructors ConcurrentTaskPool(int, ILogger<ConcurrentTaskPool>) Constructs a task pool with a specified capacity. public ConcurrentTaskPool(int maxConcurrentTasks, ILogger<ConcurrentTaskPool> logger) Parameters maxConcurrentTasks int Indicates the maximum number of tasks accepted by the task pool. logger ILogger<ConcurrentTaskPool> The ILogger used for logging. Properties AvailableCapacity Indicates whether the task pool is at capacity or not. public int AvailableCapacity { get; } Property Value int Methods HasRunningTaskForPayload(string) Determines whether the task pool already has a running task for a specified payload id. public bool HasRunningTaskForPayload(string payloadId) Parameters payloadId string The identifier of the payload. Returns bool True if the task pool already has a running task for the specified payload, false otherwise. TryAdd(IEnumerable<TaskInfo>) Adds a new batch of tasks to the task pool. public bool TryAdd(IEnumerable<TaskInfo> tasks) Parameters tasks IEnumerable<TaskInfo> The list of TaskInfo items to be added to the pool. Returns bool Exceptions TaskPoolException The exception raised when a task cannot be added to the pool (e.g., the task pool is at capacity)."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskInfo.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskInfo.html",
    "title": "Class TaskInfo | FoundationaLLM",
    "keywords": "Class TaskInfo Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Provides the context for a task running in the task pool. public class TaskInfo Inheritance object TaskInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PayloadId The unique identifier of the payload processed by the task. public required string PayloadId { get; set; } Property Value string StartTime The start time of the task. public required DateTimeOffset StartTime { get; set; } Property Value DateTimeOffset Task The Task being run. public required Task Task { get; set; } Property Value Task"
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html",
    "title": "Class TaskPool | FoundationaLLM",
    "keywords": "Class TaskPool Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents a pool of active tasks with a predefined capacity. public class TaskPool Inheritance object TaskPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This class is not thread safe, it assumes the taks pool is managed from a single thread. Constructors TaskPool(int, ILogger) Constructs a task pool with a specified capacity. public TaskPool(int maxConcurrentTasks, ILogger logger) Parameters maxConcurrentTasks int Indicates the maximum number of tasks accepted by the task pool. logger ILogger The ILogger used for logging. Properties AvailableCapacity Indicates whether the task pool is at capacity or not. public int AvailableCapacity { get; } Property Value int Methods Add(IEnumerable<TaskInfo>) Adds a new batch of tasks to the task pool. public void Add(IEnumerable<TaskInfo> tasks) Parameters tasks IEnumerable<TaskInfo> The list of TaskInfo items to be added to the pool. Exceptions TaskPoolException The exception raised when a task cannot be added to the pool (e.g., the task pool is at capacity). HasRunningTaskForPayload(string) Determines whether the task pool already has a running task for a specified payload id. public bool HasRunningTaskForPayload(string payloadId) Parameters payloadId string The identifier of the payload. Returns bool True if the task pool already has a running task for the specified payload, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html",
    "title": "Class TaskPoolException | FoundationaLLM",
    "keywords": "Class TaskPoolException Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents errors that occur in task pools. public class TaskPoolException : Exception, ISerializable Inheritance object Exception TaskPoolException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TaskPoolException() Initializes a new instance of the TaskPoolException class with a default message. public TaskPoolException() TaskPoolException(string?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message) Parameters message string A string that describes the error. TaskPoolException(string?, Exception?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.html",
    "title": "Namespace FoundationaLLM.Common.Tasks | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Tasks Classes ConcurrentTaskPool Represents a pool of active tasks with a predefined capacity. TaskInfo Provides the context for a task running in the task pool. TaskPool Represents a pool of active tasks with a predefined capacity. TaskPoolException Represents errors that occur in task pools."
  },
  "api/dotnet/FoundationaLLM.Common.Utils.FileMethods.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.FileMethods.html",
    "title": "Class FileMethods | FoundationaLLM",
    "keywords": "Class FileMethods Namespace FoundationaLLM.Common.Utils Assembly FoundationaLLM.Common.dll Contains methods for working with files. public class FileMethods Inheritance object FileMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetMessageContentFileType(string?, string?) Returns the type of the message content based on the file name. public static string GetMessageContentFileType(string? fileName, string? fallbackValue) Parameters fileName string The file name to evaluate. fallbackValue string If populated, defines the fallback type value if a mapping cannot be determined from the passed in file name. Otherwise, the default value is FilePath. Returns string GetMimeType(byte[]) Returns the mime type of the file data. public static string GetMimeType(byte[] fileData) Parameters fileData byte[] The byte array for the file to inspect. Returns string"
  },
  "api/dotnet/FoundationaLLM.Common.Utils.ResourcePathUtils.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.ResourcePathUtils.html",
    "title": "Class ResourcePathUtils | FoundationaLLM",
    "keywords": "Class ResourcePathUtils Namespace FoundationaLLM.Common.Utils Assembly FoundationaLLM.Common.dll Utilities dedicated to the ResourcePath class. public static class ResourcePathUtils Inheritance object ResourcePathUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseForAuthorizationRequestResourcePath(string, List<string>) Parses a resource path from an ActionAuthorizationRequest object. public static ResourcePath ParseForAuthorizationRequestResourcePath(string resourcePath, List<string> allowedInstanceIds) Parameters resourcePath string The resource path to be analyzed. allowedInstanceIds List<string> The list of allowed FoundationaLLM instance identifiers. Returns ResourcePath A ResourcePath instance. Exceptions AuthorizationException Thrown if the resource path is invalid. ParseForRoleAssignmentScope(string, List<string>) public static ResourcePath ParseForRoleAssignmentScope(string resourcePath, List<string> allowedInstanceIds) Parameters resourcePath string allowedInstanceIds List<string> Returns ResourcePath"
  },
  "api/dotnet/FoundationaLLM.Common.Utils.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.html",
    "title": "Namespace FoundationaLLM.Common.Utils | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Utils Classes FileMethods Contains methods for working with files. ResourcePathUtils Utilities dedicated to the ResourcePath class."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.ResourceBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.ResourceBaseValidator.html",
    "title": "Class ResourceBaseValidator | FoundationaLLM",
    "keywords": "Class ResourceBaseValidator Namespace FoundationaLLM.Common.Validation.ResourceProvider Assembly FoundationaLLM.Common.dll Validator for the ResourceBase model. public class ResourceBaseValidator : AbstractValidator<ResourceBase>, IValidator<ResourceBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ResourceBase> ResourceBaseValidator Implements IValidator<ResourceBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ResourceBase>.Validate(ResourceBase) AbstractValidator<ResourceBase>.ValidateAsync(ResourceBase, CancellationToken) AbstractValidator<ResourceBase>.Validate(ValidationContext<ResourceBase>) AbstractValidator<ResourceBase>.ValidateAsync(ValidationContext<ResourceBase>, CancellationToken) AbstractValidator<ResourceBase>.CreateDescriptor() AbstractValidator<ResourceBase>.RuleFor<TProperty>(Expression<Func<ResourceBase, TProperty>>) AbstractValidator<ResourceBase>.Transform<TProperty, TTransformed>(Expression<Func<ResourceBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ResourceBase>.Transform<TProperty, TTransformed>(Expression<Func<ResourceBase, TProperty>>, Func<ResourceBase, TProperty, TTransformed>) AbstractValidator<ResourceBase>.RuleForEach<TElement>(Expression<Func<ResourceBase, IEnumerable<TElement>>>) AbstractValidator<ResourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<ResourceBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ResourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<ResourceBase, IEnumerable<TElement>>>, Func<ResourceBase, TElement, TTransformed>) AbstractValidator<ResourceBase>.RuleSet(string, Action) AbstractValidator<ResourceBase>.When(Func<ResourceBase, bool>, Action) AbstractValidator<ResourceBase>.When(Func<ResourceBase, ValidationContext<ResourceBase>, bool>, Action) AbstractValidator<ResourceBase>.Unless(Func<ResourceBase, bool>, Action) AbstractValidator<ResourceBase>.Unless(Func<ResourceBase, ValidationContext<ResourceBase>, bool>, Action) AbstractValidator<ResourceBase>.WhenAsync(Func<ResourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.WhenAsync(Func<ResourceBase, ValidationContext<ResourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.UnlessAsync(Func<ResourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.UnlessAsync(Func<ResourceBase, ValidationContext<ResourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.Include(IValidator<ResourceBase>) AbstractValidator<ResourceBase>.Include<TValidator>(Func<ResourceBase, TValidator>) AbstractValidator<ResourceBase>.GetEnumerator() AbstractValidator<ResourceBase>.EnsureInstanceNotNull(object) AbstractValidator<ResourceBase>.PreValidate(ValidationContext<ResourceBase>, ValidationResult) AbstractValidator<ResourceBase>.RaiseValidationException(ValidationContext<ResourceBase>, ValidationResult) AbstractValidator<ResourceBase>.OnRuleAdded(IValidationRule<ResourceBase>) AbstractValidator<ResourceBase>.CascadeMode AbstractValidator<ResourceBase>.ClassLevelCascadeMode AbstractValidator<ResourceBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceBaseValidator() Configures the validation rules for the ResourceBase model. public ResourceBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.html",
    "title": "Namespace FoundationaLLM.Common.Validation.ResourceProvider | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Validation.ResourceProvider Classes ResourceBaseValidator Validator for the ResourceBase model."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceValidatorFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceValidatorFactory.html",
    "title": "Class ResourceValidatorFactory | FoundationaLLM",
    "keywords": "Class ResourceValidatorFactory Namespace FoundationaLLM.Common.Validation Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ResourceValidatorFactory : IResourceValidatorFactory Inheritance object ResourceValidatorFactory Implements IResourceValidatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceValidatorFactory(IServiceProvider) public ResourceValidatorFactory(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods GetValidator(Type) Gets a validator for the Type parameter, providing a non-generic option to resolve validators at runtime. public object? GetValidator(Type type) Parameters type Type The type of object being validated. Returns object GetValidator<T>() Gets a validator for the specified type. public IValidator<T>? GetValidator<T>() where T : class Returns IValidator<T> Type Parameters T The type of object being validated."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.html",
    "title": "Namespace FoundationaLLM.Common.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common.Validation Namespaces FoundationaLLM.Common.Validation.ResourceProvider Classes ResourceValidatorFactory Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.html": {
    "href": "api/dotnet/FoundationaLLM.Common.html",
    "title": "Namespace FoundationaLLM.Common | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Common Namespaces FoundationaLLM.Common.Authentication FoundationaLLM.Common.Clients FoundationaLLM.Common.Constants FoundationaLLM.Common.Exceptions FoundationaLLM.Common.Extensions FoundationaLLM.Common.Interfaces FoundationaLLM.Common.Middleware FoundationaLLM.Common.Models FoundationaLLM.Common.OpenAPI FoundationaLLM.Common.Services FoundationaLLM.Common.Settings FoundationaLLM.Common.Tasks FoundationaLLM.Common.Utils FoundationaLLM.Common.Validation"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.AppConfigurationCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.AppConfigurationCatalog.html",
    "title": "Class AppConfigurationCatalog | FoundationaLLM",
    "keywords": "Class AppConfigurationCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll A catalog containing the configuration entries for the solution. public static class AppConfigurationCatalog Inheritance object AppConfigurationCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAllEntries() Returns the list of all the app configuration entries for this solution. public static List<AppConfigurationEntry> GetAllEntries() Returns List<AppConfigurationEntry> GetRequiredConfigurationsForVersion(string) Returns the list of all the app configuration entries for this solution that are required for the given version. public static IEnumerable<AppConfigurationEntry> GetRequiredConfigurationsForVersion(string version) Parameters version string The current version of the caller. Returns IEnumerable<AppConfigurationEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.EnvironmentVariablesCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.EnvironmentVariablesCatalog.html",
    "title": "Class EnvironmentVariablesCatalog | FoundationaLLM",
    "keywords": "Class EnvironmentVariablesCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll Provides the catalog of environment variables required by the solution. public static class EnvironmentVariablesCatalog Inheritance object EnvironmentVariablesCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRequiredEnvironmentVariables(string) Returns the required environment variables. public static IEnumerable<EnvironmentVariableEntry> GetRequiredEnvironmentVariables(string serviceName = \"\") Parameters serviceName string Optional service name. When not specified, the default environment variables list is returned. Returns IEnumerable<EnvironmentVariableEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.KeyVaultSecretsCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.KeyVaultSecretsCatalog.html",
    "title": "Class KeyVaultSecretsCatalog | FoundationaLLM",
    "keywords": "Class KeyVaultSecretsCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll A catalog of Key Vault secrets used in this solution. public static class KeyVaultSecretsCatalog Inheritance object KeyVaultSecretsCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRequiredKeyVaultSecretsForVersion(string, string) Returns the list of all the Key Vault secrets for this solution that are required for the given version. public static IEnumerable<KeyVaultSecretEntry> GetRequiredKeyVaultSecretsForVersion(string version, string serviceName = \"\") Parameters version string The current version of the caller. serviceName string Optional service name. When not specified, the generic key vault secrets list is returned. Returns IEnumerable<KeyVaultSecretEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.html",
    "title": "Namespace FoundationaLLM.Configuration.Catalog | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Catalog Classes AppConfigurationCatalog A catalog containing the configuration entries for the solution. EnvironmentVariablesCatalog Provides the catalog of environment variables required by the solution. KeyVaultSecretsCatalog A catalog of Key Vault secrets used in this solution."
  },
  "api/dotnet/FoundationaLLM.Configuration.Interfaces.IConfigurationHealthChecks.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Interfaces.IConfigurationHealthChecks.html",
    "title": "Interface IConfigurationHealthChecks | FoundationaLLM",
    "keywords": "Interface IConfigurationHealthChecks Namespace FoundationaLLM.Configuration.Interfaces Assembly FoundationaLLM.Configuration.dll Provides health checks for the application's configuration settings. public interface IConfigurationHealthChecks Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidateConfigurationsAsync(string) Validates the application's configuration settings. Task ValidateConfigurationsAsync(string version) Parameters version string The current app version. Returns Task ValidateEnvironmentVariables() Validates the application's environment variables. void ValidateEnvironmentVariables() ValidateKeyVaultSecretsAsync(string) Validates the application's Key Vault secrets. Task ValidateKeyVaultSecretsAsync(string version) Parameters version string The current app version. Returns Task Exceptions ConfigurationValidationException"
  },
  "api/dotnet/FoundationaLLM.Configuration.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Interfaces.html",
    "title": "Namespace FoundationaLLM.Configuration.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Interfaces Interfaces IConfigurationHealthChecks Provides health checks for the application's configuration settings."
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.APIEndpointReference.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.APIEndpointReference.html",
    "title": "Class APIEndpointReference | FoundationaLLM",
    "keywords": "Class APIEndpointReference Namespace FoundationaLLM.Configuration.Models Assembly FoundationaLLM.Configuration.dll Holds a reference to an api endpoint reference. public class APIEndpointReference : ResourceReference Inheritance object ResourceReference APIEndpointReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the agent. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.html",
    "title": "Namespace FoundationaLLM.Configuration.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Models Classes APIEndpointReference Holds a reference to an api endpoint reference."
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationHealthCheckService.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationHealthCheckService.html",
    "title": "Class ConfigurationHealthCheckService | FoundationaLLM",
    "keywords": "Class ConfigurationHealthCheckService Namespace FoundationaLLM.Configuration.Services Assembly FoundationaLLM.Configuration.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ConfigurationHealthCheckService : IHostedService Inheritance object ConfigurationHealthCheckService Implements IHostedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationHealthCheckService(IConfigurationHealthChecks, IConfiguration, ILogger<ConfigurationHealthCheckService>, IHostApplicationLifetime) public ConfigurationHealthCheckService(IConfigurationHealthChecks healthChecks, IConfiguration configuration, ILogger<ConfigurationHealthCheckService> logger, IHostApplicationLifetime appLifetime) Parameters healthChecks IConfigurationHealthChecks configuration IConfiguration logger ILogger<ConfigurationHealthCheckService> appLifetime IHostApplicationLifetime Methods StartAsync(CancellationToken) Triggered when the application host is ready to start the service. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the start process has been aborted. Returns Task A Task that represents the asynchronous Start operation. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderService.html",
    "title": "Class ConfigurationResourceProviderService | FoundationaLLM",
    "keywords": "Class ConfigurationResourceProviderService Namespace FoundationaLLM.Configuration.Services Assembly FoundationaLLM.Configuration.dll Implements the FoundationaLLM.Configuration resource provider. public class ConfigurationResourceProviderService : ResourceProviderServiceBase<APIEndpointReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<APIEndpointReference> ConfigurationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<APIEndpointReference>._resourceReferenceStore ResourceProviderServiceBase<APIEndpointReference>._serviceProvider ResourceProviderServiceBase<APIEndpointReference>._authorizationService ResourceProviderServiceBase<APIEndpointReference>._storageService ResourceProviderServiceBase<APIEndpointReference>._eventService ResourceProviderServiceBase<APIEndpointReference>._resourceValidatorFactory ResourceProviderServiceBase<APIEndpointReference>._logger ResourceProviderServiceBase<APIEndpointReference>._instanceSettings ResourceProviderServiceBase<APIEndpointReference>._storageContainerName ResourceProviderServiceBase<APIEndpointReference>._serializerSettings ResourceProviderServiceBase<APIEndpointReference>.Name ResourceProviderServiceBase<APIEndpointReference>.IsInitialized ResourceProviderServiceBase<APIEndpointReference>.AllowedResourceTypes ResourceProviderServiceBase<APIEndpointReference>.StorageAccountName ResourceProviderServiceBase<APIEndpointReference>.StorageContainerName ResourceProviderServiceBase<APIEndpointReference>.Initialize() ResourceProviderServiceBase<APIEndpointReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<APIEndpointReference>.ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<APIEndpointReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<APIEndpointReference>.LoadResource<T>(APIEndpointReference) ResourceProviderServiceBase<APIEndpointReference>.LoadResource<T>(string) ResourceProviderServiceBase<APIEndpointReference>.CreateResource<T>(APIEndpointReference, T) ResourceProviderServiceBase<APIEndpointReference>.CreateResource(APIEndpointReference, Stream, string) ResourceProviderServiceBase<APIEndpointReference>.CreateResources<T1, T2>(APIEndpointReference, T1, APIEndpointReference, T2) ResourceProviderServiceBase<APIEndpointReference>.SaveResource<T>(APIEndpointReference, T) ResourceProviderServiceBase<APIEndpointReference>.DeleteResource<T>(string) ResourceProviderServiceBase<APIEndpointReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<APIEndpointReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IAzureAppConfigurationService, IAzureKeyVaultService, IConfigurationManager, IServiceProvider, ILogger<ConfigurationResourceProviderService>) Implements the FoundationaLLM.Configuration resource provider. public ConfigurationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureAppConfigurationService appConfigurationService, IAzureKeyVaultService keyVaultService, IConfigurationManager configurationManager, IServiceProvider serviceProvider, ILogger<ConfigurationResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. appConfigurationService IAzureAppConfigurationService The IAzureAppConfigurationService provding access to the app configuration service. keyVaultService IAzureKeyVaultService The IAzureKeyVaultService providing access to the key vault service. configurationManager IConfigurationManager The IConfigurationManager providing configuration services. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<ConfigurationResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceInternal<T>(ResourcePath resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.html",
    "title": "Namespace FoundationaLLM.Configuration.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Services Classes ConfigurationHealthCheckService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. ConfigurationResourceProviderService Implements the FoundationaLLM.Configuration resource provider."
  },
  "api/dotnet/FoundationaLLM.Configuration.Validation.ConfigurationHealthChecks.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Validation.ConfigurationHealthChecks.html",
    "title": "Class ConfigurationHealthChecks | FoundationaLLM",
    "keywords": "Class ConfigurationHealthChecks Namespace FoundationaLLM.Configuration.Validation Assembly FoundationaLLM.Configuration.dll Provides health checks for the application's configuration settings. public class ConfigurationHealthChecks : IConfigurationHealthChecks Inheritance object ConfigurationHealthChecks Implements IConfigurationHealthChecks Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationHealthChecks(IAzureAppConfigurationService, IAzureKeyVaultService, ILogger<ConfigurationHealthChecks>) Provides health checks for the application's configuration settings. public ConfigurationHealthChecks(IAzureAppConfigurationService azureAppConfigurationService, IAzureKeyVaultService azureKeyVaultService, ILogger<ConfigurationHealthChecks> logger) Parameters azureAppConfigurationService IAzureAppConfigurationService azureKeyVaultService IAzureKeyVaultService logger ILogger<ConfigurationHealthChecks> Methods ValidateConfigurationsAsync(string) Validates the application's configuration settings. public Task ValidateConfigurationsAsync(string version) Parameters version string The current app version. Returns Task ValidateEnvironmentVariables() Validates the application's environment variables. public void ValidateEnvironmentVariables() ValidateKeyVaultSecretsAsync(string) Validates the application's Key Vault secrets. public Task ValidateKeyVaultSecretsAsync(string version) Parameters version string The current app version. Returns Task Exceptions ConfigurationValidationException"
  },
  "api/dotnet/FoundationaLLM.Configuration.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Validation.html",
    "title": "Namespace FoundationaLLM.Configuration.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration.Validation Classes ConfigurationHealthChecks Provides health checks for the application's configuration settings."
  },
  "api/dotnet/FoundationaLLM.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.html",
    "title": "Namespace FoundationaLLM.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Configuration Namespaces FoundationaLLM.Configuration.Catalog FoundationaLLM.Configuration.Interfaces FoundationaLLM.Configuration.Models FoundationaLLM.Configuration.Services FoundationaLLM.Configuration.Validation"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html",
    "title": "Class BrandingController | FoundationaLLM",
    "keywords": "Class BrandingController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides branding information for the client. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class BrandingController : ControllerBase Inheritance object ControllerBase BrandingController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors BrandingController(string, IOptions<ClientBrandingConfiguration>) Constructor for the Branding Controller. public BrandingController(string instanceId, IOptions<ClientBrandingConfiguration> settings) Parameters instanceId string The instance ID. settings IOptions<ClientBrandingConfiguration> The branding settings. Methods Index(string) Retrieves the branding information for the client. [AllowAnonymous] [HttpGet(Name = \"GetBranding\")] public IActionResult Index(string instanceId) Parameters instanceId string The instance ID. Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "keywords": "Class CompletionsController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Methods for orchestration services exposed by the Gatekeeper API service. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Orchestration Controller. Constructors CompletionsController(ICoreService, ICallContext, IEnumerable<IResourceProviderService>, ILogger<CompletionsController>) Methods for orchestration services exposed by the Gatekeeper API service. public CompletionsController(ICoreService coreService, ICallContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, ILogger<CompletionsController> logger) Parameters coreService ICoreService The Core service provides methods for getting completions from the orchestrator. callContext ICallContext The call context for the request. resourceProviderServices IEnumerable<IResourceProviderService> The list of IResourceProviderService resource provider services. logger ILogger<CompletionsController> The logging interface used to log under the CompletionsController type name. Remarks Constructor for the Orchestration Controller. Methods GetAgents(string) Retrieves a list of global and private agents. [HttpGet(\"completions/agents\", Name = \"GetAgents\")] public Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgents(string instanceId) Parameters instanceId string The instance ID of the current request. Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> A list of available agents. GetCompletion(string, CompletionRequest) Requests a completion from the downstream APIs. [HttpPost(\"completions\", Name = \"GetCompletion\")] public Task<IActionResult> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The instance ID of the current request. completionRequest CompletionRequest The user prompt for which to generate a completion. Returns Task<IActionResult> GetCompletionOperationResult(string, string) Gets a completion operation from the downstream APIs. [HttpGet(\"async-completions/{operationId}/result\")] public Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a completion response GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.FilesController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.FilesController.html",
    "title": "Class FilesController | FoundationaLLM",
    "keywords": "Class FilesController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides branding information for the client. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class FilesController : ControllerBase Inheritance object ControllerBase FilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors FilesController(ICallContext, IOptions<InstanceSettings>, ICoreService, ILogger<FilesController>) The controller for managing attachments. public FilesController(ICallContext callContext, IOptions<InstanceSettings> instanceOptions, ICoreService coreService, ILogger<FilesController> logger) Parameters callContext ICallContext The ICallContext call context of the request being handled. instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. coreService ICoreService The ICoreService core service. logger ILogger<FilesController> Exceptions ResourceProviderException Methods Delete(string, List<string>) Deletes the specified file(s). [HttpPost(\"delete\")] public Task<IActionResult> Delete(string instanceId, List<string> resourcePaths) Parameters instanceId string The instance ID. resourcePaths List<string> The list of object identifiers to be deleted. Returns Task<IActionResult> Download(string, string, string) Downloads a file. [HttpGet(\"{fileProvider}/{fileId}\")] public Task<IActionResult> Download(string instanceId, string fileProvider, string fileId) Parameters instanceId string The instance ID. fileProvider string The name of the file provider. fileId string The identifier of the file. Returns Task<IActionResult> The file content. Remarks The following file providers are supported: FoundationaLLM.Attachments FoundationaLLM.AzureOpenAI Upload(string, string, string, IFormFile) Uploads an attachment. [HttpPost(\"upload\")] public Task<IActionResult> Upload(string instanceId, string sessionId, string agentName, IFormFile file) Parameters instanceId string The instance ID. sessionId string The session ID from which the file is uploaded. agentName string The agent name. file IFormFile The file sent with the HTTP request. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html",
    "title": "Class SessionsController | FoundationaLLM",
    "keywords": "Class SessionsController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for interacting with the Core service. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class SessionsController : ControllerBase Inheritance object ControllerBase SessionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Core Controller. Constructors SessionsController(ICoreService, ILogger<SessionsController>) Provides methods for interacting with the Core service. public SessionsController(ICoreService coreService, ILogger<SessionsController> logger) Parameters coreService ICoreService The Core service provides methods for managing chat sessions and messages, and for getting completions from the orchestrator. logger ILogger<SessionsController> The logging interface used to log under the SessionsController type name. Remarks Constructor for the Core Controller. Methods CreateNewChatSession(string, ChatSessionProperties) Creates a new chat session. [HttpPost(Name = \"CreateNewChatSession\")] public Task<Session> CreateNewChatSession(string instanceId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The id of the instance. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Session> DeleteChatSession(string, string) Delete a chat session and related messages. [HttpDelete(\"{sessionId}\", Name = \"DeleteChatSession\")] public Task DeleteChatSession(string instanceId, string sessionId) Parameters instanceId string The id of the instance. sessionId string The session id to delete. Returns Task GetAllChatSessions(string) Returns list of chat session ids and names. [HttpGet(Name = \"GetAllChatSessions\")] public Task<IEnumerable<Session>> GetAllChatSessions(string instanceId) Parameters instanceId string The id of the instance. Returns Task<IEnumerable<Session>> GetChatSessionMessages(string, string) Returns the chat messages related to an existing session. [HttpGet(\"{sessionId}/messages\", Name = \"GetChatSessionMessages\")] public Task<IEnumerable<Message>> GetChatSessionMessages(string instanceId, string sessionId) Parameters instanceId string The id of the instance. sessionId string The id of the session for which to retrieve chat messages. Returns Task<IEnumerable<Message>> GetCompletionPrompt(string, string, string) Returns the completion prompt for a given session and completion prompt id. [HttpGet(\"{sessionId}/completionprompts/{completionPromptId}\", Name = \"GetCompletionPrompt\")] public Task<CompletionPrompt> GetCompletionPrompt(string instanceId, string sessionId, string completionPromptId) Parameters instanceId string The id of the instance. sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessage(string, string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. [HttpPost(\"{sessionId}/message/{messageId}/rate\", Name = \"RateMessage\")] public Task<Message> RateMessage(string instanceId, string messageId, string sessionId, bool? rating) Parameters instanceId string The id of the instance. messageId string The id of the message to rate. sessionId string The id of the session to which the message belongs. rating bool? The rating to assign to the message. Returns Task<Message> RenameChatSession(string, string, ChatSessionProperties) Rename the chat session. [HttpPost(\"{sessionId}/rename\", Name = \"RenameChatSession\")] public Task<Session> RenameChatSession(string instanceId, string sessionId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The id of the instance. sessionId string The id of the session to rename. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Session>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for checking the status of the service. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus(string) Returns OK if the requester is authenticated and allowed to execute requests against this service. [HttpGet(\"auth\", Name = \"GetAuthStatus\")] public IActionResult GetAuthStatus(string instanceId) Parameters instanceId string The id of the instance. Returns IActionResult GetServiceStatus(string) Returns the status of the Core API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus(string instanceId) Parameters instanceId string The id of the instance. Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html",
    "title": "Class UserProfilesController | FoundationaLLM",
    "keywords": "Class UserProfilesController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing user profiles. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class UserProfilesController : ControllerBase Inheritance object ControllerBase UserProfilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the UserProfiles Controller. Constructors UserProfilesController(IUserProfileService) Provides methods for retrieving and managing user profiles. public UserProfilesController(IUserProfileService userProfileService) Parameters userProfileService IUserProfileService The Core service provides methods for managing the user profile. Remarks Constructor for the UserProfiles Controller. Methods Index(string) Retrieves user profiles. [HttpGet(Name = \"GetUserProfile\")] public Task<IActionResult> Index(string instanceId) Parameters instanceId string The instance identifier. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Core.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.API.Controllers Classes BrandingController Provides branding information for the client. CompletionsController Methods for orchestration services exposed by the Gatekeeper API service. FilesController Provides branding information for the client. SessionsController Provides methods for interacting with the Core service. StatusController Provides methods for checking the status of the service. UserProfilesController Provides methods for retrieving and managing user profiles."
  },
  "api/dotnet/FoundationaLLM.Core.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Core.API Assembly FoundationaLLM.Core.API.dll Main entry point for the Core API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Core API service configuration. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Core.API.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.html",
    "title": "Namespace FoundationaLLM.Core.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.API Namespaces FoundationaLLM.Core.API.Controllers Classes Program Main entry point for the Core API."
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html",
    "title": "Interface ICoreService | FoundationaLLM",
    "keywords": "Interface ICoreService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. public interface ICoreService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateNewChatSessionAsync(string, ChatSessionProperties) Creates a new chat session. Task<Session> CreateNewChatSessionAsync(string instanceId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance Id. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Session> DeleteAttachments(string, List<string>, UnifiedUserIdentity) Deletes one or more attachments. Task<Dictionary<string, ResourceProviderDeleteResult?>> DeleteAttachments(string instanceId, List<string> resourcePaths, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. resourcePaths List<string> The list of resources to be deleted. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<Dictionary<string, ResourceProviderDeleteResult>> A dictionary with the delete operation result for each resource path. DeleteChatSessionAsync(string, string) Delete a chat session and related messages. Task DeleteChatSessionAsync(string instanceId, string sessionId) Parameters instanceId string The instance id. sessionId string The session id to delete. Returns Task DownloadAttachment(string, string, string, UnifiedUserIdentity) Downloads an attachment. Task<AttachmentFile?> DownloadAttachment(string instanceId, string fileProvider, string fileId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. fileProvider string The name of the file provider. fileId string The identifier of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<AttachmentFile> An AttachmentFile object with the properties and the content of the attachment. Remarks The following file providers are supported: FoundationaLLM.Attachments FoundationaLLM.AzureOpenAI GetAllChatSessionsAsync(string) Returns list of chat session ids and names. Task<List<Session>> GetAllChatSessionsAsync(string instanceId) Parameters instanceId string The instance id for which to retrieve chat sessions. Returns Task<List<Session>> GetChatCompletionAsync(string, CompletionRequest) Receive a prompt from a user, retrieve the message history from the related session, generate a completion response, and log full completion results. Task<Completion> GetChatCompletionAsync(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The instance id. completionRequest CompletionRequest The completion request. Returns Task<Completion> GetChatSessionMessagesAsync(string, string) Returns the chat messages related to an existing session. Task<List<Message>> GetChatSessionMessagesAsync(string instanceId, string sessionId) Parameters instanceId string The instance id for which to retrieve chat messages. sessionId string The session id for which to retrieve chat messages. Returns Task<List<Message>> GetCompletionAsync(string, CompletionRequest) Provides a completion for a user prompt, without a session. Task<Completion> GetCompletionAsync(string instanceId, CompletionRequest directCompletionRequest) Parameters instanceId string The instance id. directCompletionRequest CompletionRequest The completion request. Returns Task<Completion> GetCompletionOperationResult(string, string) Gets a completion operation from the downstream API. Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a CompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetCompletionPrompt(string, string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPrompt(string instanceId, string sessionId, string completionPromptId) Parameters instanceId string The instance Id. sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessageAsync(string, string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. Task<Message> RateMessageAsync(string instanceId, string id, string sessionId, bool? rating) Parameters instanceId string The instance id. id string The message id to rate. sessionId string The session id to which the message belongs. rating bool? The rating to assign to the message. Returns Task<Message> RenameChatSessionAsync(string, string, ChatSessionProperties) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. Task<Session> RenameChatSessionAsync(string instanceId, string sessionId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance id. sessionId string The session id to rename. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Session> StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. UploadAttachment(string, string, AttachmentFile, string, UnifiedUserIdentity) Uploads an attachment. Task<ResourceProviderUpsertResult> UploadAttachment(string instanceId, string sessionId, AttachmentFile attachmentFile, string agentName, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. sessionId string The session id from which the attachment is uploaded. attachmentFile AttachmentFile The AttachmentFile object containing the attachment file data. agentName string The name of the agent. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<ResourceProviderUpsertResult> A ResourceProviderUpsertResult object with the FoundationaLLM.Attachment resource provider object id."
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html",
    "title": "Interface ICosmosDbChangeFeedService | FoundationaLLM",
    "keywords": "Interface ICosmosDbChangeFeedService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains Azure Cosmos DB change feed methods. public interface ICosmosDbChangeFeedService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IsInitialized Indicates whether the Azure Cosmos DB change feed is initialized. bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbService.html",
    "title": "Interface ICosmosDbService | FoundationaLLM",
    "keywords": "Interface ICosmosDbService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for accessing Azure Cosmos DB for NoSQL. public interface ICosmosDbService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteSessionAndMessagesAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. Task DeleteSessionAndMessagesAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetSessionAsync(string, CancellationToken) Performs a point read to retrieve a single chat session item. Task<Session> GetSessionAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Session> The chat session item. GetSessionMessagesAsync(string, string, CancellationToken) Gets a list of all current chat messages for a specified session identifier. Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetSessionsAsync(string, string, CancellationToken) Gets a list of all current chat sessions. Task<List<Session>> GetSessionsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The session type to return. upn string The user principal name used for retrieving sessions for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Session>> List of distinct chat session items. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> GetVectorSearchDocumentsAsync(List<DocumentVector>, CancellationToken) Reads all documents retrieved by Vector Search. Task<string> GetVectorSearchDocumentsAsync(List<DocumentVector> vectorDocuments, CancellationToken cancellationToken = default) Parameters vectorDocuments List<DocumentVector> List string of JSON documents from vector search results cancellationToken CancellationToken Cancellation token for async calls. Returns Task<string> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. InsertSessionAsync(Session, CancellationToken) Creates a new chat session. Task<Session> InsertSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Newly created chat session item. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateMessageRatingAsync(string, string, bool?, CancellationToken) Updates a message's rating through a patch operation. Task<Message> UpdateMessageRatingAsync(string id, string sessionId, bool? rating, CancellationToken cancellationToken = default) Parameters id string The message id. sessionId string The message's partition key (session id). rating bool? The rating to replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateSessionAsync(Session, CancellationToken) Updates an existing chat session. Task<Session> UpdateSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised created chat session item. UpdateSessionNameAsync(string, string, CancellationToken) Updates a session's name through a patch operation. Task<Session> UpdateSessionNameAsync(string id, string sessionName, CancellationToken cancellationToken = default) Parameters id string The session id. sessionName string The session's new name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised chat session item. UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Session, CancellationToken) Create or update a user session from the passed in Session object. Task UpsertUserSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html",
    "title": "Interface IGatekeeperAPIService | FoundationaLLM",
    "keywords": "Interface IGatekeeperAPIService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public interface IGatekeeperAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(string, CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IUserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IUserProfileService.html",
    "title": "Interface IUserProfileService | FoundationaLLM",
    "keywords": "Interface IUserProfileService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Provides methods for working with user profiles. public interface IUserProfileService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserProfileAsync(string) Returns the user profile of the signed in user. Task<UserProfile?> GetUserProfileAsync(string instanceId) Parameters instanceId string The instance ID. Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string, string) Returns the user profile of the specified user. Task<UserProfile?> GetUserProfileForUserAsync(string instanceId, string upn) Parameters instanceId string The instance ID. upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(string, UserProfile) Inserts or updates a user profile. Task UpsertUserProfileAsync(string instanceId, UserProfile userProfile) Parameters instanceId string The instance ID. userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Interfaces Interfaces ICoreService Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. ICosmosDbChangeFeedService Contains Azure Cosmos DB change feed methods. ICosmosDbService Contains methods for accessing Azure Cosmos DB for NoSQL. IGatekeeperAPIService Contains methods for interacting with the Gatekeeper API. IUserProfileService Provides methods for working with user profiles."
  },
  "api/dotnet/FoundationaLLM.Core.Models.AgentGatekeeperOverrideOption.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.AgentGatekeeperOverrideOption.html",
    "title": "Enum AgentGatekeeperOverrideOption | FoundationaLLM",
    "keywords": "Enum AgentGatekeeperOverrideOption Namespace FoundationaLLM.Core.Models Assembly FoundationaLLM.Core.dll Gatekeeper override options expressed by an agent. public enum AgentGatekeeperOverrideOption Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields MustBypass = 1 The agent requires an explicit bypass of the Gatekeeper, regardless of the system option. MustCall = 2 The agent requires an explicit call to the Gatekeeper, regardless of the system option. UseSystemOption = 0 The agent deferrs to the system option."
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.ChatSessionNameSummarizationType.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.ChatSessionNameSummarizationType.html",
    "title": "Enum ChatSessionNameSummarizationType | FoundationaLLM",
    "keywords": "Enum ChatSessionNameSummarizationType Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Types of summarization for chat session names. public enum ChatSessionNameSummarizationType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields LLM = 1 Name summarization produced by a LLM via a completion requesting summarization. Timestamp = 0 Name summarization containing the UTC time of the creation of the chat session."
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.CoreServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.CoreServiceSettings.html",
    "title": "Class CoreServiceSettings | FoundationaLLM",
    "keywords": "Class CoreServiceSettings Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Provides settings for the CoreService. public class CoreServiceSettings Inheritance object CoreServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AzureOpenAIAssistantsFileSearchFileExtensions The comma-separated list file extensions that are supported by the Azure OpenAI Assistants file search tool. public required string AzureOpenAIAssistantsFileSearchFileExtensions { get; set; } Property Value string BypassGatekeeper Controls whether the Gatekeeper API will be invoked or not. public required bool BypassGatekeeper { get; set; } Property Value bool SessionSummarization The type of summarization for chat session names. public required ChatSessionNameSummarizationType SessionSummarization { get; set; } Property Value ChatSessionNameSummarizationType"
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Core.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Models.Configuration Classes CoreServiceSettings Provides settings for the CoreService. Enums ChatSessionNameSummarizationType Types of summarization for chat session names."
  },
  "api/dotnet/FoundationaLLM.Core.Models.SessionTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.SessionTypes.html",
    "title": "Class SessionTypes | FoundationaLLM",
    "keywords": "Class SessionTypes Namespace FoundationaLLM.Core.Models Assembly FoundationaLLM.Core.dll Constants for chat session types. public static class SessionTypes Inheritance object SessionTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KioskSession Named session with matching type for the KioskSession. public const string KioskSession = \"KioskSession\" Field Value string Session Named session with matching type for the Session. public const string Session = \"Session\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.html",
    "title": "Namespace FoundationaLLM.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Models Namespaces FoundationaLLM.Core.Models.Configuration Classes SessionTypes Constants for chat session types. Enums AgentGatekeeperOverrideOption Gatekeeper override options expressed by an agent."
  },
  "api/dotnet/FoundationaLLM.Core.Services.CoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CoreService.html",
    "title": "Class CoreService | FoundationaLLM",
    "keywords": "Class CoreService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Initializes a new instance of the CoreService class. public class CoreService : ICoreService Inheritance object CoreService Implements ICoreService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreService(ICosmosDbService, IEnumerable<IDownstreamAPIService>, ILogger<CoreService>, IOptions<ClientBrandingConfiguration>, IOptions<CoreServiceSettings>, ICallContext, IEnumerable<IResourceProviderService>, IConfiguration, IHttpClientFactoryService) Initializes a new instance of the CoreService class. public CoreService(ICosmosDbService cosmosDbService, IEnumerable<IDownstreamAPIService> downstreamAPIServices, ILogger<CoreService> logger, IOptions<ClientBrandingConfiguration> brandingSettings, IOptions<CoreServiceSettings> settings, ICallContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IHttpClientFactoryService httpClientFactory) Parameters cosmosDbService ICosmosDbService The Azure Cosmos DB service that contains chat sessions and messages. downstreamAPIServices IEnumerable<IDownstreamAPIService> The services used to make calls to the downstream APIs. logger ILogger<CoreService> The logging interface used to log under the CoreService type name. brandingSettings IOptions<ClientBrandingConfiguration> The ClientBrandingConfiguration settings retrieved by the injected IOptions<TOptions>. settings IOptions<CoreServiceSettings> The CoreServiceSettings settings for the service. callContext ICallContext Contains contextual data for the calling service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. configuration IConfiguration The IConfiguration service providing configuration settings. httpClientFactory IHttpClientFactoryService Methods CreateNewChatSessionAsync(string, ChatSessionProperties) Creates a new chat session. public Task<Session> CreateNewChatSessionAsync(string instanceId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance Id. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Session> DeleteAttachments(string, List<string>, UnifiedUserIdentity) Deletes one or more attachments. public Task<Dictionary<string, ResourceProviderDeleteResult?>> DeleteAttachments(string instanceId, List<string> resourcePaths, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. resourcePaths List<string> The list of resources to be deleted. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<Dictionary<string, ResourceProviderDeleteResult>> A dictionary with the delete operation result for each resource path. DeleteChatSessionAsync(string, string) Delete a chat session and related messages. public Task DeleteChatSessionAsync(string instanceId, string sessionId) Parameters instanceId string The instance id. sessionId string The session id to delete. Returns Task DownloadAttachment(string, string, string, UnifiedUserIdentity) Downloads an attachment. public Task<AttachmentFile?> DownloadAttachment(string instanceId, string fileProvider, string fileId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. fileProvider string The name of the file provider. fileId string The identifier of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<AttachmentFile> An AttachmentFile object with the properties and the content of the attachment. Remarks The following file providers are supported: FoundationaLLM.Attachments FoundationaLLM.AzureOpenAI GetAllChatSessionsAsync(string) Returns list of chat session ids and names. public Task<List<Session>> GetAllChatSessionsAsync(string instanceId) Parameters instanceId string The instance id for which to retrieve chat sessions. Returns Task<List<Session>> GetChatCompletionAsync(string, CompletionRequest) Receive a prompt from a user, retrieve the message history from the related session, generate a completion response, and log full completion results. public Task<Completion> GetChatCompletionAsync(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The instance id. completionRequest CompletionRequest The completion request. Returns Task<Completion> GetChatSessionMessagesAsync(string, string) Returns the chat messages related to an existing session. public Task<List<Message>> GetChatSessionMessagesAsync(string instanceId, string sessionId) Parameters instanceId string The instance id for which to retrieve chat messages. sessionId string The session id for which to retrieve chat messages. Returns Task<List<Message>> GetCompletionAsync(string, CompletionRequest) Provides a completion for a user prompt, without a session. public Task<Completion> GetCompletionAsync(string instanceId, CompletionRequest directCompletionRequest) Parameters instanceId string The instance id. directCompletionRequest CompletionRequest The completion request. Returns Task<Completion> GetCompletionOperationResult(string, string) Gets a completion operation from the downstream API. public Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a CompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetCompletionPrompt(string, string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPrompt(string instanceId, string sessionId, string completionPromptId) Parameters instanceId string The instance Id. sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessageAsync(string, string, string, bool?) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. public Task<Message> RateMessageAsync(string instanceId, string id, string sessionId, bool? rating) Parameters instanceId string The instance id. id string The message id to rate. sessionId string The session id to which the message belongs. rating bool? The rating to assign to the message. Returns Task<Message> RenameChatSessionAsync(string, string, ChatSessionProperties) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. public Task<Session> RenameChatSessionAsync(string instanceId, string sessionId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance id. sessionId string The session id to rename. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Session> StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. UploadAttachment(string, string, AttachmentFile, string, UnifiedUserIdentity) Uploads an attachment. public Task<ResourceProviderUpsertResult> UploadAttachment(string instanceId, string sessionId, AttachmentFile attachmentFile, string agentName, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. sessionId string The session id from which the attachment is uploaded. attachmentFile AttachmentFile The AttachmentFile object containing the attachment file data. agentName string The name of the agent. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<ResourceProviderUpsertResult> A ResourceProviderUpsertResult object with the FoundationaLLM.Attachment resource provider object id."
  },
  "api/dotnet/FoundationaLLM.Core.Services.CosmosDbChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CosmosDbChangeFeedService.html",
    "title": "Class CosmosDbChangeFeedService | FoundationaLLM",
    "keywords": "Class CosmosDbChangeFeedService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CosmosDbChangeFeedService : ICosmosDbChangeFeedService Inheritance object CosmosDbChangeFeedService Implements ICosmosDbChangeFeedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbChangeFeedService(ILogger<CosmosDbChangeFeedService>, ICosmosDbService, IOptions<CosmosDbSettings>) Initializes a new instance of the CosmosDbChangeFeedService class. public CosmosDbChangeFeedService(ILogger<CosmosDbChangeFeedService> logger, ICosmosDbService cosmosDbService, IOptions<CosmosDbSettings> settings) Parameters logger ILogger<CosmosDbChangeFeedService> The logging interface used to log under the CosmosDbChangeFeedService type name. cosmosDbService ICosmosDbService Contains standard methods for managing data stored within the Azure Cosmos DB workspace. settings IOptions<CosmosDbSettings> The CosmosDbSettings settings retrieved by the injected IOptions<TOptions>. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Properties IsInitialized Gets a value indicating whether the change feeds have been initialized. public bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. public Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. public Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.CosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CosmosDbService.html",
    "title": "Class CosmosDbService | FoundationaLLM",
    "keywords": "Class CosmosDbService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Service to access Azure Cosmos DB for NoSQL. public class CosmosDbService : ICosmosDbService Inheritance object CosmosDbService Implements ICosmosDbService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbService(IOptions<CosmosDbSettings>, CosmosClient, ILogger<CosmosDbService>) Initializes a new instance of the CosmosDbService class. public CosmosDbService(IOptions<CosmosDbSettings> settings, CosmosClient client, ILogger<CosmosDbService> logger) Parameters settings IOptions<CosmosDbSettings> The CosmosDbSettings settings retrieved by the injected IOptions<TOptions>. client CosmosClient The Cosmos DB client. logger ILogger<CosmosDbService> The logging interface used to log under the CosmosDbService type name. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Methods DeleteSessionAndMessagesAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. public Task DeleteSessionAndMessagesAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task GetCompletionPrompt(string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPrompt(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetSessionAsync(string, CancellationToken) Performs a point read to retrieve a single chat session item. public Task<Session> GetSessionAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Session> The chat session item. GetSessionMessagesAsync(string, string, CancellationToken) Gets a list of all current chat messages for a specified session identifier. public Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetSessionsAsync(string, string, CancellationToken) Gets a list of all current chat sessions. public Task<List<Session>> GetSessionsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The session type to return. upn string The user principal name used for retrieving sessions for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Session>> List of distinct chat session items. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. public Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> GetVectorSearchDocumentsAsync(List<DocumentVector>, CancellationToken) Reads all documents retrieved by Vector Search. public Task<string> GetVectorSearchDocumentsAsync(List<DocumentVector> vectorDocuments, CancellationToken cancellationToken = default) Parameters vectorDocuments List<DocumentVector> List string of JSON documents from vector search results cancellationToken CancellationToken Cancellation token for async calls. Returns Task<string> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. public Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. InsertSessionAsync(Session, CancellationToken) Creates a new chat session. public Task<Session> InsertSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Newly created chat session item. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. public Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateMessageRatingAsync(string, string, bool?, CancellationToken) Updates a message's rating through a patch operation. public Task<Message> UpdateMessageRatingAsync(string id, string sessionId, bool? rating, CancellationToken cancellationToken = default) Parameters id string The message id. sessionId string The message's partition key (session id). rating bool? The rating to replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpdateSessionAsync(Session, CancellationToken) Updates an existing chat session. public Task<Session> UpdateSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session Chat session item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised created chat session item. UpdateSessionNameAsync(string, string, CancellationToken) Updates a session's name through a patch operation. public Task<Session> UpdateSessionNameAsync(string id, string sessionName, CancellationToken cancellationToken = default) Parameters id string The session id. sessionName string The session's new name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Session> Revised chat session item. UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. public Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. public Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Session, CancellationToken) Create or update a user session from the passed in Session object. public Task UpsertUserSessionAsync(Session session, CancellationToken cancellationToken = default) Parameters session Session The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html",
    "title": "Class GatekeeperAPIService | FoundationaLLM",
    "keywords": "Class GatekeeperAPIService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperAPIService : IGatekeeperAPIService Inheritance object GatekeeperAPIService Implements IGatekeeperAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperAPIService(ICallContext, IHttpClientFactoryService) Initializes a new instance of the GatekeeperAPIService class. public GatekeeperAPIService(ICallContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gateway API requests. Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. public Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(string, CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. public Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.UserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.UserProfileService.html",
    "title": "Class UserProfileService | FoundationaLLM",
    "keywords": "Class UserProfileService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class UserProfileService : IUserProfileService Inheritance object UserProfileService Implements IUserProfileService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfileService(ICosmosDbService, ILogger<CoreService>, ICallContext) Initializes a new instance of the CoreService class. public UserProfileService(ICosmosDbService cosmosDbService, ILogger<CoreService> logger, ICallContext callContext) Parameters cosmosDbService ICosmosDbService The Azure Cosmos DB service that contains user profiles. logger ILogger<CoreService> The logging interface used to log under the UserProfileService type name. callContext ICallContext Contains contextual data for the calling service. Methods GetUserProfileAsync(string) Returns the user profile of the signed in user. public Task<UserProfile?> GetUserProfileAsync(string instanceId) Parameters instanceId string The instance ID. Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string, string) Returns the user profile of the specified user. public Task<UserProfile?> GetUserProfileForUserAsync(string instanceId, string upn) Parameters instanceId string The instance ID. upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(string, UserProfile) Inserts or updates a user profile. public Task UpsertUserProfileAsync(string instanceId, UserProfile userProfile) Parameters instanceId string The instance ID. userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.html",
    "title": "Namespace FoundationaLLM.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Services Classes CoreService Initializes a new instance of the CoreService class. CosmosDbChangeFeedService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. CosmosDbService Service to access Azure Cosmos DB for NoSQL. GatekeeperAPIService Contains methods for interacting with the Gatekeeper API. UserProfileService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Core.Utils.FileMethods.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.FileMethods.html",
    "title": "Class FileMethods | FoundationaLLM",
    "keywords": "Class FileMethods Namespace FoundationaLLM.Core.Utils Assembly FoundationaLLM.Core.dll Contains methods for working with files. public class FileMethods Inheritance object FileMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetMessageContentFileType(string?, string?) Returns the type of the message content based on the file name. public static string GetMessageContentFileType(string? fileName, string? fallbackValue) Parameters fileName string The file name to evaluate. fallbackValue string If populated, defines the fallback type value if a mapping cannot be determined from the passed in file name. Otherwise, the default value is FilePath. Returns string"
  },
  "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html",
    "title": "Class ObjectExtensions | FoundationaLLM",
    "keywords": "Class ObjectExtensions Namespace FoundationaLLM.Core.Utils Assembly FoundationaLLM.Core.dll Contains extension methods for objects. public static class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPropertyValues(object, List<string>) Gets the values of a specified set of properties of an object. public static List<string?> GetPropertyValues(this object obj, List<string> propertyNames) Parameters obj object The object instance. propertyNames List<string> The list of property names. Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Core.Utils.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.html",
    "title": "Namespace FoundationaLLM.Core.Utils | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Utils Classes FileMethods Contains methods for working with files. ObjectExtensions Contains extension methods for objects."
  },
  "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html",
    "title": "Class ChangeFeedWorker | FoundationaLLM",
    "keywords": "Class ChangeFeedWorker Namespace FoundationaLLM.Core.Worker Assembly FoundationaLLM.Core.Worker.dll Background service that runs the Change Feed Processor. public class ChangeFeedWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService ChangeFeedWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ChangeFeedWorker(ILogger<ChangeFeedWorker>, TelemetryClient, ICosmosDbChangeFeedService) Instantiates a new instance of the ChangeFeedWorker. public ChangeFeedWorker(ILogger<ChangeFeedWorker> logger, TelemetryClient telemetryClient, ICosmosDbChangeFeedService cosmosDbChangeFeedService) Parameters logger ILogger<ChangeFeedWorker> The logging interface used to log under the ChangeFeedWorker type name. telemetryClient TelemetryClient The telemetry client sends events, metrics, and other telemetry to the App Insights service. cosmosDbChangeFeedService ICosmosDbChangeFeedService The Cosmos DB change feed processor that performs the event processing tasks for the worker. Methods ExecuteAsync(CancellationToken) Executes the Change Feed Processor. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.html",
    "title": "Namespace FoundationaLLM.Core.Worker | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core.Worker Classes ChangeFeedWorker Background service that runs the Change Feed Processor."
  },
  "api/dotnet/FoundationaLLM.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Core.html",
    "title": "Namespace FoundationaLLM.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Core Namespaces FoundationaLLM.Core.API FoundationaLLM.Core.Interfaces FoundationaLLM.Core.Models FoundationaLLM.Core.Services FoundationaLLM.Core.Utils FoundationaLLM.Core.Worker"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReference.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReference.html",
    "title": "Class DataSourceReference | FoundationaLLM",
    "keywords": "Class DataSourceReference Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Contains a reference to a data source.. public class DataSourceReference : ResourceReference Inheritance object ResourceReference DataSourceReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.ResourceType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSourceType The object type of the data source. [JsonIgnore] public Type DataSourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReferenceStore.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReferenceStore.html",
    "title": "Class DataSourceReferenceStore | FoundationaLLM",
    "keywords": "Class DataSourceReferenceStore Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Models the content of the data source reference store managed by the FoundationaLLM.DataSource resource provider. public class DataSourceReferenceStore Inheritance object DataSourceReferenceStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSourceReferences The list of all data sources registered in the system. public required List<DataSourceReference> DataSourceReferences { get; set; } Property Value List<DataSourceReference> DefaultDataSourceName The name of the default data source. public string? DefaultDataSourceName { get; set; } Property Value string Methods FromDictionary(Dictionary<string, DataSourceReference>) Creates a new instance of the DataSourceReferenceStore from a dictionary. public static DataSourceReferenceStore FromDictionary(Dictionary<string, DataSourceReference> dictionary) Parameters dictionary Dictionary<string, DataSourceReference> A string-based dictionary of DataSourceReference values. Returns DataSourceReferenceStore The DataSourceReferenceStore object created from the dictionary. ToDictionary() Creates a string-based dictionary of DataSourceReference values from the current object. public Dictionary<string, DataSourceReference> ToDictionary() Returns Dictionary<string, DataSourceReference> The string-based dictionary of DataSourceReference values from the current object."
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.html",
    "title": "Namespace FoundationaLLM.DataSource.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource.Models Classes DataSourceReference Contains a reference to a data source.. DataSourceReferenceStore Models the content of the data source reference store managed by the FoundationaLLM.DataSource resource provider."
  },
  "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderService.html",
    "title": "Class DataSourceResourceProviderService | FoundationaLLM",
    "keywords": "Class DataSourceResourceProviderService Namespace FoundationaLLM.DataSource.ResourceProviders Assembly FoundationaLLM.DataSource.dll Implements the FoundationaLLM.DataSource resource provider. public class DataSourceResourceProviderService : ResourceProviderServiceBase<DataSourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<DataSourceReference> DataSourceResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<DataSourceReference>._resourceReferenceStore ResourceProviderServiceBase<DataSourceReference>._serviceProvider ResourceProviderServiceBase<DataSourceReference>._authorizationService ResourceProviderServiceBase<DataSourceReference>._storageService ResourceProviderServiceBase<DataSourceReference>._eventService ResourceProviderServiceBase<DataSourceReference>._resourceValidatorFactory ResourceProviderServiceBase<DataSourceReference>._logger ResourceProviderServiceBase<DataSourceReference>._instanceSettings ResourceProviderServiceBase<DataSourceReference>._storageContainerName ResourceProviderServiceBase<DataSourceReference>._serializerSettings ResourceProviderServiceBase<DataSourceReference>.Name ResourceProviderServiceBase<DataSourceReference>.IsInitialized ResourceProviderServiceBase<DataSourceReference>.AllowedResourceTypes ResourceProviderServiceBase<DataSourceReference>.StorageAccountName ResourceProviderServiceBase<DataSourceReference>.StorageContainerName ResourceProviderServiceBase<DataSourceReference>.Initialize() ResourceProviderServiceBase<DataSourceReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<DataSourceReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<DataSourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<DataSourceReference>.LoadResource<T>(DataSourceReference) ResourceProviderServiceBase<DataSourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<DataSourceReference>.CreateResource<T>(DataSourceReference, T) ResourceProviderServiceBase<DataSourceReference>.CreateResource(DataSourceReference, Stream, string) ResourceProviderServiceBase<DataSourceReference>.CreateResources<T1, T2>(DataSourceReference, T1, DataSourceReference, T2) ResourceProviderServiceBase<DataSourceReference>.SaveResource<T>(DataSourceReference, T) ResourceProviderServiceBase<DataSourceReference>.DeleteResource<T>(string) ResourceProviderServiceBase<DataSourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<DataSourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataSourceResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.DataSource resource provider. public DataSourceResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceInternal<T>(ResourcePath resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.DataSource.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource.ResourceProviders Classes DataSourceResourceProviderService Implements the FoundationaLLM.DataSource resource provider."
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.AzureDataLakeDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.AzureDataLakeDataSourceValidator.html",
    "title": "Class AzureDataLakeDataSourceValidator | FoundationaLLM",
    "keywords": "Class AzureDataLakeDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the AzureDataLakeDataSource model. public class AzureDataLakeDataSourceValidator : DataSourceValidator<AzureDataLakeDataSource>, IValidator<AzureDataLakeDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AzureDataLakeDataSource> DataSourceValidator<AzureDataLakeDataSource> AzureDataLakeDataSourceValidator Implements IValidator<AzureDataLakeDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<AzureDataLakeDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<AzureDataLakeDataSource>.Validate(AzureDataLakeDataSource) AbstractValidator<AzureDataLakeDataSource>.ValidateAsync(AzureDataLakeDataSource, CancellationToken) AbstractValidator<AzureDataLakeDataSource>.Validate(ValidationContext<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.ValidateAsync(ValidationContext<AzureDataLakeDataSource>, CancellationToken) AbstractValidator<AzureDataLakeDataSource>.CreateDescriptor() AbstractValidator<AzureDataLakeDataSource>.RuleFor<TProperty>(Expression<Func<AzureDataLakeDataSource, TProperty>>) AbstractValidator<AzureDataLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureDataLakeDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureDataLakeDataSource, TProperty>>, Func<AzureDataLakeDataSource, TProperty, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.RuleForEach<TElement>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>) AbstractValidator<AzureDataLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>, Func<AzureDataLakeDataSource, TElement, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.RuleSet(string, Action) AbstractValidator<AzureDataLakeDataSource>.When(Func<AzureDataLakeDataSource, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.When(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.Unless(Func<AzureDataLakeDataSource, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.Unless(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.WhenAsync(Func<AzureDataLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.WhenAsync(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.UnlessAsync(Func<AzureDataLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.UnlessAsync(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.Include(IValidator<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.Include<TValidator>(Func<AzureDataLakeDataSource, TValidator>) AbstractValidator<AzureDataLakeDataSource>.GetEnumerator() AbstractValidator<AzureDataLakeDataSource>.EnsureInstanceNotNull(object) AbstractValidator<AzureDataLakeDataSource>.PreValidate(ValidationContext<AzureDataLakeDataSource>, ValidationResult) AbstractValidator<AzureDataLakeDataSource>.RaiseValidationException(ValidationContext<AzureDataLakeDataSource>, ValidationResult) AbstractValidator<AzureDataLakeDataSource>.OnRuleAdded(IValidationRule<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.CascadeMode AbstractValidator<AzureDataLakeDataSource>.ClassLevelCascadeMode AbstractValidator<AzureDataLakeDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSourceValidator() Configures the validation rules for the AzureDataLakeDataSource model. public AzureDataLakeDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.AzureSQLDatabaseDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.AzureSQLDatabaseDataSourceValidator.html",
    "title": "Class AzureSQLDatabaseDataSourceValidator | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the AzureSQLDatabaseDataSource model. public class AzureSQLDatabaseDataSourceValidator : DataSourceValidator<AzureSQLDatabaseDataSource>, IValidator<AzureSQLDatabaseDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AzureSQLDatabaseDataSource> DataSourceValidator<AzureSQLDatabaseDataSource> AzureSQLDatabaseDataSourceValidator Implements IValidator<AzureSQLDatabaseDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<AzureSQLDatabaseDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<AzureSQLDatabaseDataSource>.Validate(AzureSQLDatabaseDataSource) AbstractValidator<AzureSQLDatabaseDataSource>.ValidateAsync(AzureSQLDatabaseDataSource, CancellationToken) AbstractValidator<AzureSQLDatabaseDataSource>.Validate(ValidationContext<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.ValidateAsync(ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken) AbstractValidator<AzureSQLDatabaseDataSource>.CreateDescriptor() AbstractValidator<AzureSQLDatabaseDataSource>.RuleFor<TProperty>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>) AbstractValidator<AzureSQLDatabaseDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>, Func<AzureSQLDatabaseDataSource, TProperty, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.RuleForEach<TElement>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>) AbstractValidator<AzureSQLDatabaseDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>, Func<AzureSQLDatabaseDataSource, TElement, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.RuleSet(string, Action) AbstractValidator<AzureSQLDatabaseDataSource>.When(Func<AzureSQLDatabaseDataSource, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.When(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Unless(Func<AzureSQLDatabaseDataSource, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Unless(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.WhenAsync(Func<AzureSQLDatabaseDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.WhenAsync(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.UnlessAsync(Func<AzureSQLDatabaseDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.UnlessAsync(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Include(IValidator<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.Include<TValidator>(Func<AzureSQLDatabaseDataSource, TValidator>) AbstractValidator<AzureSQLDatabaseDataSource>.GetEnumerator() AbstractValidator<AzureSQLDatabaseDataSource>.EnsureInstanceNotNull(object) AbstractValidator<AzureSQLDatabaseDataSource>.PreValidate(ValidationContext<AzureSQLDatabaseDataSource>, ValidationResult) AbstractValidator<AzureSQLDatabaseDataSource>.RaiseValidationException(ValidationContext<AzureSQLDatabaseDataSource>, ValidationResult) AbstractValidator<AzureSQLDatabaseDataSource>.OnRuleAdded(IValidationRule<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.CascadeMode AbstractValidator<AzureSQLDatabaseDataSource>.ClassLevelCascadeMode AbstractValidator<AzureSQLDatabaseDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSourceValidator() Configures the validation rules for the AzureSQLDatabaseDataSource model. public AzureSQLDatabaseDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceBaseValidator.html",
    "title": "Class DataSourceBaseValidator | FoundationaLLM",
    "keywords": "Class DataSourceBaseValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the DataSourceBase model. public class DataSourceBaseValidator : AbstractValidator<DataSourceBase>, IValidator<DataSourceBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DataSourceBase> DataSourceBaseValidator Implements IValidator<DataSourceBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DataSourceBase>.Validate(DataSourceBase) AbstractValidator<DataSourceBase>.ValidateAsync(DataSourceBase, CancellationToken) AbstractValidator<DataSourceBase>.Validate(ValidationContext<DataSourceBase>) AbstractValidator<DataSourceBase>.ValidateAsync(ValidationContext<DataSourceBase>, CancellationToken) AbstractValidator<DataSourceBase>.CreateDescriptor() AbstractValidator<DataSourceBase>.RuleFor<TProperty>(Expression<Func<DataSourceBase, TProperty>>) AbstractValidator<DataSourceBase>.Transform<TProperty, TTransformed>(Expression<Func<DataSourceBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DataSourceBase>.Transform<TProperty, TTransformed>(Expression<Func<DataSourceBase, TProperty>>, Func<DataSourceBase, TProperty, TTransformed>) AbstractValidator<DataSourceBase>.RuleForEach<TElement>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>) AbstractValidator<DataSourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DataSourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>, Func<DataSourceBase, TElement, TTransformed>) AbstractValidator<DataSourceBase>.RuleSet(string, Action) AbstractValidator<DataSourceBase>.When(Func<DataSourceBase, bool>, Action) AbstractValidator<DataSourceBase>.When(Func<DataSourceBase, ValidationContext<DataSourceBase>, bool>, Action) AbstractValidator<DataSourceBase>.Unless(Func<DataSourceBase, bool>, Action) AbstractValidator<DataSourceBase>.Unless(Func<DataSourceBase, ValidationContext<DataSourceBase>, bool>, Action) AbstractValidator<DataSourceBase>.WhenAsync(Func<DataSourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.WhenAsync(Func<DataSourceBase, ValidationContext<DataSourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.UnlessAsync(Func<DataSourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.UnlessAsync(Func<DataSourceBase, ValidationContext<DataSourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.Include(IValidator<DataSourceBase>) AbstractValidator<DataSourceBase>.Include<TValidator>(Func<DataSourceBase, TValidator>) AbstractValidator<DataSourceBase>.GetEnumerator() AbstractValidator<DataSourceBase>.EnsureInstanceNotNull(object) AbstractValidator<DataSourceBase>.PreValidate(ValidationContext<DataSourceBase>, ValidationResult) AbstractValidator<DataSourceBase>.RaiseValidationException(ValidationContext<DataSourceBase>, ValidationResult) AbstractValidator<DataSourceBase>.OnRuleAdded(IValidationRule<DataSourceBase>) AbstractValidator<DataSourceBase>.CascadeMode AbstractValidator<DataSourceBase>.ClassLevelCascadeMode AbstractValidator<DataSourceBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataSourceBaseValidator() Configures the validation rules for the DataSourceBase model. public DataSourceBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceValidator-1.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceValidator-1.html",
    "title": "Class DataSourceValidator<T> | FoundationaLLM",
    "keywords": "Class DataSourceValidator<T> Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Base validator for data sources. public class DataSourceValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : DataSourceBase Type Parameters T The type of data source to validate. Inheritance object AbstractValidator<T> DataSourceValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Derived AzureDataLakeDataSourceValidator AzureSQLDatabaseDataSourceValidator OneLakeDataSourceValidator SharePointOnlineSiteDataSourceValidator Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.OnRuleAdded(IValidationRule<T>) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidConfigurationReference(DataSourceBase, string) Validates the value of a specified configuration reference. protected bool ValidConfigurationReference(DataSourceBase dataSource, string configurationKey) Parameters dataSource DataSourceBase The data source object being validated. configurationKey string The name of the configuration reference being validated. Returns bool True if the value of the configuration reference is valid, False otherwise."
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.OneLakeDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.OneLakeDataSourceValidator.html",
    "title": "Class OneLakeDataSourceValidator | FoundationaLLM",
    "keywords": "Class OneLakeDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the OneLakeDataSource model. public class OneLakeDataSourceValidator : DataSourceValidator<OneLakeDataSource>, IValidator<OneLakeDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<OneLakeDataSource> DataSourceValidator<OneLakeDataSource> OneLakeDataSourceValidator Implements IValidator<OneLakeDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<OneLakeDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<OneLakeDataSource>.Validate(OneLakeDataSource) AbstractValidator<OneLakeDataSource>.ValidateAsync(OneLakeDataSource, CancellationToken) AbstractValidator<OneLakeDataSource>.Validate(ValidationContext<OneLakeDataSource>) AbstractValidator<OneLakeDataSource>.ValidateAsync(ValidationContext<OneLakeDataSource>, CancellationToken) AbstractValidator<OneLakeDataSource>.CreateDescriptor() AbstractValidator<OneLakeDataSource>.RuleFor<TProperty>(Expression<Func<OneLakeDataSource, TProperty>>) AbstractValidator<OneLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<OneLakeDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<OneLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<OneLakeDataSource, TProperty>>, Func<OneLakeDataSource, TProperty, TTransformed>) AbstractValidator<OneLakeDataSource>.RuleForEach<TElement>(Expression<Func<OneLakeDataSource, IEnumerable<TElement>>>) AbstractValidator<OneLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<OneLakeDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<OneLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<OneLakeDataSource, IEnumerable<TElement>>>, Func<OneLakeDataSource, TElement, TTransformed>) AbstractValidator<OneLakeDataSource>.RuleSet(string, Action) AbstractValidator<OneLakeDataSource>.When(Func<OneLakeDataSource, bool>, Action) AbstractValidator<OneLakeDataSource>.When(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, bool>, Action) AbstractValidator<OneLakeDataSource>.Unless(Func<OneLakeDataSource, bool>, Action) AbstractValidator<OneLakeDataSource>.Unless(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, bool>, Action) AbstractValidator<OneLakeDataSource>.WhenAsync(Func<OneLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.WhenAsync(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.UnlessAsync(Func<OneLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.UnlessAsync(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.Include(IValidator<OneLakeDataSource>) AbstractValidator<OneLakeDataSource>.Include<TValidator>(Func<OneLakeDataSource, TValidator>) AbstractValidator<OneLakeDataSource>.GetEnumerator() AbstractValidator<OneLakeDataSource>.EnsureInstanceNotNull(object) AbstractValidator<OneLakeDataSource>.PreValidate(ValidationContext<OneLakeDataSource>, ValidationResult) AbstractValidator<OneLakeDataSource>.RaiseValidationException(ValidationContext<OneLakeDataSource>, ValidationResult) AbstractValidator<OneLakeDataSource>.OnRuleAdded(IValidationRule<OneLakeDataSource>) AbstractValidator<OneLakeDataSource>.CascadeMode AbstractValidator<OneLakeDataSource>.ClassLevelCascadeMode AbstractValidator<OneLakeDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OneLakeDataSourceValidator() Configures the validation rules for the OneLakeDataSource model. public OneLakeDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.SharePointOnlineSiteDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.SharePointOnlineSiteDataSourceValidator.html",
    "title": "Class SharePointOnlineSiteDataSourceValidator | FoundationaLLM",
    "keywords": "Class SharePointOnlineSiteDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the SharePointOnlineSiteDataSource model. public class SharePointOnlineSiteDataSourceValidator : DataSourceValidator<SharePointOnlineSiteDataSource>, IValidator<SharePointOnlineSiteDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<SharePointOnlineSiteDataSource> DataSourceValidator<SharePointOnlineSiteDataSource> SharePointOnlineSiteDataSourceValidator Implements IValidator<SharePointOnlineSiteDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<SharePointOnlineSiteDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<SharePointOnlineSiteDataSource>.Validate(SharePointOnlineSiteDataSource) AbstractValidator<SharePointOnlineSiteDataSource>.ValidateAsync(SharePointOnlineSiteDataSource, CancellationToken) AbstractValidator<SharePointOnlineSiteDataSource>.Validate(ValidationContext<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.ValidateAsync(ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken) AbstractValidator<SharePointOnlineSiteDataSource>.CreateDescriptor() AbstractValidator<SharePointOnlineSiteDataSource>.RuleFor<TProperty>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>) AbstractValidator<SharePointOnlineSiteDataSource>.Transform<TProperty, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.Transform<TProperty, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>, Func<SharePointOnlineSiteDataSource, TProperty, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.RuleForEach<TElement>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>) AbstractValidator<SharePointOnlineSiteDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>, Func<SharePointOnlineSiteDataSource, TElement, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.RuleSet(string, Action) AbstractValidator<SharePointOnlineSiteDataSource>.When(Func<SharePointOnlineSiteDataSource, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.When(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Unless(Func<SharePointOnlineSiteDataSource, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Unless(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.WhenAsync(Func<SharePointOnlineSiteDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.WhenAsync(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.UnlessAsync(Func<SharePointOnlineSiteDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.UnlessAsync(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Include(IValidator<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.Include<TValidator>(Func<SharePointOnlineSiteDataSource, TValidator>) AbstractValidator<SharePointOnlineSiteDataSource>.GetEnumerator() AbstractValidator<SharePointOnlineSiteDataSource>.EnsureInstanceNotNull(object) AbstractValidator<SharePointOnlineSiteDataSource>.PreValidate(ValidationContext<SharePointOnlineSiteDataSource>, ValidationResult) AbstractValidator<SharePointOnlineSiteDataSource>.RaiseValidationException(ValidationContext<SharePointOnlineSiteDataSource>, ValidationResult) AbstractValidator<SharePointOnlineSiteDataSource>.OnRuleAdded(IValidationRule<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.CascadeMode AbstractValidator<SharePointOnlineSiteDataSource>.ClassLevelCascadeMode AbstractValidator<SharePointOnlineSiteDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineSiteDataSourceValidator() Configures the validation rules for the SharePointOnlineSiteDataSource model. public SharePointOnlineSiteDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.html",
    "title": "Namespace FoundationaLLM.DataSource.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource.Validation Classes AzureDataLakeDataSourceValidator Validator for the AzureDataLakeDataSource model. AzureSQLDatabaseDataSourceValidator Validator for the AzureSQLDatabaseDataSource model. DataSourceBaseValidator Validator for the DataSourceBase model. DataSourceValidator<T> Base validator for data sources. OneLakeDataSourceValidator Validator for the OneLakeDataSource model. SharePointOnlineSiteDataSourceValidator Validator for the SharePointOnlineSiteDataSource model."
  },
  "api/dotnet/FoundationaLLM.DataSource.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.html",
    "title": "Namespace FoundationaLLM.DataSource | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.DataSource Namespaces FoundationaLLM.DataSource.Models FoundationaLLM.DataSource.ResourceProviders FoundationaLLM.DataSource.Validation"
  },
  "api/dotnet/FoundationaLLM.DependencyInjection.html": {
    "href": "api/dotnet/FoundationaLLM.DependencyInjection.html",
    "title": "Class DependencyInjection | FoundationaLLM",
    "keywords": "Class DependencyInjection Namespace FoundationaLLM Assembly FoundationaLLM.Orchestration.Core.dll General purpose dependency injection extensions. public static class DependencyInjection Inheritance object DependencyInjection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAIModelResourceProvider(IHostApplicationBuilder) Add the AIModel resource provider and its related services the the dependency injection container. public static void AddAIModelResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAIModelResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.AIModel resource provider. public static void AddAIModelResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddAIModelResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.AIModel resource provider. public static void AddAIModelResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAgentResourceProvider(IHostApplicationBuilder) Add the Agent resource provider and its related services the the dependency injection container. public static void AddAgentResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAgentResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.Agent resource provider. public static void AddAgentResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddAgentResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Agent resource provider. public static void AddAgentResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAttachmentResourceProvider(IHostApplicationBuilder) Add the Attachment resource provider and its related services the the dependency injection container. public static void AddAttachmentResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAttachmentResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.Attachment resource provider. public static void AddAttachmentResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddAttachmentResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Attachment resource provider. public static void AddAttachmentResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAuthenticationConfiguration(IHostApplicationBuilder, string, string, string, string?, string, bool, bool) Add authentication configuration to the dependency injection container. public static void AddAuthenticationConfiguration(this IHostApplicationBuilder builder, string entraInstanceConfigurationKey, string entraTenantIdConfigurationKey, string entraClientIdConfigurationkey, string? entraScopesConfigurationKey, string policyName = \"DefaultPolicy\", bool requireScopes = true, bool allowACLAuthorization = false) Parameters builder IHostApplicationBuilder The host application builder. entraInstanceConfigurationKey string The configuration key for the Entra ID instance. entraTenantIdConfigurationKey string The configuration key for the Entra ID tenant id. entraClientIdConfigurationkey string The configuration key for the Entra ID client id. entraScopesConfigurationKey string The configuration key for the Entra ID scopes. policyName string The name of the authorization policy. requireScopes bool Indicates whether a scope claim (scp) is required for authorization. allowACLAuthorization bool Indicates whether tokens that do not have either of the \"scp\" or \"roles\" claims are accepted (True means they are accepted). AddAuthorizationCore(IHostApplicationBuilder) Add the Authorization Core service to the dependency injection container (used by the Authorization API). public static void AddAuthorizationCore(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddAuthorizationResourceProvider(IHostApplicationBuilder) Register the FoundationaLLM.Authorization resource provider with the dependency injection container. public static void AddAuthorizationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder Application builder. AddAuthorizationService(IServiceCollection, IConfigurationManager) Add the authorization service to the dependency injection container (used by all resource providers). public static void AddAuthorizationService(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddAuthorizationService(IHostApplicationBuilder) Add the authorization service to the dependency injection container (used by all resource providers). public static void AddAuthorizationService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder AddAzureEventGridEvents(IServiceCollection, IConfigurationManager, string) Register the dependencies required to support Azure Event Grid events. public static void AddAzureEventGridEvents(this IServiceCollection services, IConfigurationManager configuration, string eventGridProfileSection) Parameters services IServiceCollection Application builder service collection. configuration IConfigurationManager The IConfigurationManager providing access to configuration. eventGridProfileSection string The name of the configuration section that contains the Event Grid profile to load. AddAzureKeyVaultService(IHostApplicationBuilder, string) Register the AzureKeyVaultService with the dependency injection container. public static void AddAzureKeyVaultService(this IHostApplicationBuilder builder, string keyVaultUriConfigurationKeyName) Parameters builder IHostApplicationBuilder The host application builder. keyVaultUriConfigurationKeyName string The name of the configuration key that provides the URI of the Azure Key Vault service. AddAzureOpenAIResourceProvider(IServiceCollection, IConfigurationManager) Register the handler as a hosted service, passing the step name to the handler ctor public static void AddAzureOpenAIResourceProvider(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationRoot configuration manager. Remarks Requires an IGatewayServiceClient service to be also registered with the dependency injection container. AddAzureOpenAIResourceProvider(IHostApplicationBuilder) Register the handler as a hosted service, passing the step name to the handler ctor public static void AddAzureOpenAIResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. Remarks Requires an IGatewayServiceClient service to be also registered with the dependency injection container. AddAzureOpenAIResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.AzureOpenAI resource provider. public static void AddAzureOpenAIResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddAzureOpenAIResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.AzureOpenAI resource provider. public static void AddAzureOpenAIResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAzureResourceManager(IServiceCollection) Register the IAzureResourceManagerService implementation with the dependency injection container. public static void AddAzureResourceManager(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddAzureResourceManager(IHostApplicationBuilder) Register the IAzureResourceManagerService implementation with the dependency injection container. public static void AddAzureResourceManager(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddConfigurationResourceProvider(IHostApplicationBuilder) Register the FoundationaLLM.Configuration resource provider with the dependency injection container. public static void AddConfigurationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder Application builder. AddConfigurationResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.Configuration resource provider. public static void AddConfigurationResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddConfigurationResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Configuration resource provider. public static void AddConfigurationResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddCoreClient(IServiceCollection, string, TokenCredential, string, APIClientSettings?) Add the Core Client and its related dependencies to the dependency injection container. public static void AddCoreClient(this IServiceCollection services, string coreUri, TokenCredential credential, string instanceId, APIClientSettings? options = null) Parameters services IServiceCollection The IServiceCollection this method extends to add the Core Client. coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. AddCorsPolicies(IHostApplicationBuilder) Add CORS policies the the dependency injection container. public static void AddCorsPolicies(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddDataSourceResourceProvider(IHostApplicationBuilder) Add the Data Source Rrsource provider and its related services the the dependency injection container. public static void AddDataSourceResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddDataSourceResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.DataSource resource provider. public static void AddDataSourceResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddDataSourceResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.DataSource resource provider. public static void AddDataSourceResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddDownstreamAPIService(IHostApplicationBuilder, string) Register the IDownstreamAPIService implementation for a named API service with the dependency injection container. public static void AddDownstreamAPIService(this IHostApplicationBuilder builder, string apiServiceName) Parameters builder IHostApplicationBuilder The host application builder. apiServiceName string The name of the API service whose implementation is being registered. AddGatewayCore(IHostApplicationBuilder) Adds the core Gateway service the the dependency injection container. public static void AddGatewayCore(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddGatewayGenericExceptionHandling(IHostApplicationBuilder) Adds the Gateway general exception handler to the dependency injection container. public static void AddGatewayGenericExceptionHandling(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddGroupMembership(IHostApplicationBuilder) Add group membership services to dependency injection container. public static void AddGroupMembership(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddHttpClientFactoryService(IServiceCollection) Register the HttpClientFactoryService with the dependency injection container. public static void AddHttpClientFactoryService(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddHttpClientFactoryService(IHostApplicationBuilder) Register the HttpClientFactoryService with the dependency injection container. public static void AddHttpClientFactoryService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddInstanceProperties(IServiceCollection, IConfigurationManager) Register instance settings mapped to configuration. public static void AddInstanceProperties(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection Application builder service collection. configuration IConfigurationManager The IConfigurationManager providing access to configuration. AddLLMOrchestrationServices(IHostApplicationBuilder) Adds all internal LLM orchestration services and the LLM orchestration service manager to the dependency injection container. public static void AddLLMOrchestrationServices(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder AddManagementClient(IServiceCollection, string, TokenCredential, string, APIClientSettings?) Add the Management Client and its related dependencies to the dependency injection container. public static void AddManagementClient(this IServiceCollection services, string managementUri, TokenCredential credential, string instanceId, APIClientSettings? options = null) Parameters services IServiceCollection The IServiceCollection this method extends to add the Core Client. managementUri string The base URI of the Management API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. AddOpenTelemetry(IHostApplicationBuilder, string, string) Add OpenTelemetry the the dependency injection container. public static void AddOpenTelemetry(this IHostApplicationBuilder builder, string connectionStringConfigurationKey, string serviceName) Parameters builder IHostApplicationBuilder The host application builder. connectionStringConfigurationKey string The configuration key for the OpenTelemetry connection string. serviceName string The name of the service. AddOrchestrationService(IHostApplicationBuilder) Adds the Orchestration service to the dependency injection container. public static void AddOrchestrationService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddPipelineExecution(IHostApplicationBuilder) Add pipeline execution and related services the the dependency injection container. public static void AddPipelineExecution(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddPromptResourceProvider(IHostApplicationBuilder) Register the handler as a hosted service, passing the step name to the handler ctor public static void AddPromptResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddPromptResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.Prompt resource provider. public static void AddPromptResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddPromptResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Prompt resource provider. public static void AddPromptResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddSemanticKernelGenericExceptionHandling(IHostApplicationBuilder) Adds the Semantic Kernel general exception handler to the dependency injection container. public static void AddSemanticKernelGenericExceptionHandling(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddSemanticKernelService(IHostApplicationBuilder) Add the Semantic Kernel service to the dependency injection container. public static void AddSemanticKernelService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddStateGenericExceptionHandling(IHostApplicationBuilder) Adds the State general exception handler to the dependency injection container. public static void AddStateGenericExceptionHandling(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddStateService(IHostApplicationBuilder) Adds the core Gateway service the the dependency injection container. public static void AddStateService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddVectorizationResourceProvider(IHostApplicationBuilder) Register the handler as a hosted service, passing the step name to the handler ctor. public static void AddVectorizationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddVectorizationResourceProviderStorage(IServiceCollection, IConfigurationManager) Add the named IStorageService implementation for the FoundationaLLM.Vectorization resource provider. public static void AddVectorizationResourceProviderStorage(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddVectorizationResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Vectorization resource provider. public static void AddVectorizationResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "keywords": "Class CompletionsController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Wrapper for Gatekeeper service. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper API orchestration controller. Constructors CompletionsController(IGatekeeperService) Wrapper for Gatekeeper service. public CompletionsController(IGatekeeperService gatekeeperService) Parameters gatekeeperService IGatekeeperService Remarks Constructor for the Gatekeeper API orchestration controller. Methods GetCompletion(string, CompletionRequest) Gets a completion from the Gatekeeper service. [HttpPost(\"completions\")] public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Gatekeeper service. [HttpGet(\"async-completions/{operationId}/result\")] public Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a completion response GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get(string) Returns the status of the Gatekeeper API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get(string instanceId) Parameters instanceId string Returns IActionResult Options() Returns the allowed HTTP methods for the Gatekeeper API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.API.Controllers Classes CompletionsController Wrapper for Gatekeeper service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Gatekeeper.API Assembly FoundationaLLM.Gatekeeper.API.dll Program class for the Gatekeeper API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for Gatekeeper API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.API Namespaces FoundationaLLM.Gatekeeper.API.Controllers Classes Program Program class for the Gatekeeper API."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html",
    "title": "Interface IContentSafetyService | FoundationaLLM",
    "keywords": "Interface IContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling a content safety service. public interface IContentSafetyService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason. DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IEnkryptGuardrailsService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IEnkryptGuardrailsService.html",
    "title": "Interface IEnkryptGuardrailsService | FoundationaLLM",
    "keywords": "Interface IEnkryptGuardrailsService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling the Enkrypt Guardrails service. public interface IEnkryptGuardrailsService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html",
    "title": "Interface IGatekeeperIntegrationAPIService | FoundationaLLM",
    "keywords": "Interface IGatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper Integration API. public interface IGatekeeperIntegrationAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html",
    "title": "Interface IGatekeeperService | FoundationaLLM",
    "keywords": "Interface IGatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for the Gatekeeper service. public interface IGatekeeperService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(string, CompletionRequest) Gets a completion from the Gatekeeper service. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Gatekeeper service. Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a CompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId to retrieve the status for. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.ILakeraGuardService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.ILakeraGuardService.html",
    "title": "Interface ILakeraGuardService | FoundationaLLM",
    "keywords": "Interface ILakeraGuardService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling the Lakera Guard service. public interface ILakeraGuardService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Interfaces IContentSafetyService Interface for calling a content safety service. IEnkryptGuardrailsService Interface for calling the Enkrypt Guardrails service. IGatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper Integration API. IGatekeeperService Interface for the Gatekeeper service. ILakeraGuardService Interface for calling the Lakera Guard service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html",
    "title": "Class AzureContentSafetySettings | FoundationaLLM",
    "keywords": "Class AzureContentSafetySettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Azure Content Safety service. public record AzureContentSafetySettings : IEquatable<AzureContentSafetySettings> Inheritance object AzureContentSafetySettings Implements IEquatable<AzureContentSafetySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties HateSeverity The threshold for filtering the contents of a text, based on the \"Hate\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int HateSeverity { get; init; } Property Value int SelfHarmSeverity The threshold for filtering the contents of a text, based on the \"Self-Harm\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SelfHarmSeverity { get; init; } Property Value int SexualSeverity The threshold for filtering the contents of a text, based on the \"Sexual\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SexualSeverity { get; init; } Property Value int ViolenceSeverity The threshold for filtering the contents of a text, based on the \"Violence\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int ViolenceSeverity { get; init; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.EnkryptGuardrailsServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.EnkryptGuardrailsServiceSettings.html",
    "title": "Class EnkryptGuardrailsServiceSettings | FoundationaLLM",
    "keywords": "Class EnkryptGuardrailsServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Enkrypt Guardrails service. public record EnkryptGuardrailsServiceSettings : IEquatable<EnkryptGuardrailsServiceSettings> Inheritance object EnkryptGuardrailsServiceSettings Implements IEquatable<EnkryptGuardrailsServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html",
    "title": "Class GatekeeperServiceSettings | FoundationaLLM",
    "keywords": "Class GatekeeperServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Gatekeeper service. public record GatekeeperServiceSettings : IEquatable<GatekeeperServiceSettings> Inheritance object GatekeeperServiceSettings Implements IEquatable<GatekeeperServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EnableAzureContentSafety Flag for enabling or disabling the Azure Content Safety feature. public required bool EnableAzureContentSafety { get; set; } Property Value bool EnableAzureContentSafetyPromptShield Flag for enabling or disabling the Azure Content Safety Prompt Shields. public required bool EnableAzureContentSafetyPromptShield { get; set; } Property Value bool EnableEnkryptGuardrails Flag for enabling or disabling the Enkrypt Guardrails feature. public required bool EnableEnkryptGuardrails { get; set; } Property Value bool EnableLakeraGuard Flag for enabling or disabling the Lakera Guard feature. public required bool EnableLakeraGuard { get; set; } Property Value bool EnableMicrosoftPresidio Flag for enabling or disabling the Microsoft Presidio feature. public required bool EnableMicrosoftPresidio { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.LakeraGuardServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.LakeraGuardServiceSettings.html",
    "title": "Class LakeraGuardServiceSettings | FoundationaLLM",
    "keywords": "Class LakeraGuardServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Lakera Guard service. public record LakeraGuardServiceSettings : IEquatable<LakeraGuardServiceSettings> Inheritance object LakeraGuardServiceSettings Implements IEquatable<LakeraGuardServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Classes AzureContentSafetySettings Provides configuration options for the Azure Content Safety service. EnkryptGuardrailsServiceSettings Provides configuration options for the Enkrypt Guardrails service. GatekeeperServiceSettings Provides configuration options for the Gatekeeper service. LakeraGuardServiceSettings Provides configuration options for the Lakera Guard service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html",
    "title": "Class AnalyzeTextFilterResult | FoundationaLLM",
    "keywords": "Class AnalyzeTextFilterResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Content filter text analysis restult. public class AnalyzeTextFilterResult Inheritance object AnalyzeTextFilterResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Reason The reason why the content was considered to be unsafe. public required string Reason { get; set; } Property Value string Safe A flag representing if the content is safe or not. public bool Safe { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextResult.html",
    "title": "Class AnalyzeTextResult | FoundationaLLM",
    "keywords": "Class AnalyzeTextResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Text analysis results. public class AnalyzeTextResult Inheritance object AnalyzeTextResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CategoriesAnalysis Analysis result for categories. [JsonPropertyName(\"categoriesAnalysis\")] public required List<TextCategoryResult> CategoriesAnalysis { get; set; } Property Value List<TextCategoryResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldDetails.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldDetails.html",
    "title": "Class PromptShieldDetails | FoundationaLLM",
    "keywords": "Class PromptShieldDetails Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Contains analysis results for the user prompt. public class PromptShieldDetails Inheritance object PromptShieldDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AttackDetected Indicates whether a User Prompt attack (for example, malicious input, security threat) has been detected in the user prompt. [JsonPropertyName(\"attackDetected\")] public bool AttackDetected { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldResult.html",
    "title": "Class PromptShieldResult | FoundationaLLM",
    "keywords": "Class PromptShieldResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Prompt shield result. public class PromptShieldResult Inheritance object PromptShieldResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DocumentsAnalysis Contains a list of analysis results for each document provided. [JsonPropertyName(\"documentsAnalysis\")] public required List<PromptShieldDetails> DocumentsAnalysis { get; set; } Property Value List<PromptShieldDetails> UserPromptAnalysis Contains analysis results for the user prompt. [JsonPropertyName(\"userPromptAnalysis\")] public required PromptShieldDetails UserPromptAnalysis { get; set; } Property Value PromptShieldDetails"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategory.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategory.html",
    "title": "Class TextCategory | FoundationaLLM",
    "keywords": "Class TextCategory Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Text category constants. public static class TextCategory Inheritance object TextCategory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Hate Hate. public const string Hate = \"Hate\" Field Value string SelfHarm SelfHarm. public const string SelfHarm = \"SelfHarm\" Field Value string Sexual Sexual. public const string Sexual = \"Sexual\" Field Value string Violence Violence. public const string Violence = \"Violence\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategoryResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategoryResult.html",
    "title": "Class TextCategoryResult | FoundationaLLM",
    "keywords": "Class TextCategoryResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Text category results. public class TextCategoryResult Inheritance object TextCategoryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category The text analysis category. [JsonPropertyName(\"category\")] public required string Category { get; set; } Property Value string Severity The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’ or ‘EightSeverity Levels’, and the output value can be 0, 2, 4, 6 or 0, 1, 2, 3, 4, 5, 6, or 7. [JsonPropertyName(\"severity\")] public int? Severity { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Classes AnalyzeTextFilterResult Content filter text analysis restult. AnalyzeTextResult Text analysis results. PromptShieldDetails Contains analysis results for the user prompt. PromptShieldResult Prompt shield result. TextCategory Text category constants. TextCategoryResult Text category results."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectDetails.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectDetails.html",
    "title": "Class DetectDetails | FoundationaLLM",
    "keywords": "Class DetectDetails Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Detection details for each flag. public class DetectDetails Inheritance object DetectDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InjectionAttack Prompt injection or jailbreak confidence levels. [JsonPropertyName(\"injection_attack\")] public InjectionAttack? InjectionAttack { get; set; } Property Value InjectionAttack"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectResult.html",
    "title": "Class DetectResult | FoundationaLLM",
    "keywords": "Class DetectResult Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Recognizes patterns that may indicate an prompt injection attack or jailbreak attempt protecting the system from malicious inputs. public class DetectResult Inheritance object DetectResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Details Detection details. [JsonPropertyName(\"details\")] public required DetectDetails Details { get; set; } Property Value DetectDetails Summary Detection summary. [JsonPropertyName(\"summary\")] public required DetectSummary Summary { get; set; } Property Value DetectSummary"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectSummary.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectSummary.html",
    "title": "Class DetectSummary | FoundationaLLM",
    "keywords": "Class DetectSummary Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Detection summary that contains flags for each detector. public class DetectSummary Inheritance object DetectSummary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InjectionAttack The detector returns a binary value (0 for benign, 1 for attack). [JsonPropertyName(\"injection_attack\")] public int? InjectionAttack { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.InjectionAttack.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.InjectionAttack.html",
    "title": "Class InjectionAttack | FoundationaLLM",
    "keywords": "Class InjectionAttack Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Prompt injection or jailbreak confidence levels. public class InjectionAttack Inheritance object InjectionAttack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Attack Confidence level for attack. [JsonPropertyName(\"attack\")] public double Attack { get; set; } Property Value double Safe Confidence level for safe. [JsonPropertyName(\"safe\")] public double Safe { get; set; } Property Value double"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Classes DetectDetails Detection details for each flag. DetectResult Recognizes patterns that may indicate an prompt injection attack or jailbreak attempt protecting the system from malicious inputs. DetectSummary Detection summary that contains flags for each detector. InjectionAttack Prompt injection or jailbreak confidence levels."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html",
    "title": "Class AnalyzeRequest | FoundationaLLM",
    "keywords": "Class AnalyzeRequest Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis request. public class AnalyzeRequest Inheritance object AnalyzeRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Anonymize A flag used to tell if PII found by analysis should be anonymized. [JsonPropertyName(\"anonymize\")] public required bool Anonymize { get; set; } Property Value bool Content The text to be analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Language The language used to detect PII. [JsonPropertyName(\"language\")] public string? Language { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html",
    "title": "Class AnalyzeResponse | FoundationaLLM",
    "keywords": "Class AnalyzeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis response. public class AnalyzeResponse Inheritance object AnalyzeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Results A list of PII (personally identifiable information) entities identified in the analyzed text. [JsonPropertyName(\"results\")] public required List<PIIResult> Results { get; set; } Property Value List<PIIResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html",
    "title": "Class AnonymizeResponse | FoundationaLLM",
    "keywords": "Class AnonymizeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text anonymize response. public class AnonymizeResponse Inheritance object AnonymizeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Results A list of anonymized PII (personally identifiable information) entities identified in the analyzed text. [JsonPropertyName(\"results\")] public required List<PIIResultAnonymized> Results { get; set; } Property Value List<PIIResultAnonymized>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html",
    "title": "Class PIIResult | FoundationaLLM",
    "keywords": "Class PIIResult Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the PII (personally identifiable information) results. public class PIIResult Inheritance object PIIResult Derived PIIResultAnonymized Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EndIndex The end index where a PII entity was detected. [JsonPropertyName(\"end_index\")] public required int EndIndex { get; set; } Property Value int EntityType The type of personally identifiable information (i.e. Person, Location, Date). [JsonPropertyName(\"entity_type\")] public required string EntityType { get; set; } Property Value string StartIndex The start index where a PII was detected. [JsonPropertyName(\"start_index\")] public required int StartIndex { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html",
    "title": "Class PIIResultAnonymized | FoundationaLLM",
    "keywords": "Class PIIResultAnonymized Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the anonymized PII (personally identifiable information) results. public class PIIResultAnonymized : PIIResult Inheritance object PIIResult PIIResultAnonymized Inherited Members PIIResult.EntityType PIIResult.StartIndex PIIResult.EndIndex object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AnonymizedText The anonymized text to be used instead of the original text. [JsonPropertyName(\"anonymized_text\")] public required string AnonymizedText { get; set; } Property Value string Operator The operator needed to anonymize the original text. [JsonPropertyName(\"operator\")] public required string Operator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Classes AnalyzeRequest Encapsulates a text analysis request. AnalyzeResponse Encapsulates a text analysis response. AnonymizeResponse Encapsulates a text anonymize response. PIIResult Encapsulates the PII (personally identifiable information) results. PIIResultAnonymized Encapsulates the anonymized PII (personally identifiable information) results."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.AnalyzePromptInjectionResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.AnalyzePromptInjectionResult.html",
    "title": "Class AnalyzePromptInjectionResult | FoundationaLLM",
    "keywords": "Class AnalyzePromptInjectionResult Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard Assembly FoundationaLLM.Gatekeeper.Core.dll Prompt injection result. public class AnalyzePromptInjectionResult Inheritance object AnalyzePromptInjectionResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Model The model identifier string of the model used for analysis. [JsonPropertyName(\"model\")] public string? Model { get; set; } Property Value string Results A list of results with an object containing each category that the prompt injection endpoint supports. [JsonPropertyName(\"results\")] public required List<PromptInjectionResult> Results { get; set; } Property Value List<PromptInjectionResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.PromptInjectionResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.PromptInjectionResult.html",
    "title": "Class PromptInjectionResult | FoundationaLLM",
    "keywords": "Class PromptInjectionResult Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard Assembly FoundationaLLM.Gatekeeper.Core.dll Detailed prompt injection result. public class PromptInjectionResult Inheritance object PromptInjectionResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Categories A dictionary of detectors that the endpoint analyzed with a boolean decision of whether the input contains the analyzed category. [JsonPropertyName(\"categories\")] public required Dictionary<string, bool> Categories { get; set; } Property Value Dictionary<string, bool> CategoryScores A dictionary of detectors that the endpoint analyzed with a floating point confidence score between 0 and 1. [JsonPropertyName(\"category_scores\")] public required Dictionary<string, decimal> CategoryScores { get; set; } Property Value Dictionary<string, decimal> Flagged A boolean indicating whether any of the endpoint's categories triggered a positive result. [JsonPropertyName(\"flagged\")] public required bool Flagged { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard Classes AnalyzePromptInjectionResult Prompt injection result. PromptInjectionResult Detailed prompt injection result."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Models Namespaces FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions FoundationaLLM.Gatekeeper.Core.Models.ContentSafety FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails FoundationaLLM.Gatekeeper.Core.Models.Integration FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html",
    "title": "Class AzureContentSafetyService | FoundationaLLM",
    "keywords": "Class AzureContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IContentSafetyService interface. public class AzureContentSafetyService : IContentSafetyService Inheritance object AzureContentSafetyService Implements IContentSafetyService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureContentSafetyService(ICallContext, IHttpClientFactoryService, IOptions<AzureContentSafetySettings>, ILogger<AzureContentSafetyService>) Constructor for the Azure Content Safety service. public AzureContentSafetyService(ICallContext callContext, IHttpClientFactoryService httpClientFactoryService, IOptions<AzureContentSafetySettings> options, ILogger<AzureContentSafetyService> logger) Parameters callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. options IOptions<AzureContentSafetySettings> The configuration options for the Azure Content Safety service. logger ILogger<AzureContentSafetyService> The logger for the Azure Content Safety service. Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. public Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason. DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. public Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.EnkryptGuardrailsService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.EnkryptGuardrailsService.html",
    "title": "Class EnkryptGuardrailsService | FoundationaLLM",
    "keywords": "Class EnkryptGuardrailsService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IEnkryptGuardrailsService interface. public class EnkryptGuardrailsService : IEnkryptGuardrailsService Inheritance object EnkryptGuardrailsService Implements IEnkryptGuardrailsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EnkryptGuardrailsService(ICallContext, IHttpClientFactoryService, IOptions<EnkryptGuardrailsServiceSettings>, ILogger<EnkryptGuardrailsService>) Constructor for the Azure Content Safety service. public EnkryptGuardrailsService(ICallContext callContext, IHttpClientFactoryService httpClientFactoryService, IOptions<EnkryptGuardrailsServiceSettings> options, ILogger<EnkryptGuardrailsService> logger) Parameters callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. options IOptions<EnkryptGuardrailsServiceSettings> The configuration options for the Azure Content Safety service. logger ILogger<EnkryptGuardrailsService> The logger for the Azure Content Safety service. Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. public Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html",
    "title": "Class GatekeeperIntegrationAPIService | FoundationaLLM",
    "keywords": "Class GatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperIntegrationAPIService : IGatekeeperIntegrationAPIService Inheritance object GatekeeperIntegrationAPIService Implements IGatekeeperIntegrationAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperIntegrationAPIService(ICallContext, IHttpClientFactoryService) Initializes a new instance of the GatekeeperIntegrationAPIService class. public GatekeeperIntegrationAPIService(ICallContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gatekeeper Integration API requests. Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. public Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. public Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html",
    "title": "Class GatekeeperService | FoundationaLLM",
    "keywords": "Class GatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IGatekeeperService interface. public class GatekeeperService : IGatekeeperService Inheritance object GatekeeperService Implements IGatekeeperService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper service. Constructors GatekeeperService(IDownstreamAPIService, IContentSafetyService, ILakeraGuardService, IEnkryptGuardrailsService, IGatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings>) Implements the IGatekeeperService interface. public GatekeeperService(IDownstreamAPIService orchestrationAPIService, IContentSafetyService contentSafetyService, ILakeraGuardService lakeraGuardService, IEnkryptGuardrailsService enkryptGuardrailsService, IGatekeeperIntegrationAPIService gatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings> gatekeeperServiceSettings) Parameters orchestrationAPIService IDownstreamAPIService The Orchestration API client. contentSafetyService IContentSafetyService The user prompt Content Safety service. lakeraGuardService ILakeraGuardService The Lakera Guard service. enkryptGuardrailsService IEnkryptGuardrailsService The Enkrypt Guardrails service. gatekeeperIntegrationAPIService IGatekeeperIntegrationAPIService The Gatekeeper Integration API client. gatekeeperServiceSettings IOptions<GatekeeperServiceSettings> The configuration options for the Gatekeeper service. Remarks Constructor for the Gatekeeper service. Methods GetCompletion(string, CompletionRequest) Gets a completion from the Gatekeeper service. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Gatekeeper service. public Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a CompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId to retrieve the status for. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.LakeraGuardService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.LakeraGuardService.html",
    "title": "Class LakeraGuardService | FoundationaLLM",
    "keywords": "Class LakeraGuardService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the ILakeraGuardService interface. public class LakeraGuardService : ILakeraGuardService Inheritance object LakeraGuardService Implements ILakeraGuardService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LakeraGuardService(ICallContext, IHttpClientFactoryService, IOptions<LakeraGuardServiceSettings>, ILogger<LakeraGuardService>) Constructor for the Azure Content Safety service. public LakeraGuardService(ICallContext callContext, IHttpClientFactoryService httpClientFactoryService, IOptions<LakeraGuardServiceSettings> options, ILogger<LakeraGuardService> logger) Parameters callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. options IOptions<LakeraGuardServiceSettings> The configuration options for the Azure Content Safety service. logger ILogger<LakeraGuardService> The logger for the Azure Content Safety service. Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. public Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core.Services Classes AzureContentSafetyService Implements the IContentSafetyService interface. EnkryptGuardrailsService Implements the IEnkryptGuardrailsService interface. GatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper API. GatekeeperService Implements the IGatekeeperService interface. LakeraGuardService Implements the ILakeraGuardService interface."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper.Core Namespaces FoundationaLLM.Gatekeeper.Core.Interfaces FoundationaLLM.Gatekeeper.Core.Models FoundationaLLM.Gatekeeper.Core.Services"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.html",
    "title": "Namespace FoundationaLLM.Gatekeeper | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gatekeeper Namespaces FoundationaLLM.Gatekeeper.API FoundationaLLM.Gatekeeper.Core"
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.AgentCapabilitiesController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.AgentCapabilitiesController.html",
    "title": "Class AgentCapabilitiesController | FoundationaLLM",
    "keywords": "Class AgentCapabilitiesController Namespace FoundationaLLM.Gateway.API.Controllers Assembly FoundationaLLM.Gateway.API.dll Methods for managing agent capabilities. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class AgentCapabilitiesController Inheritance object AgentCapabilitiesController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentCapabilitiesController(IGatewayCore, ICallContext) Methods for managing agent capabilities. public AgentCapabilitiesController(IGatewayCore gatewayCore, ICallContext callContext) Parameters gatewayCore IGatewayCore The IGatewayCore that provides LLM gateway services. callContext ICallContext The ICallContext call context of the request being handled. Methods CreateAgentCapability(string, AgentCapabilityRequest) Creates an agent capability. [HttpPost] public Task<IActionResult> CreateAgentCapability(string instanceId, AgentCapabilityRequest agentCapabilityRequest) Parameters instanceId string The FoundationaLLM instance id. agentCapabilityRequest AgentCapabilityRequest The AgentCapabilityRequest object with the deails of the requested capability. Returns Task<IActionResult> A dictionary of output values. Remarks The supported categories are: OpenAI.Assistants (the names of the keys for the output dictionary are defined in OpenAIAgentCapabilityParameterNames)"
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.EmbeddingsController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.EmbeddingsController.html",
    "title": "Class EmbeddingsController | FoundationaLLM",
    "keywords": "Class EmbeddingsController Namespace FoundationaLLM.Gateway.API.Controllers Assembly FoundationaLLM.Gateway.API.dll Methods for managing embedding requests. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class EmbeddingsController Inheritance object EmbeddingsController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingsController(IGatewayCore, ICallContext) Methods for managing embedding requests. public EmbeddingsController(IGatewayCore gatewayCore, ICallContext callContext) Parameters gatewayCore IGatewayCore The IGatewayCore that provides LLM gateway services. callContext ICallContext The ICallContext call context of the request being handled. Methods GetEmbeddingOperationResult(string, string) Retrieves the outcome of a text embedding operation. [HttpGet] public Task<IActionResult> GetEmbeddingOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text embedding operation. Returns Task<IActionResult> A TextEmbeddingResult object with the outcome of the operation. StartEmbeddingOperation(string, TextEmbeddingRequest) Handles an incoming text embedding request by starting a new embedding operation. [HttpPost] public Task<IActionResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest) Parameters instanceId string The FoundationaLLM instance id. embeddingRequest TextEmbeddingRequest The TextEmbeddingRequest object with the details of the embedding request. Returns Task<IActionResult> A TextEmbeddingResult object with the outcome of the operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Gateway.API.Controllers Assembly FoundationaLLM.Gateway.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Gateway.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway.API.Controllers Classes AgentCapabilitiesController Methods for managing agent capabilities. EmbeddingsController Methods for managing embedding requests. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Gateway.AdapterAPI.Controllers Assembly FoundationaLLM.Gateway.AdapterAPI.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.html",
    "title": "Namespace FoundationaLLM.Gateway.AdapterAPI.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway.AdapterAPI.Controllers Classes StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gateway.Exceptions.GatewayExceptionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Exceptions.GatewayExceptionHandler.html",
    "title": "Class GatewayExceptionHandler | FoundationaLLM",
    "keywords": "Class GatewayExceptionHandler Namespace FoundationaLLM.Gateway.Exceptions Assembly FoundationaLLM.Gateway.dll Implements a global exception handler for the Gateway API. public class GatewayExceptionHandler : IExceptionHandler Inheritance object GatewayExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayExceptionHandler(ILogger<GatewayExceptionHandler>) Implements a global exception handler for the Gateway API. public GatewayExceptionHandler(ILogger<GatewayExceptionHandler> logger) Parameters logger ILogger<GatewayExceptionHandler> The ILogger used for logging. Methods TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters httpContext HttpContext The HttpContext for the request. exception Exception The unhandled exception. cancellationToken CancellationToken The cancellation token. Returns ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false."
  },
  "api/dotnet/FoundationaLLM.Gateway.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Exceptions.html",
    "title": "Namespace FoundationaLLM.Gateway.Exceptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway.Exceptions Classes GatewayExceptionHandler Implements a global exception handler for the Gateway API."
  },
  "api/dotnet/FoundationaLLM.Gateway.Interfaces.IGatewayCore.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Interfaces.IGatewayCore.html",
    "title": "Interface IGatewayCore | FoundationaLLM",
    "keywords": "Interface IGatewayCore Namespace FoundationaLLM.Gateway.Interfaces Assembly FoundationaLLM.Gateway.dll Defines the interface of the FoundationaLLM Gateway core. public interface IGatewayCore Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateAgentCapability(string, string, string, UnifiedUserIdentity, Dictionary<string, object>?) Creates a new LLM-based agent capability. Task<Dictionary<string, object>> CreateAgentCapability(string instanceId, string capabilityCategory, string capabilityName, UnifiedUserIdentity userIdentity, Dictionary<string, object>? parameters = null) Parameters instanceId string The FoundationaLLM instance id. capabilityCategory string The category of the capability. capabilityName string The name of the capability to be created. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. parameters Dictionary<string, object> A dictionary of parameter values used to create the capability. Returns Task<Dictionary<string, object>> A dictionary of output values. Remarks The supported categories are: OpenAI.Assistants (the names of the keys for the parameters and output dictionaries are defined in OpenAIAgentCapabilityParameterNames) ExecuteAsync(CancellationToken) Executes the Gateway service until cancellation is signaled. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task GetEmbeddingOperationResult(string, string, UnifiedUserIdentity) Retrieves the outcome of an embedding operation. Task<TextEmbeddingResult> GetEmbeddingOperationResult(string instanceId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object with the outcome of the operation. StartAsync(CancellationToken) Starts the Gateway service, allowing it to initialize. Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartEmbeddingOperation(string, TextEmbeddingRequest, UnifiedUserIdentity) Starts an embedding operation. Task<TextEmbeddingResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. embeddingRequest TextEmbeddingRequest The TextEmbeddingRequest object containing the details of the embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object with the outcome of the operation. StopAsync(CancellationToken) Stops the Gateway service, allowing it to cleanup. Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Gateway.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Interfaces.html",
    "title": "Namespace FoundationaLLM.Gateway.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway.Interfaces Interfaces IGatewayCore Defines the interface of the FoundationaLLM Gateway core."
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.GatewayCoreSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.GatewayCoreSettings.html",
    "title": "Class GatewayCoreSettings | FoundationaLLM",
    "keywords": "Class GatewayCoreSettings Namespace FoundationaLLM.Gateway.Models.Configuration Assembly FoundationaLLM.Gateway.dll Provides settings for the Gateway core service. public class GatewayCoreSettings Inheritance object GatewayCoreSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AzureOpenAIAccounts The semicolon separated list of Azure Open AI endpoints used by the Gateway core service. public required string AzureOpenAIAccounts { get; set; } Property Value string AzureOpenAIAssistantsFileSearchFileExtensions The comma-separated list file extensions that are supported by the Azure OpenAI Assistants file search tool. public required string AzureOpenAIAssistantsFileSearchFileExtensions { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Gateway.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway.Models.Configuration Classes GatewayCoreSettings Provides settings for the Gateway core service."
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.EmbeddingModelContext.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.EmbeddingModelContext.html",
    "title": "Class EmbeddingModelContext | FoundationaLLM",
    "keywords": "Class EmbeddingModelContext Namespace FoundationaLLM.Gateway.Models Assembly FoundationaLLM.Gateway.dll Provides context associated with an embedding model. public class EmbeddingModelContext Inheritance object EmbeddingModelContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingModelContext(ConcurrentDictionary<string, EmbeddingOperationContext>, ILogger<EmbeddingModelContext>) Provides context associated with an embedding model. public EmbeddingModelContext(ConcurrentDictionary<string, EmbeddingOperationContext> embeddingOperations, ILogger<EmbeddingModelContext> logger) Parameters embeddingOperations ConcurrentDictionary<string, EmbeddingOperationContext> The global dictionary of EmbeddingOperationContext objects indexed by operation identifier. logger ILogger<EmbeddingModelContext> The ILogger used for logging. Properties DeploymentContexts A list of EmbeddingModelDeploymentContext objects providing contexts for the available deployments for the model. public List<EmbeddingModelDeploymentContext> DeploymentContexts { get; set; } Property Value List<EmbeddingModelDeploymentContext> ModelName The name of the embedding model. public required string ModelName { get; set; } Property Value string Methods AddEmbeddingOperationContext(EmbeddingOperationContext) public void AddEmbeddingOperationContext(EmbeddingOperationContext embeddingOperationContext) Parameters embeddingOperationContext EmbeddingOperationContext ProcessOperations(CancellationToken) Processes embedding operations in a continuous loop. public Task ProcessOperations(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Notifies that the operation must be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.EmbeddingModelDeploymentContext.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.EmbeddingModelDeploymentContext.html",
    "title": "Class EmbeddingModelDeploymentContext | FoundationaLLM",
    "keywords": "Class EmbeddingModelDeploymentContext Namespace FoundationaLLM.Gateway.Models Assembly FoundationaLLM.Gateway.dll Provides context associated with an embedding model deployment. public class EmbeddingModelDeploymentContext Inheritance object EmbeddingModelDeploymentContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingModelDeploymentContext(AzureOpenAIAccountDeployment, ILoggerFactory) Provides context associated with an embedding model deployment. public EmbeddingModelDeploymentContext(AzureOpenAIAccountDeployment deployment, ILoggerFactory loggerFactory) Parameters deployment AzureOpenAIAccountDeployment The AzureOpenAIAccountDeployment object with the details of the model deployment. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. Properties HasInput public bool HasInput { get; } Property Value bool Methods GetEmbeddingsForInputTextChunks() public Task<TextEmbeddingResult> GetEmbeddingsForInputTextChunks() Returns Task<TextEmbeddingResult> TryAddInputTextChunk(TextChunk) public bool TryAddInputTextChunk(TextChunk textChunk) Parameters textChunk TextChunk Returns bool"
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.EmbeddingOperationContext.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.EmbeddingOperationContext.html",
    "title": "Class EmbeddingOperationContext | FoundationaLLM",
    "keywords": "Class EmbeddingOperationContext Namespace FoundationaLLM.Gateway.Models Assembly FoundationaLLM.Gateway.dll Maintains the context for an embedding operation. public class EmbeddingOperationContext Inheritance object EmbeddingOperationContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InputTextChunks The list of TextChunk objects which provide the input to the embedding operation. public required IList<TextChunk> InputTextChunks { get; set; } Property Value IList<TextChunk> Prioritized Indicates whether the requests associated with the context should be prioritized. Example: Synchronous vectorization and user prompt embedding for completions. public bool Prioritized { get; set; } Property Value bool Result The TextEmbeddingResult holding the result of the embedding operation. public required TextEmbeddingResult Result { get; set; } Property Value TextEmbeddingResult Methods SetComplete() Marks the embedding operation as complete. public void SetComplete() SetEmbeddings(IList<TextChunk>) Sets the embeddings for a specified set of position. If all positions have non-null embeddings, marks the operation as complete. public void SetEmbeddings(IList<TextChunk> textChunks) Parameters textChunks IList<TextChunk> A list of TextChunk objects containing positions and their associated embeddings. SetError(string) Sets a specified error message on the context of the embedding operation. public void SetError(string errorMessage) Parameters errorMessage string The error message to be set."
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.html",
    "title": "Namespace FoundationaLLM.Gateway.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway.Models Namespaces FoundationaLLM.Gateway.Models.Configuration Classes EmbeddingModelContext Provides context associated with an embedding model. EmbeddingModelDeploymentContext Provides context associated with an embedding model deployment. EmbeddingOperationContext Maintains the context for an embedding operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.AzureOpenAITextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.AzureOpenAITextEmbeddingService.html",
    "title": "Class AzureOpenAITextEmbeddingService | FoundationaLLM",
    "keywords": "Class AzureOpenAITextEmbeddingService Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Implementation of ITextEmbeddingService using Azure OpenAI. public class AzureOpenAITextEmbeddingService : ITextEmbeddingService Inheritance object AzureOpenAITextEmbeddingService Implements ITextEmbeddingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAITextEmbeddingService(string, ILogger<AzureOpenAITextEmbeddingService>) Initializes a new instance of the AzureOpenAITextEmbeddingService class. public AzureOpenAITextEmbeddingService(string accountEndpoint, ILogger<AzureOpenAITextEmbeddingService> logger) Parameters accountEndpoint string The endpoint of the Azure OpenAI service. logger ILogger<AzureOpenAITextEmbeddingService> Methods GetEmbeddingsAsync(IList<TextChunk>, string, bool) Initializes the text embedding operation. Depending on the implementation, this can be an atomic operation or a long-running one. public Task<TextEmbeddingResult> GetEmbeddingsAsync(IList<TextChunk> textChunks, string deploymentName, bool prioritized) Parameters textChunks IList<TextChunk> The list of text chunks which need to be embedded. deploymentName string The name of the model deployment to use for embedding. prioritized bool Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation. GetEmbeddingsAsync(string) Retrieves the result of a long-running text embedding operation. public Task<TextEmbeddingResult> GetEmbeddingsAsync(string operationId) Parameters operationId string The unique identifier of the long-running operation. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.GatewayCore.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.GatewayCore.html",
    "title": "Class GatewayCore | FoundationaLLM",
    "keywords": "Class GatewayCore Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Implements the FoundationaLLM Gateway service. public class GatewayCore : IGatewayCore Inheritance object GatewayCore Implements IGatewayCore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayCore(IAzureResourceManagerService, IOptions<GatewayCoreSettings>, IEnumerable<IResourceProviderService>, ILoggerFactory) Implements the FoundationaLLM Gateway service. public GatewayCore(IAzureResourceManagerService armService, IOptions<GatewayCoreSettings> options, IEnumerable<IResourceProviderService> resourceProviderServices, ILoggerFactory loggerFactory) Parameters armService IAzureResourceManagerService The IAzureResourceManagerService instance providing Azure Resource Manager services. options IOptions<GatewayCoreSettings> The options providing the GatewayCoreSettings object. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. Methods CreateAgentCapability(string, string, string, UnifiedUserIdentity, Dictionary<string, object>?) Creates a new LLM-based agent capability. public Task<Dictionary<string, object>> CreateAgentCapability(string instanceId, string capabilityCategory, string capabilityName, UnifiedUserIdentity userIdentity, Dictionary<string, object>? parameters = null) Parameters instanceId string The FoundationaLLM instance id. capabilityCategory string The category of the capability. capabilityName string The name of the capability to be created. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. parameters Dictionary<string, object> A dictionary of parameter values used to create the capability. Returns Task<Dictionary<string, object>> A dictionary of output values. Remarks The supported categories are: OpenAI.Assistants (the names of the keys for the parameters and output dictionaries are defined in OpenAIAgentCapabilityParameterNames) ExecuteAsync(CancellationToken) Executes the Gateway service until cancellation is signaled. public Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task GetEmbeddingOperationResult(string, string, UnifiedUserIdentity) Retrieves the outcome of an embedding operation. public Task<TextEmbeddingResult> GetEmbeddingOperationResult(string instanceId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object with the outcome of the operation. StartAsync(CancellationToken) Starts the Gateway service, allowing it to initialize. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartEmbeddingOperation(string, TextEmbeddingRequest, UnifiedUserIdentity) Starts an embedding operation. public Task<TextEmbeddingResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. embeddingRequest TextEmbeddingRequest The TextEmbeddingRequest object containing the details of the embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object with the outcome of the operation. StopAsync(CancellationToken) Stops the Gateway service, allowing it to cleanup. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.GatewayWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.GatewayWorker.html",
    "title": "Class GatewayWorker | FoundationaLLM",
    "keywords": "Class GatewayWorker Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Background worker used to execute the Gateway core. public class GatewayWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService GatewayWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayWorker(IGatewayCore, ILogger<GatewayWorker>) Background worker used to execute the Gateway core. public GatewayWorker(IGatewayCore gatewayService, ILogger<GatewayWorker> logger) Parameters gatewayService IGatewayCore The IGatewayCore providing the gateway functionalities. logger ILogger<GatewayWorker> The ILogger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.html",
    "title": "Namespace FoundationaLLM.Gateway.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway.Services Classes AzureOpenAITextEmbeddingService Implementation of ITextEmbeddingService using Azure OpenAI. GatewayCore Implements the FoundationaLLM Gateway service. GatewayWorker Background worker used to execute the Gateway core."
  },
  "api/dotnet/FoundationaLLM.Gateway.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.html",
    "title": "Namespace FoundationaLLM.Gateway | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Gateway Namespaces FoundationaLLM.Gateway.API.Controllers FoundationaLLM.Gateway.AdapterAPI.Controllers FoundationaLLM.Gateway.Exceptions FoundationaLLM.Gateway.Interfaces FoundationaLLM.Gateway.Models FoundationaLLM.Gateway.Services"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.IdentityManagementController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.IdentityManagementController.html",
    "title": "Class IdentityManagementController | FoundationaLLM",
    "keywords": "Class IdentityManagementController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides account retrieval methods. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/identity\")] public class IdentityManagementController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller IdentityManagementController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IdentityManagementController(ICallContext, IIdentityManagementService, ILogger<IdentityManagementController>) Provides account retrieval methods. public IdentityManagementController(ICallContext callContext, IIdentityManagementService identityManagementService, ILogger<IdentityManagementController> logger) Parameters callContext ICallContext The call context containing user identity details. identityManagementService IIdentityManagementService The IIdentityManagementService used for retrieving group account information. logger ILogger<IdentityManagementController> The ILogger used for logging. Methods GetGroup(string) Retrieves a specific group account by its identifier. [HttpGet(\"groups/{groupId}\", Name = \"GetGroup\")] public Task<IActionResult> GetGroup(string groupId) Parameters groupId string Returns Task<IActionResult> GetUser(string) Retrieves a specific user account by its identifier. [HttpGet(\"users/{userId}\", Name = \"GetUser\")] public Task<IActionResult> GetUser(string userId) Parameters userId string Returns Task<IActionResult> RetrieveGroups(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. [HttpPost(\"groups/retrieve\", Name = \"RetrieveGroups\")] public Task<IActionResult> RetrieveGroups(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IActionResult> RetrieveObjectsByIds(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. [HttpPost(\"objects/retrievebyids\", Name = \"RetrieveObjectsByIds\")] public Task<IActionResult> RetrieveObjectsByIds(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IActionResult> RetrieveUsers(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. [HttpPost(\"users/retrieve\", Name = \"RetrieveUsers\")] public Task<IActionResult> RetrieveUsers(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.ResourceController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.ResourceController.html",
    "title": "Class ResourceController | FoundationaLLM",
    "keywords": "Class ResourceController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods to manage resources. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/providers/{resourceProvider}\")] public class ResourceController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller ResourceController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceController(ICallContext, IEnumerable<IResourceProviderService>, ILogger<ResourceController>) Provides methods to manage resources. public ResourceController(ICallContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, ILogger<ResourceController> logger) Parameters callContext ICallContext The call context containing user identity details. resourceProviderServices IEnumerable<IResourceProviderService> The list of IResourceProviderService resource providers. logger ILogger<ResourceController> The ILogger used for logging. Methods DeleteResource(string, string, string) Deletes a resource. [HttpDelete(\"{*resourcePath}\", Name = \"DeleteResource\")] public Task<IActionResult> DeleteResource(string instanceId, string resourceProvider, string resourcePath) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<IActionResult> GetResources(string, string, string) Gets one or more resources. [HttpGet(\"{*resourcePath}\", Name = \"GetResources\")] public Task<IActionResult> GetResources(string instanceId, string resourceProvider, string resourcePath) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<IActionResult> UpsertResource(string, string, string, object) Creates or updates resources. [HttpPost(\"{*resourcePath}\", Name = \"UpsertResource\")] public Task<IActionResult> UpsertResource(string instanceId, string resourceProvider, string resourcePath, object serializedResource) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. serializedResource object The serialized resource to be created or updated. Returns Task<IActionResult> The ObjectId of the created or updated resource."
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods for checking the status of the service. [Authorize(Policy = \"DefaultPolicy\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus() Returns OK if the requester is authenticated and allowed to execute requests against this service. [HttpGet(\"auth\", Name = \"GetAuthStatus\")] public IActionResult GetAuthStatus() Returns IActionResult GetServiceStatus() Returns the status of the Core API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Management.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.API.Controllers Classes IdentityManagementController Provides account retrieval methods. ResourceController Provides methods to manage resources. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Management.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Management.API Assembly FoundationaLLM.Management.API.dll Main entry point for the Management API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Management API service configuration. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Management.API.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.html",
    "title": "Namespace FoundationaLLM.Management.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.API Namespaces FoundationaLLM.Management.API.Controllers Classes Program Main entry point for the Management API."
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.ICacheManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.ICacheManagementService.html",
    "title": "Interface ICacheManagementService | FoundationaLLM",
    "keywords": "Interface ICacheManagementService Namespace FoundationaLLM.Management.Interfaces Assembly FoundationaLLM.Management.dll Provides cache management functionality. public interface ICacheManagementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ClearAgentCache() Clears the agent cache from the OrchestrationService and AgentHubService. Task<bool> ClearAgentCache() Returns Task<bool> ClearDataSourceCache() Clears the agent cache from the OrchestrationService and DataSourceHubService. Task<bool> ClearDataSourceCache() Returns Task<bool> ClearPromptCache() Clears the agent cache from the OrchestrationService and DataSourceHubService. Task<bool> ClearPromptCache() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.IConfigurationManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.IConfigurationManagementService.html",
    "title": "Interface IConfigurationManagementService | FoundationaLLM",
    "keywords": "Interface IConfigurationManagementService Namespace FoundationaLLM.Management.Interfaces Assembly FoundationaLLM.Management.dll Provides methods for managing app configuration. public interface IConfigurationManagementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetBrandingConfigurationAsync() Retrieves the branding configuration from app configuration. Task<ClientBrandingConfiguration> GetBrandingConfigurationAsync() Returns Task<ClientBrandingConfiguration> SetBrandingConfiguration(ClientBrandingConfiguration) Sets the branding configuration in app configuration. Task SetBrandingConfiguration(ClientBrandingConfiguration brandingConfiguration) Parameters brandingConfiguration ClientBrandingConfiguration The branding configuration settings to apply. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Management.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Interfaces.html",
    "title": "Namespace FoundationaLLM.Management.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Interfaces Interfaces ICacheManagementService Provides cache management functionality. IConfigurationManagementService Provides methods for managing app configuration."
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.AppConfigurationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.AppConfigurationSettings.html",
    "title": "Class AppConfigurationSettings | FoundationaLLM",
    "keywords": "Class AppConfigurationSettings Namespace FoundationaLLM.Management.Models.Configuration Assembly FoundationaLLM.Management.dll Contains settings for the Azure App Configuration service. public record AppConfigurationSettings : IEquatable<AppConfigurationSettings> Inheritance object AppConfigurationSettings Implements IEquatable<AppConfigurationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The Azure App Configuration connection string. public required string ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.CosmosDbSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.CosmosDbSettings.html",
    "title": "Class CosmosDbSettings | FoundationaLLM",
    "keywords": "Class CosmosDbSettings Namespace FoundationaLLM.Management.Models.Configuration Assembly FoundationaLLM.Management.dll Stores the Azure Cosmos DB settings from the app configuration. public record CosmosDbSettings : IEquatable<CosmosDbSettings> Inheritance object CosmosDbSettings Implements IEquatable<CosmosDbSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Database The name of the Azure Cosmos DB database. public required string Database { get; init; } Property Value string EnableTracing Specifies whether to enable Azure Cosmos DB tracing. Disabling tracing reduces the number of logs generated by the Azure Cosmos DB SDK. public bool EnableTracing { get; init; } Property Value bool Endpoint The Azure Cosmos DB endpoint URL. public required string Endpoint { get; init; } Property Value string Key The Azure Cosmos DB key. public required string Key { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Management.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Management.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Management.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management.Models.Configuration Classes AppConfigurationSettings Contains settings for the Azure App Configuration service. CosmosDbSettings Stores the Azure Cosmos DB settings from the app configuration."
  },
  "api/dotnet/FoundationaLLM.Management.html": {
    "href": "api/dotnet/FoundationaLLM.Management.html",
    "title": "Namespace FoundationaLLM.Management | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Management Namespaces FoundationaLLM.Management.API FoundationaLLM.Management.Interfaces FoundationaLLM.Management.Models.Configuration"
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "keywords": "Class CompletionsController Namespace FoundationaLLM.Orchestration.API.Controllers Assembly FoundationaLLM.Orchestration.API.dll CompletionsController class [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Orchestration orchestration controller Constructors CompletionsController(IOrchestrationService, ILogger<CompletionsController>) CompletionsController class public CompletionsController(IOrchestrationService orchestrationService, ILogger<CompletionsController> logger) Parameters orchestrationService IOrchestrationService logger ILogger<CompletionsController> Remarks Constructor for the Orchestration orchestration controller Methods GetCompletion(string, CompletionRequest) Retrieves a completion from an orchestration service [HttpPost(\"completions\")] public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. [HttpGet(\"async-completions/{operationId}/result\")] public Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a completion response GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Orchestration.API.Controllers Assembly FoundationaLLM.Orchestration.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StatusController(IOrchestrationService) Provides methods for checking the status of the service. public StatusController(IOrchestrationService orchestrationService) Parameters orchestrationService IOrchestrationService The IOrchestrationService that provides orchestration capabilities. Methods Get(string) Returns the status of the Orchestration API service. [HttpGet(Name = \"GetServiceStatus\")] public Task<IActionResult> Get(string instanceId) Parameters instanceId string Returns Task<IActionResult> Options() Returns the allowed HTTP methods for the Orchestration API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Orchestration.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.API.Controllers Classes CompletionsController CompletionsController class StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.Orchestration.API Assembly FoundationaLLM.Orchestration.API.dll Program class for the Orchestration API public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Orchestration API public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.html",
    "title": "Namespace FoundationaLLM.Orchestration.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.API Namespaces FoundationaLLM.Orchestration.API.Controllers Classes Program Program class for the Orchestration API"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureAIDirectService.html",
    "title": "Interface IAzureAIDirectService | FoundationaLLM",
    "keywords": "Interface IAzureAIDirectService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for going directly to Azure AI for orchestration. public interface IAzureAIDirectService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureOpenAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureOpenAIDirectService.html",
    "title": "Interface IAzureOpenAIDirectService | FoundationaLLM",
    "keywords": "Interface IAzureOpenAIDirectService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for going directly to Azure OpenAI for orchestration. public interface IAzureOpenAIDirectService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationService.html",
    "title": "Interface ILLMOrchestrationService | FoundationaLLM",
    "keywords": "Interface ILLMOrchestrationService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll LLM Orchestration Service interface public interface ILLMOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the LLM orchestration service. string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetStatus(string) Get the status of the orchestration service. Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationServiceManager.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationServiceManager.html",
    "title": "Interface ILLMOrchestrationServiceManager | FoundationaLLM",
    "keywords": "Interface ILLMOrchestrationServiceManager Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Defines the interface for the LLM Orchestration Service Manager. public interface ILLMOrchestrationServiceManager Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAggregateStatus(string, IServiceProvider) Gets an aggregate initialization status based on the initialization status of each subordinate orchestration service. Task<List<ServiceStatusInfo>> GetAggregateStatus(string instanceId, IServiceProvider serviceProvider) Parameters instanceId string The FoundationaLLM instance ID. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. Returns Task<List<ServiceStatusInfo>> GetService(string, string, IServiceProvider, ICallContext) Gets an ILLMOrchestrationService instance based on the service name. ILLMOrchestrationService GetService(string instanceId, string serviceName, IServiceProvider serviceProvider, ICallContext callContext) Parameters instanceId string The FoundationaLLM instance ID. serviceName string The name of the ILLMOrchestrationService to be retrieved. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. callContext ICallContext The ICallContext call context of the request being handled. Returns ILLMOrchestrationService"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILangChainService.html",
    "title": "Interface ILangChainService | FoundationaLLM",
    "keywords": "Interface ILangChainService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for the LangChain Orchestration Service public interface ILangChainService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IOrchestrationService.html",
    "title": "Interface IOrchestrationService | FoundationaLLM",
    "keywords": "Interface IOrchestrationService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for the Orchestration Service public interface IOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(string, CompletionRequest) Retrieve a completion from the configured orchestration service. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a CompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the aggredated status of all orchestration services. Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance id. Returns Task<ServiceStatusInfo> The status of the orchestration service. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ISemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ISemanticKernelService.html",
    "title": "Interface ISemanticKernelService | FoundationaLLM",
    "keywords": "Interface ISemanticKernelService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface to define the core methods of a Semantic Kernal Service public interface ISemanticKernelService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.Core.Interfaces Interfaces IAzureAIDirectService Interface for going directly to Azure AI for orchestration. IAzureOpenAIDirectService Interface for going directly to Azure OpenAI for orchestration. ILLMOrchestrationService LLM Orchestration Service interface ILLMOrchestrationServiceManager Defines the interface for the LLM Orchestration Service Manager. ILangChainService Interface for the LangChain Orchestration Service IOrchestrationService Interface for the Orchestration Service ISemanticKernelService Interface to define the core methods of a Semantic Kernal Service"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentConversationStep.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentConversationStep.html",
    "title": "Class AgentConversationStep | FoundationaLLM",
    "keywords": "Class AgentConversationStep Namespace FoundationaLLM.Orchestration.Core.Models Assembly FoundationaLLM.Orchestration.Core.dll Provides details about a single step in an agent conversation flow. public class AgentConversationStep Inheritance object AgentConversationStep Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The unique name of the agent whose turn is to respond. public required string AgentName { get; set; } Property Value string UserPrompt The user prompt to be used in the conversation step. public required string UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.LangChainServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.LangChainServiceSettings.html",
    "title": "Class LangChainServiceSettings | FoundationaLLM",
    "keywords": "Class LangChainServiceSettings Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Orchestration.Core.dll The settings configuration options for a LangChain Service public class LangChainServiceSettings Inheritance object LangChainServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.html",
    "title": "Class SemanticKernelServiceSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelServiceSettings Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Orchestration.Core.dll The settings configuration options for a SemanticKernalService public class SemanticKernelServiceSettings Inheritance object SemanticKernelServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Classes LangChainServiceSettings The settings configuration options for a LangChain Service SemanticKernelServiceSettings The settings configuration options for a SemanticKernalService"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.Core.Models Namespaces FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Classes AgentConversationStep Provides details about a single step in an agent conversation flow."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.KnowledgeManagementOrchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.KnowledgeManagementOrchestration.html",
    "title": "Class KnowledgeManagementOrchestration | FoundationaLLM",
    "keywords": "Class KnowledgeManagementOrchestration Namespace FoundationaLLM.Orchestration.Core.Orchestration Assembly FoundationaLLM.Orchestration.Core.dll Knowledge Management orchestration. public class KnowledgeManagementOrchestration : OrchestrationBase Inheritance object OrchestrationBase KnowledgeManagementOrchestration Inherited Members OrchestrationBase._orchestrationService object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for default agent. Constructors KnowledgeManagementOrchestration(string, KnowledgeManagementAgent, Dictionary<string, object>, ICallContext, ILLMOrchestrationService, ILogger<OrchestrationBase>, IHttpClientFactoryService, Dictionary<string, IResourceProviderService>, bool, string?) Knowledge Management orchestration. public KnowledgeManagementOrchestration(string instanceId, KnowledgeManagementAgent agent, Dictionary<string, object> explodedObjects, ICallContext callContext, ILLMOrchestrationService orchestrationService, ILogger<OrchestrationBase> logger, IHttpClientFactoryService httpClientFactoryService, Dictionary<string, IResourceProviderService> resourceProviderServices, bool dataSourceAccessDenied, string? openAIVectorStoreId) Parameters instanceId string The FoundationaLLM instance ID. agent KnowledgeManagementAgent The KnowledgeManagementAgent agent. explodedObjects Dictionary<string, object> A dictionary of objects retrieved from various object ids related to the agent. For more details see Objects . callContext ICallContext The call context of the request being handled. orchestrationService ILLMOrchestrationService logger ILogger<OrchestrationBase> The logger used for logging. httpClientFactoryService IHttpClientFactoryService resourceProviderServices Dictionary<string, IResourceProviderService> The dictionary of IResourceProviderService dataSourceAccessDenied bool Inidicates that access was denied to all underlying data sources. openAIVectorStoreId string Remarks Constructor for default agent. Methods GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public override Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBase.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBase.html",
    "title": "Class OrchestrationBase | FoundationaLLM",
    "keywords": "Class OrchestrationBase Namespace FoundationaLLM.Orchestration.Core.Orchestration Assembly FoundationaLLM.Orchestration.Core.dll Base class for an orchestration involving a FoundationaLLM agent. public class OrchestrationBase Inheritance object OrchestrationBase Derived KnowledgeManagementOrchestration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the OrchestrationBase class. Constructors OrchestrationBase(ILLMOrchestrationService) Base class for an orchestration involving a FoundationaLLM agent. public OrchestrationBase(ILLMOrchestrationService orchestrationService) Parameters orchestrationService ILLMOrchestrationService Remarks Constructor for the OrchestrationBase class. Fields _orchestrationService The orchestration service for the agent. protected readonly ILLMOrchestrationService _orchestrationService Field Value ILLMOrchestrationService Methods GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public virtual Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBuilder.html",
    "title": "Class OrchestrationBuilder | FoundationaLLM",
    "keywords": "Class OrchestrationBuilder Namespace FoundationaLLM.Orchestration.Core.Orchestration Assembly FoundationaLLM.Orchestration.Core.dll Builds an orchestration for a FoundationaLLM agent. public class OrchestrationBuilder Inheritance object OrchestrationBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Build(string, string, CompletionRequest, ICallContext, IConfiguration, Dictionary<string, IResourceProviderService>, ILLMOrchestrationServiceManager, IServiceProvider, ILoggerFactory) Builds the orchestration based on the user prompt, the session id, and the call context. Note that the agent name in agentName can be different from the agent name in originalRequest. This happens when the original completion request results in the need to bring in additional agents to the conversation. public static Task<OrchestrationBase?> Build(string instanceId, string agentName, CompletionRequest originalRequest, ICallContext callContext, IConfiguration configuration, Dictionary<string, IResourceProviderService> resourceProviderServices, ILLMOrchestrationServiceManager llmOrchestrationServiceManager, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceId string The FoundationaLLM instance ID. agentName string The unique name of the agent for which the orchestration is built. originalRequest CompletionRequest The CompletionRequest request for which the orchestration is built. callContext ICallContext The call context of the request being handled. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. resourceProviderServices Dictionary<string, IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. llmOrchestrationServiceManager ILLMOrchestrationServiceManager The ILLMOrchestrationServiceManager that manages internal and external orchestration services. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. loggerFactory ILoggerFactory The logger factory used to create new loggers. Returns Task<OrchestrationBase> Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.Core.Orchestration Classes KnowledgeManagementOrchestration Knowledge Management orchestration. OrchestrationBase Base class for an orchestration involving a FoundationaLLM agent. OrchestrationBuilder Builds an orchestration for a FoundationaLLM agent."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureAIDirectService.html",
    "title": "Class AzureAIDirectService | FoundationaLLM",
    "keywords": "Class AzureAIDirectService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The Azure AI direct orchestration service. public class AzureAIDirectService : IAzureAIDirectService, ILLMOrchestrationService Inheritance object AzureAIDirectService Implements IAzureAIDirectService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAIDirectService(ICallContext, ILogger<AzureAIDirectService>, IHttpClientFactoryService, IEnumerable<IResourceProviderService>) The Azure AI direct orchestration service. public AzureAIDirectService(ICallContext callContext, ILogger<AzureAIDirectService> logger, IHttpClientFactoryService httpClientFactoryService, IEnumerable<IResourceProviderService> resourceProviderServices) Parameters callContext ICallContext The ICallContext providing details about the call context. logger ILogger<AzureAIDirectService> The logger used for logging. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureOpenAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureOpenAIDirectService.html",
    "title": "Class AzureOpenAIDirectService | FoundationaLLM",
    "keywords": "Class AzureOpenAIDirectService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The Azure OpenAI direct orchestration service. public class AzureOpenAIDirectService : IAzureOpenAIDirectService, ILLMOrchestrationService Inheritance object AzureOpenAIDirectService Implements IAzureOpenAIDirectService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAIDirectService(ILogger<AzureOpenAIDirectService>, ICallContext, IHttpClientFactoryService, IEnumerable<IResourceProviderService>) The Azure OpenAI direct orchestration service. public AzureOpenAIDirectService(ILogger<AzureOpenAIDirectService> logger, ICallContext callContext, IHttpClientFactoryService httpClientFactoryService, IEnumerable<IResourceProviderService> resourceProviderServices) Parameters logger ILogger<AzureOpenAIDirectService> The logger used for logging. callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationService.html",
    "title": "Class LLMOrchestrationService | FoundationaLLM",
    "keywords": "Class LLMOrchestrationService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll Provides methods to call an external LLM orchestration service. public class LLMOrchestrationService : ILLMOrchestrationService Inheritance object LLMOrchestrationService Implements ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LLMOrchestrationService(string, ILogger<LLMOrchestrationService>, IHttpClientFactoryService, ICallContext) LLM Orchestration Service public LLMOrchestrationService(string serviceName, ILogger<LLMOrchestrationService> logger, IHttpClientFactoryService httpClientFactoryService, ICallContext callContext) Parameters serviceName string logger ILogger<LLMOrchestrationService> httpClientFactoryService IHttpClientFactoryService callContext ICallContext Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Executes a completion request against the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationServiceManager.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationServiceManager.html",
    "title": "Class LLMOrchestrationServiceManager | FoundationaLLM",
    "keywords": "Class LLMOrchestrationServiceManager Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll Manages internal and external orchestration services. public class LLMOrchestrationServiceManager : ILLMOrchestrationServiceManager Inheritance object LLMOrchestrationServiceManager Implements ILLMOrchestrationServiceManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LLMOrchestrationServiceManager(IEnumerable<IResourceProviderService>, IConfiguration, ILogger<LLMOrchestrationServiceManager>) Creates a new instance of the LLM Orchestration Service Manager. public LLMOrchestrationServiceManager(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, ILogger<LLMOrchestrationServiceManager> logger) Parameters resourceProviderServices IEnumerable<IResourceProviderService> A list of IResourceProviderService resource providers. configuration IConfiguration The IConfiguration used to retrieve configuration values. logger ILogger<LLMOrchestrationServiceManager> The logger for the orchestration service manager. Methods GetAggregateStatus(string, IServiceProvider) Gets an aggregate initialization status based on the initialization status of each subordinate orchestration service. public Task<List<ServiceStatusInfo>> GetAggregateStatus(string instanceId, IServiceProvider serviceProvider) Parameters instanceId string The FoundationaLLM instance ID. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. Returns Task<List<ServiceStatusInfo>> GetService(string, string, IServiceProvider, ICallContext) Gets an ILLMOrchestrationService instance based on the service name. public ILLMOrchestrationService GetService(string instanceId, string serviceName, IServiceProvider serviceProvider, ICallContext callContext) Parameters instanceId string The FoundationaLLM instance ID. serviceName string The name of the ILLMOrchestrationService to be retrieved. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. callContext ICallContext The ICallContext call context of the request being handled. Returns ILLMOrchestrationService"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LangChainService.html",
    "title": "Class LangChainService | FoundationaLLM",
    "keywords": "Class LangChainService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The LangChain orchestration service. public class LangChainService : ILangChainService, ILLMOrchestrationService Inheritance object LangChainService Implements ILangChainService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LangChainService(IOptions<LangChainServiceSettings>, ILogger<LangChainService>, ICallContext, IHttpClientFactoryService) LangChain Orchestration Service public LangChainService(IOptions<LangChainServiceSettings> options, ILogger<LangChainService> logger, ICallContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<LangChainServiceSettings> logger ILogger<LangChainService> callContext ICallContext httpClientFactoryService IHttpClientFactoryService Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Executes a completion request against the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.OrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.OrchestrationService.html",
    "title": "Class OrchestrationService | FoundationaLLM",
    "keywords": "Class OrchestrationService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll OrchestrationService class. public class OrchestrationService : IOrchestrationService Inheritance object OrchestrationService Implements IOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationService(IEnumerable<IResourceProviderService>, ILLMOrchestrationServiceManager, ICallContext, IConfiguration, IServiceProvider, ILoggerFactory) Constructor for the Orchestration Service. public OrchestrationService(IEnumerable<IResourceProviderService> resourceProviderServices, ILLMOrchestrationServiceManager llmOrchestrationServiceManager, ICallContext callContext, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> A list of IResourceProviderService resource providers hashed by resource provider name. llmOrchestrationServiceManager ILLMOrchestrationServiceManager The ILLMOrchestrationServiceManager managing the internal and external LLM orchestration services. callContext ICallContext The call context of the request being handled. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetCompletion(string, CompletionRequest) Retrieve a completion from the configured orchestration service. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request. Returns Task<CompletionResponse> The completion response. GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. public Task<CompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<CompletionResponse> Returns a CompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the aggredated status of all orchestration services. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance id. Returns Task<ServiceStatusInfo> The status of the orchestration service. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.SemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.SemanticKernelService.html",
    "title": "Class SemanticKernelService | FoundationaLLM",
    "keywords": "Class SemanticKernelService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The FoundationaLLM Semantic Kernal Service public class SemanticKernelService : ISemanticKernelService, ILLMOrchestrationService Inheritance object SemanticKernelService Implements ISemanticKernelService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Semantic Kernal Service Constructors SemanticKernelService(IOptions<SemanticKernelServiceSettings>, ILogger<SemanticKernelService>, ICallContext, IHttpClientFactoryService) The FoundationaLLM Semantic Kernal Service public SemanticKernelService(IOptions<SemanticKernelServiceSettings> options, ILogger<SemanticKernelService> logger, ICallContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<SemanticKernelServiceSettings> logger ILogger<SemanticKernelService> callContext ICallContext httpClientFactoryService IHttpClientFactoryService Remarks Constructor for the Semantic Kernal Service Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Gets a completion from the Semantic Kernel service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Request object populated from the hub APIs including agent, prompt, data source, and model information. Returns Task<LLMCompletionResponse> Returns a completion response from the orchestration engine. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo>"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.Core.Services Classes AzureAIDirectService The Azure AI direct orchestration service. AzureOpenAIDirectService The Azure OpenAI direct orchestration service. LLMOrchestrationService Provides methods to call an external LLM orchestration service. LLMOrchestrationServiceManager Manages internal and external orchestration services. LangChainService The LangChain orchestration service. OrchestrationService OrchestrationService class. SemanticKernelService The FoundationaLLM Semantic Kernal Service"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration.Core Namespaces FoundationaLLM.Orchestration.Core.Interfaces FoundationaLLM.Orchestration.Core.Models FoundationaLLM.Orchestration.Core.Orchestration FoundationaLLM.Orchestration.Core.Services"
  },
  "api/dotnet/FoundationaLLM.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.html",
    "title": "Namespace FoundationaLLM.Orchestration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Orchestration Namespaces FoundationaLLM.Orchestration.API FoundationaLLM.Orchestration.Core"
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReference.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReference.html",
    "title": "Class PromptReference | FoundationaLLM",
    "keywords": "Class PromptReference Namespace FoundationaLLM.Prompt.Models.Resources Assembly FoundationaLLM.Prompt.dll Provides details about a prompt. public class PromptReference : ResourceReference Inheritance object ResourceReference PromptReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.ResourceType object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PromptType The object type of the agent. [JsonIgnore] public Type PromptType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReferenceStore.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Resources.PromptReferenceStore.html",
    "title": "Class PromptReferenceStore | FoundationaLLM",
    "keywords": "Class PromptReferenceStore Namespace FoundationaLLM.Prompt.Models.Resources Assembly FoundationaLLM.Prompt.dll Models the content of the prompt reference store managed by the FoundationaLLM.Prompt resource provider. public class PromptReferenceStore Inheritance object PromptReferenceStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PromptReferences The list of all prompts registered in the system. public required List<PromptReference> PromptReferences { get; set; } Property Value List<PromptReference> Methods FromDictionary(Dictionary<string, PromptReference>) Creates a new instance of the PromptReferenceStore from a dictionary. public static PromptReferenceStore FromDictionary(Dictionary<string, PromptReference> dictionary) Parameters dictionary Dictionary<string, PromptReference> A string-based dictionary of PromptReference values. Returns PromptReferenceStore The PromptReferenceStore object created from the dictionary. ToDictionary() Creates a string-based dictionary of PromptReference values from the current object. public Dictionary<string, PromptReference> ToDictionary() Returns Dictionary<string, PromptReference> The string-based dictionary of PromptReference values from the current object."
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Prompt.Models.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt.Models.Resources Classes PromptReference Provides details about a prompt. PromptReferenceStore Models the content of the prompt reference store managed by the FoundationaLLM.Prompt resource provider."
  },
  "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderService.html",
    "title": "Class PromptResourceProviderService | FoundationaLLM",
    "keywords": "Class PromptResourceProviderService Namespace FoundationaLLM.Prompt.ResourceProviders Assembly FoundationaLLM.Prompt.dll Implements the FoundationaLLM.Prompt resource provider. public class PromptResourceProviderService : ResourceProviderServiceBase<PromptReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<PromptReference> PromptResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<PromptReference>._resourceReferenceStore ResourceProviderServiceBase<PromptReference>._serviceProvider ResourceProviderServiceBase<PromptReference>._authorizationService ResourceProviderServiceBase<PromptReference>._storageService ResourceProviderServiceBase<PromptReference>._eventService ResourceProviderServiceBase<PromptReference>._resourceValidatorFactory ResourceProviderServiceBase<PromptReference>._logger ResourceProviderServiceBase<PromptReference>._instanceSettings ResourceProviderServiceBase<PromptReference>._storageContainerName ResourceProviderServiceBase<PromptReference>._serializerSettings ResourceProviderServiceBase<PromptReference>.Name ResourceProviderServiceBase<PromptReference>.IsInitialized ResourceProviderServiceBase<PromptReference>.AllowedResourceTypes ResourceProviderServiceBase<PromptReference>.StorageAccountName ResourceProviderServiceBase<PromptReference>.StorageContainerName ResourceProviderServiceBase<PromptReference>.Initialize() ResourceProviderServiceBase<PromptReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<PromptReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<PromptReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<PromptReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.HandleEvents(EventSetEventArgs) ResourceProviderServiceBase<PromptReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<PromptReference>.LoadResource<T>(PromptReference) ResourceProviderServiceBase<PromptReference>.LoadResource<T>(string) ResourceProviderServiceBase<PromptReference>.CreateResource<T>(PromptReference, T) ResourceProviderServiceBase<PromptReference>.CreateResource(PromptReference, Stream, string) ResourceProviderServiceBase<PromptReference>.CreateResources<T1, T2>(PromptReference, T1, PromptReference, T2) ResourceProviderServiceBase<PromptReference>.SaveResource<T>(PromptReference, T) ResourceProviderServiceBase<PromptReference>.DeleteResource<T>(string) ResourceProviderServiceBase<PromptReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<PromptReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ResourceProviderServiceExtensions.CheckResourceName(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.CreateOrUpdateResource<T, TResult>(IResourceProviderService, string, T, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResourcesWithRBAC<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.GetResources<T>(IResourceProviderService, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.HandleGet<T>(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.ResourceExists(IResourceProviderService, string, string, string, UnifiedUserIdentity) ResourceProviderServiceExtensions.WaitForInitialization(IResourceProviderService) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PromptResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILogger<PromptResourceProviderService>) Implements the FoundationaLLM.Prompt resource provider. public PromptResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILogger<PromptResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<PromptResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Prompt.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt.ResourceProviders Classes PromptResourceProviderService Implements the FoundationaLLM.Prompt resource provider."
  },
  "api/dotnet/FoundationaLLM.Prompt.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.html",
    "title": "Namespace FoundationaLLM.Prompt | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Prompt Namespaces FoundationaLLM.Prompt.Models.Resources FoundationaLLM.Prompt.ResourceProviders"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "keywords": "Class CompletionsController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Wrapper for the Semantic Kernel service. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionsController(ISemanticKernelService) Wrapper for the Semantic Kernel service. public CompletionsController(ISemanticKernelService semanticKernelService) Parameters semanticKernelService ISemanticKernelService The Semantic Kernel service handling requests. Methods GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. [HttpGet(\"async-completions/{operationId}/result\")] public Task<LLMCompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<LLMCompletionResponse> A LLMCompletionResponse containing the response to the completion request. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get(string) Returns the status of the Semantic Kernel API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get(string instanceId) Parameters instanceId string Returns IActionResult Options() Returns the allowed HTTP methods for the Semantic Kernel API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.API.Controllers Classes CompletionsController Wrapper for the Semantic Kernel service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "keywords": "Class Program Namespace FoundationaLLM.SemanticKernel.API Assembly FoundationaLLM.SemanticKernel.API.dll Program class for the Semantic Kernel API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Semantic Kernel API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.API Namespaces FoundationaLLM.SemanticKernel.API.Controllers Classes Program Program class for the Semantic Kernel API."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelAgentBase.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelAgentBase.html",
    "title": "Class SemanticKernelAgentBase | FoundationaLLM",
    "keywords": "Class SemanticKernelAgentBase Namespace FoundationaLLM.SemanticKernel.Core.Agents Assembly FoundationaLLM.SemanticKernel.Core.dll Implements the base functionality for a Semantic Kernel agent. public class SemanticKernelAgentBase Inheritance object SemanticKernelAgentBase Derived SemanticKernelKnowledgeManagementAgent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelAgentBase(LLMCompletionRequest, IEnumerable<IResourceProviderService>, ILogger) Implements the base functionality for a Semantic Kernel agent. public SemanticKernelAgentBase(LLMCompletionRequest request, IEnumerable<IResourceProviderService> resourceProviderServices, ILogger logger) Parameters request LLMCompletionRequest The LLMCompletionRequest being processed by the agent. resourceProviderServices IEnumerable<IResourceProviderService> A collection of IResourceProviderService resource providers. logger ILogger The ILogger used for logging. Fields _configurationResourceProvider protected readonly IResourceProviderService _configurationResourceProvider Field Value IResourceProviderService _deploymentName protected string _deploymentName Field Value string _endpointUrl protected string _endpointUrl Field Value string _llmProvider protected string _llmProvider Field Value string _logger protected readonly ILogger _logger Field Value ILogger _request protected readonly LLMCompletionRequest _request Field Value LLMCompletionRequest Methods BuildResponseWithAzureOpenAI() Builds the completion response using Azure OpenAI. protected virtual Task<LLMCompletionResponse> BuildResponseWithAzureOpenAI() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. Exceptions NotImplementedException BuildResponseWithOpenAI() Builds the completion response using OpenAI. protected virtual Task<LLMCompletionResponse> BuildResponseWithOpenAI() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. Exceptions NotImplementedException ExpandAndValidateAgent() Retrieves the agent-specific details from the agent properties payload. protected virtual Task ExpandAndValidateAgent() Returns Task GetCompletion() Gets the completion for the request. public Task<LLMCompletionResponse> GetCompletion() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. GetConfigurationValue(string) protected Task<string> GetConfigurationValue(string configName) Parameters configName string Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelKnowledgeManagementAgent.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelKnowledgeManagementAgent.html",
    "title": "Class SemanticKernelKnowledgeManagementAgent | FoundationaLLM",
    "keywords": "Class SemanticKernelKnowledgeManagementAgent Namespace FoundationaLLM.SemanticKernel.Core.Agents Assembly FoundationaLLM.SemanticKernel.Core.dll The Knowledge Management agent. public class SemanticKernelKnowledgeManagementAgent : SemanticKernelAgentBase Inheritance object SemanticKernelAgentBase SemanticKernelKnowledgeManagementAgent Inherited Members SemanticKernelAgentBase._configurationResourceProvider SemanticKernelAgentBase._request SemanticKernelAgentBase._logger SemanticKernelAgentBase._llmProvider SemanticKernelAgentBase._endpointUrl SemanticKernelAgentBase._deploymentName SemanticKernelAgentBase.GetCompletion() SemanticKernelAgentBase.BuildResponseWithOpenAI() SemanticKernelAgentBase.GetConfigurationValue(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelKnowledgeManagementAgent(LLMCompletionRequest, IEnumerable<IResourceProviderService>, ILoggerFactory, IHttpClientFactoryService) The Knowledge Management agent. public SemanticKernelKnowledgeManagementAgent(LLMCompletionRequest request, IEnumerable<IResourceProviderService> resourceProviderServices, ILoggerFactory loggerFactory, IHttpClientFactoryService httpClientFactoryService) Parameters request LLMCompletionRequest The KnowledgeManagementCompletionRequest to be processed by the agent. resourceProviderServices IEnumerable<IResourceProviderService> A collection of IResourceProviderService resource providers. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. httpClientFactoryService IHttpClientFactoryService Methods BuildResponseWithAzureOpenAI() Builds the completion response using Azure OpenAI. protected override Task<LLMCompletionResponse> BuildResponseWithAzureOpenAI() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. Exceptions NotImplementedException ExpandAndValidateAgent() Retrieves the agent-specific details from the agent properties payload. protected override Task ExpandAndValidateAgent() Returns Task ValidateAndMapIndexingProfileConfiguration(IndexingProfile) Validates and maps the configuration of the indexing profile to the corresponding settings. protected Task<bool> ValidateAndMapIndexingProfileConfiguration(IndexingProfile indexingProfile) Parameters indexingProfile IndexingProfile Returns Task<bool> True if valid."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Agents | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Agents Classes SemanticKernelAgentBase Implements the base functionality for a Semantic Kernel agent. SemanticKernelKnowledgeManagementAgent The Knowledge Management agent."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelException.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelException.html",
    "title": "Class SemanticKernelException | FoundationaLLM",
    "keywords": "Class SemanticKernelException Namespace FoundationaLLM.SemanticKernel.Core.Exceptions Assembly FoundationaLLM.SemanticKernel.Core.dll Represents an error generated by the Semantic Kernel service. public class SemanticKernelException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException SemanticKernelException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelException() Initializes a new instance of the SemanticKernelException class with a default message. public SemanticKernelException() SemanticKernelException(string?, Exception?, int) Initializes a new instance of the SemanticKernelException class with its message set to message. public SemanticKernelException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. SemanticKernelException(string?, int) Initializes a new instance of the SemanticKernelException class with its message set to message. public SemanticKernelException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelExceptionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelExceptionHandler.html",
    "title": "Class SemanticKernelExceptionHandler | FoundationaLLM",
    "keywords": "Class SemanticKernelExceptionHandler Namespace FoundationaLLM.SemanticKernel.Core.Exceptions Assembly FoundationaLLM.SemanticKernel.Core.dll Implements a global exception handler for the Semantic Kernel API. public class SemanticKernelExceptionHandler : IExceptionHandler Inheritance object SemanticKernelExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelExceptionHandler(ILogger<SemanticKernelExceptionHandler>) Implements a global exception handler for the Semantic Kernel API. public SemanticKernelExceptionHandler(ILogger<SemanticKernelExceptionHandler> logger) Parameters logger ILogger<SemanticKernelExceptionHandler> The ILogger used for logging. Methods TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters httpContext HttpContext The HttpContext for the request. exception Exception The unhandled exception. cancellationToken CancellationToken The cancellation token. Returns ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Exceptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Exceptions Classes SemanticKernelException Represents an error generated by the Semantic Kernel service. SemanticKernelExceptionHandler Implements a global exception handler for the Semantic Kernel API."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.DefaultPromptFilter.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.DefaultPromptFilter.html",
    "title": "Class DefaultPromptFilter | FoundationaLLM",
    "keywords": "Class DefaultPromptFilter Namespace FoundationaLLM.SemanticKernel.Core.Filters Assembly FoundationaLLM.SemanticKernel.Core.dll Provides the default behavior for filtering actions during prompt rendering. public class DefaultPromptFilter : IPromptRenderFilter Inheritance object DefaultPromptFilter Implements IPromptRenderFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RenderedPrompt The rendered prompt. public string RenderedPrompt { get; } Property Value string Methods OnPromptRenderAsync(PromptRenderContext, Func<PromptRenderContext, Task>) Method which is called asynchronously before prompt rendering. public Task OnPromptRenderAsync(PromptRenderContext context, Func<PromptRenderContext, Task> next) Parameters context PromptRenderContext Instance of Microsoft.SemanticKernel.PromptRenderContext with prompt rendering details. next Func<PromptRenderContext, Task> Delegate to the next filter in pipeline or prompt rendering operation itself. If it's not invoked, next filter or prompt rendering won't be invoked. Returns Task"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Filters | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Filters Classes DefaultPromptFilter Provides the default behavior for filtering actions during prompt rendering."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISemanticKernelService.html",
    "title": "Interface ISemanticKernelService | FoundationaLLM",
    "keywords": "Interface ISemanticKernelService Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll Defines methods for processing requests targeting the Semantic Kernel agents. public interface ISemanticKernelService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. Task<LLMCompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<LLMCompletionResponse> Returns a LLMCompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Interfaces ISemanticKernelService Defines methods for processing requests targeting the Semantic Kernel agents."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureAISearchIndexingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureAISearchIndexingServiceSettings.html",
    "title": "Class AzureAISearchIndexingServiceSettings | FoundationaLLM",
    "keywords": "Class AzureAISearchIndexingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the Azure AI Search indexing service. public record AzureAISearchIndexingServiceSettings : IEquatable<AzureAISearchIndexingServiceSettings> Inheritance object AzureAISearchIndexingServiceSettings Implements IEquatable<AzureAISearchIndexingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AuthenticationType The AuthenticationType indicating which authentication mechanism to use. [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes Endpoint The endpoint of the Azure AI deployment. public required string Endpoint { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureCosmosDBNoSQLIndexingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureCosmosDBNoSQLIndexingServiceSettings.html",
    "title": "Class AzureCosmosDBNoSQLIndexingServiceSettings | FoundationaLLM",
    "keywords": "Class AzureCosmosDBNoSQLIndexingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the Azure Cosmos DB NoSQL vector indexing service. public record AzureCosmosDBNoSQLIndexingServiceSettings : IEquatable<AzureCosmosDBNoSQLIndexingServiceSettings> Inheritance object AzureCosmosDBNoSQLIndexingServiceSettings Implements IEquatable<AzureCosmosDBNoSQLIndexingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AutoscaleMaxThroughput Sets the maximum authoscale throughput for new containers automatically created for this vector database. The default value is 4000 RU/s. public string AutoscaleMaxThroughput { get; set; } Property Value string ConnectionString The connection string for the Azure Cosmos DB workspace. Please note, even though the default connection to the deployed Cosmos DB workspace uses RBAC, the connection string is required to use the vectorization capabilities due to the access level required to create workspace artifacts like containers. public required string ConnectionString { get; set; } Property Value string IndexingPolicy Defines the default indexing policy for the vector database. public IndexingPolicy IndexingPolicy { get; } Property Value IndexingPolicy VectorDatabase The name of the Azure Cosmos DB vector database. Please note, this database should be different from the default one deployed with the FoundationaLLM platform, as it is used for vectorization purposes. public string? VectorDatabase { get; set; } Property Value string VectorEmbeddingPolicy Defines the default indexing policy for the vector database. public VectorEmbeddingPolicy VectorEmbeddingPolicy { get; } Property Value VectorEmbeddingPolicy"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.PostgresIndexingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.PostgresIndexingServiceSettings.html",
    "title": "Class PostgresIndexingServiceSettings | FoundationaLLM",
    "keywords": "Class PostgresIndexingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the PostgreSQL vector indexing service. public record PostgresIndexingServiceSettings : IEquatable<PostgresIndexingServiceSettings> Inheritance object PostgresIndexingServiceSettings Implements IEquatable<PostgresIndexingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string for the PostgreSQL server. public required string ConnectionString { get; set; } Property Value string Schema Database schema of the collection tables. Uses the default schema if not specified. public string? Schema { get; set; } Property Value string VectorSize Embedding vector size. public required string? VectorSize { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelServiceSettings.html",
    "title": "Class SemanticKernelServiceSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the SemanticKernelService service. public class SemanticKernelServiceSettings Inheritance object SemanticKernelServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MaxConcurrentCompletions The maximum number of background completion operations allowed to run in parallel. public required int MaxConcurrentCompletions { get; set; } Property Value int Remarks If a new completion request comes in and the maximum number is already reached, the request will generate an error."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelTextEmbeddingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelTextEmbeddingServiceSettings.html",
    "title": "Class SemanticKernelTextEmbeddingServiceSettings | FoundationaLLM",
    "keywords": "Class SemanticKernelTextEmbeddingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the SemanticKernelTextEmbeddingService service. public record SemanticKernelTextEmbeddingServiceSettings : IEquatable<SemanticKernelTextEmbeddingServiceSettings> Inheritance object SemanticKernelTextEmbeddingServiceSettings Implements IEquatable<SemanticKernelTextEmbeddingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key used to connect to the Azure Open AI endpoint. Valid only if AuthenticationType is APIKey. public string? APIKey { get; set; } Property Value string AuthenticationType The AuthenticationType indicating which authentication mechanism to use. [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes DeploymentName The name of the Azure Open AI deployment. public required string DeploymentName { get; set; } Property Value string Endpoint The endpoint of the Azure Open AI deployment. public required string Endpoint { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Classes AzureAISearchIndexingServiceSettings Provides configuration settings for the Azure AI Search indexing service. AzureCosmosDBNoSQLIndexingServiceSettings Provides configuration settings for the Azure Cosmos DB NoSQL vector indexing service. PostgresIndexingServiceSettings Provides configuration settings for the PostgreSQL vector indexing service. SemanticKernelServiceSettings Provides configuration settings for the SemanticKernelService service. SemanticKernelTextEmbeddingServiceSettings Provides configuration settings for the SemanticKernelTextEmbeddingService service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.AgentConversationPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.AgentConversationPlugin.html",
    "title": "Class AgentConversationPlugin | FoundationaLLM",
    "keywords": "Class AgentConversationPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins Assembly FoundationaLLM.SemanticKernel.Core.dll Provides the capability to provide details about agents. public class AgentConversationPlugin Inheritance object AgentConversationPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentConversationPlugin(Dictionary<string, string>) Provides the capability to provide details about agents. public AgentConversationPlugin(Dictionary<string, string> agentDescriptions) Parameters agentDescriptions Dictionary<string, string> A dictionary with agent names as keys and agent descriptions as values. Methods BuildContextAsync(string) [KernelFunction(\"AgentDescriptions\")] public string BuildContextAsync(string userPrompt) Parameters userPrompt string Returns string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.KnowledgeManagementContextPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.KnowledgeManagementContextPlugin.html",
    "title": "Class KnowledgeManagementContextPlugin | FoundationaLLM",
    "keywords": "Class KnowledgeManagementContextPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins Assembly FoundationaLLM.SemanticKernel.Core.dll Provides the capability to build a context by recalling memories using vector search. public class KnowledgeManagementContextPlugin Inheritance object KnowledgeManagementContextPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementContextPlugin(ISemanticTextMemory, string) Provides the capability to build a context by recalling memories using vector search. public KnowledgeManagementContextPlugin(ISemanticTextMemory memory, string indexName) Parameters memory ISemanticTextMemory indexName string Methods BuildContextAsync(string, List<MessageHistoryItem>) [KernelFunction(\"BuildContext\")] public Task<string> BuildContextAsync(string userPrompt, List<MessageHistoryItem> messageHistory) Parameters userPrompt string messageHistory List<MessageHistoryItem> Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins Classes AgentConversationPlugin Provides the capability to provide details about agents. KnowledgeManagementContextPlugin Provides the capability to build a context by recalling memories using vector search."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureAISearchIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureAISearchIndexingService.html",
    "title": "Class AzureAISearchIndexingService | FoundationaLLM",
    "keywords": "Class AzureAISearchIndexingService Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Assembly FoundationaLLM.SemanticKernel.Core.dll Provides vector embedding indexing based on Azure AI Search. public class AzureAISearchIndexingService : IIndexingService Inheritance object AzureAISearchIndexingService Implements IIndexingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAISearchIndexingService(AzureAISearchIndexingServiceSettings, ILogger<AzureAISearchIndexingService>) Creates a new AzureAISearchIndexingService instance. public AzureAISearchIndexingService(AzureAISearchIndexingServiceSettings settings, ILogger<AzureAISearchIndexingService> logger) Parameters settings AzureAISearchIndexingServiceSettings The AzureAISearchIndexingServiceSettings providing configuration settings. logger ILogger<AzureAISearchIndexingService> The ILogger used for logging. Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. public Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureCosmosDBNoSQLIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureCosmosDBNoSQLIndexingService.html",
    "title": "Class AzureCosmosDBNoSQLIndexingService | FoundationaLLM",
    "keywords": "Class AzureCosmosDBNoSQLIndexingService Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Assembly FoundationaLLM.SemanticKernel.Core.dll Provides vector embedding indexing based on the Azure Cosmos DB NoSQL API. public class AzureCosmosDBNoSQLIndexingService : IIndexingService Inheritance object AzureCosmosDBNoSQLIndexingService Implements IIndexingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBNoSQLIndexingService(IOptions<AzureCosmosDBNoSQLIndexingServiceSettings>, CosmosClient, ILogger<AzureCosmosDBNoSQLIndexingService>) Creates a new AzureCosmosDBNoSQLIndexingService instance. public AzureCosmosDBNoSQLIndexingService(IOptions<AzureCosmosDBNoSQLIndexingServiceSettings> options, CosmosClient cosmosClient, ILogger<AzureCosmosDBNoSQLIndexingService> logger) Parameters options IOptions<AzureCosmosDBNoSQLIndexingServiceSettings> The IOptions<TOptions> providing configuration settings. cosmosClient CosmosClient An instance of the CosmosClient used for completing vectorization-related requests and workspace management. logger ILogger<AzureCosmosDBNoSQLIndexingService> The ILogger used for logging. Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. public Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.PostgresIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.PostgresIndexingService.html",
    "title": "Class PostgresIndexingService | FoundationaLLM",
    "keywords": "Class PostgresIndexingService Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Assembly FoundationaLLM.SemanticKernel.Core.dll Provides vector embedding indexing based on PostgreSQL. public class PostgresIndexingService : IIndexingService Inheritance object PostgresIndexingService Implements IIndexingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PostgresIndexingService(IOptions<PostgresIndexingServiceSettings>, ILogger<PostgresIndexingService>) Creates a new PostgresIndexingService instance. public PostgresIndexingService(IOptions<PostgresIndexingServiceSettings> options, ILogger<PostgresIndexingService> logger) Parameters options IOptions<PostgresIndexingServiceSettings> The IOptions<TOptions> providing configuration settings. logger ILogger<PostgresIndexingService> The ILogger used for logging. Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. public Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Classes AzureAISearchIndexingService Provides vector embedding indexing based on Azure AI Search. AzureCosmosDBNoSQLIndexingService Provides vector embedding indexing based on the Azure Cosmos DB NoSQL API. PostgresIndexingService Provides vector embedding indexing based on PostgreSQL."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelService.html",
    "title": "Class SemanticKernelService | FoundationaLLM",
    "keywords": "Class SemanticKernelService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Processes requests targeting the Semantic Kernel agents. public class SemanticKernelService : ISemanticKernelService Inheritance object SemanticKernelService Implements ISemanticKernelService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelService(ILoggerFactory, ICallContext, IEnumerable<IResourceProviderService>, IHttpClientFactoryService, ConcurrentTaskPool) Processes requests targeting the Semantic Kernel agents. public SemanticKernelService(ILoggerFactory loggerFactory, ICallContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, IHttpClientFactoryService httpClientFactoryService, ConcurrentTaskPool taskPool) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to build loggers for logging. callContext ICallContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. resourceProviderServices IEnumerable<IResourceProviderService> A collection of IResourceProviderService resource providers. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. taskPool ConcurrentTaskPool The global TaskPool object that keeps track of active completion tasks. Methods GetCompletionOperationResult(string, string) Gets a completion operation from the Orchestration service. public Task<LLMCompletionResponse> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The ID of the operation to retrieve. Returns Task<LLMCompletionResponse> Returns a LLMCompletionResponse object. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTextEmbeddingService.html",
    "title": "Class SemanticKernelTextEmbeddingService | FoundationaLLM",
    "keywords": "Class SemanticKernelTextEmbeddingService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Generates text embeddings using the Semantic Kernel orchestrator. public class SemanticKernelTextEmbeddingService : ITextEmbeddingService Inheritance object SemanticKernelTextEmbeddingService Implements ITextEmbeddingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelTextEmbeddingService(IOptions<SemanticKernelTextEmbeddingServiceSettings>, ILoggerFactory) Creates a new SemanticKernelTextEmbeddingService instance. public SemanticKernelTextEmbeddingService(IOptions<SemanticKernelTextEmbeddingServiceSettings> options, ILoggerFactory loggerFactory) Parameters options IOptions<SemanticKernelTextEmbeddingServiceSettings> The IOptions<TOptions> providing configuration settings. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. Methods GetEmbeddingsAsync(IList<TextChunk>, string, bool) Initializes the text embedding operation. Depending on the implementation, this can be an atomic operation or a long-running one. public Task<TextEmbeddingResult> GetEmbeddingsAsync(IList<TextChunk> textChunks, string modelName = \"text-embedding-ada-002\", bool Prioritized = false) Parameters textChunks IList<TextChunk> The list of text chunks which need to be embedded. modelName string Prioritized bool Indicates whether the request should be prioritized. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation. GetEmbeddingsAsync(string) Retrieves the result of a long-running text embedding operation. public Task<TextEmbeddingResult> GetEmbeddingsAsync(string operationId) Parameters operationId string The unique identifier of the long-running operation. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core.Services Namespaces FoundationaLLM.SemanticKernel.Core.Services.Indexing Classes SemanticKernelService Processes requests targeting the Semantic Kernel agents. SemanticKernelTextEmbeddingService Generates text embeddings using the Semantic Kernel orchestrator."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel.Core Namespaces FoundationaLLM.SemanticKernel.Core.Agents FoundationaLLM.SemanticKernel.Core.Exceptions FoundationaLLM.SemanticKernel.Core.Filters FoundationaLLM.SemanticKernel.Core.Interfaces FoundationaLLM.SemanticKernel.Core.Models.Configuration FoundationaLLM.SemanticKernel.Core.Plugins FoundationaLLM.SemanticKernel.Core.Services"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.html",
    "title": "Namespace FoundationaLLM.SemanticKernel | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.SemanticKernel Namespaces FoundationaLLM.SemanticKernel.API FoundationaLLM.SemanticKernel.Core"
  },
  "api/dotnet/FoundationaLLM.State.API.Controllers.OperationsController.html": {
    "href": "api/dotnet/FoundationaLLM.State.API.Controllers.OperationsController.html",
    "title": "Class OperationsController | FoundationaLLM",
    "keywords": "Class OperationsController Namespace FoundationaLLM.State.API.Controllers Assembly FoundationaLLM.State.API.dll Provides methods for managing long-running operations. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class OperationsController : ControllerBase Inheritance object ControllerBase OperationsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OperationsController(IStateService) Provides methods for managing long-running operations. public OperationsController(IStateService stateService) Parameters stateService IStateService Provides methods for managing state for long-running operations. Methods CreateLongRunningOperation(string, string) Inserts a long-running operation and creates a log entry. [HttpPost(\"{operationId}\")] public Task<IActionResult> CreateLongRunningOperation(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance ID. operationId string The ID of the long running operation. Returns Task<IActionResult> CreateLongRunningOperationResult(string, string, JsonElement) Inserts the result of a long-running operation. [HttpPost(\"{operationId}/result\")] public Task<IActionResult> CreateLongRunningOperationResult(string instanceId, string operationId, JsonElement operationResult) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. operationResult JsonElement The operation result to insert. Returns Task<IActionResult> GetLongRunningOperation(string, string) Retrieves a long-running operation by its identifier. [HttpGet(\"{operationId}\")] public Task<IActionResult> GetLongRunningOperation(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. Returns Task<IActionResult> GetLongRunningOperationLogs(string, string) Retrieves all log entries for a long-running operation. [HttpGet(\"{operationId}/logs\")] public Task<IActionResult> GetLongRunningOperationLogs(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. Returns Task<IActionResult> GetLongRunningOperationResult(string, string) Retrieves the result of a long-running operation. [HttpGet(\"{operationId}/result\")] public Task<IActionResult> GetLongRunningOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. Returns Task<IActionResult> GetLongRunningOperations() Retrieves all long-running operations. [HttpGet] public Task<IActionResult> GetLongRunningOperations() Returns Task<IActionResult> UpdateLongRunningOperation(string, string, LongRunningOperation) Updates a long-running operation and creates a log entry. [HttpPut(\"{operationId}\")] public Task<IActionResult> UpdateLongRunningOperation(string instanceId, string operationId, LongRunningOperation operation) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. operation LongRunningOperation The long-running operation entry to update. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.State.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.State.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.State.API.Controllers Assembly FoundationaLLM.State.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.State.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.State.API.Controllers.html",
    "title": "Namespace FoundationaLLM.State.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.State.API.Controllers Classes OperationsController Provides methods for managing long-running operations. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.State.Exceptions.StateException.html": {
    "href": "api/dotnet/FoundationaLLM.State.Exceptions.StateException.html",
    "title": "Class StateException | FoundationaLLM",
    "keywords": "Class StateException Namespace FoundationaLLM.State.Exceptions Assembly FoundationaLLM.State.dll Represents an error generated by the FoundationaLLM State service. public class StateException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException StateException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StateException() Initializes a new instance of the StateException class with a default message. public StateException() StateException(string?, Exception?, int) Initializes a new instance of the StateException class with its message set to message. public StateException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. StateException(string?, int) Initializes a new instance of the StateException class with its message set to message. public StateException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.State.Exceptions.StateExceptionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.State.Exceptions.StateExceptionHandler.html",
    "title": "Class StateExceptionHandler | FoundationaLLM",
    "keywords": "Class StateExceptionHandler Namespace FoundationaLLM.State.Exceptions Assembly FoundationaLLM.State.dll Implements a global exception handler for the State API. public class StateExceptionHandler : IExceptionHandler Inheritance object StateExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StateExceptionHandler(ILogger<StateExceptionHandler>) Implements a global exception handler for the State API. public StateExceptionHandler(ILogger<StateExceptionHandler> logger) Parameters logger ILogger<StateExceptionHandler> The ILogger used for logging. Methods TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters httpContext HttpContext The HttpContext for the request. exception Exception The unhandled exception. cancellationToken CancellationToken The cancellation token. Returns ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false."
  },
  "api/dotnet/FoundationaLLM.State.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.State.Exceptions.html",
    "title": "Namespace FoundationaLLM.State.Exceptions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.State.Exceptions Classes StateException Represents an error generated by the FoundationaLLM State service. StateExceptionHandler Implements a global exception handler for the State API."
  },
  "api/dotnet/FoundationaLLM.State.Interfaces.ICosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Interfaces.ICosmosDbService.html",
    "title": "Interface ICosmosDbService | FoundationaLLM",
    "keywords": "Interface ICosmosDbService Namespace FoundationaLLM.State.Interfaces Assembly FoundationaLLM.State.dll Provides methods for interacting with the Cosmos DB service. public interface ICosmosDbService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetLongRunningOperation(string, CancellationToken) Retrieves a long-running operation by its identifier. Task<LongRunningOperation> GetLongRunningOperation(string id, CancellationToken cancellationToken = default) Parameters id string The long-running operation identifier. cancellationToken CancellationToken Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string, CancellationToken) Retrieves all log entries for a long-running operation. Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string, CancellationToken) Retrieves the result of a long-running operation. Task<JsonDocument?> GetLongRunningOperationResult(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<JsonDocument> GetLongRunningOperations(CancellationToken) Retrieves all long-running operations. Task<List<LongRunningOperation>> GetLongRunningOperations(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation, CancellationToken) Inserts or updates a long-running operation and creates a log entry. Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation, CancellationToken cancellationToken = default) Parameters operation LongRunningOperation The long-running operation to insert or update. cancellationToken CancellationToken Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic, CancellationToken) Inserts or updates the result of a long-running operation. Task<object?> UpsertLongRunningOperationResult(dynamic operationResult, CancellationToken cancellationToken = default) Parameters operationResult dynamic The operation result to insert or update. cancellationToken CancellationToken Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Interfaces.IStateService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Interfaces.IStateService.html",
    "title": "Interface IStateService | FoundationaLLM",
    "keywords": "Interface IStateService Namespace FoundationaLLM.State.Interfaces Assembly FoundationaLLM.State.dll Provides methods for managing state for long-running operations. public interface IStateService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateLongRunningOperation(string) Creates a new long-running operation with default values. Task<LongRunningOperation> CreateLongRunningOperation(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<LongRunningOperation> GetLongRunningOperation(string) Retrieves a long-running operation by its identifier. Task<LongRunningOperation> GetLongRunningOperation(string id) Parameters id string The long-running operation identifier. Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string) Retrieves all log entries for a long-running operation. Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string) Retrieves the result of a long-running operation. Task<JsonDocument?> GetLongRunningOperationResult(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<JsonDocument> GetLongRunningOperations() Retrieves all long-running operations. Task<List<LongRunningOperation>> GetLongRunningOperations() Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation) Inserts or updates a long-running operation and creates a log entry. Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation) Parameters operation LongRunningOperation The long-running operation to insert or update. Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic) Inserts or updates the result of a long-running operation. Task<object?> UpsertLongRunningOperationResult(dynamic operationResult) Parameters operationResult dynamic The operation result to insert or update. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.State.Interfaces.html",
    "title": "Namespace FoundationaLLM.State.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.State.Interfaces Interfaces ICosmosDbService Provides methods for interacting with the Cosmos DB service. IStateService Provides methods for managing state for long-running operations."
  },
  "api/dotnet/FoundationaLLM.State.Models.Configuration.StateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.State.Models.Configuration.StateServiceSettings.html",
    "title": "Class StateServiceSettings | FoundationaLLM",
    "keywords": "Class StateServiceSettings Namespace FoundationaLLM.State.Models.Configuration Assembly FoundationaLLM.State.dll Provides settings for the FoundationaLLM state service. public class StateServiceSettings Inheritance object StateServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.State.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.State.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.State.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.State.Models.Configuration Classes StateServiceSettings Provides settings for the FoundationaLLM state service."
  },
  "api/dotnet/FoundationaLLM.State.Serializers.CosmosSystemTextJsonSerializer.html": {
    "href": "api/dotnet/FoundationaLLM.State.Serializers.CosmosSystemTextJsonSerializer.html",
    "title": "Class CosmosSystemTextJsonSerializer | FoundationaLLM",
    "keywords": "Class CosmosSystemTextJsonSerializer Namespace FoundationaLLM.State.Serializers Assembly FoundationaLLM.State.dll Custom serializer for Cosmos DB that uses System.Text.Json. public class CosmosSystemTextJsonSerializer : CosmosSerializer Inheritance object CosmosSerializer CosmosSystemTextJsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosSystemTextJsonSerializer(JsonSerializerOptions) public CosmosSystemTextJsonSerializer(JsonSerializerOptions jsonSerializerOptions) Parameters jsonSerializerOptions JsonSerializerOptions Methods FromStream<T>(Stream) Convert a Stream of JSON to an object. The implementation is responsible for Disposing of the stream, including when an exception is thrown, to avoid memory leaks. public override T FromStream<T>(Stream stream) Parameters stream Stream The Stream response containing JSON from Cosmos DB. Returns T The object deserialized from the stream. Type Parameters T Any type passed to Container. ToStream<T>(T) Convert the object to a Stream. The caller will take ownership of the stream and ensure it is correctly disposed of. Stream.CanRead must be true. public override Stream ToStream<T>(T input) Parameters input T Any type passed to Container. Returns Stream A readable Stream containing JSON of the serialized object. Type Parameters T"
  },
  "api/dotnet/FoundationaLLM.State.Serializers.html": {
    "href": "api/dotnet/FoundationaLLM.State.Serializers.html",
    "title": "Namespace FoundationaLLM.State.Serializers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.State.Serializers Classes CosmosSystemTextJsonSerializer Custom serializer for Cosmos DB that uses System.Text.Json."
  },
  "api/dotnet/FoundationaLLM.State.Services.CosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Services.CosmosDbService.html",
    "title": "Class CosmosDbService | FoundationaLLM",
    "keywords": "Class CosmosDbService Namespace FoundationaLLM.State.Services Assembly FoundationaLLM.State.dll Service to access Azure Cosmos DB for NoSQL. public class CosmosDbService : ICosmosDbService Inheritance object CosmosDbService Implements ICosmosDbService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbService(IOptions<CosmosDbSettings>, CosmosClient, ILogger<CosmosDbService>) Initializes a new instance of the CosmosDbService class. public CosmosDbService(IOptions<CosmosDbSettings> settings, CosmosClient client, ILogger<CosmosDbService> logger) Parameters settings IOptions<CosmosDbSettings> The CosmosDbSettings settings retrieved by the injected IOptions<TOptions>. client CosmosClient The Cosmos DB client. logger ILogger<CosmosDbService> The logging interface used to log under the CosmosDbService type name. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Methods GetLongRunningOperation(string, CancellationToken) Retrieves a long-running operation by its identifier. public Task<LongRunningOperation> GetLongRunningOperation(string id, CancellationToken cancellationToken = default) Parameters id string The long-running operation identifier. cancellationToken CancellationToken Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string, CancellationToken) Retrieves all log entries for a long-running operation. public Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string, CancellationToken) Retrieves the result of a long-running operation. public Task<JsonDocument?> GetLongRunningOperationResult(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<JsonDocument> GetLongRunningOperations(CancellationToken) Retrieves all long-running operations. public Task<List<LongRunningOperation>> GetLongRunningOperations(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation, CancellationToken) Inserts or updates a long-running operation and creates a log entry. public Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation, CancellationToken cancellationToken = default) Parameters operation LongRunningOperation The long-running operation to insert or update. cancellationToken CancellationToken Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic, CancellationToken) Inserts or updates the result of a long-running operation. public Task<object?> UpsertLongRunningOperationResult(dynamic operationResult, CancellationToken cancellationToken = default) Parameters operationResult dynamic The operation result to insert or update. cancellationToken CancellationToken Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Services.StateService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Services.StateService.html",
    "title": "Class StateService | FoundationaLLM",
    "keywords": "Class StateService Namespace FoundationaLLM.State.Services Assembly FoundationaLLM.State.dll Provides methods for managing state for long-running operations. public class StateService : IStateService Inheritance object StateService Implements IStateService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StateService(IOptions<StateServiceSettings>, ICosmosDbService, ILogger<StateService>) Provides methods for managing state for long-running operations. public StateService(IOptions<StateServiceSettings> options, ICosmosDbService cosmosDbService, ILogger<StateService> logger) Parameters options IOptions<StateServiceSettings> Provides the options with the StateServiceSettings settings for configuration. cosmosDbService ICosmosDbService Provides methods to interact with Cosmos DB. logger ILogger<StateService> The ILogger used for logging. Methods CreateLongRunningOperation(string) Creates a new long-running operation with default values. public Task<LongRunningOperation> CreateLongRunningOperation(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<LongRunningOperation> GetLongRunningOperation(string) Retrieves a long-running operation by its identifier. public Task<LongRunningOperation> GetLongRunningOperation(string id) Parameters id string The long-running operation identifier. Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string) Retrieves all log entries for a long-running operation. public Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string) Retrieves the result of a long-running operation. public Task<JsonDocument?> GetLongRunningOperationResult(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<JsonDocument> GetLongRunningOperations() Retrieves all long-running operations. public Task<List<LongRunningOperation>> GetLongRunningOperations() Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation) Inserts or updates a long-running operation and creates a log entry. public Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation) Parameters operation LongRunningOperation The long-running operation to insert or update. Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic) Inserts or updates the result of a long-running operation. public Task<object?> UpsertLongRunningOperationResult(dynamic operationResult) Parameters operationResult dynamic The operation result to insert or update. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Services.html": {
    "href": "api/dotnet/FoundationaLLM.State.Services.html",
    "title": "Namespace FoundationaLLM.State.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.State.Services Classes CosmosDbService Service to access Azure Cosmos DB for NoSQL. StateService Provides methods for managing state for long-running operations."
  },
  "api/dotnet/FoundationaLLM.State.html": {
    "href": "api/dotnet/FoundationaLLM.State.html",
    "title": "Namespace FoundationaLLM.State | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.State Namespaces FoundationaLLM.State.API.Controllers FoundationaLLM.State.Exceptions FoundationaLLM.State.Interfaces FoundationaLLM.State.Models.Configuration FoundationaLLM.State.Serializers FoundationaLLM.State.Services"
  },
  "api/dotnet/FoundationaLLM.ValidatedEnvironment.html": {
    "href": "api/dotnet/FoundationaLLM.ValidatedEnvironment.html",
    "title": "Class ValidatedEnvironment | FoundationaLLM",
    "keywords": "Class ValidatedEnvironment Namespace FoundationaLLM Assembly FoundationaLLM.Common.dll Provides methods for working with the environment. public static class ValidatedEnvironment Inheritance object ValidatedEnvironment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MachineName Gets the name of the machine and falls back to a random GUID if the machine name is not available. public static string MachineName { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html",
    "title": "Class VectorizationRequestController | FoundationaLLM",
    "keywords": "Class VectorizationRequestController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Methods for managing vectorization requests. [ApiController] [APIKeyAuthentication] [Route(\"[controller]\")] public class VectorizationRequestController : ControllerBase Inheritance object ControllerBase VectorizationRequestController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the vectorization request controller. Constructors VectorizationRequestController(IVectorizationRequestProcessor) Methods for managing vectorization requests. public VectorizationRequestController(IVectorizationRequestProcessor vectorizationRequestProcessor) Parameters vectorizationRequestProcessor IVectorizationRequestProcessor The vectorization request processor. Remarks Constructor for the vectorization request controller. Methods ProcessRequest(VectorizationRequest) Handles an incoming vectorization request by starting a new vectorization pipeline. [HttpPost] public Task<IActionResult> ProcessRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.API.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.API.Controllers Classes StatusController Provides methods for checking the status of the service. VectorizationRequestController Methods for managing vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Client.VectorizationServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Client.VectorizationServiceClient.html",
    "title": "Class VectorizationServiceClient | FoundationaLLM",
    "keywords": "Class VectorizationServiceClient Namespace FoundationaLLM.Vectorization.Client Assembly FoundationaLLM.Vectorization.dll Provides method calls to the Vectorization API service. public class VectorizationServiceClient : IVectorizationServiceClient Inheritance object VectorizationServiceClient Implements IVectorizationServiceClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationServiceClient(IHttpClientFactoryService, ILogger<VectorizationServiceClient>) Creates a new instance of the Vectorization API client. public VectorizationServiceClient(IHttpClientFactoryService httpClientFactoryService, ILogger<VectorizationServiceClient> logger) Parameters httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to create the HTTP client. logger ILogger<VectorizationServiceClient> The ILogger used for logging. Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult> The result of the request including the resource object id, success or failure plus any error messages."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Client.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Client.html",
    "title": "Namespace FoundationaLLM.Vectorization.Client | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Client Classes VectorizationServiceClient Provides method calls to the Vectorization API service."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.DOCXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.DOCXTextExtractor.html",
    "title": "Class DOCXTextExtractor | FoundationaLLM",
    "keywords": "Class DOCXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.dll Extracts text from DOCX files. public class DOCXTextExtractor Inheritance object DOCXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a DOCX document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the DOCX document. Returns string The text content of the DOCX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.PPTXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.PPTXTextExtractor.html",
    "title": "Class PPTXTextExtractor | FoundationaLLM",
    "keywords": "Class PPTXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.dll Extracts text from PPTX files. public class PPTXTextExtractor Inheritance object PPTXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a PPTX document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PPTX document. Returns string The text content of the PPTX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.XLSXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.XLSXTextExtractor.html",
    "title": "Class XLSXTextExtractor | FoundationaLLM",
    "keywords": "Class XLSXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.dll Extracts text from XLSX files. public class XLSXTextExtractor Inheritance object XLSXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors XLSXTextExtractor(bool, bool, bool, string?, string?, string?, string?, string?) Constructor for XLSXTextExtractor. public XLSXTextExtractor(bool withWorksheetNumber = true, bool withEndOfWorksheetMarker = false, bool withQuotes = true, string? worksheetNumberTemplate = null, string? endOfWorksheetMarkerTemplate = null, string? rowPrefix = null, string? columnSeparator = null, string? rowSuffix = null) Parameters withWorksheetNumber bool withEndOfWorksheetMarker bool withQuotes bool worksheetNumberTemplate string endOfWorksheetMarkerTemplate string rowPrefix string columnSeparator string rowSuffix string Methods GetText(BinaryData) Extracts the text content from a PPTX document. public string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PPTX document. Returns string The text content of the PPTX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats.Office | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.DataFormats.Office Classes DOCXTextExtractor Extracts text from DOCX files. PPTXTextExtractor Extracts text from PPTX files. XLSXTextExtractor Extracts text from XLSX files."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.PDFTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.PDFTextExtractor.html",
    "title": "Class PDFTextExtractor | FoundationaLLM",
    "keywords": "Class PDFTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.PDF Assembly FoundationaLLM.Vectorization.dll Extracts text from PDF files. public class PDFTextExtractor Inheritance object PDFTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a PDF document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PDF document. Returns string The text content of the PDF document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats.PDF | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.DataFormats.PDF Classes PDFTextExtractor Extracts text from PDF files."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.DataFormats Namespaces FoundationaLLM.Vectorization.DataFormats.Office FoundationaLLM.Vectorization.DataFormats.PDF"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationRequestExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationRequestExtensions.html",
    "title": "Class VectorizationRequestExtensions | FoundationaLLM",
    "keywords": "Class VectorizationRequestExtensions Namespace FoundationaLLM.Vectorization.Extensions Assembly FoundationaLLM.Vectorization.dll Extension methods for VectorizationRequest. public static class VectorizationRequestExtensions Inheritance object VectorizationRequestExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ProcessVectorizationRequest(VectorizationRequest, VectorizationResourceProviderService) Issues the \"process\" action on the vectorization request resource using the vectorization resource provider. public static Task<VectorizationResult> ProcessVectorizationRequest(this VectorizationRequest request, VectorizationResourceProviderService vectorizationResourceProvider) Parameters request VectorizationRequest The vectorization request vectorizationResourceProvider VectorizationResourceProviderService The vectorization resource provider Returns Task<VectorizationResult> UpdateVectorizationRequestResource(VectorizationRequest, IResourceProviderService, UnifiedUserIdentity) Updates the vectorization request resource using the vectorization resource provider. Also updates the vectorization pipeline state if request is part of a pipeline. public static Task UpdateVectorizationRequestResource(this VectorizationRequest request, IResourceProviderService vectorizationResourceProvider, UnifiedUserIdentity userIdentity) Parameters request VectorizationRequest The vectorization request vectorizationResourceProvider IResourceProviderService The vectorization resource provider userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationResourceProviderServiceExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationResourceProviderServiceExtensions.html",
    "title": "Class VectorizationResourceProviderServiceExtensions | FoundationaLLM",
    "keywords": "Class VectorizationResourceProviderServiceExtensions Namespace FoundationaLLM.Vectorization.Extensions Assembly FoundationaLLM.Vectorization.dll Extension methods for VectorizationResourceProviderService. public static class VectorizationResourceProviderServiceExtensions Inheritance object VectorizationResourceProviderServiceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetActivePipelines(VectorizationResourceProviderService) Retrieves all active vectorization pipelines. public static Task<List<VectorizationPipeline>> GetActivePipelines(this VectorizationResourceProviderService vectorizationResourceProvider) Parameters vectorizationResourceProvider VectorizationResourceProviderService An instance of the vectorization resource provider service Returns Task<List<VectorizationPipeline>> List of active pipelines. GetVectorizationRequestResource(VectorizationResourceProviderService, string, UnifiedUserIdentity) Retrieves the vectorization request resource with the specified name. public static Task<VectorizationRequest> GetVectorizationRequestResource(this VectorizationResourceProviderService vectorizationResourceProvider, string requestName, UnifiedUserIdentity userIdentity) Parameters vectorizationResourceProvider VectorizationResourceProviderService An instance of the vectorization resource provider. requestName string The name of the request to retrieve. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<VectorizationRequest> The vectorization request. TogglePipelineActivation(VectorizationResourceProviderService, string, bool, UnifiedUserIdentity) Sets the specified vectorization pipeline to active or inactive. public static Task TogglePipelineActivation(this VectorizationResourceProviderService vectorizationResourceProvider, string pipelineObjectId, bool activate, UnifiedUserIdentity userIdentity) Parameters vectorizationResourceProvider VectorizationResourceProviderService An instance of the vectorization resource provider. pipelineObjectId string The object id of the pipeline to deactivate activate bool true if the pipeline should be activated, false if it is to be deactivated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationStateServiceExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationStateServiceExtensions.html",
    "title": "Class VectorizationStateServiceExtensions | FoundationaLLM",
    "keywords": "Class VectorizationStateServiceExtensions Namespace FoundationaLLM.Vectorization.Extensions Assembly FoundationaLLM.Vectorization.dll Extension methods for the IVectorizationStateService class. public static class VectorizationStateServiceExtensions Inheritance object VectorizationStateServiceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPipelineExecutionProcessingState(IVectorizationStateService, VectorizationResourceProviderService, string, string, UnifiedUserIdentity) Retrieves the state of the specified pipeline execution by polling the status of the vectorization requests created by the pipeline execution. public static Task<VectorizationProcessingState> GetPipelineExecutionProcessingState(this IVectorizationStateService stateService, VectorizationResourceProviderService vectorizationResourceProvider, string pipelineName, string pipelineExecutionId, UnifiedUserIdentity userIdentity) Parameters stateService IVectorizationStateService The state service used to pull the existing pipeline state. vectorizationResourceProvider VectorizationResourceProviderService The vectorization resource provider used to poll vectorization request statuses. pipelineName string The name of the pipeline being executed. pipelineExecutionId string The unique identifier of the pipeline execution. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<VectorizationProcessingState> The current pipeline processing state. Exceptions VectorizationException"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Extensions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Extensions.html",
    "title": "Namespace FoundationaLLM.Vectorization.Extensions | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Extensions Classes VectorizationRequestExtensions Extension methods for VectorizationRequest. VectorizationResourceProviderServiceExtensions Extension methods for VectorizationResourceProviderService. VectorizationStateServiceExtensions Extension methods for the IVectorizationStateService class."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html",
    "title": "Class EmbeddingHandler | FoundationaLLM",
    "keywords": "Class EmbeddingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the embedding stage of the vectorization pipeline. public class EmbeddingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase EmbeddingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the embedding stage of the vectorization pipeline. public EmbeddingHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html",
    "title": "Class ExtractionHandler | FoundationaLLM",
    "keywords": "Class ExtractionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the extraction stage of the vectorization pipeline. public class ExtractionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase ExtractionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ExtractionHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the extraction stage of the vectorization pipeline. public ExtractionHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html",
    "title": "Class IndexingHandler | FoundationaLLM",
    "keywords": "Class IndexingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the indexing stage of the vectorization pipeline. public class IndexingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase IndexingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the indexing stage of the vectorization pipeline. public IndexingHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html",
    "title": "Class PartitionHandler | FoundationaLLM",
    "keywords": "Class PartitionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Handles the partitioning stage of the vectorization pipeline. public class PartitionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase PartitionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PartitionHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the partitioning stage of the vectorization pipeline. public PartitionHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html",
    "title": "Class VectorizationStepHandlerBase | FoundationaLLM",
    "keywords": "Class VectorizationStepHandlerBase Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Implements basic vectorization step handler functionality. public class VectorizationStepHandlerBase : IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase Implements IVectorizationStepHandler Derived EmbeddingHandler ExtractionHandler IndexingHandler PartitionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationStepHandlerBase(string, string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Implements basic vectorization step handler functionality. public VectorizationStepHandlerBase(string stepId, string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters stepId string The identifier of the vectorization step. messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Fields _logger The logger used for logging. protected readonly ILogger<VectorizationStepHandlerBase> _logger Field Value ILogger<VectorizationStepHandlerBase> _messageId The identifier of underlying message retrieved from the request source. protected readonly string _messageId Field Value string _parameters The dictionary of named parameters used to configure the handler. protected readonly Dictionary<string, string> _parameters Field Value Dictionary<string, string> _serviceProvider The service provider implemented by the dependency injection container. protected readonly IServiceProvider _serviceProvider Field Value IServiceProvider _stateService The vectorization state service. protected readonly IVectorizationStateService _stateService Field Value IVectorizationStateService _stepId The identifier of the vectorization step. protected readonly string _stepId Field Value string _stepsConfiguration The app configuration section containing the configuration for vectorization pipeline steps. protected readonly IConfigurationSection? _stepsConfiguration Field Value IConfigurationSection Properties StepId The identifier of the vectorization pipeline step. public string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) Invokes the handler. public Task<bool> Invoke(VectorizationRequest request, VectorizationState state, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task<bool> True if the vectorization step request was handled successfully. ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected virtual Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html",
    "title": "Class VectorizationStepHandlerFactory | FoundationaLLM",
    "keywords": "Class VectorizationStepHandlerFactory Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.dll Implements a factory that creates vectorization step handlers. public class VectorizationStepHandlerFactory Inheritance object VectorizationStepHandlerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Create(string, string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Creates a vectorization step handler capable of handling a specified vectorization pipeline step. public static IVectorizationStepHandler Create(string step, string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters step string The identifier of the vectorization pipeline step for which the handler is created. messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The parameters used to initialize the vectorization step handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers. Returns IVectorizationStepHandler A class implementing IVectorizationStepHandler."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Handlers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Handlers Classes EmbeddingHandler Handles the embedding stage of the vectorization pipeline. ExtractionHandler Handles the extraction stage of the vectorization pipeline. IndexingHandler Handles the indexing stage of the vectorization pipeline. PartitionHandler Handles the partitioning stage of the vectorization pipeline. VectorizationStepHandlerBase Implements basic vectorization step handler functionality. VectorizationStepHandlerFactory Implements a factory that creates vectorization step handlers."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html",
    "title": "Interface IContentSourceService | FoundationaLLM",
    "keywords": "Interface IContentSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Provides access to items in a data source. public interface IContentSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IPipelineExecutionService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IPipelineExecutionService.html",
    "title": "Interface IPipelineExecutionService | FoundationaLLM",
    "keywords": "Interface IPipelineExecutionService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Provides services to interact with the pipeline execution service. public interface IPipelineExecutionService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExecuteAsync(CancellationToken) Executes the pipeline execution service until cancellation is signaled. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the pipeline execution service, allowing it to cleanup. Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html",
    "title": "Interface IRequestManagerService | FoundationaLLM",
    "keywords": "Interface IRequestManagerService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests. public interface IRequestManagerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Run() Runs the vectorization requests processing cycle. Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html",
    "title": "Interface IRequestSourceService | FoundationaLLM",
    "keywords": "Interface IRequestSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests. public interface IRequestSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SourceName The name of the vectorization request source. string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. Task DeleteRequest(string messageId, string popReceipt) Parameters messageId string The underlying message identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. Task<IEnumerable<VectorizationDequeuedRequest>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<VectorizationDequeuedRequest>> A collection of VectorizationDequeuedRequest items. SubmitRequest(string) Submits a new vectorization request to the source. Task SubmitRequest(string requestName) Parameters requestName string The name (unique identifier) of the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html",
    "title": "Interface IRequestSourcesCache | FoundationaLLM",
    "keywords": "Interface IRequestSourcesCache Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Defines a cache of IRequestSourceService objects. public interface IRequestSourcesCache Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationRequestProcessor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationRequestProcessor.html",
    "title": "Interface IVectorizationRequestProcessor | FoundationaLLM",
    "keywords": "Interface IVectorizationRequestProcessor Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Interface for the vectorization request processor. public interface IVectorizationRequestProcessor Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html",
    "title": "Interface IVectorizationService | FoundationaLLM",
    "keywords": "Interface IVectorizationService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Interface for the vectorization service. public interface IVectorizationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceClient.html",
    "title": "Interface IVectorizationServiceClient | FoundationaLLM",
    "keywords": "Interface IVectorizationServiceClient Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Defines the interface for the Vectorization API client. public interface IVectorizationServiceClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult> The result of the request including the resource object id, success or failure plus any error messages."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceFactory-1.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceFactory-1.html",
    "title": "Interface IVectorizationServiceFactory<T> | FoundationaLLM",
    "keywords": "Interface IVectorizationServiceFactory<T> Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Creates typed service instances. public interface IVectorizationServiceFactory<T> Type Parameters T Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. Task<T> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<T> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). Task<(T Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(T Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html",
    "title": "Interface IVectorizationStateService | FoundationaLLM",
    "keywords": "Interface IVectorizationStateService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Provides persistence services for vectorization pipeline states. public interface IVectorizationStateService Extension Methods VectorizationStateServiceExtensions.GetPipelineExecutionProcessingState(IVectorizationStateService, VectorizationResourceProviderService, string, string, UnifiedUserIdentity) ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadPipelineState(string, string) Reads the state associated with a vectorization pipeline execution. Task<VectorizationPipelineState> ReadPipelineState(string pipelineName, string pipelineExecutionId) Parameters pipelineName string The name of the pipeline. pipelineExecutionId string The unique identifier of the pipeline execution. Returns Task<VectorizationPipelineState> ReadState(VectorizationRequest) Reads the state associated with a vectorization request. Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SavePipelineState(VectorizationPipelineState) Saves a specified vectorization pipeline state execution. Task SavePipelineState(VectorizationPipelineState state) Parameters state VectorizationPipelineState Returns Task SaveState(VectorizationState) Saves a specified vectorization state. Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html",
    "title": "Interface IVectorizationStepHandler | FoundationaLLM",
    "keywords": "Interface IVectorizationStepHandler Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Handles requests associated with a specific vectorization pipeline step. public interface IVectorizationStepHandler Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties StepId The identifier of the vectorization pipeline step. string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) Invokes the handler. Task<bool> Invoke(VectorizationRequest request, VectorizationState state, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task<bool> True if the vectorization step request was handled successfully."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html",
    "title": "Namespace FoundationaLLM.Vectorization.Interfaces | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Interfaces Interfaces IContentSourceService Provides access to items in a data source. IPipelineExecutionService Provides services to interact with the pipeline execution service. IRequestManagerService Manages vectorization requests. IRequestSourceService Manages vectorization requests. IRequestSourcesCache Defines a cache of IRequestSourceService objects. IVectorizationRequestProcessor Interface for the vectorization request processor. IVectorizationService Interface for the vectorization service. IVectorizationServiceClient Defines the interface for the Vectorization API client. IVectorizationServiceFactory<T> Creates typed service instances. IVectorizationStateService Provides persistence services for vectorization pipeline states. IVectorizationStepHandler Handles requests associated with a specific vectorization pipeline step."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.AzureSQLDatabaseContentSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.AzureSQLDatabaseContentSourceServiceSettings.html",
    "title": "Class AzureSQLDatabaseContentSourceServiceSettings | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseContentSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a Sql Database content source service. public class AzureSQLDatabaseContentSourceServiceSettings Inheritance object AzureSQLDatabaseContentSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string used for authentication. public string? ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html",
    "title": "Class RequestManagerServiceSettings | FoundationaLLM",
    "keywords": "Class RequestManagerServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a request manager instance. public record RequestManagerServiceSettings : IEquatable<RequestManagerServiceSettings> Inheritance object RequestManagerServiceSettings Implements IEquatable<RequestManagerServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MaxHandlerInstances The maximum number of handler instances allowed to run in parallel. [JsonPropertyOrder(1)] public int MaxHandlerInstances { get; set; } Property Value int QueueMaxNumberOfRetries The maximum number of retries to process a request in case of a failure. [JsonPropertyOrder(5)] public int QueueMaxNumberOfRetries { get; set; } Property Value int QueuePollingInterval The interval in seconds to poll the queue for new requests, when the request queue is empty. [JsonPropertyOrder(4)] public int QueuePollingInterval { get; set; } Property Value int QueueProcessingPace The wait time after processing a request from the queue in seconds. [JsonPropertyOrder(3)] public int QueueProcessingPace { get; set; } Property Value int RequestSourceName The name of the request source that provides the requests processed by the request manager. [JsonPropertyOrder(0)] public required string RequestSourceName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html",
    "title": "Class RequestSourceServiceSettings | FoundationaLLM",
    "keywords": "Class RequestSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a request source service. public class RequestSourceServiceSettings Inheritance object RequestSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountName The name of the storage account. public required string AccountName { get; set; } Property Value string Name The name of the request source. public required string Name { get; set; } Property Value string VisibilityTimeoutSeconds The timeout in seconds available for the processing of each request provided by the request source. If a request is not processed within the timeout window it will become visible again to request managers and might be picked up for processing again. public required int VisibilityTimeoutSeconds { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.SharePointOnlineContentSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.SharePointOnlineContentSourceServiceSettings.html",
    "title": "Class SharePointOnlineContentSourceServiceSettings | FoundationaLLM",
    "keywords": "Class SharePointOnlineContentSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a SharePoint Online content source service. public class SharePointOnlineContentSourceServiceSettings Inheritance object SharePointOnlineContentSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CertificateName The name of the X.509 certificate stored in Azure KeyVault. public string? CertificateName { get; set; } Property Value string ClientId The application (client) identifier of the Azure app registration. public string? ClientId { get; set; } Property Value string KeyVaultURL The Azure KeyVault URL in which the X.509 certificate is stored. public string? KeyVaultURL { get; set; } Property Value string TenantId The Azure tenant identifier where the app was registered. public string? TenantId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html",
    "title": "Class VectorizationStateServiceSettings | FoundationaLLM",
    "keywords": "Class VectorizationStateServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize a vectorization state service. public class VectorizationStateServiceSettings Inheritance object VectorizationStateServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Storage The settings for connecting to the underlying blob storage. public required BlobStorageServiceSettings Storage { get; set; } Property Value BlobStorageServiceSettings StorageContainerName The name of the container where the underlying persistence service stores vectorization state. public required string StorageContainerName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html",
    "title": "Class VectorizationWorkerSettings | FoundationaLLM",
    "keywords": "Class VectorizationWorkerSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.dll Settings for the vectorization worker. public class VectorizationWorkerSettings Inheritance object VectorizationWorkerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties QueuingEngine The type of queuing engine used to dispatch vectorization requests. [JsonPropertyOrder(2)] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationQueuing QueuingEngine { get; set; } Property Value VectorizationQueuing RequestManagers Settings for the request managers. [JsonPropertyOrder(0)] public List<RequestManagerServiceSettings>? RequestManagers { get; set; } Property Value List<RequestManagerServiceSettings> RequestSources Settings for the request sources. [JsonPropertyOrder(1)] public List<RequestSourceServiceSettings>? RequestSources { get; set; } Property Value List<RequestSourceServiceSettings>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models.Configuration | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models.Configuration Classes AzureSQLDatabaseContentSourceServiceSettings Provides configuration settings to initialize a Sql Database content source service. RequestManagerServiceSettings Provides configuration settings to initialize a request manager instance. RequestSourceServiceSettings Provides configuration settings to initialize a request source service. SharePointOnlineContentSourceServiceSettings Provides configuration settings to initialize a SharePoint Online content source service. VectorizationStateServiceSettings Provides configuration settings to initialize a vectorization state service. VectorizationWorkerSettings Settings for the vectorization worker."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ResourceStore-1.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ResourceStore-1.html",
    "title": "Class ResourceStore<T> | FoundationaLLM",
    "keywords": "Class ResourceStore<T> Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Models the content of a resource store managed by the FoundationaLLM.Vectorization resource provider. public class ResourceStore<T> where T : ResourceBase Type Parameters T Inheritance object ResourceStore<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DefaultResourceName The name of the default resource (if any). public string? DefaultResourceName { get; set; } Property Value string Resources The list of all resources that are registered in the resource store. public required List<T> Resources { get; set; } Property Value List<T> Methods FromDictionary(Dictionary<string, T>) Creates a new resource store from a dictionary. public static ResourceStore<T> FromDictionary(Dictionary<string, T> dictionary) Parameters dictionary Dictionary<string, T> The dictionary containing the resources. Returns ResourceStore<T> The newly created resource store. ToDictionary() Creates a dictionary of resources from the resource store. public Dictionary<string, T> ToDictionary() Returns Dictionary<string, T> The newly created dictionary."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models.Resources Classes ResourceStore<T> Models the content of a resource store managed by the FoundationaLLM.Vectorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifact.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifact.html",
    "title": "Class VectorizationArtifact | FoundationaLLM",
    "keywords": "Class VectorizationArtifact Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a vectorization artifact. public class VectorizationArtifact Inheritance object VectorizationArtifact Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the vectorization artifact. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public string? CanonicalId { get; set; } Property Value string Content The content of the artifact. [JsonIgnore] public string? Content { get; set; } Property Value string ContentHash The string hash of the vectorization artifact's content. [JsonPropertyOrder(5)] [JsonPropertyName(\"content_hash\")] public string? ContentHash { get; set; } Property Value string IsDirty Indicates the need to persist the content of the artifact. [JsonIgnore] public bool IsDirty { get; set; } Property Value bool Position The position of the vectorization artifact. This is relevant only for artifact types that can have multiple parts. [JsonPropertyOrder(3)] [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value int Size The size of the vectorization artifact. The unit of measure is determined by the artifact type. [JsonPropertyOrder(4)] [JsonPropertyName(\"size\")] public int Size { get; set; } Property Value int Type The type of the vectorization artifact. [JsonPropertyOrder(1)] [JsonPropertyName(\"type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationArtifactType Type { get; set; } Property Value VectorizationArtifactType"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifactType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifactType.html",
    "title": "Enum VectorizationArtifactType | FoundationaLLM",
    "keywords": "Enum VectorizationArtifactType Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Deifines types of vectorization artifacts. public enum VectorizationArtifactType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields ExtractedText = 0 Text extracted from source content. TextEmbeddingVector = 2 Vector embedding derived from a text partition. TextPartition = 1 Text partition suitable for embedding."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationDequeuedRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationDequeuedRequest.html",
    "title": "Class VectorizationDequeuedRequest | FoundationaLLM",
    "keywords": "Class VectorizationDequeuedRequest Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a vectorization request that has been dequeued from a request source. public class VectorizationDequeuedRequest Inheritance object VectorizationDequeuedRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DequeueCount The number of times the message has been dequeued. public long DequeueCount { get; set; } Property Value long MessageId The queue message identifier. public required string MessageId { get; set; } Property Value string PopReceipt The queue pop receipt. public required string PopReceipt { get; set; } Property Value string RequestName The vectorization request. public required string RequestName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationIndexReference.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationIndexReference.html",
    "title": "Class VectorizationIndexReference | FoundationaLLM",
    "keywords": "Class VectorizationIndexReference Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a reference to an index entry that contains vectorized content. public class VectorizationIndexReference Inheritance object VectorizationIndexReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IndexEntryId The unique identifier of the index entry reference. [JsonPropertyOrder(1)] [JsonPropertyName(\"index_entry_id\")] public required string IndexEntryId { get; set; } Property Value string Position The position of the index entry reference. [JsonPropertyOrder(2)] [JsonPropertyName(\"position\")] public required int Position { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html",
    "title": "Class VectorizationLogEntry | FoundationaLLM",
    "keywords": "Class VectorizationLogEntry Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a log entry that contains information about vectorization operations. public class VectorizationLogEntry Inheritance object VectorizationLogEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationLogEntry(string, string, string, string) Represents a log entry that contains information about vectorization operations. public VectorizationLogEntry(string requestId, string messageId, string source, string text) Parameters requestId string messageId string source string text string Properties MessageId The identifier of underlying message retrieved from the request source. [JsonPropertyOrder(1)] [JsonPropertyName(\"mid\")] public string MessageId { get; set; } Property Value string RequestId The unique identifier of the vectorization request. [JsonPropertyOrder(0)] [JsonPropertyName(\"rid\")] public string RequestId { get; set; } Property Value string Source The source of the log entry. This is usually the name of the vectorization step handler. [JsonPropertyOrder(3)] [JsonPropertyName(\"src\")] public string Source { get; set; } Property Value string Text The content of the log entry. [JsonPropertyOrder(4)] [JsonPropertyName(\"txt\")] public string Text { get; set; } Property Value string Time The time at which the log entry was created. [JsonPropertyOrder(2)] [JsonPropertyName(\"t\")] public DateTimeOffset Time { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationPipelineState.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationPipelineState.html",
    "title": "Class VectorizationPipelineState | FoundationaLLM",
    "keywords": "Class VectorizationPipelineState Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents the state of a run of a vectorization pipeline. public class VectorizationPipelineState Inheritance object VectorizationPipelineState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ErrorMessages A list of error messages that includes content that was rejected at creation time along with the error. [JsonPropertyOrder(6)] [JsonPropertyName(\"error_messages\")] public List<string> ErrorMessages { get; set; } Property Value List<string> ExecutionEnd Time in UTC the pipeline run was completed. [JsonPropertyOrder(3)] [JsonPropertyName(\"execution_end\")] public DateTime? ExecutionEnd { get; set; } Property Value DateTime? ExecutionId The unique identifier of the pipeline execution. [JsonPropertyOrder(-2)] [JsonPropertyName(\"id\")] public required string ExecutionId { get; set; } Property Value string ExecutionStart Time in UTC the pipeline run was started. [JsonPropertyOrder(2)] [JsonPropertyName(\"execution_start\")] public DateTime? ExecutionStart { get; set; } Property Value DateTime? PipelineObjectId The object id of the pipeline resource being executed. [JsonPropertyOrder(1)] [JsonPropertyName(\"pipeline_object_id\")] public required string PipelineObjectId { get; set; } Property Value string ProcessingState The processing state of the pipeline execution. New -> empty vectorization requests collection InProgress -> at least one vectorization request in progress Failed -> at least one vectorization request failed Completed -> all vectorization requests completed successfully [JsonPropertyOrder(5)] [JsonPropertyName(\"processing_state\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationProcessingState ProcessingState { get; set; } Property Value VectorizationProcessingState VectorizationRequestObjectIds The vectorization requests associated with the pipeline execution and their status. Key: vectorization request resource object id Value: the processing state of the request [JsonPropertyOrder(4)] [JsonPropertyName(\"vectorization_request_object_ids\")] public List<string> VectorizationRequestObjectIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html",
    "title": "Enum VectorizationQueuing | FoundationaLLM",
    "keywords": "Enum VectorizationQueuing Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Types of queuing engines used to dispatch vectorization requests. public enum VectorizationQueuing Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureStorageQueue = 1 Azure storage account queuing. None = 0 No persisted queuing. Results in using a simple, non-production grade, in-memory queuing mechanism."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequestProcessingContext.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequestProcessingContext.html",
    "title": "Class VectorizationRequestProcessingContext | FoundationaLLM",
    "keywords": "Class VectorizationRequestProcessingContext Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Represents a vectorization request processing context. This class associates a dequeued request with the corresponding vectorization request resource. public class VectorizationRequestProcessingContext Inheritance object VectorizationRequestProcessingContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DequeuedRequest The message that was dequeued. public required VectorizationDequeuedRequest DequeuedRequest { get; set; } Property Value VectorizationDequeuedRequest Request The vectorization request resource. public required VectorizationRequest Request { get; set; } Property Value VectorizationRequest"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html",
    "title": "Class VectorizationState | FoundationaLLM",
    "keywords": "Class VectorizationState Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.dll Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). public class VectorizationState Inheritance object VectorizationState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields LoadedArtifactTypes Indicates which types of artifacts have already been loaded into the state. [JsonIgnore] public List<VectorizationArtifactType> LoadedArtifactTypes Field Value List<VectorizationArtifactType> Properties Artifacts The vectorization artifacts associated with the vectorization state. [JsonPropertyOrder(2)] [JsonPropertyName(\"artifacts\")] public List<VectorizationArtifact> Artifacts { get; set; } Property Value List<VectorizationArtifact> ContentIdentifier The ContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(1)] [JsonPropertyName(\"content_identifier\")] public required ContentIdentifier ContentIdentifier { get; set; } Property Value ContentIdentifier CurrentRequestId The unique identifier of the current vectorization request. Subsequent vectorization requests referring to the same content will have different unique identifiers. [JsonPropertyOrder(0)] [JsonPropertyName(\"request_id\")] public required string CurrentRequestId { get; set; } Property Value string IndexReferences The vector index references associated with the vectorization state. [JsonPropertyOrder(3)] [JsonPropertyName(\"index_references\")] public List<VectorizationIndexReference> IndexReferences { get; set; } Property Value List<VectorizationIndexReference> LogEntries The list of log entries associated with actions executed by the vectorization pipeline. [JsonPropertyOrder(20)] [JsonPropertyName(\"log\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public List<VectorizationLogEntry> LogEntries { get; set; } Property Value List<VectorizationLogEntry> PipelineName The resource name of the vectorization pipeline that generated the request. [JsonPropertyOrder(17)] [JsonPropertyName(\"pipeline_name\")] public string? PipelineName { get; set; } Property Value string PipelineObjectId The resource object id of the vectorization pipeline that generated the request. [JsonPropertyOrder(18)] [JsonPropertyName(\"pipeline_object_id\")] public string? PipelineObjectId { get; set; } Property Value string Requests The list of vectorization requests associated with the content identified by ContentIdentifier. [JsonPropertyOrder(19)] [JsonPropertyName(\"requests\")] public List<VectorizationRequest> Requests { get; set; } Property Value List<VectorizationRequest> Methods AddOrReplaceArtifact(VectorizationArtifact) Adds or replaces a vectorization artifact associated with the vectorization state. public void AddOrReplaceArtifact(VectorizationArtifact artifact) Parameters artifact VectorizationArtifact The VectorizationArtifact to be added or replaced. AddOrReplaceIndexReferences(IList<string>) Adds or replaces the list of vector index references associated with the vectorization state. public void AddOrReplaceIndexReferences(IList<string> indexEntryIds) Parameters indexEntryIds IList<string> The ordered list of vector index entry identifiers. FromRequest(VectorizationRequest) Creates a new VectorizationState instance based on a specified vectorization request. public static VectorizationState FromRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest instance for which the state is created. Returns VectorizationState The VectorizationState created from the request. Log(IVectorizationStepHandler, string, string, string) Adds a new generic log entry. public void Log(IVectorizationStepHandler handler, string requestId, string messageId, string text) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. text string The string content of the log entry. LogHandlerEnd(IVectorizationStepHandler, string, string) Adds a log entry marking the completion of handling. public void LogHandlerEnd(IVectorizationStepHandler handler, string requestId, string messageId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. LogHandlerError(IVectorizationStepHandler, string, string, Exception) Adds a log entry for a handling exception. public void LogHandlerError(IVectorizationStepHandler handler, string requestId, string messageId, Exception ex) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. ex Exception The exception being logged. LogHandlerStart(IVectorizationStepHandler, string, string) Adds a log entry marking the start of handling. public void LogHandlerStart(IVectorizationStepHandler handler, string requestId, string messageId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. UpdateRequest(VectorizationRequest) Adds a vectorization request to the list of requests if it is not already there. public void UpdateRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest being added."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Models Namespaces FoundationaLLM.Vectorization.Models.Configuration FoundationaLLM.Vectorization.Models.Resources Classes VectorizationArtifact Represents a vectorization artifact. VectorizationDequeuedRequest Represents a vectorization request that has been dequeued from a request source. VectorizationIndexReference Represents a reference to an index entry that contains vectorized content. VectorizationLogEntry Represents a log entry that contains information about vectorization operations. VectorizationPipelineState Represents the state of a run of a vectorization pipeline. VectorizationRequestProcessingContext Represents a vectorization request processing context. This class associates a dequeued request with the corresponding vectorization request resource. VectorizationState Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). Enums VectorizationArtifactType Deifines types of vectorization artifacts. VectorizationQueuing Types of queuing engines used to dispatch vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderService.html",
    "title": "Class VectorizationResourceProviderService | FoundationaLLM",
    "keywords": "Class VectorizationResourceProviderService Namespace FoundationaLLM.Vectorization.ResourceProviders Assembly FoundationaLLM.Vectorization.dll Implements the FoundationaLLM.Vectorization resource provider. public class VectorizationResourceProviderService : ResourceProviderServiceBase<ResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<ResourceReference> VectorizationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<ResourceReference>._resourceReferenceStore ResourceProviderServiceBase<ResourceReference>._serviceProvider ResourceProviderServiceBase<ResourceReference>._authorizationService ResourceProviderServiceBase<ResourceReference>._storageService ResourceProviderServiceBase<ResourceReference>._eventService ResourceProviderServiceBase<ResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<ResourceReference>._logger ResourceProviderServiceBase<ResourceReference>._instanceSettings ResourceProviderServiceBase<ResourceReference>._storageContainerName ResourceProviderServiceBase<ResourceReference>._serializerSettings ResourceProviderServiceBase<ResourceReference>.Name ResourceProviderServiceBase<ResourceReference>.IsInitialized ResourceProviderServiceBase<ResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<ResourceReference>.StorageAccountName ResourceProviderServiceBase<ResourceReference>.StorageContainerName ResourceProviderServiceBase<ResourceReference>.Initialize() ResourceProviderServiceBase<ResourceReference>.HandleGetAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandlePostAsync(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, bool) ResourceProviderServiceBase<ResourceReference>.GetResource<T>(string, UnifiedUserIdentity, ResourceProviderOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.LoadResources<T>(ResourceTypeInstance) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(ResourceReference) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<ResourceReference>.CreateResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.CreateResource(ResourceReference, Stream, string) ResourceProviderServiceBase<ResourceReference>.CreateResources<T1, T2>(ResourceReference, T1, ResourceReference, T2) ResourceProviderServiceBase<ResourceReference>.SaveResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.DeleteResource<T>(string) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<ResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods VectorizationResourceProviderServiceExtensions.GetActivePipelines(VectorizationResourceProviderService) VectorizationResourceProviderServiceExtensions.GetVectorizationRequestResource(VectorizationResourceProviderService, string, UnifiedUserIdentity) VectorizationResourceProviderServiceExtensions.TogglePipelineActivation(VectorizationResourceProviderService, string, bool, UnifiedUserIdentity) ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationResourceProviderService(IOptions<InstanceSettings>, IAuthorizationService, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Vectorization resource provider. public VectorizationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IAuthorizationService authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. authorizationService IAuthorizationService The IAuthorizationService providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The factory responsible for creating loggers. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Exceptions NotImplementedException ExecuteActionAsync(string, string?) Executes an action on a vectorization resource. public Task<object> ExecuteActionAsync(string resourcePath, string? serializedAction = null) Parameters resourcePath string The resource path (or object id) of the vectorization request to process. serializedAction string The JSON string payload to pass in as an action parameter. Returns Task<object> GetResourceInternal<T>(ResourcePath, UnifiedUserIdentity, ResourceProviderOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceInternal<T>(ResourcePath resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderOptions? options = null) where T : class Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderOptions The ResourceProviderOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> GetResourcesAsync(string) Retrieves resources from the vectorization resource provider. public Task<object> GetResourcesAsync(string resourcePath) Parameters resourcePath string The resource path from which to retrieve resources. Returns Task<object> List of vectorization resources. HandleEvents(EventSetEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEvents(EventSetEventArgs e) Parameters e EventSetEventArgs The EventSetEventArgs containing the events namespace and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string serializedResource, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The serialized resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, T, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, T resource, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Vectorization.ResourceProviders | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.ResourceProviders Classes VectorizationResourceProviderService Implements the FoundationaLLM.Vectorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Serializers.CosmosSystemTextJsonSerializer.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Serializers.CosmosSystemTextJsonSerializer.html",
    "title": "Class CosmosSystemTextJsonSerializer | FoundationaLLM",
    "keywords": "Class CosmosSystemTextJsonSerializer Namespace FoundationaLLM.Vectorization.Serializers Assembly FoundationaLLM.Vectorization.dll This class provides a default implementation of System.Text.Json Cosmos Linq Serializer. public class CosmosSystemTextJsonSerializer : CosmosLinqSerializer Inheritance object CosmosSerializer CosmosLinqSerializer CosmosSystemTextJsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosSystemTextJsonSerializer(JsonSerializerOptions) Creates an instance of CosmosSystemTextJsonSerializer with the default values for the Cosmos SDK public CosmosSystemTextJsonSerializer(JsonSerializerOptions jsonSerializerOptions) Parameters jsonSerializerOptions JsonSerializerOptions An instance of JsonSerializerOptions containing the json serialization options. Methods FromStream<T>(Stream) Convert a Stream of JSON to an object. The implementation is responsible for Disposing of the stream, including when an exception is thrown, to avoid memory leaks. public override T FromStream<T>(Stream stream) Parameters stream Stream The Stream response containing JSON from Cosmos DB. Returns T The object deserialized from the stream. Type Parameters T Any type passed to Container. SerializeMemberName(MemberInfo) Convert a MemberInfo to a string for use in LINQ query translation. public override string? SerializeMemberName(MemberInfo memberInfo) Parameters memberInfo MemberInfo Any MemberInfo used in the query. Returns string A serialized representation of the member. Remarks Note that this is just a default implementation which handles the basic scenarios. Any JsonSerializerOptions passed in here are not going to be reflected in SerializeMemberName(). For example, if customers passed in a JsonSerializerOption such as below JsonSerializerOptions options = new() { PropertyNamingPolicy = JsonNamingPolicy.CamelCase } This would not be honored by SerializeMemberName() unless it included special handling for this, for example. public override string SerializeMemberName(MemberInfo memberInfo) { JsonExtensionDataAttribute jsonExtensionDataAttribute = memberInfo.GetCustomAttribute<JsonExtensionDataAttribute>(true); if (jsonExtensionDataAttribute != null) { return null; } JsonPropertyNameAttribute jsonPropertyNameAttribute = memberInfo.GetCustomAttribute<JsonPropertyNameAttribute>(true); if (!string.IsNullOrEmpty(jsonPropertyNameAttribute?.Name)) { return jsonPropertyNameAttribute.Name; } return System.Text.Json.JsonNamingPolicy.CamelCase.ConvertName(memberInfo.Name); } To handle such scenarios, please create a custom serializer which inherits from the CosmosSystemTextJsonSerializer and overrides the SerializeMemberName to add any special handling. ToStream<T>(T) Convert the object to a Stream. The caller will take ownership of the stream and ensure it is correctly disposed of. Stream.CanRead must be true. public override Stream ToStream<T>(T input) Parameters input T Any type passed to Container. Returns Stream A readable Stream containing JSON of the serialized object. Type Parameters T"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Serializers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Serializers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Serializers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Serializers Classes CosmosSystemTextJsonSerializer This class provides a default implementation of System.Text.Json Cosmos Linq Serializer."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.AzureSQLDatabaseContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.AzureSQLDatabaseContentSourceService.html",
    "title": "Class AzureSQLDatabaseContentSourceService | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Implements a vectorization content source for content residing in Azure SQL. public class AzureSQLDatabaseContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase AzureSQLDatabaseContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseContentSourceService(AzureSQLDatabaseContentSourceServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source service. public AzureSQLDatabaseContentSourceService(AzureSQLDatabaseContentSourceServiceSettings settings, ILoggerFactory loggerFactory) Parameters settings AzureSQLDatabaseContentSourceServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks contentId[0] = the schema. contentId[1] = the table. contentId[2] = the column containing the contents of the files. contentId[3] = the column name of the unique identifier for the row of the file. contentId[4] = the value of the unique identifier of the file. contentId[5] = the file name."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html",
    "title": "Class ContentSourceServiceBase | FoundationaLLM",
    "keywords": "Class ContentSourceServiceBase Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Provides common functionalities for all content sources. public class ContentSourceServiceBase Inheritance object ContentSourceServiceBase Derived AzureSQLDatabaseContentSourceService DataLakeContentSourceService SharePointOnlineContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExtractTextFromFileAsync(string, BinaryData) Extracts text from the binary content of a file. public static Task<string> ExtractTextFromFileAsync(string fileName, BinaryData binaryContent) Parameters fileName string The file name of the file being extracted. binaryContent BinaryData The binary data of the file being extracted. Returns Task<string> The string content of the file. Exceptions VectorizationException"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceFactory.html",
    "title": "Class ContentSourceServiceFactory | FoundationaLLM",
    "keywords": "Class ContentSourceServiceFactory Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Manages content sources registered for use in the vectorization pipelines. public class ContentSourceServiceFactory : IVectorizationServiceFactory<IContentSourceService> Inheritance object ContentSourceServiceFactory Implements IVectorizationServiceFactory<IContentSourceService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentSourceServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, ILoggerFactory) Manages content sources registered for use in the vectorization pipelines. public ContentSourceServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The resource provider services registered with the dependency injection container. configuration IConfiguration The global configuration provider. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<IContentSourceService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<IContentSourceService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(IContentSourceService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(IContentSourceService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.DataLakeContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.DataLakeContentSourceService.html",
    "title": "Class DataLakeContentSourceService | FoundationaLLM",
    "keywords": "Class DataLakeContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Implements a vectorization content source for content residing in data lake storage. public class DataLakeContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase DataLakeContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataLakeContentSourceService(BlobStorageServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source service. public DataLakeContentSourceService(BlobStorageServiceSettings storageSettings, ILoggerFactory loggerFactory) Parameters storageSettings BlobStorageServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks contentId[0] = the URL of the storage account. contentId[1] = the container name. contentId[2] = path of the file relative to the container name."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.SharePointOnlineContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.SharePointOnlineContentSourceService.html",
    "title": "Class SharePointOnlineContentSourceService | FoundationaLLM",
    "keywords": "Class SharePointOnlineContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Implements a vectorization content source for content residing in SharePoint Online. public class SharePointOnlineContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase SharePointOnlineContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineContentSourceService(SharePointOnlineContentSourceServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source service. public SharePointOnlineContentSourceService(SharePointOnlineContentSourceServiceSettings settings, ILoggerFactory loggerFactory) Parameters settings SharePointOnlineContentSourceServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks contentId[0] = the URL of the SharePoint online tenant. contentId[1] = the relative path of the site/subsite. contentId[2] = the folder path, starting with the document library. contentId[3] = the name of the file."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.WebContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.WebContentSourceService.html",
    "title": "Class WebContentSourceService | FoundationaLLM",
    "keywords": "Class WebContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.dll Extracts text from a web page. public class WebContentSourceService : IContentSourceService Inheritance object WebContentSourceService Implements IContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors WebContentSourceService(ILoggerFactory) Creates a new instance of the vectorization content source service that scrapes web pages. public WebContentSourceService(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory Logger factory that generates loggers for the class. Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks Expected MultipartId: contentId[0] = Protocol: either http or https contentId[1] = the web URL without the protocol contentId[2] = CSS classes to filter by"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.ContentSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.ContentSources Classes AzureSQLDatabaseContentSourceService Implements a vectorization content source for content residing in Azure SQL. ContentSourceServiceBase Provides common functionalities for all content sources. ContentSourceServiceFactory Manages content sources registered for use in the vectorization pipelines. DataLakeContentSourceService Implements a vectorization content source for content residing in data lake storage. SharePointOnlineContentSourceService Implements a vectorization content source for content residing in SharePoint Online. WebContentSourceService Extracts text from a web page."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureDataLakeDataSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureDataLakeDataSourceService.html",
    "title": "Class AzureDataLakeDataSourceService | FoundationaLLM",
    "keywords": "Class AzureDataLakeDataSourceService Namespace FoundationaLLM.Vectorization.Services.DataSources Assembly FoundationaLLM.Vectorization.dll Provides access to Azure Data Lake based on a data source. public class AzureDataLakeDataSourceService Inheritance object AzureDataLakeDataSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSourceService(AzureDataLakeDataSource, BlobStorageServiceSettings, ILoggerFactory) Initializes a new instance of the AzureDataLakeDataSourceService class. public AzureDataLakeDataSourceService(AzureDataLakeDataSource dataSource, BlobStorageServiceSettings settings, ILoggerFactory loggerFactory) Parameters dataSource AzureDataLakeDataSource The data source definition. settings BlobStorageServiceSettings Blob storage configuration settings. loggerFactory ILoggerFactory The factory responsible for creating loggers. Methods GetFilesListAsync() Gets the list of files in the data source folders public Task<List<string>> GetFilesListAsync() Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureSQLDatabaseDataSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureSQLDatabaseDataSourceService.html",
    "title": "Class AzureSQLDatabaseDataSourceService | FoundationaLLM",
    "keywords": "Class AzureSQLDatabaseDataSourceService Namespace FoundationaLLM.Vectorization.Services.DataSources Assembly FoundationaLLM.Vectorization.dll Class responsible for retrieving data source data from an Azure SQL database. public class AzureSQLDatabaseDataSourceService Inheritance object AzureSQLDatabaseDataSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSourceService(AzureSQLDatabaseDataSource, SQLDatabaseServiceSettings, ILoggerFactory) Initializes a new instance of the AzureSQLDatabaseDataSourceService class. public AzureSQLDatabaseDataSourceService(AzureSQLDatabaseDataSource dataSource, SQLDatabaseServiceSettings settings, ILoggerFactory loggerFactory) Parameters dataSource AzureSQLDatabaseDataSource The data source definition. settings SQLDatabaseServiceSettings The Azure SQL database configuration settings. loggerFactory ILoggerFactory The factory responsible for creating loggers. Methods ExecuteMultipartQueryAsync(CancellationToken) Executes a query to retrieve a list of multipart ids for vectorization. public Task<List<string>> ExecuteMultipartQueryAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The cancellation token. Returns Task<List<string>> List of multipart ids to vectorize with tokens that are pipe delimited."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.SQLDatabaseServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.SQLDatabaseServiceSettings.html",
    "title": "Class SQLDatabaseServiceSettings | FoundationaLLM",
    "keywords": "Class SQLDatabaseServiceSettings Namespace FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase Assembly FoundationaLLM.Vectorization.dll Provides configuration settings to initialize an SQL database service. public record SQLDatabaseServiceSettings : IEquatable<SQLDatabaseServiceSettings> Inheritance object SQLDatabaseServiceSettings Implements IEquatable<SQLDatabaseServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string used for authentication to the SQL database with the data to be vectorized. public required string ConnectionString { get; set; } Property Value string MultiPartQuery Optional: When not vectorizing an entire table, this query is used to retrieve the data to be vectorized. public string? MultiPartQuery { get; set; } Property Value string MultiPartQueryConnectionString Optional: The connection string used for authentication to the SQL database when using a multi-part query if it is different from ConnectionString. public string? MultiPartQueryConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase Classes SQLDatabaseServiceSettings Provides configuration settings to initialize an SQL database service."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.DataSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.DataSources Namespaces FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase Classes AzureDataLakeDataSourceService Provides access to Azure Data Lake based on a data source. AzureSQLDatabaseDataSourceService Class responsible for retrieving data source data from an Azure SQL database."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineExecutionService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineExecutionService.html",
    "title": "Class PipelineExecutionService | FoundationaLLM",
    "keywords": "Class PipelineExecutionService Namespace FoundationaLLM.Vectorization.Services.Pipelines Assembly FoundationaLLM.Vectorization.dll Executes active vectorization data pipelines. public class PipelineExecutionService : IPipelineExecutionService Inheritance object PipelineExecutionService Implements IPipelineExecutionService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PipelineExecutionService(IConfiguration, IServiceProvider, IEnumerable<IResourceProviderService>, ILoggerFactory, ILogger<PipelineExecutionService>) Executes active vectorization data pipelines. public PipelineExecutionService(IConfiguration configuration, IServiceProvider serviceProvider, IEnumerable<IResourceProviderService> resourceProviderServices, ILoggerFactory loggerFactory, ILogger<PipelineExecutionService> logger) Parameters configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services.. resourceProviderServices IEnumerable<IResourceProviderService> The list of resurce providers registered with the main dependency injection container. loggerFactory ILoggerFactory Factory responsible for creating loggers. logger ILogger<PipelineExecutionService> The ILogger used for logging. Methods ExecuteAsync(CancellationToken) Executes the pipeline execution service until cancellation is signaled. public Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the pipeline execution service, allowing it to cleanup. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineWorker.html",
    "title": "Class PipelineWorker | FoundationaLLM",
    "keywords": "Class PipelineWorker Namespace FoundationaLLM.Vectorization.Services.Pipelines Assembly FoundationaLLM.Vectorization.dll Background worker used to manage vectorization data pipelines. public class PipelineWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService PipelineWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PipelineWorker(IPipelineExecutionService, ILogger<PipelineWorker>) Background worker used to manage vectorization data pipelines. public PipelineWorker(IPipelineExecutionService pipelineExecutionService, ILogger<PipelineWorker> logger) Parameters pipelineExecutionService IPipelineExecutionService The IPipelineExecutionService managing the execution of vectorization data pipelines. logger ILogger<PipelineWorker> The logger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.Pipelines | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.Pipelines Classes PipelineExecutionService Executes active vectorization data pipelines. PipelineWorker Background worker used to manage vectorization data pipelines."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html",
    "title": "Class RequestManagerService | FoundationaLLM",
    "keywords": "Class RequestManagerService Namespace FoundationaLLM.Vectorization.Services Assembly FoundationaLLM.Vectorization.dll Manages vectorization requests originating from a specific request source. public class RequestManagerService : IRequestManagerService Inheritance object RequestManagerService Implements IRequestManagerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestManagerService(RequestManagerServiceSettings, Dictionary<string, IRequestSourceService>, IVectorizationStateService, IConfigurationSection?, IServiceProvider, ILoggerFactory, CancellationToken) Initializes a new instance of the RequestManagerService class with the configuration and services required to manage vectorization requests originating from a specific request source. public RequestManagerService(RequestManagerServiceSettings settings, Dictionary<string, IRequestSourceService> requestSourceServices, IVectorizationStateService vectorizationStateService, IConfigurationSection? stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory, CancellationToken cancellationToken) Parameters settings RequestManagerServiceSettings The configuration settings used to initialize the instance. requestSourceServices Dictionary<string, IRequestSourceService> The dictionary with all the request source services registered in the vectorization platform. vectorizationStateService IVectorizationStateService The service providing vectorization state management. stepsConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers. cancellationToken CancellationToken The cancellation token that can be used to cancel the work. Exceptions VectorizationException The exception thrown when the initialization of the instance fails. Methods Run() Runs the vectorization requests processing cycle. public Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.LocalVectorizationRequestProcessor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.LocalVectorizationRequestProcessor.html",
    "title": "Class LocalVectorizationRequestProcessor | FoundationaLLM",
    "keywords": "Class LocalVectorizationRequestProcessor Namespace FoundationaLLM.Vectorization.Services.RequestProcessors Assembly FoundationaLLM.Vectorization.dll Processes the vectorization request internally. public class LocalVectorizationRequestProcessor : IVectorizationRequestProcessor Inheritance object LocalVectorizationRequestProcessor Implements IVectorizationRequestProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LocalVectorizationRequestProcessor(VectorizationServiceFactory) Processes the vectorization request internally. public LocalVectorizationRequestProcessor(VectorizationServiceFactory vectorizationServiceFactory) Parameters vectorizationServiceFactory VectorizationServiceFactory Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.RemoteVectorizationRequestProcessor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.RemoteVectorizationRequestProcessor.html",
    "title": "Class RemoteVectorizationRequestProcessor | FoundationaLLM",
    "keywords": "Class RemoteVectorizationRequestProcessor Namespace FoundationaLLM.Vectorization.Services.RequestProcessors Assembly FoundationaLLM.Vectorization.dll Processes the vectorization request remotely using the IVectorizationServiceClient over HTTP. public class RemoteVectorizationRequestProcessor : IVectorizationRequestProcessor Inheritance object RemoteVectorizationRequestProcessor Implements IVectorizationRequestProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RemoteVectorizationRequestProcessor(IHttpClientFactoryService, ILoggerFactory) Processes the vectorization request remotely using the IVectorizationServiceClient over HTTP. public RemoteVectorizationRequestProcessor(IHttpClientFactoryService httpClientFactoryService, ILoggerFactory loggerFactory) Parameters httpClientFactoryService IHttpClientFactoryService The factory service responsible for HTTP connections. loggerFactory ILoggerFactory The logger factory responsible for creating loggers. Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.RequestProcessors | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.RequestProcessors Classes LocalVectorizationRequestProcessor Processes the vectorization request internally. RemoteVectorizationRequestProcessor Processes the vectorization request remotely using the IVectorizationServiceClient over HTTP."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html",
    "title": "Class MemoryRequestSourceService | FoundationaLLM",
    "keywords": "Class MemoryRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements an in-memory request source, suitable for testing and quick prototyping. public class MemoryRequestSourceService : IRequestSourceService Inheritance object MemoryRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MemoryRequestSourceService(RequestSourceServiceSettings, ILogger<MemoryRequestSourceService>) Implements an in-memory request source, suitable for testing and quick prototyping. public MemoryRequestSourceService(RequestSourceServiceSettings settings, ILogger<MemoryRequestSourceService> logger) Parameters settings RequestSourceServiceSettings The settings used to initialize the request source. logger ILogger<MemoryRequestSourceService> The logger instnce used for logging. Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string requestId, string popReceipt) Parameters requestId string popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. public Task<IEnumerable<VectorizationDequeuedRequest>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<VectorizationDequeuedRequest>> A collection of VectorizationDequeuedRequest items. SubmitRequest(string) Submits a new vectorization request to the source. public Task SubmitRequest(string requestName) Parameters requestName string The name (unique identifier) of the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html",
    "title": "Class RequestSourcesBuilder | FoundationaLLM",
    "keywords": "Class RequestSourcesBuilder Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). public class RequestSourcesBuilder Inheritance object RequestSourcesBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestSourcesBuilder() Constructs a new instance of the builder. public RequestSourcesBuilder() Methods Build() Builds the dictionary of request source. public Dictionary<string, IRequestSourceService> Build() Returns Dictionary<string, IRequestSourceService> The dictionary of IRequestSourceService instances, hashed by the identifier of the request source. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for the request sources. public RequestSourcesBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the request sources. public RequestSourcesBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuing(VectorizationQueuing) Specifies the type of queuing used by the request sources. public RequestSourcesBuilder WithQueuing(VectorizationQueuing queuing) Parameters queuing VectorizationQueuing The VectorizationQueuing value defining the type of queuing. Returns RequestSourcesBuilder The updated instance of the builder. WithSettings(List<RequestSourceServiceSettings>?) Specifies the settings for each IRequestSourceService instance to be built. public RequestSourcesBuilder WithSettings(List<RequestSourceServiceSettings>? settings) Parameters settings List<RequestSourceServiceSettings> The list of RequestSourceServiceSettings objects providing the settings for the request sources. Returns RequestSourcesBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html",
    "title": "Class RequestSourcesCache | FoundationaLLM",
    "keywords": "Class RequestSourcesCache Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public class RequestSourcesCache : IRequestSourcesCache Inheritance object RequestSourcesCache Implements IRequestSourcesCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the cache. Constructors RequestSourcesCache(IOptions<VectorizationWorkerSettings>, IConfigurationSection, ILoggerFactory) Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public RequestSourcesCache(IOptions<VectorizationWorkerSettings> vectorizationWorkerOptions, IConfigurationSection queuesConfiguration, ILoggerFactory loggerFactory) Parameters vectorizationWorkerOptions IOptions<VectorizationWorkerSettings> The IOptions<TOptions> instance containing the VectorizationWorkerSettings instance. queuesConfiguration IConfigurationSection The IConfigurationSection containing settings for the queues. loggerFactory ILoggerFactory The ILoggerFactory used to create new loggers for child objects. Remarks Creates a new instance of the cache. Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. public Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html",
    "title": "Class StorageQueueRequestSourceService | FoundationaLLM",
    "keywords": "Class StorageQueueRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.dll Implements a request source that uses Azure storage queues. public class StorageQueueRequestSourceService : IRequestSourceService Inheritance object StorageQueueRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageQueueRequestSourceService(RequestSourceServiceSettings, ILogger<StorageQueueRequestSourceService>) Creates a new instance of the request source. public StorageQueueRequestSourceService(RequestSourceServiceSettings settings, ILogger<StorageQueueRequestSourceService> logger) Parameters settings RequestSourceServiceSettings The RequestSourceServiceSettings object providing the settings. logger ILogger<StorageQueueRequestSourceService> The logger used for logging. Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string messageId, string popReceipt) Parameters messageId string The underlying message identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. public Task<IEnumerable<VectorizationDequeuedRequest>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<VectorizationDequeuedRequest>> A collection of VectorizationDequeuedRequest items. SubmitRequest(string) Submits a new vectorization request to the source. public Task SubmitRequest(string requestName) Parameters requestName string The name (unique identifier) of the vectorization request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.RequestSources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.RequestSources Classes MemoryRequestSourceService Implements an in-memory request source, suitable for testing and quick prototyping. RequestSourcesBuilder Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). RequestSourcesCache Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. StorageQueueRequestSourceService Implements a request source that uses Azure storage queues."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.GatewayTextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.GatewayTextEmbeddingService.html",
    "title": "Class GatewayTextEmbeddingService | FoundationaLLM",
    "keywords": "Class GatewayTextEmbeddingService Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.dll Generates text embeddings by routing requests through the FoundationaLLM Gateway API. public class GatewayTextEmbeddingService : ITextEmbeddingService Inheritance object GatewayTextEmbeddingService Implements ITextEmbeddingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayTextEmbeddingService(IOptions<InstanceSettings>, IHttpClientFactoryService, ILoggerFactory) Generates text embeddings by routing requests through the FoundationaLLM Gateway API. public GatewayTextEmbeddingService(IOptions<InstanceSettings> instanceOptions, IHttpClientFactoryService httpClientFactoryService, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. httpClientFactoryService IHttpClientFactoryService The HTTP Client Factory service. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods GetEmbeddingsAsync(IList<TextChunk>, string, bool) Initializes the text embedding operation. Depending on the implementation, this can be an atomic operation or a long-running one. public Task<TextEmbeddingResult> GetEmbeddingsAsync(IList<TextChunk> textChunks, string modelName, bool Prioritized) Parameters textChunks IList<TextChunk> The list of text chunks which need to be embedded. modelName string Prioritized bool Indicates whether the request should be prioritized. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation. GetEmbeddingsAsync(string) Retrieves the result of a long-running text embedding operation. public Task<TextEmbeddingResult> GetEmbeddingsAsync(string operationId) Parameters operationId string The unique identifier of the long-running operation. Returns Task<TextEmbeddingResult> A TextEmbeddingResult object containing the result of the text embedding operation."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.IndexingServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.IndexingServiceFactory.html",
    "title": "Class IndexingServiceFactory | FoundationaLLM",
    "keywords": "Class IndexingServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.dll Creates text splitter service instances. public class IndexingServiceFactory : IVectorizationServiceFactory<IIndexingService> Inheritance object IndexingServiceFactory Implements IVectorizationServiceFactory<IIndexingService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public IndexingServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The collection of registered resource providers. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<IIndexingService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<IIndexingService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(IIndexingService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(IIndexingService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextEmbeddingServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextEmbeddingServiceFactory.html",
    "title": "Class TextEmbeddingServiceFactory | FoundationaLLM",
    "keywords": "Class TextEmbeddingServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.dll Creates text splitter service instances. public class TextEmbeddingServiceFactory : IVectorizationServiceFactory<ITextEmbeddingService> Inheritance object TextEmbeddingServiceFactory Implements IVectorizationServiceFactory<ITextEmbeddingService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextEmbeddingServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public TextEmbeddingServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The collection of registered resource providers. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<ITextEmbeddingService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<ITextEmbeddingService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(ITextEmbeddingService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(ITextEmbeddingService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextSplitterServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextSplitterServiceFactory.html",
    "title": "Class TextSplitterServiceFactory | FoundationaLLM",
    "keywords": "Class TextSplitterServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.dll Creates text splitter service instances. public class TextSplitterServiceFactory : IVectorizationServiceFactory<ITextSplitterService> Inheritance object TextSplitterServiceFactory Implements IVectorizationServiceFactory<ITextSplitterService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextSplitterServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public TextSplitterServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The collection of registered resource providers. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<ITextSplitterService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<ITextSplitterService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(ITextSplitterService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(ITextSplitterService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.Text | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.Text Classes GatewayTextEmbeddingService Generates text embeddings by routing requests through the FoundationaLLM Gateway API. IndexingServiceFactory Creates text splitter service instances. TextEmbeddingServiceFactory Creates text splitter service instances. TextSplitterServiceFactory Creates text splitter service instances."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.AsynchronousVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.AsynchronousVectorizationService.html",
    "title": "Class AsynchronousVectorizationService | FoundationaLLM",
    "keywords": "Class AsynchronousVectorizationService Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Assembly FoundationaLLM.Vectorization.dll Implements the IVectorizationService interface for Asynchronous vectorization requests. public class AsynchronousVectorizationService : IVectorizationService Inheritance object AsynchronousVectorizationService Implements IVectorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the AsynchronousVectorizationService service. Constructors AsynchronousVectorizationService(IRequestSourcesCache) Implements the IVectorizationService interface for Asynchronous vectorization requests. public AsynchronousVectorizationService(IRequestSourcesCache requestSourcesCache) Parameters requestSourcesCache IRequestSourcesCache The IRequestSourcesCache cache of request sources. Remarks Creates a new instance of the AsynchronousVectorizationService service. Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.SynchronousVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.SynchronousVectorizationService.html",
    "title": "Class SynchronousVectorizationService | FoundationaLLM",
    "keywords": "Class SynchronousVectorizationService Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Assembly FoundationaLLM.Vectorization.dll Handles synchronous in-memory vectorization requests. public class SynchronousVectorizationService : IVectorizationService Inheritance object SynchronousVectorizationService Implements IVectorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SynchronousVectorizationService(MemoryVectorizationStateService, IEnumerable<IResourceProviderService>, IConfigurationSection, IServiceProvider, ILoggerFactory) Handles synchronous in-memory vectorization requests. public SynchronousVectorizationService(MemoryVectorizationStateService vectorizationStateService, IEnumerable<IResourceProviderService> resourceProviderServices, IConfigurationSection stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters vectorizationStateService MemoryVectorizationStateService resourceProviderServices IEnumerable<IResourceProviderService> stepsConfiguration IConfigurationSection serviceProvider IServiceProvider loggerFactory ILoggerFactory Methods ProcessRequest(VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.VectorizationServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.VectorizationServiceFactory.html",
    "title": "Class VectorizationServiceFactory | FoundationaLLM",
    "keywords": "Class VectorizationServiceFactory Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Assembly FoundationaLLM.Vectorization.dll Responsible for creating the appropriate vectorization service based on the request processing type. public class VectorizationServiceFactory Inheritance object VectorizationServiceFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationServiceFactory(IRequestSourcesCache, MemoryVectorizationStateService, IEnumerable<IResourceProviderService>, IConfigurationSection, IServiceProvider, ILoggerFactory) Responsible for creating the appropriate vectorization service based on the request processing type. public VectorizationServiceFactory(IRequestSourcesCache requestSourcesCache, MemoryVectorizationStateService inMemoryStateService, IEnumerable<IResourceProviderService> resourceProviderServices, IConfigurationSection stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters requestSourcesCache IRequestSourcesCache inMemoryStateService MemoryVectorizationStateService The In-Memory Vectorization State Service for Synchronous requests. resourceProviderServices IEnumerable<IResourceProviderService> The collection of configured Resource Providers. stepsConfiguration IConfigurationSection The configuration of different steps of the pipeline. serviceProvider IServiceProvider The service provider. loggerFactory ILoggerFactory The factory responsible for logging. Methods GetService(VectorizationRequest) Creates the appropriate vectorization service based on the request processing type. public IVectorizationService GetService(VectorizationRequest request) Parameters request VectorizationRequest The vectorization request. Returns IVectorizationService The vectorization service that will process the request."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.VectorizationServices | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Classes AsynchronousVectorizationService Implements the IVectorizationService interface for Asynchronous vectorization requests. SynchronousVectorizationService Handles synchronous in-memory vectorization requests. VectorizationServiceFactory Responsible for creating the appropriate vectorization service based on the request processing type."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html",
    "title": "Class BlobStorageVectorizationStateService | FoundationaLLM",
    "keywords": "Class BlobStorageVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll Provides vectorization state persistence services using Azure blob storage. public class BlobStorageVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase BlobStorageVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationRequest) VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationState) VectorizationStateServiceBase.HashContentIdentifier(ContentIdentifier) VectorizationStateServiceBase.HashText(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods VectorizationStateServiceExtensions.GetPipelineExecutionProcessingState(IVectorizationStateService, VectorizationResourceProviderService, string, string, UnifiedUserIdentity) ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new vectorization state service instance. Constructors BlobStorageVectorizationStateService(IStorageService, ILoggerFactory) Provides vectorization state persistence services using Azure blob storage. public BlobStorageVectorizationStateService(IStorageService storageService, ILoggerFactory loggerFactory) Parameters storageService IStorageService The IStorageService that provides storage services. loggerFactory ILoggerFactory The logger factory used to create loggers. Remarks Creates a new vectorization state service instance. Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). public Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadPipelineState(string, string) Reads the state associated with a vectorization pipeline execution. public Task<VectorizationPipelineState> ReadPipelineState(string pipelineName, string pipelineExecutionId) Parameters pipelineName string The name of the pipeline. pipelineExecutionId string The unique identifier of the pipeline execution. Returns Task<VectorizationPipelineState> ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SavePipelineState(VectorizationPipelineState) Saves a specified vectorization pipeline state execution. public Task SavePipelineState(VectorizationPipelineState state) Parameters state VectorizationPipelineState Returns Task SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html",
    "title": "Class MemoryVectorizationStateService | FoundationaLLM",
    "keywords": "Class MemoryVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll Provides in-memory vectorization state persistence. public class MemoryVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase MemoryVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationRequest) VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationState) VectorizationStateServiceBase.HashContentIdentifier(ContentIdentifier) VectorizationStateServiceBase.HashText(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods VectorizationStateServiceExtensions.GetPipelineExecutionProcessingState(IVectorizationStateService, VectorizationResourceProviderService, string, string, UnifiedUserIdentity) ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). public Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadPipelineState(string, string) Reads the state associated with a vectorization pipeline execution. public Task<VectorizationPipelineState> ReadPipelineState(string pipelineName, string pipelineExecutionId) Parameters pipelineName string The name of the pipeline. pipelineExecutionId string The unique identifier of the pipeline execution. Returns Task<VectorizationPipelineState> ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SavePipelineState(VectorizationPipelineState) Saves a specified vectorization pipeline state execution. public Task SavePipelineState(VectorizationPipelineState state) Parameters state VectorizationPipelineState Returns Task SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateItem.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateItem.html",
    "title": "Class VectorizationStateItem | FoundationaLLM",
    "keywords": "Class VectorizationStateItem Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll Properties that are serialized in the Parquet file associated with the vectorization state. Combines properties from the TextPartition and the TextEmbeddingVector artifacts. public class VectorizationStateItem Inheritance object VectorizationStateItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PipelineName The name of the pipeline the item relates to. [ParquetRequired] public string? PipelineName { get; set; } Property Value string Position The position of the item in the list of vectorization artifacts. [ParquetRequired] public int Position { get; set; } Property Value int TextEmbeddingVector The content of the TextEmbeddingVector artifact. public List<float>? TextEmbeddingVector { get; set; } Property Value List<float> TextEmbeddingVectorHash The MD5 of the TextEmbeddingVector artifact content in string format. public string? TextEmbeddingVectorHash { get; set; } Property Value string TextEmbeddingVectorSize The size of the TextEmbeddingVector artifact content (number of embedding dimensions). public int TextEmbeddingVectorSize { get; set; } Property Value int TextPartitionContent The content of the TextPartition artifact. [ParquetRequired] public string? TextPartitionContent { get; set; } Property Value string TextPartitionHash The MD5 hash of the TextPartition artifact content. [ParquetRequired] public string? TextPartitionHash { get; set; } Property Value string TextPartitionSize The size of the TextPartition artifact content. [ParquetRequired] public int TextPartitionSize { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html",
    "title": "Class VectorizationStateServiceBase | FoundationaLLM",
    "keywords": "Class VectorizationStateServiceBase Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.dll Provides base services for the vectorization state services. public abstract class VectorizationStateServiceBase Inheritance object VectorizationStateServiceBase Derived BlobStorageVectorizationStateService MemoryVectorizationStateService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetPersistenceIdentifier(VectorizationRequest) Gets the persistence identifier of the vectorization state based on the vectorization request. protected string GetPersistenceIdentifier(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest for which the persistence identifier is being built. Returns string The string version of the persistence identifier. GetPersistenceIdentifier(VectorizationState) Gets the persistence identifier of the vectorization state based on the vectorization state itself. protected string GetPersistenceIdentifier(VectorizationState vectorizationState) Parameters vectorizationState VectorizationState The VectorizationState for which the persistence identifier is being built. Returns string The string version of the persistence identifier. HashContentIdentifier(ContentIdentifier) Computes the MD5 hash of the content identifier. protected static string HashContentIdentifier(ContentIdentifier contentIdentifier) Parameters contentIdentifier ContentIdentifier The ContentIdentifier holding the content identification information. Returns string The string version of the hash. HashText(string) Computes the MD5 hash of a specified chunk of text. protected static string HashText(string text) Parameters text string The chunk of text to be hashed. Returns string The string version of the hash."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Classes BlobStorageVectorizationStateService Provides vectorization state persistence services using Azure blob storage. MemoryVectorizationStateService Provides in-memory vectorization state persistence. VectorizationStateItem Properties that are serialized in the Parquet file associated with the vectorization state. Combines properties from the TextPartition and the TextEmbeddingVector artifacts. VectorizationStateServiceBase Provides base services for the vectorization state services."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Services Namespaces FoundationaLLM.Vectorization.Services.ContentSources FoundationaLLM.Vectorization.Services.DataSources FoundationaLLM.Vectorization.Services.Pipelines FoundationaLLM.Vectorization.Services.RequestProcessors FoundationaLLM.Vectorization.Services.RequestSources FoundationaLLM.Vectorization.Services.Text FoundationaLLM.Vectorization.Services.VectorizationServices FoundationaLLM.Vectorization.Services.VectorizationStates Classes RequestManagerService Manages vectorization requests originating from a specific request source."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.IndexingProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.IndexingProfileValidator.html",
    "title": "Class IndexingProfileValidator | FoundationaLLM",
    "keywords": "Class IndexingProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the IndexingProfile model. public class IndexingProfileValidator : AbstractValidator<IndexingProfile>, IValidator<IndexingProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IndexingProfile> IndexingProfileValidator Implements IValidator<IndexingProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IndexingProfile>.Validate(IndexingProfile) AbstractValidator<IndexingProfile>.ValidateAsync(IndexingProfile, CancellationToken) AbstractValidator<IndexingProfile>.Validate(ValidationContext<IndexingProfile>) AbstractValidator<IndexingProfile>.ValidateAsync(ValidationContext<IndexingProfile>, CancellationToken) AbstractValidator<IndexingProfile>.CreateDescriptor() AbstractValidator<IndexingProfile>.RuleFor<TProperty>(Expression<Func<IndexingProfile, TProperty>>) AbstractValidator<IndexingProfile>.Transform<TProperty, TTransformed>(Expression<Func<IndexingProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IndexingProfile>.Transform<TProperty, TTransformed>(Expression<Func<IndexingProfile, TProperty>>, Func<IndexingProfile, TProperty, TTransformed>) AbstractValidator<IndexingProfile>.RuleForEach<TElement>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>) AbstractValidator<IndexingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IndexingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>, Func<IndexingProfile, TElement, TTransformed>) AbstractValidator<IndexingProfile>.RuleSet(string, Action) AbstractValidator<IndexingProfile>.When(Func<IndexingProfile, bool>, Action) AbstractValidator<IndexingProfile>.When(Func<IndexingProfile, ValidationContext<IndexingProfile>, bool>, Action) AbstractValidator<IndexingProfile>.Unless(Func<IndexingProfile, bool>, Action) AbstractValidator<IndexingProfile>.Unless(Func<IndexingProfile, ValidationContext<IndexingProfile>, bool>, Action) AbstractValidator<IndexingProfile>.WhenAsync(Func<IndexingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.WhenAsync(Func<IndexingProfile, ValidationContext<IndexingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.UnlessAsync(Func<IndexingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.UnlessAsync(Func<IndexingProfile, ValidationContext<IndexingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.Include(IValidator<IndexingProfile>) AbstractValidator<IndexingProfile>.Include<TValidator>(Func<IndexingProfile, TValidator>) AbstractValidator<IndexingProfile>.GetEnumerator() AbstractValidator<IndexingProfile>.EnsureInstanceNotNull(object) AbstractValidator<IndexingProfile>.PreValidate(ValidationContext<IndexingProfile>, ValidationResult) AbstractValidator<IndexingProfile>.RaiseValidationException(ValidationContext<IndexingProfile>, ValidationResult) AbstractValidator<IndexingProfile>.OnRuleAdded(IValidationRule<IndexingProfile>) AbstractValidator<IndexingProfile>.CascadeMode AbstractValidator<IndexingProfile>.ClassLevelCascadeMode AbstractValidator<IndexingProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingProfileValidator() Configures the validation rules for the IndexingProfile model. public IndexingProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextEmbeddingProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextEmbeddingProfileValidator.html",
    "title": "Class TextEmbeddingProfileValidator | FoundationaLLM",
    "keywords": "Class TextEmbeddingProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the TextEmbeddingProfile model. public class TextEmbeddingProfileValidator : AbstractValidator<TextEmbeddingProfile>, IValidator<TextEmbeddingProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<TextEmbeddingProfile> TextEmbeddingProfileValidator Implements IValidator<TextEmbeddingProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<TextEmbeddingProfile>.Validate(TextEmbeddingProfile) AbstractValidator<TextEmbeddingProfile>.ValidateAsync(TextEmbeddingProfile, CancellationToken) AbstractValidator<TextEmbeddingProfile>.Validate(ValidationContext<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.ValidateAsync(ValidationContext<TextEmbeddingProfile>, CancellationToken) AbstractValidator<TextEmbeddingProfile>.CreateDescriptor() AbstractValidator<TextEmbeddingProfile>.RuleFor<TProperty>(Expression<Func<TextEmbeddingProfile, TProperty>>) AbstractValidator<TextEmbeddingProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextEmbeddingProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<TextEmbeddingProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextEmbeddingProfile, TProperty>>, Func<TextEmbeddingProfile, TProperty, TTransformed>) AbstractValidator<TextEmbeddingProfile>.RuleForEach<TElement>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>) AbstractValidator<TextEmbeddingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<TextEmbeddingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>, Func<TextEmbeddingProfile, TElement, TTransformed>) AbstractValidator<TextEmbeddingProfile>.RuleSet(string, Action) AbstractValidator<TextEmbeddingProfile>.When(Func<TextEmbeddingProfile, bool>, Action) AbstractValidator<TextEmbeddingProfile>.When(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, bool>, Action) AbstractValidator<TextEmbeddingProfile>.Unless(Func<TextEmbeddingProfile, bool>, Action) AbstractValidator<TextEmbeddingProfile>.Unless(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, bool>, Action) AbstractValidator<TextEmbeddingProfile>.WhenAsync(Func<TextEmbeddingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.WhenAsync(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.UnlessAsync(Func<TextEmbeddingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.UnlessAsync(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.Include(IValidator<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.Include<TValidator>(Func<TextEmbeddingProfile, TValidator>) AbstractValidator<TextEmbeddingProfile>.GetEnumerator() AbstractValidator<TextEmbeddingProfile>.EnsureInstanceNotNull(object) AbstractValidator<TextEmbeddingProfile>.PreValidate(ValidationContext<TextEmbeddingProfile>, ValidationResult) AbstractValidator<TextEmbeddingProfile>.RaiseValidationException(ValidationContext<TextEmbeddingProfile>, ValidationResult) AbstractValidator<TextEmbeddingProfile>.OnRuleAdded(IValidationRule<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.CascadeMode AbstractValidator<TextEmbeddingProfile>.ClassLevelCascadeMode AbstractValidator<TextEmbeddingProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextEmbeddingProfileValidator() Configures the validation rules for the TextEmbeddingProfile model. public TextEmbeddingProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextPartitioningProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextPartitioningProfileValidator.html",
    "title": "Class TextPartitioningProfileValidator | FoundationaLLM",
    "keywords": "Class TextPartitioningProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the TextPartitioningProfile model. public class TextPartitioningProfileValidator : AbstractValidator<TextPartitioningProfile>, IValidator<TextPartitioningProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<TextPartitioningProfile> TextPartitioningProfileValidator Implements IValidator<TextPartitioningProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<TextPartitioningProfile>.Validate(TextPartitioningProfile) AbstractValidator<TextPartitioningProfile>.ValidateAsync(TextPartitioningProfile, CancellationToken) AbstractValidator<TextPartitioningProfile>.Validate(ValidationContext<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.ValidateAsync(ValidationContext<TextPartitioningProfile>, CancellationToken) AbstractValidator<TextPartitioningProfile>.CreateDescriptor() AbstractValidator<TextPartitioningProfile>.RuleFor<TProperty>(Expression<Func<TextPartitioningProfile, TProperty>>) AbstractValidator<TextPartitioningProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextPartitioningProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<TextPartitioningProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextPartitioningProfile, TProperty>>, Func<TextPartitioningProfile, TProperty, TTransformed>) AbstractValidator<TextPartitioningProfile>.RuleForEach<TElement>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>) AbstractValidator<TextPartitioningProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<TextPartitioningProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>, Func<TextPartitioningProfile, TElement, TTransformed>) AbstractValidator<TextPartitioningProfile>.RuleSet(string, Action) AbstractValidator<TextPartitioningProfile>.When(Func<TextPartitioningProfile, bool>, Action) AbstractValidator<TextPartitioningProfile>.When(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, bool>, Action) AbstractValidator<TextPartitioningProfile>.Unless(Func<TextPartitioningProfile, bool>, Action) AbstractValidator<TextPartitioningProfile>.Unless(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, bool>, Action) AbstractValidator<TextPartitioningProfile>.WhenAsync(Func<TextPartitioningProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.WhenAsync(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.UnlessAsync(Func<TextPartitioningProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.UnlessAsync(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.Include(IValidator<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.Include<TValidator>(Func<TextPartitioningProfile, TValidator>) AbstractValidator<TextPartitioningProfile>.GetEnumerator() AbstractValidator<TextPartitioningProfile>.EnsureInstanceNotNull(object) AbstractValidator<TextPartitioningProfile>.PreValidate(ValidationContext<TextPartitioningProfile>, ValidationResult) AbstractValidator<TextPartitioningProfile>.RaiseValidationException(ValidationContext<TextPartitioningProfile>, ValidationResult) AbstractValidator<TextPartitioningProfile>.OnRuleAdded(IValidationRule<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.CascadeMode AbstractValidator<TextPartitioningProfile>.ClassLevelCascadeMode AbstractValidator<TextPartitioningProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextPartitioningProfileValidator() Configures the validation rules for the TextPartitioningProfile model. public TextPartitioningProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationPipelineValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationPipelineValidator.html",
    "title": "Class VectorizationPipelineValidator | FoundationaLLM",
    "keywords": "Class VectorizationPipelineValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the VectorizationPipeline model. public class VectorizationPipelineValidator : AbstractValidator<VectorizationPipeline>, IValidator<VectorizationPipeline>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationPipeline> VectorizationPipelineValidator Implements IValidator<VectorizationPipeline> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationPipeline>.Validate(VectorizationPipeline) AbstractValidator<VectorizationPipeline>.ValidateAsync(VectorizationPipeline, CancellationToken) AbstractValidator<VectorizationPipeline>.Validate(ValidationContext<VectorizationPipeline>) AbstractValidator<VectorizationPipeline>.ValidateAsync(ValidationContext<VectorizationPipeline>, CancellationToken) AbstractValidator<VectorizationPipeline>.CreateDescriptor() AbstractValidator<VectorizationPipeline>.RuleFor<TProperty>(Expression<Func<VectorizationPipeline, TProperty>>) AbstractValidator<VectorizationPipeline>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationPipeline, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationPipeline>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationPipeline, TProperty>>, Func<VectorizationPipeline, TProperty, TTransformed>) AbstractValidator<VectorizationPipeline>.RuleForEach<TElement>(Expression<Func<VectorizationPipeline, IEnumerable<TElement>>>) AbstractValidator<VectorizationPipeline>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationPipeline, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationPipeline>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationPipeline, IEnumerable<TElement>>>, Func<VectorizationPipeline, TElement, TTransformed>) AbstractValidator<VectorizationPipeline>.RuleSet(string, Action) AbstractValidator<VectorizationPipeline>.When(Func<VectorizationPipeline, bool>, Action) AbstractValidator<VectorizationPipeline>.When(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, bool>, Action) AbstractValidator<VectorizationPipeline>.Unless(Func<VectorizationPipeline, bool>, Action) AbstractValidator<VectorizationPipeline>.Unless(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, bool>, Action) AbstractValidator<VectorizationPipeline>.WhenAsync(Func<VectorizationPipeline, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.WhenAsync(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.UnlessAsync(Func<VectorizationPipeline, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.UnlessAsync(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.Include(IValidator<VectorizationPipeline>) AbstractValidator<VectorizationPipeline>.Include<TValidator>(Func<VectorizationPipeline, TValidator>) AbstractValidator<VectorizationPipeline>.GetEnumerator() AbstractValidator<VectorizationPipeline>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationPipeline>.PreValidate(ValidationContext<VectorizationPipeline>, ValidationResult) AbstractValidator<VectorizationPipeline>.RaiseValidationException(ValidationContext<VectorizationPipeline>, ValidationResult) AbstractValidator<VectorizationPipeline>.OnRuleAdded(IValidationRule<VectorizationPipeline>) AbstractValidator<VectorizationPipeline>.CascadeMode AbstractValidator<VectorizationPipeline>.ClassLevelCascadeMode AbstractValidator<VectorizationPipeline>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationPipelineValidator() Configures the validation rules for the VectorizationPipeline model. public VectorizationPipelineValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationProfileBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationProfileBaseValidator.html",
    "title": "Class VectorizationProfileBaseValidator | FoundationaLLM",
    "keywords": "Class VectorizationProfileBaseValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the VectorizationProfileBase model. public class VectorizationProfileBaseValidator : AbstractValidator<VectorizationProfileBase>, IValidator<VectorizationProfileBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationProfileBase> VectorizationProfileBaseValidator Implements IValidator<VectorizationProfileBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationProfileBase>.Validate(VectorizationProfileBase) AbstractValidator<VectorizationProfileBase>.ValidateAsync(VectorizationProfileBase, CancellationToken) AbstractValidator<VectorizationProfileBase>.Validate(ValidationContext<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.ValidateAsync(ValidationContext<VectorizationProfileBase>, CancellationToken) AbstractValidator<VectorizationProfileBase>.CreateDescriptor() AbstractValidator<VectorizationProfileBase>.RuleFor<TProperty>(Expression<Func<VectorizationProfileBase, TProperty>>) AbstractValidator<VectorizationProfileBase>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationProfileBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationProfileBase>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationProfileBase, TProperty>>, Func<VectorizationProfileBase, TProperty, TTransformed>) AbstractValidator<VectorizationProfileBase>.RuleForEach<TElement>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>) AbstractValidator<VectorizationProfileBase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationProfileBase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>, Func<VectorizationProfileBase, TElement, TTransformed>) AbstractValidator<VectorizationProfileBase>.RuleSet(string, Action) AbstractValidator<VectorizationProfileBase>.When(Func<VectorizationProfileBase, bool>, Action) AbstractValidator<VectorizationProfileBase>.When(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, bool>, Action) AbstractValidator<VectorizationProfileBase>.Unless(Func<VectorizationProfileBase, bool>, Action) AbstractValidator<VectorizationProfileBase>.Unless(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, bool>, Action) AbstractValidator<VectorizationProfileBase>.WhenAsync(Func<VectorizationProfileBase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.WhenAsync(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.UnlessAsync(Func<VectorizationProfileBase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.UnlessAsync(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.Include(IValidator<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.Include<TValidator>(Func<VectorizationProfileBase, TValidator>) AbstractValidator<VectorizationProfileBase>.GetEnumerator() AbstractValidator<VectorizationProfileBase>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationProfileBase>.PreValidate(ValidationContext<VectorizationProfileBase>, ValidationResult) AbstractValidator<VectorizationProfileBase>.RaiseValidationException(ValidationContext<VectorizationProfileBase>, ValidationResult) AbstractValidator<VectorizationProfileBase>.OnRuleAdded(IValidationRule<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.CascadeMode AbstractValidator<VectorizationProfileBase>.ClassLevelCascadeMode AbstractValidator<VectorizationProfileBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationProfileBaseValidator() Configures the validation rules for the VectorizationProfileBase model. public VectorizationProfileBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestCreationTimeValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestCreationTimeValidator.html",
    "title": "Class VectorizationRequestCreationTimeValidator | FoundationaLLM",
    "keywords": "Class VectorizationRequestCreationTimeValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the creation of a VectorizationRequest. public class VectorizationRequestCreationTimeValidator : AbstractValidator<VectorizationRequest>, IValidator<VectorizationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationRequest> VectorizationRequestCreationTimeValidator Implements IValidator<VectorizationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationRequest>.Validate(VectorizationRequest) AbstractValidator<VectorizationRequest>.ValidateAsync(VectorizationRequest, CancellationToken) AbstractValidator<VectorizationRequest>.Validate(ValidationContext<VectorizationRequest>) AbstractValidator<VectorizationRequest>.ValidateAsync(ValidationContext<VectorizationRequest>, CancellationToken) AbstractValidator<VectorizationRequest>.CreateDescriptor() AbstractValidator<VectorizationRequest>.RuleFor<TProperty>(Expression<Func<VectorizationRequest, TProperty>>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<VectorizationRequest, TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.RuleForEach<TElement>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<VectorizationRequest, TElement, TTransformed>) AbstractValidator<VectorizationRequest>.RuleSet(string, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.Include(IValidator<VectorizationRequest>) AbstractValidator<VectorizationRequest>.Include<TValidator>(Func<VectorizationRequest, TValidator>) AbstractValidator<VectorizationRequest>.GetEnumerator() AbstractValidator<VectorizationRequest>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationRequest>.PreValidate(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.RaiseValidationException(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.OnRuleAdded(IValidationRule<VectorizationRequest>) AbstractValidator<VectorizationRequest>.CascadeMode AbstractValidator<VectorizationRequest>.ClassLevelCascadeMode AbstractValidator<VectorizationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationRequestCreationTimeValidator() Configures the validation rules for the creation of a VectorizationRequest. public VectorizationRequestCreationTimeValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestValidator.html",
    "title": "Class VectorizationRequestValidator | FoundationaLLM",
    "keywords": "Class VectorizationRequestValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the VectorizationRequest model. public class VectorizationRequestValidator : AbstractValidator<VectorizationRequest>, IValidator<VectorizationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationRequest> VectorizationRequestValidator Implements IValidator<VectorizationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationRequest>.Validate(VectorizationRequest) AbstractValidator<VectorizationRequest>.ValidateAsync(VectorizationRequest, CancellationToken) AbstractValidator<VectorizationRequest>.Validate(ValidationContext<VectorizationRequest>) AbstractValidator<VectorizationRequest>.ValidateAsync(ValidationContext<VectorizationRequest>, CancellationToken) AbstractValidator<VectorizationRequest>.CreateDescriptor() AbstractValidator<VectorizationRequest>.RuleFor<TProperty>(Expression<Func<VectorizationRequest, TProperty>>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<VectorizationRequest, TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.RuleForEach<TElement>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<VectorizationRequest, TElement, TTransformed>) AbstractValidator<VectorizationRequest>.RuleSet(string, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.Include(IValidator<VectorizationRequest>) AbstractValidator<VectorizationRequest>.Include<TValidator>(Func<VectorizationRequest, TValidator>) AbstractValidator<VectorizationRequest>.GetEnumerator() AbstractValidator<VectorizationRequest>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationRequest>.PreValidate(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.RaiseValidationException(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.OnRuleAdded(IValidationRule<VectorizationRequest>) AbstractValidator<VectorizationRequest>.CascadeMode AbstractValidator<VectorizationRequest>.ClassLevelCascadeMode AbstractValidator<VectorizationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationRequestValidator() Configures the validation rules for the VectorizationRequest model. public VectorizationRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Validation.Resources | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Validation.Resources Classes IndexingProfileValidator Validator for the IndexingProfile model. TextEmbeddingProfileValidator Validator for the TextEmbeddingProfile model. TextPartitioningProfileValidator Validator for the TextPartitioningProfile model. VectorizationPipelineValidator Validator for the VectorizationPipeline model. VectorizationProfileBaseValidator Validator for the VectorizationProfileBase model. VectorizationRequestCreationTimeValidator Validator for the creation of a VectorizationRequest. VectorizationRequestValidator Validator for the VectorizationRequest model."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.ContentIdentifierValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.ContentIdentifierValidator.html",
    "title": "Class ContentIdentifierValidator | FoundationaLLM",
    "keywords": "Class ContentIdentifierValidator Namespace FoundationaLLM.Vectorization.Validation.Vectorization Assembly FoundationaLLM.Vectorization.dll Validator for the ContentIdentifier model. public class ContentIdentifierValidator : AbstractValidator<ContentIdentifier>, IValidator<ContentIdentifier>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ContentIdentifier> ContentIdentifierValidator Implements IValidator<ContentIdentifier> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ContentIdentifier>.Validate(ContentIdentifier) AbstractValidator<ContentIdentifier>.ValidateAsync(ContentIdentifier, CancellationToken) AbstractValidator<ContentIdentifier>.Validate(ValidationContext<ContentIdentifier>) AbstractValidator<ContentIdentifier>.ValidateAsync(ValidationContext<ContentIdentifier>, CancellationToken) AbstractValidator<ContentIdentifier>.CreateDescriptor() AbstractValidator<ContentIdentifier>.RuleFor<TProperty>(Expression<Func<ContentIdentifier, TProperty>>) AbstractValidator<ContentIdentifier>.Transform<TProperty, TTransformed>(Expression<Func<ContentIdentifier, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ContentIdentifier>.Transform<TProperty, TTransformed>(Expression<Func<ContentIdentifier, TProperty>>, Func<ContentIdentifier, TProperty, TTransformed>) AbstractValidator<ContentIdentifier>.RuleForEach<TElement>(Expression<Func<ContentIdentifier, IEnumerable<TElement>>>) AbstractValidator<ContentIdentifier>.TransformForEach<TElement, TTransformed>(Expression<Func<ContentIdentifier, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ContentIdentifier>.TransformForEach<TElement, TTransformed>(Expression<Func<ContentIdentifier, IEnumerable<TElement>>>, Func<ContentIdentifier, TElement, TTransformed>) AbstractValidator<ContentIdentifier>.RuleSet(string, Action) AbstractValidator<ContentIdentifier>.When(Func<ContentIdentifier, bool>, Action) AbstractValidator<ContentIdentifier>.When(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, bool>, Action) AbstractValidator<ContentIdentifier>.Unless(Func<ContentIdentifier, bool>, Action) AbstractValidator<ContentIdentifier>.Unless(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, bool>, Action) AbstractValidator<ContentIdentifier>.WhenAsync(Func<ContentIdentifier, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.WhenAsync(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.UnlessAsync(Func<ContentIdentifier, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.UnlessAsync(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.Include(IValidator<ContentIdentifier>) AbstractValidator<ContentIdentifier>.Include<TValidator>(Func<ContentIdentifier, TValidator>) AbstractValidator<ContentIdentifier>.GetEnumerator() AbstractValidator<ContentIdentifier>.EnsureInstanceNotNull(object) AbstractValidator<ContentIdentifier>.PreValidate(ValidationContext<ContentIdentifier>, ValidationResult) AbstractValidator<ContentIdentifier>.RaiseValidationException(ValidationContext<ContentIdentifier>, ValidationResult) AbstractValidator<ContentIdentifier>.OnRuleAdded(IValidationRule<ContentIdentifier>) AbstractValidator<ContentIdentifier>.CascadeMode AbstractValidator<ContentIdentifier>.ClassLevelCascadeMode AbstractValidator<ContentIdentifier>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentIdentifierValidator() Configures the validation rules for the ContentIdentifier model. public ContentIdentifierValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.html",
    "title": "Namespace FoundationaLLM.Vectorization.Validation.Vectorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Validation.Vectorization Classes ContentIdentifierValidator Validator for the ContentIdentifier model."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.html",
    "title": "Namespace FoundationaLLM.Vectorization.Validation | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Validation Namespaces FoundationaLLM.Vectorization.Validation.Resources FoundationaLLM.Vectorization.Validation.Vectorization"
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html",
    "title": "Class VectorizationWorker | FoundationaLLM",
    "keywords": "Class VectorizationWorker Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.dll Provides the core execution context for the vectorization worker. public class VectorizationWorker Inheritance object VectorizationWorker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorker(IEnumerable<IRequestManagerService>) Provides the core execution context for the vectorization worker. public VectorizationWorker(IEnumerable<IRequestManagerService> requestManagerServices) Parameters requestManagerServices IEnumerable<IRequestManagerService> The collection of request managers to run. Methods Run() Starts all the request managers and enters a holding pattern waiting on them to stop. public Task Run() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html",
    "title": "Class VectorizationWorkerBuilder | FoundationaLLM",
    "keywords": "Class VectorizationWorkerBuilder Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.dll Implements a builder for a vectorization worker. public class VectorizationWorkerBuilder Inheritance object VectorizationWorkerBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorkerBuilder() Constructs a new instance of the builder. public VectorizationWorkerBuilder() Methods Build() Builds the vectorization worker. public VectorizationWorker Build() Returns VectorizationWorker The vectorization worker instance. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithCancellationToken(CancellationToken) Specifies the cancellation token used to signal stopping the vectorization worker. public VectorizationWorkerBuilder WithCancellationToken(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken used to signal stopping. Returns VectorizationWorkerBuilder The updated instance of the builder. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for child objects. public VectorizationWorkerBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns VectorizationWorkerBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the vectorization worker. public VectorizationWorkerBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithServiceProvider(IServiceProvider) Specifies the dependency injection service provider. public VectorizationWorkerBuilder WithServiceProvider(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. Returns VectorizationWorkerBuilder The updated instance of the builder. WithSettings(VectorizationWorkerSettings) Specifies the settings used to build the vectorization worker. public VectorizationWorkerBuilder WithSettings(VectorizationWorkerSettings settings) Parameters settings VectorizationWorkerSettings The VectorizationWorkerSettingsobject providing the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithStateService(IVectorizationStateService) Specifies the vectorization state service that manages vectorization states. public VectorizationWorkerBuilder WithStateService(IVectorizationStateService stateService) Parameters stateService IVectorizationStateService The IVectorizationStateService service managing state. Returns VectorizationWorkerBuilder The updated instance of the builder. WithStepsConfiguration(IConfigurationSection) Specifies the configuration section containing settings for vectorization pipeline steps. public VectorizationWorkerBuilder WithStepsConfiguration(IConfigurationSection stepsConfiguration) Parameters stepsConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns VectorizationWorkerBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "keywords": "Class StatusController Namespace FoundationaLLM.Vectorization.Worker.Controllers Assembly FoundationaLLM.Vectorization.Worker.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization Worker service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization Worker service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker.Controllers | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Worker.Controllers Classes StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html",
    "title": "Class Worker | FoundationaLLM",
    "keywords": "Class Worker Namespace FoundationaLLM.Vectorization.Worker Assembly FoundationaLLM.Vectorization.Worker.dll The background service used to run the worker. public class Worker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService Worker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the worker. Constructors Worker(IVectorizationStateService, IOptions<VectorizationWorkerSettings>, IConfigurationSection, IConfigurationSection, IServiceProvider, ILoggerFactory) The background service used to run the worker. public Worker(IVectorizationStateService stateService, IOptions<VectorizationWorkerSettings> settings, IConfigurationSection queuesConfigurationSection, IConfigurationSection stepsConfigurationSection, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters stateService IVectorizationStateService The IVectorizationStateService used to manage the vectorization state. settings IOptions<VectorizationWorkerSettings> The VectorizationWorkerSettings options holding the vectorization worker settings. queuesConfigurationSection IConfigurationSection The IConfigurationSection containing settings for the queues. stepsConfigurationSection IConfigurationSection The IConfigurationSection containing settings for the vectorization steps. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers in child objects. Remarks Creates a new instance of the worker. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization.Worker Namespaces FoundationaLLM.Vectorization.Worker.Controllers Classes Worker The background service used to run the worker."
  },
  "api/dotnet/FoundationaLLM.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.html",
    "title": "Namespace FoundationaLLM.Vectorization | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM.Vectorization Namespaces FoundationaLLM.Vectorization.API.Controllers FoundationaLLM.Vectorization.Client FoundationaLLM.Vectorization.DataFormats FoundationaLLM.Vectorization.Extensions FoundationaLLM.Vectorization.Handlers FoundationaLLM.Vectorization.Interfaces FoundationaLLM.Vectorization.Models FoundationaLLM.Vectorization.ResourceProviders FoundationaLLM.Vectorization.Serializers FoundationaLLM.Vectorization.Services FoundationaLLM.Vectorization.Validation FoundationaLLM.Vectorization.Worker Classes VectorizationWorker Provides the core execution context for the vectorization worker. VectorizationWorkerBuilder Implements a builder for a vectorization worker."
  },
  "api/dotnet/FoundationaLLM.html": {
    "href": "api/dotnet/FoundationaLLM.html",
    "title": "Namespace FoundationaLLM | FoundationaLLM",
    "keywords": "Namespace FoundationaLLM Namespaces FoundationaLLM.AIModel FoundationaLLM.Agent FoundationaLLM.Attachment FoundationaLLM.Authorization FoundationaLLM.AzureOpenAI FoundationaLLM.Client FoundationaLLM.Common FoundationaLLM.Configuration FoundationaLLM.Core FoundationaLLM.DataSource FoundationaLLM.Gatekeeper FoundationaLLM.Gateway FoundationaLLM.Management FoundationaLLM.Orchestration FoundationaLLM.Prompt FoundationaLLM.SemanticKernel FoundationaLLM.State FoundationaLLM.Vectorization Classes DependencyInjection General purpose dependency injection extensions. ValidatedEnvironment Provides methods for working with the environment."
  },
  "api/dotnet/index.html": {
    "href": "api/dotnet/index.html",
    "title": ".NET API | FoundationaLLM",
    "keywords": ".NET API Use the navigation on the left to browse the .NET API documentation."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API documentation | FoundationaLLM",
    "keywords": "API documentation FoundationaLLM has both .NET and Python and Python APIs: .NET API Python API"
  },
  "api/python/index.html": {
    "href": "api/python/index.html",
    "title": "Python API | FoundationaLLM",
    "keywords": "Python API Use the navigation on the left to browse the Python API documentation."
  },
  "deployment/app-configuration-values.html": {
    "href": "deployment/app-configuration-values.html",
    "title": "Azure App Configuration values | FoundationaLLM",
    "keywords": "Azure App Configuration values FoundationaLLM uses Azure App Configuration to store configuration values, Key Vault secret references, and feature flags. Doing so helps reduce duplication and provides a convenient way to manage these settings in one place. It also allows you to change the settings without having to redeploy the solution. Since several settings can be shared by multiple projects, we do not specify the project name in the configuration key names. Configuration values Key Default Value Description FoundationaLLM:Instance:Id Generated GUID The value should be a GUID represents a unique instance of the FoundationaLLM instance. FoundationaLLM:Configuration:KeyVaultURI Enter the URL to the service. The URL of the Key Vault used to store secrets. FoundationaLLM:AgentHub:AgentMetadata:StorageContainer agents FoundationaLLM:Agent:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:APIs:OrchestrationAPI:APIKey Key Vault secret name: foundationallm-apis-orchestrationapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:OrchestrationAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:OrchestrationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:OrchestrationAPI:ForceHttpsRedirection false FoundationaLLM:APIs:AgentHubAPI:APIKey Key Vault secret name: foundationallm-apis-agenthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:AgentHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:CoreAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:CoreAPI:BypassGatekeeper true By default, the Core API bypasses the Gatekeeper API. To override this behavior and enable the Gatekeeper API, set this value to true. Bypassing the Gatekeeper means that you bypass content protection and filtering in favor of improved performance. FoundationaLLM:APIs:DataSourceHubAPI:APIKey Key Vault secret name: foundationallm-apis-datasourcehubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:DataSourceHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety true By default, the Gatekeeper API has Azure Content Safety integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableLakeraGuard true By default, the Gatekeeper API has Lakera Guard integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableEnkryptGuardrails true By default, the Gatekeeper API has Enkrypt Guardrails integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio true By default, the Gatekeeper API has Microsoft Presidio integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:ForceHttpsRedirection false FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperintegrationapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:GatekeeperIntegrationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:LangChainAPI:APIKey Key Vault secret name: foundationallm-apis-langchainapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:LangChainAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:ManagementAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:ManagementAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:Prompt:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:APIs:PromptHubAPI:APIKey Key Vault secret name: foundationallm-apis-prompthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:PromptHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIKey Key Vault secret name: foundationallm-apis-semantickernelapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:ForceHttpsRedirection false FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIKey Key Vault secret name:foundationallm-apis-gatekeeper-azurecontentsafety-apikey This is a Key Vault reference. FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIUrl Enter the URL to the service. FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:HateSeverity 2 FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SelfHarmSeverity 2 FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SexualSeverity 2 FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:ViolenceSeverity 2 FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName completions FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens 8096 FoundationaLLM:AzureOpenAI:API:Completions:ModelName gpt-35-turbo FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion 0301 FoundationaLLM:AzureOpenAI:API:Completions:Temperature 0 FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName embeddings FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens 8191 FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName text-embedding-ada-002 FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature 0 FoundationaLLM:AzureOpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:AzureOpenAI:API:Key Key Vault secret name: foundationallm-azureopenai-api-key This is a Key Vault reference. FoundationaLLM:AzureOpenAI:API:Version 2023-05-15 FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer memory-source FoundationaLLM:BlobStorageMemorySource:ConfigFilePath BlobMemorySourceConfig.json FoundationaLLM:Branding:AccentColor #fff FoundationaLLM:Branding:AccentTextColor #131833 FoundationaLLM:Branding:BackgroundColor #fff FoundationaLLM:Branding:CompanyName FoundationaLLM FoundationaLLM:Branding:FavIconUrl favicon.ico FoundationaLLM:Branding:KioskMode false FoundationaLLM:Branding:LogoText FoundationaLLM:Branding:LogoUrl foundationallm-logo-white.svg FoundationaLLM:Branding:PageTitle FoundationaLLM Chat Copilot FoundationaLLM:Branding:PrimaryColor #131833 FoundationaLLM:Branding:PrimaryTextColor #fff FoundationaLLM:Branding:SecondaryColor #334581 FoundationaLLM:Branding:SecondaryTextColor #fff FoundationaLLM:Branding:PrimaryButtonBackgroundColor #5472d4 FoundationaLLM:Branding:PrimaryButtonTextColor #fff FoundationaLLM:Branding:SecondaryButtonBackgroundColor #70829a FoundationaLLM:Branding:SecondaryButtonTextColor #fff FoundationaLLM:Chat:Entra:CallbackPath /signin-oidc FoundationaLLM:Chat:Entra:ClientId FoundationaLLM:Chat:Entra:ClientSecret Key Vault secret name: foundationallm-chat-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Chat:Entra:Instance Enter the URL to the service. FoundationaLLM:Chat:Entra:Scopes api://FoundationaLLM-Auth/Data.Read FoundationaLLM:Chat:Entra:TenantId FoundationaLLM:CoreAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:CoreAPI:Entra:ClientId FoundationaLLM:CoreAPI:Entra:ClientSecret Key Vault secret name: foundationallm-coreapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:CoreAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:CoreAPI:Entra:Scopes Data.Read FoundationaLLM:CoreAPI:Entra:TenantId FoundationaLLM:CoreWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer leases FoundationaLLM:CosmosDB:Containers Sessions, UserSessions FoundationaLLM:CosmosDB:Database database FoundationaLLM:CosmosDB:Endpoint Enter the URL to the service. FoundationaLLM:CosmosDB:MonitoredContainers Sessions FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer data-sources FoundationaLLM:LangChain:CSVFile:URL Key Vault secret name: foundationallm-langchain-csvfile-url This is a Key Vault reference. FoundationaLLM:LangChain:SQLDatabase:TestDB:Password Key Vault secret name: foundationallm-langchain-sqldatabase-testdb-password This is a Key Vault reference. FoundationaLLM:LangChain:Summary:MaxTokens 4097 FoundationaLLM:LangChain:Summary:ModelName gpt-35-turbo FoundationaLLM:LangChainAPI:Key Key Vault secret name: foundationallm-langchainapi-key This is a Key Vault reference. FoundationaLLM:Management:Entra:CallbackPath /signin-oidc FoundationaLLM:Management:Entra:ClientId FoundationaLLM:Management:Entra:ClientSecret Key Vault secret name: foundationallm-management-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Management:Entra:Instance Enter the URL to the service. FoundationaLLM:Management:Entra:Scopes api://FoundationaLLM-Management-Auth/Data.Manage FoundationaLLM:Management:Entra:TenantId FoundationaLLM:ManagementAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:ManagementAPI:Entra:ClientId FoundationaLLM:ManagementAPI:Entra:ClientSecret Key Vault secret name: foundationallm-managementapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:ManagementAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:ManagementAPI:Entra:Scopes Data.Manage FoundationaLLM:ManagementAPI:Entra:TenantId FoundationaLLM:OpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:OpenAI:API:Key Key Vault secret name: foundationallm-openai-api-key This is a Key Vault reference. FoundationaLLM:OpenAI:API:Temperature 0 FoundationaLLM:PromptHub:PromptMetadata:StorageContainer system-prompt FoundationaLLM:Refinement FoundationaLLM:SemanticKernelAPI:OpenAI:Key Key Vault secret name: foundationallm-semantickernelapi-openai-key This is a Key Vault reference. FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName RetailAssistant.Default FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment completions FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens 8096 FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment embeddings FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens 8191 FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint Enter the URL to the service. FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens 300 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens 50 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens 100 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName Summarizer.TwoWords FoundationaLLM:APIs:VectorizationAPI:APIUrl The URL of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:APIKey Key Vault secret name: foundationallm-apis-vectorizationapi-apikey The API key of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization API. FoundationaLLM:APIs:VectorizationAPI:ForceHttpsRedirection false FoundationaLLM:APIs:VectorizationWorker:APIUrl The URL of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:APIKey Key Vault secret name: foundationallm-apis-vectorizationworker-apikey The API key of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization worker API. FoundationaLLM:Vectorization:VectorizationWorker The settings used by each instance of the vectorization worker service. For more details, see default vectorization worker settings FoundationaLLM:Vectorization:Queues:Embed:AccountName The account name of the Azure Storage account used for the embed vectorization queue. FoundationaLLM:Vectorization:Queues:Extract:AccountName The account name of the Azure Storage account used for the extract vectorization queue. FoundationaLLM:Vectorization:Queues:Index:AccountName The account name of the Azure Storage account used for the index vectorization queue. FoundationaLLM:Vectorization:Queues:Partition:AccountName The account name of the Azure Storage account used for the partition vectorization queue. FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Events:AzureEventGridEventService:APIKey Key Vault secret name: foundationallm-events-azureeventgrid-apikey The API key used to access FLLM's Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:AuthenticationType The authentication type used to connect to the underlying Event Grid namespace. Currently supports APIKey. FoundationaLLM:Events:AzureEventGridEventService:Endpoint The endpoint for the Azure Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:NamespaceId The Azure resource ID of the Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:Profiles:OrchestrationAPI FLLM eventing infrastructure configuration for the Orchestration API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:CoreAPI FLLM eventing infrastructure configuration for the Core API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:ManagementAPI FLLM eventing infrastructure configuration for the Management API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationAPI FLLM eventing infrastructure configuration for the Vectorization API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationWorker FLLM eventing infrastructure configuration for the Vectorization Worker. FoundationaLLM:Configuration:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint Azure AI Search service endpoint. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion 2023-05-15 FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName embeddings FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint Enter the URL to the service. FoundationaLLM:VectorizationAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:VectorizationAPI:Entra:ClientId FoundationaLLM:VectorizationAPI:Entra:ClientSecret Key Vault secret name: foundationallm-apis-management-api-entra-clientsecret This is a Key Vault reference. FoundationaLLM:VectorizationAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:VectorizationAPI:Entra:Scopes api://FoundationaLLM-Vectorization/Data.Manage FoundationaLLM:VectorizationAPI:Entra:TenantId"
  },
  "deployment/authentication-authorization/authorization-setup-entra.html": {
    "href": "deployment/authentication-authorization/authorization-setup-entra.html",
    "title": "Authorization setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Authorization setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authorization. This means that you can use your Microsoft Entra ID to setup authorization access to FoundationaLLM's platform. Create the API application Register the API application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter the name FoundationaLLM-Authorization-API for your application. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, enter api://FoundationaLLM-Authorization, then select Save and continue, and then enter the following details: Scope name: Authorization.Manage Who can consent?: Admins and users Admin consent display name: Manage Authorization Admin consent description: Allows the app to manage data on behalf of the signed-in user. User consent display name: Manage data on behalf of the user User consent description: Allows the app to manage data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. It should look like api://FoundationaLLM-Authorization/Authorization.Manage. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Configure Authentication Flows Navigate to the Authentication tab. Select Add a platform. On the Configure platforms pane, select Web. Enter http://localhost under Redirect URIs. Then, below Implicit grant and hybrid flows, select both Access tokens and ID tokens. Finally, select Configure."
  },
  "deployment/authentication-authorization/core-authentication-setup-entra.html": {
    "href": "deployment/authentication-authorization/core-authentication-setup-entra.html",
    "title": "Core API and User Portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Core API and User Portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the chat interface. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Core API and user portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the user portal chat interface to authenticate users. An API application that will be used by the Core API to authenticate users. Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter the following name for your application FoundationaLLM-User-Portal. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js chat application. Add a Redirect URI under Single-page application for your deployed Vue.js application. Enter <YOUR_CHAT_APP_URL>/signin-oidc, replacing <YOUR_CHAT_APP_URL> with the chat UI application URL obtained in the Pre-requisites section above. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002chatuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the Vue.js application: http://localhost:3000/signin-oidc. If you wish to configure authentication in Postman for executing calls against the Core API, you will need to add a Redirect URI under Mobile and desktop applications for Postman. Enter https://oauth.pstmn.io/v1/callback for the URI. To do this, complete the following steps: Under Platform configurations, select Add a platform. In the pane that opens, select Mobile and desktop applications. Enter https://oauth.pstmn.io/v1/callback for the Custom redirect URIs value. Select Configure to apply the changes. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter the name FoundationaLLM-Core-API for the application. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, make sure to use api://FoundationaLLM-Core, then enter the following details: Scope name: Data.Read Who can consent?: Admins and users Admin consent display name: Read data on behalf of users Admin consent description: Allows the app to read data on behalf of the signed-in user. User consent display name: Read data on behalf of the user User consent description: Allows the app to read data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. For example, it should look something like api://FoundationaLLM-Core/Data.Read. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Read authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-Client application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM API application. Select the Data.Read scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following:"
  },
  "deployment/authentication-authorization/index.html": {
    "href": "deployment/authentication-authorization/index.html",
    "title": "Authentication | FoundationaLLM",
    "keywords": "Authentication FoundationaLLM uses the Microsoft Entra ID service to authenticate users and applications. Check back for additional authentication providers in the future. Microsoft Entra ID Starting release 0.8.0 there are 2 options of completing the app registrations for the 5 apps required for FoundationaLLM. Option #1 is to run a script that will register all 5 applications for you. Option #2 is to manually register the 5 applications. The steps for both options are below. Option #1 - Run the script to register all 5 applications The script is available in the \\deploy\\common\\scripts\\ folder. The script is called Create-FllmEntraIdApps.ps1. The script will register the 5 required applications in the Entra ID tenant that you are logged into. After the completion of the script execution, you will see the 5 applications registered in the Entra ID tenant under App registrations Important Make sure to copy and save the Application (Client) ID of all 5 applications in a text editor as you will need them in the next steps. Option 2 - Manually registering the 5 applications Important The following steps are to set up authentication and authorization for the solution. You will need to create app registrations in the Entra ID tenant in the Azure portal manually if you choose not to run the automatic script for any reason. There are currently five app registrations required for the solution as listed below. After you complete the 5 app registrations, you will need to finish the deployment process of the solution and revisit these app registrations to fill in some missing values that are generated during the deployment itself. Steps to perform before the deployment Core API and user portal authentication pre-deployment - Microsoft Entra ID Management API and portal authentication pre-deployment - Microsoft Entra ID Authorization pre-deployment - Microsoft Entra ID Steps to perform after the deployment Pre-requisites for post-deployment configuration Core API and user portal authentication post-deployment - Microsoft Entra ID Management API and portal authentication post-deployment - Microsoft Entra ID Authorization post-deployment - Microsoft Entra ID"
  },
  "deployment/authentication-authorization/management-authentication-setup-entra.html": {
    "href": "deployment/authentication-authorization/management-authentication-setup-entra.html",
    "title": "Management API and portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "keywords": "Management API and portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the management portal. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Management API and portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the management portal to authenticate users. An API application that will be used by the Management API to authenticate users. Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter the name FoundationaLLM-Management-Portal for your application. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js management application. Add a Redirect URI under Single-page application for your deployed Vue.js management application. Enter <YOUR_MANAGEMENT_APP_URL>/signin-oidc, replacing <YOUR_MANAGEMENT_APP_URL> with the management UI application URL. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002managementuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the management portal Vue.js application: http://localhost:3001/signin-oidc. If you wish to configure authentication in Postman for executing calls against the Core API, you will need to add a Redirect URI under Mobile and desktop applications for Postman. Enter https://oauth.pstmn.io/v1/callback for the URI. To do this, complete the following steps: Under Platform configurations, select Add a platform. In the pane that opens, select Mobile and desktop applications. Enter https://oauth.pstmn.io/v1/callback for the Custom redirect URIs value. Select Configure to apply the changes. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter a name for the application. For example, enter FoundationaLLM-Management. Users of the app will see this name, and can be changed later. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, accept the default or specify a custom one, then select Save and continue, and then enter the following details: Scope name: Data.Manage Who can consent?: Admins and users Admin consent display name: Manage data on behalf of users Admin consent description: Allows the app to manage data on behalf of the signed-in user. User consent display name: Manage data on behalf of the user User consent description: Allows the app to manage data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. It should look like api://FoundationaLLM-Management/Data.Manage. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Manage authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-Management-Portal application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM-Management-API application. Select the Data.Manage scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following:"
  },
  "deployment/authentication-authorization/post-authorization-deployment.html": {
    "href": "deployment/authentication-authorization/post-authorization-deployment.html",
    "title": "| FoundationaLLM",
    "keywords": "Post Deployment Follow the instruction below to complete the setup of Microsoft Entra ID authentication for the Authorization API application after the deployment is complete. Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter authorization in the search box to filter the results. Check the box next to Key in the header to select all items. Find the key for FoundationaLLM:APIs:AuthorizationAPI:APIScope and click on edit. Replace the value with the value from the scope we created earlier, as api://FoundationaLLM-Authorization Select Apply to save the changes. Next steps Now that Entra authorization is fully configured, navigate to your Entra ID management console and make sure you completed all app registrations for all the other apps mentioned in the deployment documentation."
  },
  "deployment/authentication-authorization/post-core-deployment.html": {
    "href": "deployment/authentication-authorization/post-core-deployment.html",
    "title": "| FoundationaLLM",
    "keywords": "Post Deployment Follow the instruction below to complete the setup of Microsoft Entra ID authentication for the Core API and Chat applications after the deployment is complete. Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Chat:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Chat:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. For example, it should look something like api://FoundationaLLM-Core/Data.Read. FoundationaLLM:Chat:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:CoreAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:CoreAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Chat:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Chat:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:CoreAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:Scopes: Should be Data.Read. Select Apply to save the changes. Next steps Now that Entra authentication is fully configured, restart the Core API and chat applications to apply the changes. Navigate to your chat application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account. Restart Core API and Chat UI applications in an ACA Deployment To restart the Core API and Chat applications in an Azure Container Apps (ACA) deployment, you will need to navigate to the Core API and Chat applications and restart their container revisions, as indicated in the following Azure Portal screenshot: From the Revisions blade in the left navigation panel of the Core API or Chat UI container app detail page in Azure Portal, select the name of the running revision. A dialog panel titled Revision details should appear on the right side of the browser with a Restart button at the top. Select the Restart button to restart the running container. Restarting in this manner will need to be performed for both the Core API container app and the Chat UI container app. Restart Core API and Chat UI applications in an AKS Deployment To restart the Core API and Chat applications in an Azure Kubernetes Service (AKS) deployment, you will need to navigate to the AKS detail page in Azure Portal and perform the following: Select the Workloads blade from the left navigation panel. Select the Pods tab from the Workloads detail page. Select the Core API and Chat UI pods from the list (it helps if you select default in the Filter by namespace dropdown first). Select the Delete button to terminate the currently running pods. New pods will be instantiated to take their place."
  },
  "deployment/authentication-authorization/post-management-deployment.html": {
    "href": "deployment/authentication-authorization/post-management-deployment.html",
    "title": "| FoundationaLLM",
    "keywords": "Post Deployment Follow the instruction below to complete the setup of Microsoft Entra ID authentication for the Management API and Management Portal applications after the deployment is complete. Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Management:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Management:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. It should look like api://FoundationaLLM.Management-API/Data.Manage. FoundationaLLM:Management:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:ManagementAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:ManagementAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Management:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Management:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Scopes: Should be Data.Manage. Select Apply to save the changes. Next steps Now that Entra authentication is fully configured, restart the Management API and management portal applications to apply the changes. Navigate to your management portal application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account."
  },
  "deployment/authentication-authorization/pre-requisites.html": {
    "href": "deployment/authentication-authorization/pre-requisites.html",
    "title": "| FoundationaLLM",
    "keywords": "Pre-requisites for post-deployment configuration Important Be aware that after completing this registration and the other app registrations in Entra ID as instructed in the docs you will complete the deployment steps outlined at deploy the solution then you will be revisiting your app registrations to complete some of the settings that require the solution to be deployed before the entire app registration is completed successfully. Setup App Configuration access Sign in to the Azure portal as at least a Contributor. Navigate to the Resource Group that was created as part of the deployment. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. 3. Select the App Configuration resource and select Configuration explorer to view the values. If you cannot access the configurations, add your user account as an App Configuration Data Owner through Access Control (IAM). You need this role in order to update the configurations as a required part of the authentication setup. To add your user account to the appropriate role, follow the instructions in the Configure access control for services document. Obtain the URL for the chat UI application You need this URL to assign the redirect URI for the client application. If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with chatuica. Within the Overview pane, copy the Application Url value. This is the URL for the chat application. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application."
  },
  "deployment/azure-resource-providers-requirements.html": {
    "href": "deployment/azure-resource-providers-requirements.html",
    "title": "| FoundationaLLM",
    "keywords": "Azure Resource Providers Requirements to successfully deploy FoundationaLLM To successfully deploy FoundationaLLM, you need to have the following Azure Resource Providers accessible in your Azure Subscription with permissions to create them. For Quick Start Deployment microsoft.alertsmanagement/smartDetectorAlertRules Microsoft.App/containerApps Microsoft.App/managedEnvironments Microsoft.AppConfiguration/configurationStores Microsoft.CognitiveServices/accounts Microsoft.DocumentDB/databaseAccounts Microsoft.EventGrid/namespaces Microsoft.EventGrid/systemTopics Microsoft.Insights/components Microsoft.KeyVault/vaults Microsoft.ManagedIdentity/userAssignedIdentities Microsoft.OperationalInsights/workspaces Microsoft.Portal/dashboards Microsoft.Search/searchServices Microsoft.Storage/storageAccounts For Standard Deployment microsoft.alertsmanagement/smartDetectorAlertRules Microsoft.AppConfiguration/configurationStores Microsoft.CognitiveServices/accounts Microsoft.Compute/virtualMachineScaleSets Microsoft.ContainerService/managedClusters Microsoft.DocumentDB/databaseAccounts Microsoft.EventGrid/namespaces Microsoft.EventGrid/systemTopics Microsoft.Insights/actiongroups Microsoft.Insights/components Microsoft.Insights/metricalerts microsoft.insights/privateLinkScopes Microsoft.Insights/scheduledqueryrules Microsoft.KeyVault/vaults Microsoft.ManagedIdentity/userAssignedIdentities Microsoft.Network/loadBalancers Microsoft.Network/networkInterfaces Microsoft.Network/networkSecurityGroups Microsoft.Network/privateEndpoints Microsoft.Network/publicIPAddresses Microsoft.Network/virtualNetworks Microsoft.OperationalInsights/workspaces Microsoft.OperationsManagement/solutions Microsoft.Search/searchServices Microsoft.Storage/storageAccounts"
  },
  "deployment/configure-access-control-for-services.html": {
    "href": "deployment/configure-access-control-for-services.html",
    "title": "Configure access control for services | FoundationaLLM",
    "keywords": "Configure access control for services FoundationaLLM takes a least privilege approach to access control. This means that by default, users have no access to any resources. You must explicitly grant access to users for each resource they need to access. This guide walks you through the process of granting access to users as needed. Prerequisites You have a FoundationaLLM solution deployed and running. You have a user account with the Contributor role on the Azure resource group or subscription where the solution is deployed. Azure App Configuration service The Azure App Configuration service provides FoundationaLLM solution components with a centralized location to store and manage application settings and feature flags. Role-based access controls (RBAC) are used to control access to the App Configuration service for managing settings and feature flags, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read application settings and feature flags. You can use the same approach to grant access to users as needed. App Configuration roles The following table summarizes the roles FoundationaLLM uses for the App Configuration service: Role Description Target Users App Configuration Data Reader Allows users to read settings and feature flags. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. App Configuration Data Owner Allows users to read and write settings and feature flags. Administrators that need to manage settings and feature flags. Grant access to the App Configuration service Use the steps below to grant access to the App Configuration service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. 3. Select the App Configuration resource. The name should end with -appconfig. 4. Select Access Control (IAM) in the left-hand menu. ![The Access Control (IAM) menu item is highlighted.](media/appconfig-access-control-link.png) Select + Add and then Add role assignment. Select the App Configuration Data Reader or the App Configuration Data Owner role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment. Azure Key Vault service The Azure Key Vault service provides FoundationaLLM solution components with a centralized location to store and manage secrets. Role-based access controls (RBAC) are used to control access to the Key Vault service for managing secrets, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read secrets. You can use the same approach to grant access to users as needed. Key Vault roles The following table summarizes the roles FoundationaLLM uses for the Key Vault service: Role Description Target Users Key Vault Secrets User Allows users to read secrets. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. Key Vault Secrets Officer Allows users to read and write secrets. Administrators that need to manage secrets. Grant access to the Key Vault service Use the steps below to grant access to the Key Vault service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. 3. Select the Key Vault resource. The name should end with -kv. 4. Select Access Control (IAM) in the left-hand menu. ![The Access Control (IAM) menu item is highlighted.](media/keyvault-access-control-link.png) Select + Add and then Add role assignment. Select the Key Vault Secrets User or the Key Vault Secrets Officer role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment."
  },
  "deployment/custom-domains.html": {
    "href": "deployment/custom-domains.html",
    "title": "Custom Domains | FoundationaLLM",
    "keywords": "Custom Domains FoundationaLLM uses Azure Container Apps (ACA) or Azure Kubernetes Services (AKS) to deploy the various services needed to support the GenAI platform. Both of these support the ability to add custom domains. Azure Container Apps To add a custom domain to your ACA environments, perform the following: Open the Azure Portal. Browse to the subscription and resource group that contains the target FLLM instance. Select the ACA instance that you want to add a custom domain too. Select Settings, select Custom domains. Select Add custom domain. Type the domain you would like to add. In the dialog, notice the DNS entries you will need to add/modify in order to validate your environment. Once you have validated the domain, select Add. If you selected a managed certificate, after a few moments, an Azure based SSL certificate will be bound to your custom domain. For more information, reference Custom domain names and bring your own certificates in Azure Container Apps. Kubernetes For more information, reference Set up a custom domain name and SSL certificate with the application routing add-on. Application Registration Redirects URIs Two of the ACA instances (management and chat) will require you to add redirect urls in order for the custom domain to function properly. Open the Azure Portal. Browse to Microsoft Entra. Select Application Registrations. Search for the chat UI application, then select it. Under Manage, select Authentication. In the Single-page application Redirect URIs section, add your custom domain appended with signin-oidc. Select Save For the management UI, perform the following: Select Application Registrations. Search for the chat UI application, then select it. Under Manage, select Authentication. In the Single-page application Redirect URIs section, add your custom domain appended with /management/signin-oidc. Select Save."
  },
  "deployment/deployment-configuration.html": {
    "href": "deployment/deployment-configuration.html",
    "title": "Configuration for deployment | FoundationaLLM",
    "keywords": "Configuration for deployment Configuration settings used by the FoundationaLLM platform Name Default Type Area Used by Description foundationallm-core-api-url Environment variable User Portal ChatThread.vue, index.vue The URL of the FoundationaLLM Core API. foundationallm-core-api-keyvault-name Environment variable Core API The name of the Azure Key Vault used by the Core API. foundationallm-core-api-entra-instance https://login.microsoftonline.com/ Environment variable Core API The Entra instance used by the Core API. foundationallm-core-api-entra-tenant-id View the Entra setup document for instructions Environment variable Core API The Entra tenant ID used by the Core API. foundationallm-core-api-entra-client-id Environment variable Core API The Entra client ID used by the Core API. foundationallm-core-api-entra-client-secret-name Key Vault secret Core API Name of the Entra client secret used by the Core API. foundationallm-core-api-entra-callback-path /signin-oidc Environment variable Core API The Entra callback path used by the Core API. foundationallm-core-api-entra-scopes Environment variable Core API The Entra scopes used by the Core API. foundationallm-core-api-gatekeeper-api-url Environment variable Core API The URL of the Gatekeeper API used by the Core API. foundationallm-gatekeeper-api-keyvault-name Environment variable Gatekeeper API The name of the Azure Key Vault used by the Gatekeeper API. foundationallm-gatekeeper-api-key Key Vault secret Gatekeeper API The first Gatekeeper API key. foundationallm-gatekeeper-api-orchestration-api-url Environment variable Gatekeeper API The URL of the Orchestration API used by the Gatekeeper API. foundationallm-orchestration-api-keyvault-name Environment variable Orchestration API The name of the Azure Key Vault used by the Orchestration API. foundationallm-orchestration-api-key Key Vault secret Orchestration API The first Orchestration API key. foundationallm-orchestration-api-agenthub-api-url Environment variable Orchestration API The URL of the Agent Hub API used by the Orchestration API. foundationallm-orchestration-api-prompthub-api-url Environment variable Orchestration API The URL of the Prompt Hub API used by the Orchestration API. foundationallm-orchestration-api-datasourcehub-api-url Environment variable Orchestration API The URL of the Data Source Hub API used by the Orchestration API. foundationallm-orchestration-api-langchain-api-url Environment variable Orchestration API The URL of the LangChain API used by the Orchestration API. foundationallm-orchestration-api-semantickernel-api-url Environment variable Orchestration API The URL of the Semantic Kernel API used by the Orchestration API. foundationallm-agenthub-api-key Key Vault secret Agent Hub API APIKeyValidator (SDK) The Agent Hub API key. foundationallm-prompthub-api-key Key Vault secret Prompt Hub API APIKeyValidator (SDK) The Prompt Hub API key. foundationallm-datasourcehub-api-key Key Vault secret Data Source Hub API APIKeyValidator (SDK) The Data Source Hub API key. foundationallm-langchain-api-key Key Vault secret LangChain API APIKeyValidator (SDK) The first LangChain API key. foundationallm-langchain-sqldb-testdb-server-name Environment variable LangChain API SqlDbConfig (SDK) The name of the Azure SQL Server used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-name Environment variable LangChain API SqlDbConfig (SDK) The name of the database used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-username Environment variable LangChain API SqlDbConfig (SDK) The user name used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-password Key Vault Secret LangChain API SqlDbConfig (SDK) The user password used by the LangChain testdb SQL agent. foundationallm-azure-openai-api-url Environment variable LangChain API AzureChatLLM (SDK) The URL of the Azure OpenAI API. foundationallm-azure-openai-api-completions-deployment Environment variable LangChain API AzureChatLLM (SDK) The name of the completions Azure Open AI deployment used by LangChain API. foundationallm-azure-openai-api-completions-model-version Environment variable LangChain API AzureChatLLM (SDK) The version of the completions model used by LangChain API. foundationallm-azure-openai-api-version Environment variable LangChain API AzureChatLLM (SDK) The version of the Azure Open AI API used by LangChain API. foundationallm-azure-openai-api-key Key Vault secret LangChain API AzureChatLLM (SDK) The key of the Azure Open AI API used by LangChain API. foundationallm-langchain-summary-model-name gpt-35-turbo Environment variable LangChain API SummaryAgent (SDK) The name of the summary model used by the LangChain summary agent. foundationallm-langchain-summary-max-tokens 4097 Environment variable LangChain API SummaryAgent (SDK) The maximum number of input tokens used by the LangChain summary agent. foundationallm-keyvault-name Environment variable LangChain API, PythonSDK AgentHub(SDK), DataSourceHub(SDK),PromptHub(SDK) The name of the Azure Key Vault used by the FoundationaLLM platform. foundationallm-configuration-allow-environment-variables Environment variable PythonSDK Configuration(SDK) When True checks environment first then key vault, otherwise checks App config (not yet implemented) then key vault foundationallm-prompt-metadata-storage-container Environment variable PythonSDK PromptHubStorageManager(SDK) The name of the Azure Blob Storage container where prompt metadata is stored. foundationallm-datasource-metadata-storage-container Environment variable PythonSDK DataSourceHubStorageManager(SDK) The name of the Azure Blob Storage container where data source metadata is stored. foundationallm-agent-metadata-storage-container Environment variable PythonSDK AgentHubStorageManager(SDK) The name of the Azure Blob Storage container where agent metadata is stored. Temporary configuration settings used by the FoundationaLLM platform NOTE: These configuration settings are temporary and will be removed in the future. Name Type Area Used by Description foundationallm-langchain-csv-file-url Environment variable LangChain API CSVAgent (SDK) The URL (including the SAS token) of the CSV file used by the LangChain CSV agent."
  },
  "deployment/deployment-quick-start.html": {
    "href": "deployment/deployment-quick-start.html",
    "title": "Deployment - Quick Start | FoundationaLLM",
    "keywords": "Deployment - Quick Start FoundationaLLM is designed for seamless deployment within your Azure Subscription. It initially utilizes Azure Container Apps (ACA) for rapid deployment and streamlined development. For scaling up to production environments, FoundationaLLM also supports deployment on Azure Kubernetes Service (AKS), offering robust scalability and management features. Be mindful of the Azure OpenAI regional quota limits on the number of Azure OpenAI Service instances. To optimize resource usage, FoundationaLLM offers the flexibility to connect to an existing Azure OpenAI Service resource, thereby avoiding the creation of additional instances during deployment. This feature is particularly useful for managing resource allocation and ensuring efficient Azure OpenAI Service quota utilization. Prerequisites You will need the following resources and access to deploy the solution: Azure Subscription: An Azure Subscription is a logical container in Microsoft Azure that links to an Azure account and is the basis for billing, resource management, and allocation. It allows users to create and manage Azure resources like virtual machines, databases, and more, providing a way to organize access and costs associated with these resources. Subscription access to Azure OpenAI service: Access to Azure OpenAI Service provides users with the ability to integrate OpenAI's advanced AI models and capabilities within Azure. This service combines OpenAI's powerful models with Azure's robust cloud infrastructure and security, offering scalable AI solutions for a variety of applications like natural language processing and generative tasks. Start here to Request Access to Azure OpenAI Service Minimum quota of 65 CPUs across all VM family types: Azure CPU quotas refer to the limits set on the number and type of virtual CPUs that can be used in an Azure Subscription. These quotas are in place to manage resource allocation and ensure fair usage across different users and services. Users can request quota increases if their application or workload requires more CPU resources. Start here to Manage VM Quotas App Registrations created in the Entra ID tenant (formerly Azure Active Directory): Azure App Registrations is a feature in Entra ID that allows developers to register their applications for identity and access management. This registration process enables applications to authenticate users, request and receive tokens, and access Azure resources that are secured by Entra ID. Follow the instructions in the Authentication and Authorization setup document to configure authentication for the solution. User with the proper role assignments: Azure Role-Based Access Control (RBAC) roles are a set of permissions in Azure that control access to Azure resource management. These roles can be assigned to users, groups, and services in Azure, allowing granular control over who can perform what actions within a specific scope, such as a subscription, resource group, or individual resource. Owner on the target subscription Owner on the App Registrations described in the Authentication setup document You will use the following tools during deployment: Azure Developer CLI (v1.6.1 or greater) Azure CLI (v2.51.0 or greater): Latest Git PowerShell 7 (7.4.1 or greater) Optional To run or debug the solution locally, you will need to install the following dependencies: .NET 8 SDK Visual Studio 2022 Optional To build or test container images, you will need to install the following dependencies: Docker Desktop Important The perception of the main branch in GitHub, or any version control system, can vary depending on the development workflow adopted by a particular team or organization. The FoundationaLLM team uses the main branch as the primary development branch. In this case, the main branch might indeed be considered a work in progress, with developers regularly pushing changes and updates directly to it. It is where ongoing development work happens. So for deployment purposes, it is recommended to use the latest release branch, which is considered stable and tested. The release branch is a snapshot of the main branch at a specific point in time, where the code is considered stable and ready for deployment. The release branch is tagged with a version number, such as 0.6.0, and is the recommended branch for deployment. Please find our latest releases here Deployment steps Follow the steps below to deploy the solution to your Azure subscription. If you are upgrading from a previous version, like 0.5.0, please refer to the changes in the breaking changes notes. Important Follow the instructions in the Authentication and Authorization setup document to finalize authentication and authorization for the solution. Bear in mind that creating the app registrations in the Entra ID tenant is a prerequisite for the deployment, but you will have to revisit some of these settings after the deployment is complete later to fill in some missing values that are generated during the deployment. Ensure all the prerequisites are met and you have installed the tools required to complete the deployment. From a PowerShell prompt, execute the following to clone the repository: git clone https://github.com/solliancenet/foundationallm.git cd foundationallm/deploy/quick-start git checkout release/0.8.0 For release 0.7.0+: Run the following script to install the deployment utilities, including AzCopy, locally. ./scripts/bootstrap.ps1 Run the following commands to log into Azure CLI, Azure Developer CLI and AzCopy: az login # Log into Azure CLI azd auth login # Log into Azure Developer CLI azcopy login # Log into AzCopy Set up an azd environment targeting your Azure subscription and desired deployment region: # Set your target Subscription and Location azd env new --location <Supported Azure Region> --subscription <Azure Subscription ID> Run the following commands to set the appropriate application registration settings for OIDC authentication. azd env set ENTRA_AUTH_API_INSTANCE <Auth API Instance> azd env set ENTRA_AUTH_API_CLIENT_ID <Auth API Client Id> azd env set ENTRA_AUTH_API_SCOPES <Auth API Scope> azd env set ENTRA_AUTH_API_TENANT_ID <Auth API Tenant ID> azd env set ADMIN_GROUP_OBJECT_ID <Admin Group Object Id> azd env set ENTRA_CHAT_UI_CLIENT_ID <Chat UI Client Id> azd env set ENTRA_CHAT_UI_SCOPES <Chat UI Scope> azd env set ENTRA_CHAT_UI_TENANT_ID <Chat UI Tenant ID> azd env set ENTRA_CORE_API_CLIENT_ID <Core API Client Id> azd env set ENTRA_CORE_API_SCOPES <Core API Scope> azd env set ENTRA_CORE_API_TENANT_ID <Core API Tenant ID> azd env set ENTRA_MANAGEMENT_API_CLIENT_ID <Management API Client Id> azd env set ENTRA_MANAGEMENT_API_SCOPES <Management API Scope> azd env set ENTRA_MANAGEMENT_API_TENANT_ID <Management API Tenant ID> azd env set ENTRA_MANAGEMENT_UI_CLIENT_ID <Management UI Client Id> azd env set ENTRA_MANAGEMENT_UI_SCOPES <Management UI Scope> azd env set ENTRA_MANAGEMENT_UI_TENANT_ID <Management UI Tenant ID> azd env set FOUNDATIONALLM_INSTANCE_ID <guid> Note You need to manually generate a GUID for FOUNDATIONALLM_INSTANCE_ID. In Bash: uuidgen In PowerShell: [guid]::NewGuid().ToString() Important The ADMIN_GROUP_OBJECT_ID in the Entra ID Groups has to be of type security NOT Microsoft 365 and you need to at least add yourself to the group and other members that need to be admins. Optional: Bring Your Own Azure OpenAI Instance If you have an existing Azure OpenAI instance, you can use it by setting the following environment variables: azd env set OPENAI_NAME <OpenAI Name> azd env set OPENAI_RESOURCE_GROUP <OpenAI Resource Group> azd env set OPENAI_SUBSCRIPTION_ID <OpenAI Subscription ID> Important Deploying with Bring Your Own Azure OpenAI, customers need to make sure that the relevant Managed Identities (LangChain API, Semantic Kernel API, and Gateway API) are assigned the Open AI reader role on the Azure OpenAI account object. Deploy the solution After setting the OIDC-specific settings in the AZD environment above, run azd up in the same folder location to provision the infrastructure, update the App Configuration entries, deploy the API and web app services, and import files into the storage account. azd up Running script to allow MS Graph access through Role Permissions After the deployment is complete, you will need to run the following script to allow MS Graph access through Role Permissions. Role Permissions Script This script will need to be executed twice for the principal IDs of the following: Core API Managed Identity Management API Managed Identity These can be found in the Azure portal in the main resource group for the deployment. Important The user running the script will need to have the appropriate permissions to assign roles to the managed identities. The user will need to be a Global Administrator or have the Privileged Role Administrator role in the Entra ID tenant. The syntax for running the script from the deploy\\common\\scripts folder is: .\\Assign-MSGraph-Roles.ps1 -principalId <GUID of the Core API Managed Identity Principal ID> .\\Assign-MSGraph-Roles.ps1 -principalId <GUID of the Management API Managed Identity Principal ID> Important For this release, you will need to restart the CORE API container and the MANAGEMENT API container in the resource group to allow the changes to take effect. Teardown To tear down the environment, execute azd down in the same folder location. azd down --purge Note The --purge argument in the command above. This ensures that resources that would otherwise be soft-deleted are instead completely purged from your Azure subscription."
  },
  "deployment/deployment-standard.html": {
    "href": "deployment/deployment-standard.html",
    "title": "Deployment - Standard with AKS | FoundationaLLM",
    "keywords": "Deployment - Standard with AKS Compared to the quick start deployment using Azure Container Apps (ACA), the FoundationaLLM Standard Deployment with AKS is tailored for scaling up to production environments. It leverages Azure Kubernetes Service (AKS) for robust scalability and management, requiring an Azure Subscription with Azure OpenAI access. Be mindful of the Azure OpenaAI regional quota limits on the number of Azure OpenAI Service instances. This deployment option for FoundationaLLM uses Azure Kubernetes Service (AKS) to host the applications. Compared to Azure Container Apps (ACA) deployment, AKS provides more advanced orchestration and scaling capabilities suitable for larger workloads. The Standard Deployment will configure OpenAI instances to use the maximum quota available. If existing OpenAI resources are already deployed in the subscription, the Standard Deployment will not be able to deploy. The Standard Deployment should be deployed to a subscription with no existing OpenAI resources, or a new subscription should be created for the Standard Deployment. As a final option, the template can be updated to allocate a smaller quota. Prerequisites You will need the following resources and access to deploy the solution: Azure Subscription: An Azure Subscription is a logical container in Microsoft Azure that links to an Azure account and is the basis for billing, resource management, and allocation. It allows users to create and manage Azure resources like virtual machines, databases, and more, providing a way to organize access and costs associated with these resources. Subscription access to Azure OpenAI service: Access to Azure OpenAI Service provides users with the ability to integrate OpenAI's advanced AI models and capabilities within Azure. This service combines OpenAI's powerful models with Azure's robust cloud infrastructure and security, offering scalable AI solutions for a variety of applications like natural language processing and generative tasks. Start here to Request Access to Azure OpenAI Service Minimum quota of vCPUs across all VM family types: Azure CPU quotas refer to the limits set on the number and type of virtual CPUs that can be used in an Azure Subscription. For Azure Kubernetes Service (AKS) deployment, you will need a quota of around 24 vCPUs across all VM family types to ensure that the solution can be deployed and run successfully as the system deploys 2 clusters with 2 node pools each, each pool is set to scale between 1 and 3 instances where each instance has 2 vCPUS which brings the total to 24 vCPUS. These quotas are in place to manage resource allocation and ensure fair usage across different users and services. Users can request quota increases if their application or workload requires more CPU resources. Start here to Manage VM Quotas App Registrations created in the Entra ID tenant (formerly Azure Active Directory): Azure App Registrations is a feature in Entra ID that allows developers to register their applications for identity and access management. This registration process enables applications to authenticate users, request and receive tokens, and access Azure resources that are secured by Entra ID. Follow the instructions in the Authentication setup document to configure authentication for the solution. User with the proper role assignments: Azure Role-Based Access Control (RBAC) roles are a set of permissions in Azure that control access to Azure resource management. These roles can be assigned to users, groups, and services in Azure, allowing granular control over who can perform what actions within a specific scope, such as a subscription, resource group, or individual resource. Owner on the target subscription Owner on the app registrations described in the Authentication setup document You will use the following tools during deployment: Azure CLI (v2.51.0 or greater) git PowerShell 7 (7.4.1 or greater) Helm kubectl kubelogin Optional To run or debug the solution locally, you will need to install the following dependencies: .NET 8 SDK Visual Studio 2022 Optional To build or test container images, you will need to install the following dependencies: Docker Desktop Pre-Deployment steps Follow the steps below to deploy the solution to your Azure subscription. Ensure all the prerequisites are met. From a PowerShell prompt, execute the following to clone the repository: git clone https://github.com/solliancenet/foundationallm.git cd foundationallm/deploy/standard git checkout release/0.7.0 Create your deployment manifest: cp Deployment-Manifest.template.json Deployment-Manifest.json Fill out all required fields in the Deployment-Manifest.json file. Please look at this guide for more information on the manifest contents. Login to your Azure account and set the deployment subscription: az login az account set --subscription <Azure Subscription ID> Optional Execute the pre-deployment script: cd scripts ./Pre-Deploy.ps1 Note The pre-deployment script will acquire certificates from LetsEncrypt and place them in foundationallm/deploy/standard/config/certbot/certs. If you plan to provide certificates another way, you can skip this script, but you must place the certificates in the specified location. See step 7. Optional Provide certificates (manual method): Note Skip this step if you created certificates using LetsEncrypt in step 6. Create certificates for the appropriate domains and package them in PFX format. Place the PFX files in foundationallm/deploy/standard/config/certbot/certs following the naming convention below. The values for Host Name and Domain Name should match the values you provided in your deployment manifest: Service Name Host Name Domain Name File Name core-api api example.com api.example.com.pfx management-api management-api example.com management-api.example.com.pfx chat-ui chat example.com chat.example.com.pfx management-ui management example.com management.example.com.pfx Provision Infrastructure Provision infrastructure with psake: cd ../bicep ./bootstrap.ps1; Invoke-Psake The deployment process will take some time. Execute the first post-provision script: cd ../scripts ./Post-Provision.1.ps1 The post-deployment script will generate a host file describing all the private endpoint IPs and the associated hostnames. These values can be used to populate your computer's local hosts file, or may assist with configuring your organization's DNS system. This guide will assume that you have taken the contents of the generated file and added them to your local hosts file. Configure and Deploy Connect to VPN First, download and install the Azure VPN client and connect to the VPN gateway. Windows MacOS Next, using the Azure portal download and then import the VPN configuration. Locate the VPN gateway in the networking resource group, click Point-to-Site, then Download VPN Client and follow the following instructions to download the configuration, client and connect to VPN. Note Make sure to connect to the VPN before proceeding to the next step. Execute the second post-provision script: ./Post-Provision.2.ps1 The post-deployment script will upload the certificates to the Azure Key Vault. Run the bootstrap script to prepare download and install Azcopy: ./Bootstrap.ps1 When prompted, sign in to your Azcopy with your Azure account. This should be the same account you used to log in to the Azure CLI. Execute the deployment script: ./Deploy.ps1 The deployment process will take some time. The process will: Generate the configuration for the system. Load the configuration into App Configuration. Load default system files into Azure Storage. Configure the backend cluster. Create the FLLM namespace in the backend cluster Deploy the backend services to the cluster in the FLLM namespace Create the gateway-system namespace Deploy the secret class provider to the gateway-system namespace Deploy ingress-nginx Deploy Ingress Configurations and External Services Configure the frontend cluster. Create the FLLM namespace in the frontend cluster Deploy the frontend services to the cluster in the FLLM namespace Create the gateway-system namespace Deploy the secret class provider to the gateway-system namespace Deploy ingress-nginx Deploy Ingress Configurations and External Services Generate host file entries for the deployed services on AKS that you can add to your host file or DNS server. Update your local hosts file with the entries from the generated host file. Connect and Test Visit the chat UI in your browser and send a message to verify the deployment. The message can be very simple like \"Who are you?\". The default agent should respond with a message explaining it's persona."
  },
  "deployment/index.html": {
    "href": "deployment/index.html",
    "title": "Deployment | FoundationaLLM",
    "keywords": "Deployment Deployment choices The following table summarizes the deployment choices available for the solution: Deployment type Description When to use CloudShell Coming Soon - Use Azure CloudShell to deploy the solution using only a browser. Best suited for situations where you want to deploy without needing to install anything in your local development environment. Quick Start Use your local development environment to deploy the solution to your Azure subscription. Best suited for situations where you need the flexibility of a full development environment (e.g. to customize the solution) and you have a local development environment available. Select the links in the table above to learn more about each deployment choice. Post-deployment configuration Authentication setup Follow the instructions in the Authentication setup document to configure authentication for the solution."
  },
  "deployment/soft-delete.html": {
    "href": "deployment/soft-delete.html",
    "title": "| FoundationaLLM",
    "keywords": "Which resources in FoundationaLLM are soft-deleted? In FoundationaLLM, the following resources are soft-deleted: Azure OpenAI Resources Azure Key Vault Resources Azure AI Search Resources Azure Content Safety Resources Note If you do not use the azd down --purge command when you delete your resources, you will need to do so manually in the portal to purge (delete permenantly) these resources. Otherwise, you will have to make sure to name the resources differently when you redeploy the FoundationaLLM platform. Another concern is that you may exceed the capacity or tokens allowed for your subscription if you do not purge the resources before creating another one. So, be aware of these issues when you deploy and delete resources from your subscription."
  },
  "deployment/standard/manifest.html": {
    "href": "deployment/standard/manifest.html",
    "title": "Deployment Manifest Setup | FoundationaLLM",
    "keywords": "Deployment Manifest Setup The Deployment Manifest is a JSON file that defines the configuration for a FoundationaLLM Standard deployment. You will find an empty Deployment Manifest template in foundationallm/deploy/standard/Deployment-Manifest.template.json. Once you have filled in the required values, you can use the Deployment Manifest to deploy the solution to your Azure subscription using the provided deployment scripts. Create the Deployment Manifest To create the Deployment Manifest, first copy the template file to a new file, for example Deployment-Manifest.json. Then, fill in the required values for your deployment. The following sections describe the different parts of the Deployment Manifest and the values you need to provide. Note You may create several deployment manifests for different environments, such as development, testing, and production. Each manifest should have the appropriate values for the environment in which you are deploying the solution. Deployment-Manifest.json is the default name expected by scripts. You can name your manifest files as you see fit and pass the file name as an argument to the deployment scripts. Property Values General The root section of the Deployment Manifest defines the general properties of the deployment. The following table describes each property and provides an example value. Name Description Value Example adminObjectId The Azure AD Group's Object ID designated as the deployment's admin. Entra Group ID 995a549b-067e-4fe3-9f90-98d78b9ed086 baseDomain The base domain for the deployment. Internet Domain Name example.com createVpnGateway Whether to create a VPN Gateway for the deployment. Boolean true environment A token for naming deployment resources in the environment. String dev, test, prod instanceId The unique ID for the deployment instance. GUID 5d40d2ee-aeb5-4391-95a0-1fd9045d7720 k8sNamespace The Kubernetes namespace for the FLLM Helm deployments. String fllm letsEncryptEmail The email address for Let's Encrypt notifications. Email Address admin@example.com location The Azure region where the deployment resources will be created. Azure Region eastus2, francecentral networkName The name of the network pre-provisioned before the deployment. String fllm-network project A token for naming deployment resources in the environment. String ai, fllm, rd, fred, sally subscription The Azure subscription ID for the deployment. GUID ad82622e-458a-4a48-8023-6b18eed1cf79 Notes createVpnGateway is a boolean value that determines whether a VPN Gateway should be created as part of the deployment. Set this value to true if you want to create a VPN Gateway. You do not need to create a VPN gateway if your networking environment already has a VPN gateway that you want to use or a similar solution like Express Route. instanceId is a GUID that uniquely identifies the deployment instance. You can generate a GUID using PowerShell or other tools. Each deployment instance should have a unique instanceId, this value is used by the authorization system when determining access to resources. This is similar to the subscription ID in Azure. letsEncryptEmail is the email address that will be used for Let's Encrypt notifications. Let's Encrypt is used to generate SSL certificates for the deployment. You do not need to provide this value unless you plan to use the optional pre-deployment script to generate certificates. If you already have certificates, or you plan to use a different certificate provider, you can leave this value blank. The deployment instructions will cover how to provide certificates during deployment. location is the Azure region where the deployment resources will be created. You should choose a region that supports OpenAI and the models needed by FoundationaLLM. The standard deployment supports automatically deploying the following models, not all models are available in every region, the template will configure the models supported in the specified location. Consult the Azure documentation and choose a region supporting the models you would like to use: gpt-35-turbo (0613) gpt-35-turbo (1106) gpt-4 (1106-Preview) gpt-4o (2024-05-13) text-embedding-ada-002 (2) text-embedding-3-large text-embedding-3-small networkName is the name of the network pre-provisioned before the deployment. The deployment will create the requird subnets and other networking resources in this network. If you do not have a pre-provisioned network, the template will create one for you. The network should be created in the networking resource group described later in the manifest. Entra Client IDs The entraClientIds section of the Deployment Manifest defines the client IDs for the different parts of the FoundationaLLM system. These client IDs are used by the authentication system to determine access to resources. The client IDs are unique to each deployment and should be kept secure. See the Authentication setup document for more information on the authentication system. Name Description Value See Also authorization The client ID for the authorization API. GUID API Application Setup chat The client ID for the chat service. GUID Client Application Setup core The client ID for the core API. GUID API Application Setup managementapi The client ID for the management API. GUID Management API Application Setup managementui The client ID for the management UI. GUID Management UI Application Setup vectorizationapi The client ID for the vectorization API. GUID Vectorization API Application Setup Entra Client Secrets The entraClientSecrets section of the Deployment Manifest provides the secrets use for authorization. Name Description Value authorization The client secret (password) for the authorization Application Registration A client secret value generated in the Entra portal Entra Instances The entraInstances section of the Deployment Manifest defines the cloud that can be used for authorization. In most cases this value will be https://login.microsoftonline.com/. Name Description Value authorization The login URL for the Entra cloud https://login.microsoftonline.com/ Entra Scopes The entraScopes section of the Deployment Manifest defines the scopes for the different parts of the FoundationaLLM system. These scopes are used by the authentication system to determine access to resources. See the Authentication setup document for more information on the authentication system. Name Description Example See Also authorization The scope for the authorization API api://FoundationaLLM-Authorization-Auth API Application Setup chat The scope for the chat service api://FoundationaLLM-Auth/Data.Read Client Application Setup core The scope for the core API Data.Read API Application Setup managementapi The scope for the management API Data.Manage Management API Application Setup managementui The scope for the management UI api://FoundationaLLM-Management-Auth/Data.Manage Management UI Application Setup vectorizationapi The scope for the vectorization API Data.Manage Vectorization API Application Setup Ingress Configuration The ingress section of the Deployment Manifest defines the configuration for the Ingress resources that route traffic to the different parts of the FoundationaLLM system. The Ingress resources are used to route traffic from the internet to the different services in the deployment. The following table describes the properties of the ingress section. Section Service Name Description Example apiIngress Ingress Configuration for the APIs in the backend AKS cluster coreapi The Ingress configuration for the Core API host The host name for the Ingress resource api.fllm.example.com path The path for the Ingress resource /core/ pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to core-api sslCert The SSL certificate to use for the Ingress resource coreapi managementapi The Ingress configuration for the Management API host The host name for the Ingress resource management-api.fllm.example.com path The path for the Ingress resource /management/ pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to management-api sslCert The SSL certificate to use for the Ingress resource managementapi vectorizationapi The Ingress configuration for the Vectorization API host The host name for the Ingress resource vectorization-api.fllm.example.com path The path for the Ingress resource /vectorization/ pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to vectorization-api sslCert The SSL certificate to use for the Ingress resource vectorizationapi frontendIngress Ingress Configuration for the portals in the frontend AKS cluster chatui The Ingress configuration for the Chat UI host The host name for the Ingress resource chat.fllm.example.com path The path for the Ingress resource / pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to chat-ui sslCert The SSL certificate to use for the Ingress resource chatui managementui The Ingress configuration for the Management UI host The host name for the Ingress resource management.fllm.example.com path The path for the Ingress resource / pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to management-ui sslCert The SSL certificate to use for the Ingress resource managementui Resource Group Configuration The resourceGroups section of the Deployment Manifest defines the names of the resource groups that will be created as part of the deployment. The following table describes the properties of the resourceGroups section. Name Description Example app The resource group for the application hosting resources (AKS). rg-ai-dev-eastus2-app auth The resource group for the authorization API storage resources. rg-ai-dev-eastus2-auth data The resource group for the customer source data resources. rg-ai-dev-eastus2-data dns The resource group for the Private DNS resources. rg-ai-dev-eastus2-dns jbx The resource group for the Jumpbox resources. rg-ai-dev-eastus2-jbx net The resource group for the networking resources. rg-ai-dev-eastus2-net oai The resource group for the OpenAI resources. rg-ai-dev-eastus2-oai ops The resource group for the operations resources. rg-ai-dev-eastus2-ops storage The resource group for the FLLM internal storage resources. rg-ai-dev-eastus2-storage vec The resource group for the vectorization resources. rg-ai-dev-eastus2-vec External Resource Group Configuration The externalResourceGroups section of the Deployment Manifest defines the names of the resource groups that contain resources that are external to the deployment. When pre-provisioning resources for FLLM, be sure to remove the corresponding entry from the resourceGroups section. The following table describes the properties of the externalResourceGroups section. Name Description Example dns The resource group containing pre-provisioned Private DNS resources. rg-ai-shared-eastus2-dns Next Return to the standard deployment steps."
  },
  "development/calling-apis/directly-calling-core-api.html": {
    "href": "development/calling-apis/directly-calling-core-api.html",
    "title": "Directly calling the Core API | FoundationaLLM",
    "keywords": "Directly calling the Core API Typically, the only interaction with the FoundationaLLM (FLLM) APIs is indirectly through the User Portal and Management Portal. However, you can also call the APIs directly to perform certain tasks, such as using your configured FLLM agents to perform completions (via the Core API), or updating your branding configurations (via the Management API). API architecture The FLLM architecture contains layers of APIs that are used to perform different tasks along a call chain, starting with the Core API. The following diagram shows a very high-level flow of the API architecture: sequenceDiagram actor U as Caller participant C as CoreAPI participant A as OrchestrationAPI participant O as OrchestrationWrapperAPI U->>C: Calls Orchestration endpoint C->>A: Calls Orchestration endpoint Note over A,O: Agent resolution from cache or hubs A->>+O: Invokes orchestrator Note over O: Calls LangChain or Semantic Kernel O->>-A: Returns result A->>C: Returns result C->>U: Returns result Note The OrchestrationAPI contains a caching layer for the full agent metadata, including the agent, its datasource(s), and prompts. This caching layer is used to improve performance by reducing the number of calls to the underlying hubs. The OrchestrationAPI also includes endpoints to clear the cache across different categories. In the more detailed diagram below, you can see that the OrchestrationAPI calls the AgentHubAPI, PromptHubAPI, and DataSourceHubAPI to retrieve the agent metadata. When we look a level deeper, we see that there are several interactions between the APIs that occur during the call chain. The following diagram shows a more detailed flow of the API architecture: graph TD; A[CoreAPI] -->|1. User Request| B[GatekeeperAPI] -->|Gatekeeper Extensions| BB[GatekeeperIntegrationAPI] A -...->|\"1a. User Request (Bypass Gatekeeper)\"| C[OrchestrationAPI] B ---->|2. Processed Request| C[OrchestrationAPI] C -->|3. Request| E[(AgentHubAPI)] C --->|4. Instantiate Agent| D[[Agent]] D -->|Request| F[(PromptHubAPI)] D -->|Request| G[(DataSourceHubAPI)] E -->|Metadata| C F -->|Metadata| D G -->|Metadata| D D -->|Hydrated Agent| C D -->|5. Composed Information| H[OrchestrationWrapperAPI] H -->|6. Response| D C -->|7. Response| B C -...->|\"7a. Response (Bypass Gatekeeper)\"| A B -->|8. Final Response| A Note Notice that there is an alternate path that bypasses the Gatekeeper API. This path is used when the FoundationaLLM:APIs:CoreAPI:BypassGatekeeper configuration value is set to true. By default, the Core API bypasses the Gatekeeper API. To override this behavior and enable the Gatekeeper API, set this value to true. Bypassing the Gatekeeper means that you bypass content protection and filtering in favor of improved performance. Postman collection The ability to test the API endpoints of FoundationaLLM is a critical part of the development process. Postman is a tool that allows you to do just that. This document will walk you through the process of setting up Postman to work with FoundationaLLM. Tip To find the Core API URL for your deployment, you can retrieve it from your App Configuration resource in the portal by viewing the FoundationaLLM:APIs:CoreAPI:APIUrl configuration value. Alternatively, follow the instructions in the Quickstart guide to find the Core API URL. To see the API endpoints available in FoundationaLLM, you can get your Core API endpoint from your App Configuration resource in the portal and add /swagger/ to the end of it. For example, if your Core API endpoint is https://fllmaca002coreca.graybush-c554b849.eastus.azurecontainerapps.io, then you would navigate to https://fllmaca002coreca.graybush-c554b849.eastus.azurecontainerapps.io/swagger/ to see the API endpoints. Note The example link above is for a Quick Start deployment of FoundationaLLM, which deploys the APIs to Azure Container Apps (ACA). If you are using the standard deployment that deploys the APIs to Azure Kubernetes Service (AKS), then you cannot currently access the Swagger UI for the APIs. However, you will be able to obtain the OpenAPI swagger.json file from the Core API endpoint by navigating to https://{{AKS URL}}/core/swagger/v1/swagger.json. Install Postman If you don't have Postman installed on your machine, visit the Postman website and download the app. Once you have it installed, Create a Blank Workspace. Import the Postman collection First, select the button below to fork and import the Postman collection for the Core API. Select Fork Collection to create a fork and import the collection into your Postman workspace. Within the dialog that displays, enter your fork label, select the Postman workspace into which you want to create the fork, optionally check the Watch original collection checkbox to receive updates to the original collection, and then select Fork collection. You will now see the FoundationaLLM.Core.API collection in your Postman workspace. Set up the Postman environment variables The Postman collection you imported contains a number of API endpoints that you can use to test the Core API. However, before you can use these endpoints, you need to set up a Postman environment variables within your collection that contains the Core API URL, agent hint value, and other variables. We will set up your authentication token in the next section. Select the FoundationaLLM.Core.API collection in the left-hand menu. Select the Variables tab. Tip The https://localhost:63279 value is the default value for the Core API URL (baseUrl variable) when debugging it locally. You can leave this value as-is if you are testing locally, or you can replace it with the Core API URL for your deployment. Note The Initial value column is the value that will be used when you first import the collection. The Current value column is the value that will be used when you run the collection. If you change the Current value column, the Initial value column will not be updated. For the steps that follow, you will be updating the Current value column. Update the baseUrl variable Current value with the Core API URL for your deployment. Fill out the tenantId, appClientId, and appScope Current value settings for your Core Client Entra ID app registration (setup instructions). Use the list below the screenshot to find the values. tenantId: The tenant ID of your Core Client (Chat UI) Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appClientId: The client ID of your Core Client Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appScope: The scope of your Core Client Entra ID app. You can find this value in the Api Permissions section of your Entra ID app in the portal. Select the Save button in the top right corner of the Variables pane to save your changes. Set up the Postman authentication token There are two ways to obtain the authentication token that you will use to authenticate your API calls: Configure the Postman collection authorization token (recommended) Though this method takes a few more steps, it is the recommended method because it allows you to use the same token for all of the API calls in the collection. Important If you previously configured the Microsoft Entra ID app registration for the Chat UI application (Core Client), you will need to update the Redirect URI to https://oauth.pstmn.io/v1/callback in order to use the Postman mobile app to get the token. You can do this by following the steps in the Add a redirect URI to the client application section of the authentication setup guide. Select the Authorization tab within the FoundationaLLM.Core.API collection. You will see the Authorization tab at the collection level. This means that you can configure the token at the collection level and use it for all of the requests in the collection. Notice that the Token Name is FLLM CoreAPI Token. This will automatically be used by the requests in the collection. Note All of the values are pre-filled and use the variables that you set up in the previous section. You do not need to change any values at this time. Scroll down to the bottom of the page and click on Get New Access Token. This will open a new window in your browser and will ask you to login with your credentials. Once you login, you will be asked to consent to the permissions that you specified in the Scope field. Click on Accept to consent to the permissions. You will then be redirected to the callback url that you specified in the Callback Url field. This will close the browser window and will take you back to Postman. You should now see the token in the Authorization tab. Click on Use Token to use the token in the collection. Important Be sure to click the Save button in the top right corner of the Postman app to save your changes. Now you are ready to make your first CoreAPI request. Within the FoundationaLLM.Core.API collection, select the Sessions GET request under the sessions folder. When you select the Authorization tab, notice that the selected type is Inherit auth from parent. This means that the request will use the token that you configured at the collection level. Also notice that the {{baseUrl}} variable is used in the Request Url field. This means that the request will use the Core API URL that you configured at the collection level. Select the Send button to send the request. Even if you do not have any chat sessions in your system, you should receive a successful response (200) from the Core API. Now you can use the same token to test any other request in the collection with ease. Obtain the authentication token from the User Portal (not recommended) As an alternative to saving the authentication token at the collection level, you can obtain the token from the User Portal and save it at the request level. This method is not recommended because it requires you to obtain a new token for each request that you want to make, and the token expires after a certain amount of time. Navigate to the User Portal and log in. Open the browser's developer tools (F12), select the Network tab, refresh the page, and copy the value of the token under the XHR tab from any of the API calls that are made to the Core API. Within the FoundationaLLM.Core.API collection, select the Sessions GET request under the sessions folder. Select the Authorization tab, select Bearer Token as the type, and paste the token value into the Token field. Select Send to send the request. Even if you do not have any chat sessions in your system, you should receive a successful response (200) from the Core API."
  },
  "development/calling-apis/directly-calling-management-api.html": {
    "href": "development/calling-apis/directly-calling-management-api.html",
    "title": "Directly calling the Management API | FoundationaLLM",
    "keywords": "Directly calling the Management API This guide provides steps for importing and configuring the Postman collection for the FoundationaLLM Management API. The Management API is used to manage the FoundationaLLM system, including creating and managing agents, vectorization profiles, and more. Once you configure the Postman collection, including authentication, follow the instructions in the links below to perform various operations using the Management API: Managing agents Vectorization management Postman collection The ability to test the API endpoints of FoundationaLLM is a critical part of the development process. Postman is a tool that allows you to do just that. This document will walk you through the process of setting up Postman to work with FoundationaLLM. Tip To find the Management API URL for your deployment, you can retrieve it from your App Configuration resource in the portal by viewing the FoundationaLLM:APIs:ManagementAPI:APIUrl configuration value. To see the API endpoints available in FoundationaLLM, you can get your Management API endpoint from your App Configuration resource in the portal and add /swagger/ to the end of it. For example, if your Management API endpoint is https://fllmaca729managementca.icelake-c554b849.eastus.azurecontainerapps.io, then you would navigate to https://fllmaca729managementca.icelake-c554b849.eastus.azurecontainerapps.io/swagger/ to see the API endpoints. Note The example link above is for a Quick Start deployment of FoundationaLLM, which deploys the APIs to Azure Container Apps (ACA). If you are using the standard deployment that deploys the APIs to Azure Kubernetes Service (AKS), then you cannot currently access the Swagger UI for the APIs. However, you will be able to obtain the OpenAPI swagger.json file from the Management API endpoint by navigating to https://{{AKS URL}}/management/swagger/v1/swagger.json. Install Postman If you don't have Postman installed on your machine, visit the Postman website and download the app. Once you have it installed, Create a Blank Workspace. Import the Postman collection First, select the button below to fork and import the Postman collection for the Management API. Select Fork Collection to create a fork and import the collection into your Postman workspace. Within the dialog that displays, enter your fork label, select the Postman workspace into which you want to create the fork, optionally check the Watch original collection checkbox to receive updates to the original collection, and then select Fork collection. You will now see the FoundationaLLM.Management.API collection in your Postman workspace. Set up the Postman environment variables The Postman collection you imported contains a number of API endpoints that you can use to test the Management API. However, before you can use these endpoints, you need to set up a Postman environment variables within your collection that contains the Management API URL and other variables. We will set up your authentication token in the next section. Select the FoundationaLLM.Management.API collection in the left-hand menu. Select the Variables tab. Note The Initial value column is the value that will be used when you first import the collection. The Current value column is the value that will be used when you run the collection. If you change the Current value column, the Initial value column will not be updated. For the steps that follow, you will be updating the Current value column. Update the baseUrl variable Current value with the Management API URL for your deployment. Update the instanceId variable Current value with the instance ID of your FoundationaLLM deployment. You can find the instance ID in the FoundationaLLM:Instance:Id Azure App Configuration property. Fill out the tenantId, appClientId, and appScope Current value settings for your Management Client Entra ID app registration (setup instructions). Use the list below the screenshot to find the values. tenantId: The tenant ID of your Management Client (Management Portal) Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appClientId: The client ID of your Management Client Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appScope: The scope of your Management Client Entra ID app. You can find this value in the Api Permissions section of your Entra ID app in the portal. Select the Save button in the top right corner of the Variables pane to save your changes. Set up the Postman authentication token Configure the Postman collection authorization token Complete these steps to configure Postman to use the same token for all of the API calls in the collection. Important If you previously configured the Microsoft Entra ID app registration for the Management Client (UI) application, you will need to update the Redirect URI to https://oauth.pstmn.io/v1/callback in order to use the Postman mobile app to get the token. You can do this by following the steps in the Add a redirect URI to the client application section of the authentication setup guide. Select the Authorization tab within the FoundationaLLM.Management.API collection. You will see the Authorization tab at the collection level. This means that you can configure the token at the collection level and use it for all of the requests in the collection. Notice that the Token Name is FLLM Management Token. This will automatically be used by the requests in the collection. Note All of the values are pre-filled and use the variables that you set up in the previous section. You do not need to change any values at this time. Scroll down to the bottom of the page and click on Get New Access Token. This will open a new window in your browser and will ask you to login with your credentials. Once you login, you will be asked to consent to the permissions that you specified in the Scope field. Click on Accept to consent to the permissions. You will then be redirected to the callback url that you specified in the Callback Url field. This will close the browser window and will take you back to Postman. You should now see the token in the Authorization tab. Click on Use Token to use the token in the collection. Important Be sure to click the Save button in the top right corner of the Postman app to save your changes. Now you are ready to make your first ManagementAPI request. Within the FoundationaLLM.Management.API collection, select the Get Agents GET request. When you select the Authorization tab, notice that the selected type is Inherit auth from parent. This means that the request will use the token that you configured at the collection level. Also notice that the {{baseUrl}} and {{instanceId}} variables is used in the Request Url field. This means that the request will use the Management API URL and Instance Id that you configured at the collection level. Select the Send button to send the request. Even if you do not have any agents sessions in your system, you should receive a successful response (200) from the Management API. Now you can use the same token to test any other request in the collection with ease."
  },
  "development/calling-apis/index.html": {
    "href": "development/calling-apis/index.html",
    "title": "Directly calling APIs | FoundationaLLM",
    "keywords": "Directly calling APIs Although FoundationaLLM provides user interfaces for most of the operations, you can also call the APIs directly. This is useful when you want to automate some operations or when you want to integrate FoundationaLLM with other systems. The links below provide the documentation for calling the Core and Management APIs, respectively: Core API Management API"
  },
  "development/calling-apis/standard-deployment-local-api-access.html": {
    "href": "development/calling-apis/standard-deployment-local-api-access.html",
    "title": "Standard Deployment Local API Access | FoundationaLLM",
    "keywords": "Standard Deployment Local API Access Standard deployments expose backend services internally, preventing API access over the public internet. Using the kubectl CLI, however, it is possible to forward FoundationaLLM APIs deployed within Kubernetes for local consumption. kubectl Forwarding Script Prerequisites kubectl with the kubelogin extension Both of these utilities can be installed by the Azure CLI: az aks install-cli. If you use this command, you will need to restart your terminal to reflect the changes to $PATH. Kubernetes credentials stored in $HOME/.kube/config Obtain these credentials using the Azure CLI. az login az aks get-credentials --name MyManagedCluster --resource-group MyResourceGroup Script Navigate to /deploy/standard/scripts/Kubectl-Proxy.ps1 or copy the following PowerShell script to your local environment. Before running it, ensure that no applications are running on ports 5000-5010. To stop the tunnels, press any key in the terminal context where you started the script. #!/bin/pwsh Set-PSDebug -Trace 0 # Echo every command (0 to disable, 1 to enable, 2 to enable verbose) Set-StrictMode -Version 3.0 $ErrorActionPreference = \"Stop\" $services = @{ \"foundationallm-orchestration-api\" = 5000 \"foundationallm-gatekeeper-api\" = 5001 \"foundationallm-agent-hub-api\" = 5002 \"foundationallm-core-api\" = 5003 \"foundationallm-data-source-hub-api\" = 5004 \"foundationallm-gatekeeper-integration-api\" = 5005 \"foundationallm-langchain-api\" = 5006 \"foundationallm-management-api\" = 5007 \"foundationallm-prompt-hub-api\" = 5008 \"foundationallm-semantic-kernel-api\" = 5009 \"foundationallm-vectorization-api\" = 5010 } $jobIds = @() try { foreach ($servicePortPairing in $services.GetEnumerator()) { Write-Host \"Starting Kubectl Tunnel for $($servicePortPairing.key)\" $job = Start-Job -ScriptBlock ([scriptblock]::Create(\"kubectl port-forward service/$($servicePortPairing.key) $($servicePortPairing.value):80\")) Write-Host \"Job: $($job.Command)\" $jobIds += $job.Id } Write-Host \"Press any key to kill the Kubernetes tunnels...\" $Host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\") } catch {} finally { foreach ($jobId in $jobIds) { Write-Host \"Killing $jobId\" Stop-Job -Id $jobId } } Note You will need to rerun the script if you restart any nodes while the script is running. Verification Run the following script to ensure that all APIs are accessible through kubectl forwarding. #!/bin/pwsh Set-PSDebug -Trace 0 # Echo every command (0 to disable, 1 to enable, 2 to enable verbose) Set-StrictMode -Version 3.0 $ErrorActionPreference = \"Stop\" foreach ($servicePort in 5000..5010) { Write-Host \"Testing Port #$servicePort...\" curl \"http://localhost:$servicePort/status\" }"
  },
  "development/contributing/git-workflow.html": {
    "href": "development/contributing/git-workflow.html",
    "title": "Git workflow | FoundationaLLM",
    "keywords": "Git workflow The general process for working with FoundationaLLM is: Fork on GitHub Clone your fork locally Configure the upstream repo (git remote add upstream git://github.com/solliancenet/foundationallm) Switch to the default branch (e.g. main, using git checkout main) Create a local branch from that (git checkout -b myBranch) Work on your feature Rebase if required (see below) Push the branch up to GitHub (git push origin myBranch) Send a Pull Request on GitHub - the PR should target (have as base branch) the default branch (e.g. main). You should never work on a clone of the default branch, and you should never send a pull request from it - always from a branch. The reasons for this are detailed below. Learning Git Workflow For an introduction to Git, check out GitHub Guides. For more information about GitHub Flow, please head over to the Understanding the GitHub Flow illustrated guide, both by the awesome people at GitHub. Handling Updates from the default branch While you're working away in your branch, it's quite possible that the upstream target branch may be updated. If this happens you should: Stash any uncommitted changes you need to git checkout vX_Y_Z git pull upstream main git rebase main myBranch git push origin main - (optional) this this makes sure your remote main branch is up to date This ensures that your history is \"clean\" i.e. you have one branch off from main followed by your changes in a straight line. Failing to do this ends up with several \"messy\" merges in your history, which we don't want. This is the reason why you should always work in a branch and you should never be working in, or sending pull requests from, main. Rebasing public commits is very problematic, which is why we require you to rebase any updates from upstream/main. If you're working on a long running feature then you may want to do this quite often, rather than run the risk of potential merge issues further down the line. Sending a Pull Request While working on your feature you may well create several branches, which is fine, but before you send a pull request you should ensure that you have rebased back to a single \"Feature branch\" - we care about your commits, and we care about your feature branch; but we don't care about how many or which branches you created while you were working on it :) When you're ready to go you should confirm that you are up to date and rebased with upstream (see \"Handling Updates from the default branch\" above), and then: git push origin myBranch Send a descriptive Pull Request on GitHub - making sure you have selected the correct branch in the GitHub UI!"
  },
  "development/contributing/index.html": {
    "href": "development/contributing/index.html",
    "title": "Contributing to FoundationaLLM | FoundationaLLM",
    "keywords": "Contributing to FoundationaLLM We are happy to accept contributions to the FoundationaLLM project in the form of feedback, bug reports, and pull requests. If you want to make code contributions, please be sure to branch from the head of the default branch. For GitHub workflow guidance, please review the Git workflow document. Style guide Please abide by the style guide when contributing to the project."
  },
  "development/contributing/repro.html": {
    "href": "development/contributing/repro.html",
    "title": "Bug report reproduction guide | FoundationaLLM",
    "keywords": "Bug report reproduction guide When customers plan to report an issue with FoundationaLLM, we will most likely ask them to provide a so called minimal reproduction project (repro). This serves two purposes: It helps issue reporters validate their assumptions by trying to recreate the behavior in a new project. It helps eliminate ambiguity and speeds up investigations. We may also be able to provide workarounds in certain scenarios. This document describes what a minimal repro project is, and why it's important to us. What is a minimal repro project? A repro (or a reproduction) is a project, which can be used to reproduce the reported behavior with minimal effort from a product team, which has the minimum code required to demonstrate the concerning behavior. Please provide a project hosted in a public GitHub repository as described below: Create a new project with the simplest structure you can get by with to reproduce your issue. Add the minimum amount of code necessary to reproduce the behavior you are reporting on this newly created project. Make sure you do not add any dependencies that are irrelevant to the behavior. Include sample data, if relevant. Host the project as a public repository on GitHub. Make sure you haven't included any binaries in your project (this is usually about the bin and obj folders in your project) Note: that this step is important and we won't be able to open zip attachments in your issues. Zip files are potential attack vectors that we try to avoid at all cost. Important considerations Never include any sensitive information in your reproduction project. Never include any code that is not intended to be public in a repro. Do not reference any external services or data sources."
  },
  "development/contributing/style-guide.html": {
    "href": "development/contributing/style-guide.html",
    "title": "Style guide | FoundationaLLM",
    "keywords": "Style guide FoundationaLLM is a growing project with many contributors. To ensure that the code is consistent and easy to read, we have created this style guide. Please follow these guidelines when contributing to the project. General The solution contains different languages and frameworks. The following guidelines apply to all of them: Simple, clean, and readable is always better Dependency Injection is the name of the game Avoid passing data structures around, always use strongly-typed classes Use the latest language features Use well-established design patterns Always think about the bigger picture (how will my choice potentially impact everyone else?) When introducing a new pattern/approach in your code, share with the rest of the team Measure 10 times, cut once (i.e. design before you code) Primarily, we strive to use a uniform approach across all the modules of the platform. Commenting Use comments to explain why you are doing something, not what you are doing. Apply comments to all public classes, methods, and properties. Comments should be written in complete sentences with proper casing and punctuation. Add a space after the comment delimiter (//, #, etc.). Do: // If the Azure Cognitive Search index does not exists, create the index. Don't: //Create index C# Follow the C# identifier naming rules and conventions. Follow the standard C# coding conventions. Python Abide by the Python naming and coding rules (PEP (Python Enhancement Proposal) 8)."
  },
  "development/development-approach.html": {
    "href": "development/development-approach.html",
    "title": "FoundationaLLM DevOps rules and guidelines | FoundationaLLM",
    "keywords": "FoundationaLLM DevOps rules and guidelines FoundationaLLM adheres to the trunk-based development philosophy. If you are a member of the FoundationaLLM core development team or you want to contribute to the code, we strongly encourage you to go through the following materials: Microsoft's Azure DevOps team branching strategy How Microsoft develops modern software with DevOps DORA's research program (Google) The state of DevOps - 2021 edition (DORA, Google) Trunk-based development (Google Cloud Architecture Center) Trunk-based development e-book by Paul Hammant Our move to trunk-based development is driven by the vision to build and deliver the FoundationaLLM solution using a solid DevOps process centered on a Git-centric release flow. How? The core rules of development: When a developer starts working on a feature or a bug fix, a new branch gets created from main. When the work ends, a PR is created to bring the work back into main. We encourage a granular approach, where each individual feature or bug fix has it's own branch. Work should be moved back into the trunk via a PR as soon as possible. NOTE: Committing directly into main is not allowed. All changes are merged via PRs which allows for consistent review, validation, and testing processes. When a sprint ends, a release branch is created. The release branch will be used to deploy the changes to production. Work on main ca resume right after the release branch was created. The release branch will live until the next release branch is created. In the case of critical bug fixes, the process will follow the same approach as described above at step 1. Once the PR is approved and the code merged to main, it will also be cherry-picked into the current release branch. From there, it will be deployed into production. NOTE: This approach ensures that no matter how critical a bug fix is and no matter how much pressure there is to fix an issue in production, the code for the fix always ends up in main. Why? Analysis of DevOps Research and Assessment (DORA) data from 2016, 2017 shows that teams achieve higher levels of software delivery and operational performance (delivery speed, stability, and availability) if they follow these practices: Have three or fewer active branches in the application's code repository. Merge branches to trunk at least once a day. Don't have code freezes and don't have integration phases. Common pitfalls Some common obstacles to full adoption of trunk-based development include the following: An overly heavy code-review process. Many organizations have a heavyweight code review process that requires multiple approvals before changes can be merged into trunk. When code review is laborious and takes hours or days, developers avoid working in small batches and instead batch up many changes. This in turn leads to a downward spiral where reviewers procrastinate with large code reviews due to their complexity. Consequently, merge requests often languish because developers avoid them. Because it is hard to reason about the impact of large changes on a system through inspection, defects are likely to escape the attention of reviewers, and the benefits of trunk-based development are diminished. Performing code reviews asynchronously. If your team practices pair programming, then the code has already been reviewed by a second person. If further reviews are required, they should be performed synchronously: when the developer is ready to commit the code, they should ask somebody else on the team to review the code right then. They should not ask for asynchronous review—for example, by submitting a request into a tool and then starting on a new task while waiting for the review. The longer a merge is delayed, the more likely it is to create merge conflicts and associated issues. Implementing synchronous reviews requires the agreement of the team to prioritize reviewing each others' code over other work. Not running automated tests before committing code. In order to ensure trunk is kept in a working state, it's essential that tests are run against code changes before commit. This can be done on developer workstations, and many tools also provide a facility to run tests remotely against local changes and then commit automatically when they pass. When developers know that they can get their code into trunk without a great deal of ceremony, the result is small code changes that are easy to understand, review, test, and which can be moved into production faster. Actions to take Develop in small batches (even smaller than we are used to) Speed up code review so that commits do not need to wait long times to get into main. Have comprehensive, automated testing Have a fast build Metrics Metric Goal Number of active branches (not including the ones developers create for their tasks) Three or less Code freeze periods (merge, stabilization, etc.) No code freeze Frequency of merging branches/forks to trunk At least once per day Time spent in code review (includes time waiting for code review) Average code review time per PR less than 30 min We strongly encourage you to go through the following: A synthetic description of the journey of our goals - sourced from https://devops.paulhammant.com/trunk-correlated-practices-chart/ A tool to calculate the DevOps performance our our team - sourced from https://paulhammant.com/2021/10/08/software-project-guidelines/ Feature flags To be used extensively to control the stability of the releases in production."
  },
  "development/development-local.html": {
    "href": "development/development-local.html",
    "title": "Configure local development environment | FoundationaLLM",
    "keywords": "Configure local development environment Prerequisites Environment variables: Create a system environment variable for the Application Configuration Service connection string named FoundationaLLM_AppConfig_ConnectionString. This is used by the .NET projects. Create a system environment variable for the Application Configuration Service URI named FOUNDATIONALLM_APP_CONFIGURATION_URI. This is used by the Python projects. Create a system environment variable named FOUNDATIONALLM_VERSION and set it to the version of the FoundationaLLM deployment you are working with. This is used by the .NET projects to validate your environment configuration based on the version. Tip You can view the FoundationaLLM release versions by viewing the branches in the FoundationaLLM repository. The format is release/n.n.n, where n.n.n is the version number. The FOUNDATIONALLM_VERSION environment variable should be set to the version number without the release/ prefix (example: 0.4.0). Follow the instructions in Configure access control for services to grant your user account access to the Azure App Configuration and Key Vault services. You may need an Azure admin to perform these steps on your behalf. Backend (APIs and worker services): Visual Studio 2022 17.8 or later (required for passthrough Visual Studio authentication for the Docker container and .NET 8 support) with the Python workload installed .NET 8 SDK or greater Python 3.11 (learn more about Python environments in Visual Studio) Docker Desktop (with WSL for Windows machines) (Mac install or Windows install) Azure CLI (v2.51.0 or greater) Microsoft Azure PowerShell Helm 3.11.1 or greater Frontend (Vue.js (Nuxt) web app) Visual Studio Code (recommended for development) Node.js v18.0.0 or newer NPM v10.2.3 or newer Recommended way to install the latest version of NPM and node.js on Windows: Install NVM from https://github.com/coreybutler/nvm-windows Run nvm install latest Run nvm list (to see the versions of NPM/node.js available) Run nvm use latest (to use the latest available version) Setup RBAC permissions when running locally When you run the solution locally, you will need to set role-based access control (RBAC) permissions on the Azure Cosmos DB account. You can do this by running the following command in the Azure Cloud Shell or Azure CLI: Assign yourself to the \"Cosmos DB Built-in Data Contributor\" role: az cosmosdb sql role assignment create --account-name YOUR_COSMOS_DB_ACCOUNT_NAME --resource-group YOUR_RESOURCE_GROUP_NAME --scope \"/\" --principal-id YOUR_AZURE_AD_PRINCIPAL_ID --role-definition-id 00000000-0000-0000-0000-000000000002 UI User Portal The UserPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps: Open the /src/ui/UserPortal folder in Visual Studio Code. Copy the .env.example file in the root directory to a new file named .env and update the values: The APP_CONFIG_ENDPOINT value should be the Connection String for the Azure App Configuration service. This should be the same value as the FoundationaLLM_AppConfig_ConnectionString environment variable. The LOCAL_API_URL should be the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Management Portal The ManagementPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps: Open the /src/ui/ManagementPortal folder in Visual Studio Code. Copy the .env.example file in the root directory to a new file named .env and update the values: The APP_CONFIG_ENDPOINT value should be the Connection String for the Azure App Configuration service. This should be the same value as the FoundationaLLM_AppConfig_ConnectionString environment variable. The LOCAL_API_URL should be the URL of the local Management API service (https://localhost:63267). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the MANAGEMENT API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. .NET projects Core API Core API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"GatekeeperAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7180/ }, , \"OrchestrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: \"https://localhost:7324/\" } } } } CoreWorker The CoreWorker project is a .NET worker service that acts as the Cosmos DB change feed processor. When you debug it locally, it runs within a Docker container. Because of this, it is important to make sure the App Configuration service connection string is set in the appsettings.Development.json file. This is because the Docker container will not have access to the environment variable. CoreWorker app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"<...>\" } } } Gatekeeper API Gatekeeper API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"OrchestrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7324/ }, \"GatekeeperIntegrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8042/ } } } } Orchestration API Orchestration API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"LangChainAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8765/ }, \"SemanticKernelAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7062/ }, \"AgentHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8742/ }, \"PromptHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8642/ }, \"DataSourceHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8842/ } } } } Semantic Kernel API Semantic Kernel API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"CognitiveSearch\": { \"IndexName\": \"vector-index\", \"MaxVectorSearchResults\": 10 }, \"OpenAI\": { \"CompletionsDeployment\": \"completions\", \"CompletionsDeploymentMaxTokens\": 8096, \"EmbeddingsDeployment\": \"embeddings\", \"EmbeddingsDeploymentMaxTokens\": 8191, \"ChatCompletionPromptName\": \"RetailAssistant.Default\", \"ShortSummaryPromptName\": \"Summarizer.TwoWords\", \"PromptOptimization\": { \"CompletionsMinTokens\": 50, \"CompletionsMaxTokens\": 300, \"SystemMaxTokens\": 1500, \"MemoryMinTokens\": 1500, \"MemoryMaxTokens\": 3000, \"MessagesMinTokens\": 100, \"MessagesMaxTokens\": 3000 } }, \"DurableSystemPrompt\": { \"BlobStorageContainer\": \"prompts\" }, \"CognitiveSearchMemorySource\": { \"IndexName\": \"vector-index\", \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"ACSMemorySourceConfig.json\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"BlobMemorySourceConfig.json\" }, \"SemanticKernelOrchestration\": { \"APIKeySecretName\": \"foundationallm-semantickernel-api-key\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"CognitiveSearch\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\" }, \"OpenAI\": { \"Endpoint\": \"https://<...>-openai.openai.azure.com/\", \"Key\": \"<...>\" }, \"DurableSystemPrompt\": { \"BlobStorageConnection\": \"<...>\" }, \"CognitiveSearchMemorySource\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\", \"ConfigBlobStorageConnection\": \"<...>\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageConnection\": \"<...>\" } } } Python projects Python Environment Variables Create local environment variables named: FOUNDATIONALLM_APP_CONFIGURATION_URI. The value should be the URI of the Azure App Configuration service and not the connection string. We use role-based access controls (RBAC) to access the Azure App Configuration service, so the connection string is not required. FOUNDATIONALLM_ENV: This is required by the OperationsManager to disable the verify setting on requests. By setting the value to dev, it allows calls to the State API from LangChain and other Python-based APIs when running locally (FOUNDATIONALLM_ENV = dev) by disabling the check for a valid SSL cert on requests. This is only necessary when running the State API locally. Otherwise, the setting should be set to prod. Name Value Description FOUNDATIONALLM_APP_CONFIGURATION_URI REDACTED Azure App Configuration URI FOUNDATIONALLM_ENV dev or prod Environment specification. Acceptable values are dev and prod. Defaults to prod if not set. Running the solution locally Configure and run the backend components The backend components consist of the .NET projects and the Python projects. The .NET projects are all ASP.NET Core Web API projects. The Python projects are all FastAPI projects. Open the solution in Visual Studio 2022 17.6 or later. The solution file is located at /src/FoundationaLLM.sln. Reference the API sections above to configure the app settings for each project. This primarily involves just creating the appsettings.development.json file for each of the .NET (located under the dotnet solution folder) API projects and adding the documented values within. For local development, use the localhost URLs for each of the API projects. Note The appsettings.development.json files are excluded from source control. This is to prevent sensitive information from being committed to source control. You will need to create these files locally. Expand the python solution folder. Expand the AgentHubAPI project, then expand the Python Environments folder underneath it. You will likely see a warning icon next to an environment named env. This is because the Python environment has not been created yet. Right-click the Python Environments folder and select Add Environment.... Ensure the Name field is set to env and the Version field is set to Python 3.11 (or your latest version). Also make sure the Install packages from file field is set to the requirements.txt file for the project. This will install the required Python packages after creating the environment. Click Create. You should now see the env environment listed under the Python Environments folder. The warning icon should be gone. Complete steps 4-7 for the DataSourceHubAPI, LangChainAPI, PromptHubAPI, and PythonSDK projects. You may optionally complete these steps for the Python test projects as well. Right-click the Solution in Visual Studio, then select Configure Startup Projects.... Select the Multiple startup projects option, then set the Action for the following projects to Start. Click OK. OrchestrationAPI AgentHubAPI CoreAPI DataSourceHubAPI GatekeeperAPI GatekeeperIntegrationAPI LangChainAPI PromptHubAPI SemanticKernelAPI ManagementAPI VectorizationAPI Press F5 to start debugging the solution. This will start all of the .NET projects and the Python projects. The Vue.js (Nuxt) web app will not be started by default. To start it, follow the steps below. Configure and run the frontend components The frontend components consist of the Vue.js (Nuxt) web apps. Run the User Portal The UserPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps Open the /src/ui/UserPortal folder in Visual Studio Code. Open the .env file and update the LOCAL_API_URL value to the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Open a terminal in Visual Studio Code and run the following commands: npm install npm run dev The web app should now be running at http://localhost:3000. Run the Management Portal The ManagementPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps Open the /src/ui/Management folder in Visual Studio Code. Open the .env file and update the LOCAL_API_URL value to the URL of the local Core API service (https://localhost:63267). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the MANAGEMENT API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Open a terminal in Visual Studio Code and run the following commands: npm install npm run dev The web app should now be running at http://localhost:3001."
  },
  "development/index.html": {
    "href": "development/index.html",
    "title": "Development | FoundationaLLM",
    "keywords": "Development Development approach Are you interested in contributing to the code? We would love your help! However, we do have some guidelines that we need contributors to follow so that we can keep things running smoothly. Please review the FoundationaLLM DevOps rules and guidelines document. Set up your development environment To successfully build and run the solution, you need to set up your development environment. Follow the instructions in the Configure local development environment document."
  },
  "documentation-generation.html": {
    "href": "documentation-generation.html",
    "title": "Documentation generation | FoundationaLLM",
    "keywords": "Documentation generation There are various layers of documentation for this project. This document describes the different layers and how they are generated. Documentation layers The following layers of documentation are available for this project: Markdown files - These are the source files for FoundationaLLM documentation. They are located in the docs folder in the main branch of the repository. API documentation - This is the documentation for the FoundationaLLM API. Language-specific API documentation is generated using tools (more on tools below). GitHub Pages - This is the primary documentation for the project. It is generated from the markdown files in the docs folder. It also includes the API documentation. Documentation tools We use a number of tools to generate the documentation for this project. The following table lists the tools and their purpose: Tool Purpose DocFX Generates the .NET API documentation for the FoundationaLLM API. It also generates the docs website, which includes custom documentation (markdown files) and the combined .NET and Python API documentation. Sphinx Generates the Python API documentation for the FoundationaLLM API. Sphinx DocFX YAML Generates the DocFX YAML files for the Python API documentation. This allows the DocFx build process to incorporate the Python documentation as well. GitHub Pages Hosts the documentation website. It is configured to use the gh-pages branch of the repository as the source for the website. DocFX Execute the following command from the repository root to generate the .NET API documentation: docfx docs/docfx.json"
  },
  "index.html": {
    "href": "index.html",
    "title": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots | FoundationaLLM",
    "keywords": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots FoundationaLLM simplifies and streamlines building knowledge management (e.g., question/answer agents) and analytic (e.g., self-service business intelligence) copilots over the data sources present across your enterprise. FoundationaLLM deploys a secure, comprehensive and highly configurable copilot platform to your Azure cloud environment: Simplifies integration with enterprise data sources used by agent for in-context learning (e.g., enabling RAG, CoT, ReAct and inner monologue patterns). Provides defense in depth with fine-grain security controls over data used by agent and pre/post completion filters that guard against attack. Hardened solution attacked by an LLM red team from inception. Scalable solution load balances across multiple LLM endpoints. Extensible to new data sources, new LLM orchestrators and LLMs. Reality What it really takes to create a secure, well governed, scalable and extensible enterprise copilot solution: Where does FoundationaLLM stack against the other copilot solutions? What do WE mean by \"copilot\" It's a rapidly evolving AI world out there, so let's level set on what we mean when we say copilot as this is concept core to FoundationaLLM. At its most basic, a copilot uses enterprise supplied knowledge and generative AI models to author text, write code or render images, often by reasoning over human supplied prompts. Across these modalities, the AI is used to assist a human directly with a specific task. That's what makes it a copilot. This basic capability emerges in copilots which power these scenarios: Knowledge Management: Help users quickly find the information they seek and deliver at the right level and in the right format. Examples include summarization, rephrasing or retargeting to address a persona (e.g., explain it like I'm five), sentiment analysis and recommendations. Analytics: Help users quickly get to the data driven insights they seek. Examples include recommendations, predictions, anomaly detection, statistical analysis and data querying and reporting. Why is FoundationaLLM Needed? Simply put we saw lot of folks reinventing the wheel just to get a customized copilot that was grounded and bases its responses in their own data as opposed to the trained parametric knowledge of the model. Many of the solutions we saw made for great demos, but were effectively toys wrapping calls to OpenAI endpoints- they were not something intended or ready to take into production. We built FoundationaLLM to provide a continous journey, one that was quick to get started with so folks could experiment quickly with LLM's but not fall off a cliff after that with a solution that would be insecure, unlicensed, inflexible and not fully featured enough to grow from the prototype into a production solution without having to start all over. The core problems to deliver enterprise copilots are: Enterprise grade copilots are complex and have lots of moving parts (not to mention infrastructure). The industry has a skills gap when it comes to filling the roles needed to deliver these complex copilot solutions. The top AI risks (inaccuracy, cybersecurity, compliance, explainability, privacy) are not being mitigated. Delivery of a copilot solution is time consuming, expensive and frustrating. Where can FoundationaLLM fill the need? Documentation Get up to speed with FoundationaLLM by reading the documentation. This includes deployment instructions, quickstarts, architecture, and API references. Getting Started FoundationalLLM provides a simple command line driven approach to getting your first deployment up and running. Basically, it's two commands. After that, you can customize the solution, run it locally on your machine and update the deployment with your customizations. Follow the Quick Start Deployment instructions to get FoundationaLLM deployed in your Azure subscription. If you want to run the solution locally, follow the Local Development instructions. You can browse the documentation using the sidebar or visit the API section for the reference documentation."
  },
  "operations/backups.html": {
    "href": "operations/backups.html",
    "title": "FoundationaLLM Backups & data resiliency | FoundationaLLM",
    "keywords": "FoundationaLLM Backups & data resiliency Before implementing any backup strategy, it's important to carefully plan and consider factors such as recovery time objectives (RTO), recovery point objectives (RPO), and compliance requirements. Choose the method or combination of methods that best align with your specific backup and recovery needs. CosmosDB Ensuring regular backups for Azure Cosmos DB is crucial to protect data such as private agents, user profiles, and chat history. Backups play a vital role in safeguarding your data against accidental deletions, data corruption, or other unforeseen issues. Here are some key points to consider when planning your Cosmos DB backup strategy: Backup and Restore: Automated Backups: Azure Cosmos DB includes automated backups that are taken at regular intervals. These backups are used to provide point-in-time restore capabilities. Retention Period: Backups are retained for a specific retention period, allowing you to restore your data to a previous state within that time frame. The options for retention period are 7 or 30 days. The Standard deployment configures 30 days retention. How to Configure Backup Policy: Backup policies can be configured at the Cosmos DB account level, specifying the frequency and duration of backups. Restore from Backup: You can initiate a point-in-time restore using the Azure Portal, Azure PowerShell, or Azure SDKs. Data Resiliency: Global Distribution: Distributing your Cosmos DB data globally across multiple regions ensures that your data is available even in the face of regional outages. This enhances data resiliency and availability. The Standard Deployment does not currently enable global data distribution. Data is replicated within a single region by the Cosmos DB service. Consistency Levels: Azure Cosmos DB offers various consistency levels, allowing you to balance between consistency and availability based on your application's requirements. The Standard Deployment uses Session consistency by default. Manual Backups and Data Migration: Export and Import: You can manually export your Cosmos DB data to Azure Storage or another Cosmos DB account, providing an additional layer of backup and migration capability. The Standard Deployment does not configure this capability by default. Storage Accounts Backing up the storage account where your prompts, agents, and data sources are defined is crucial to ensure the integrity and availability of your conversational data. Here are steps you can take to back up an Azure Storage account: Azure Storage Account Replication: Azure Storage offers built-in redundancy options like Locally Redundant Storage (LRS), Zone-Redundant Storage (ZRS), Geo-Redundant Storage (GRS), and Read-Access Geo-Redundant Storage (RA-GRS). These options replicate your data across different locations for high availability and durability. By default, LRS is enabled for all new storage accounts in the Standard Deployment. You can change the replication option for an existing storage account by navigating to the Replication tab in the Azure portal. Azure Backup: Azure Backup service allows you to create backups of your virtual machines, files, and databases, including Azure Storage accounts. You can configure backup policies and retention rules to meet your data protection requirements. Configuring Azure Backup is not currently enabled in the Standard Deployment, but you can use the Azure portal to manually configure back up for your storage account. Azure Blob Storage Versioning: Azure Blob Storage versioning is a feature that allows you to enable versioning on your storage account. When versioning is enabled, any update or deletion of a blob results in the creation of a new version of that blob. This helps you maintain a historical record of changes made to your data. This feature is enabled in the Standard Deployment. Azure Blob Storage Soft Delete: Soft delete is a feature in Azure Blob Storage that provides an extra layer of protection against accidental data deletion. When soft delete is enabled, deleted blobs are retained for a specified retention period before being permanently deleted. In the Standard Deployment, soft delete is enabled for 30 days for blobs and containers. Key Vault Azure Key Vault provides several features to help you protect and manage your keys and secrets effectively. Purge Protection: Purge protection is a feature in Azure Key Vault that helps prevent the permanent deletion of a key vault. When purge protection is enabled, the key vault cannot be permanently deleted immediately after deletion. Instead, there is a retention period during which the key vault is retained, and it can be recovered. Key Vaults in the Standard Deployment have purge protection enabled by default and deleted Key Vaults are retained for 7 days. Soft Delete: Soft delete is a feature that protects keys, secrets, and certificates in Azure Key Vault from immediate and irreversible deletion. When soft delete is enabled, deleted items are retained for a specified retention period before they are permanently deleted. Soft delete is enabled by default for all new key vaults in the Standard Deployment. Deleted keys, secrets, and certificates are retained for 7 days. Secret Versioning: Secret versioning is a feature that allows you to store multiple versions of a secret within a key vault. Each time you create or update a secret, a new version is generated. Secret versions help you maintain a history of changes and facilitate rollbacks if needed. This feature is enabled on all Key Vaults in Azure. Backups: Azure Key Vault provides a backup and restore capability, allowing you to create backups of your key vault's keys, secrets, and certificates. These backups can be used for data recovery and protection against accidental data loss. There is no way to backup the entire Key Vault or to schedule regular backups. App Config Azure App Configuration provides features related to backup, versioning, and data resiliency to help you effectively manage and deploy application configuration settings. Backup in Azure App Configuration: Azure App Configuration allows you to back up your configuration settings, including feature flags, connection strings, and other key-value pairs using the Import/Export feature. Backups can be sent to another App Configuration instance, an App Service, or a local file. Versioning in Azure App Configuration: Azure App Configuration automatically version-controls your configuration settings. Each change to a key-value pair creates a new version. Versioning helps track changes to configuration settings over time. You can access and roll back to previous versions of a key-value pair. Data Resiliency in Azure App Configuration: Azure App Configuration is designed with built-in redundancy across multiple regions to ensure high availability and data resiliency. App Configuration supports multi-region replication, allowing you to replicate your configuration settings to different regions for additional resilience. This feature is not currently enabled in the Standard Deployment."
  },
  "operations/graph-api-permissions.html": {
    "href": "operations/graph-api-permissions.html",
    "title": "Why FoundationaLLM needs Graph API permissions | FoundationaLLM",
    "keywords": "Why FoundationaLLM needs Graph API permissions Summary A fully functional, robust, and scalable Role-Based Access Control (RBAC) implementation is critical for the success of any enterprise software platform. This is especially true with Generative AI platforms where the new ways in which data is transported, processed, and transformed must be secured and governed. A fully functional RBAC implementation relies on capabilities provided by the underlying identity management platform like: Enumeration of users, groups, and security principals Mapping of object identifiers to their display names Identification of security groups membership. The RBAC implementation provided by FoundationaLLM is designed from the ground up to provide the necessary security layers required by a Generative AI platform deployed in the enterprise. For transparency and auditing purposes, FoundationaLLM keeps all its source code out in the open (in a public GitHub repository) allowing all of the claims made about the behavior of the code to be validated and confirmed by any interested party. Context Graph API permissions are required for the managed identities of the two surface APIs of the platform: Core API Management API These APIs are involved in authenticating their clients (the FoundationaLLM portals and any other actor calling them). They are also involved in enforcing and managing the underlying Role-Based Access Control model of the platform. Rationale behind the architectural decision When authenticating against Graph API, any custom-built API has two choices: Using an Entra ID application registration with a client secret or using a managed identity In both cases, the underlying service principal (the enterprise application associated with the application registration or the managed identity itself) will need the proper permissions to the Graph API to fulfill its tasks. According to Microsoft's official documentation: \"Managed identities provide an automatically managed identity in Microsoft Entra ID for applications to use when connecting to resources that support Microsoft Entra ID authentication. Applications can use managed identities to obtain Microsoft Entra ID tokens without having to manage any credentials.\" The recommended path forward is using managed identities as opposed to any approach that involves using secrets that need to be managed (plain or certificates). This is the underlying justification for our architectural decision to assign permissions to the managed identities. Justification of the need Any standard Role-Based Access Control capability requires the following core features (none of them being optional): Based on the object ID of a security principal, retrieve the security groups it belongs to (either directly or transitively). Based on a list of object IDs of security principals, retrieve their display names (to display meaningful information in the RBAC management experience). Select users, groups, or service principals that are targets for role assignments in the RBAC model. Note \"Entry-level\" approach is to ask for group membership in access tokens. This approach has significant limitations as it is limited to a small number of groups which, if exceeded, will result in a Graph API reference added to the access token, forcing the code to call into Graph API. This limit is hit with almost certainty in enterprise scenarios, hance our decision to use the robust approach (directly calling Graph API) by default. Based on all of the above, the justification for the requested roles is as follows: Group.Read.All - required to get the group membership for security principals authenticated against the APIs which is in turn used to evaluate their role membership and level of access to the capabilities of the platform. Also required to list security groups when FoundationaLLM RBAC roles are assigned to them. User.Read.All - required for group membership retrieval and to list users when FoundationaLLM RBAC roles are assigned to them. Application.Read.All - required for group membership retrieval and to list security principals when FoundationaLLM RBAC roles are assigned to them. Note From the Graph API documentation (https://learn.microsoft.com/en-us/graph/permissions-reference): \"In some cases, an app might need extra permissions to read some group properties like member and memberOf. For example, if a group has one or more service principals as members, the app also needs permissions to read service principals, otherwise Microsoft Graph returns an error or limited information.\" Transparency and auditing The FoundationaLLM source code is fully available in a public GitHub repo: https://github.com/solliancenet/foundationallm. We took this critical decision precisely for cases like this, where our customers need to understand (and also fully audit if needed) the security implications of the permissions granted to various FoundationaLLM components during deployment. For the specific case of Graph API interactions, the behavior is fully encapsulated in one service implementation It can be immediately verified that: Our code performs only the operations mentioned above. Our code uses the smallest possible subset of properties to fulfill its required functionality."
  },
  "operations/index.html": {
    "href": "operations/index.html",
    "title": "Standard platform administration documentation | FoundationaLLM",
    "keywords": "Standard platform administration documentation Environment Setup: Initial environment setup (Quick Start Deployment) Initial environment setup (Standard Deployment) Configuration settings for different components: App Configuration Settings Configuration for deployment Configure Core API Settings Configure Management API Settings User Management: Creating, modifying, and deleting user accounts: Authentication setup Assigning roles and permissions: Access control for azure services FoundationaLLM Role-Based Access Control System Maintenance: FoundationaLLM Backups & Data Resiliency Security Measures: Platform Security Features & Best Practices Logging and Auditing: Accessing System Logs & Audit Trails Troubleshooting: Troubleshooting & Issue Reporting Guide Platform Features: Use cases and best practices for utilizing specific features Update Process: Release Notes: Guidance for creating release notes Update Procedure: Updating container versions in the Standard Deployment Vulnerabilities: Vulnerabilities: Identification, Communication, and Remediation"
  },
  "operations/logs.html": {
    "href": "operations/logs.html",
    "title": "Accessing system logs & audit trails | FoundationaLLM",
    "keywords": "Accessing system logs & audit trails Maintaining visibility into system activities is paramount for ensuring security, troubleshooting issues, and monitoring overall system health. Our system generates various logs that provide valuable insights into events, errors, and user activities, and these logs are centrally stored in an Azure Log Analytics Workspace. Accessing these logs is crucial for effective system management. Below, we outline the procedures for accessing logs within our system. 1. Log location Our system logs are stored in the Azure Log Analytics Workspace. This centralized location within Azure ensures ease of access and management. After deployment, customers can redirect these logs to an existing Log Analytics Workspace within their Azure environment, if desired. 2. Log types Different types of logs are generated, including: Security Logs: Capturing security-related events and potential threats. System Logs: Detailing system-level activities and performance metrics. Application Logs: Recording application-specific events and errors. 3. Access permissions Access to logs is restricted to authorized personnel with the appropriate permissions using Azure RBAC. Ensure that only individuals with a legitimate need for log access have the required Azure Roles. 4. Access methods Azure Portal: Navigate to the Azure Portal and access the Log Analytics Workspace for log retrieval. Azure Command-Line Interface (CLI): Use Azure CLI commands for programmatic access to logs. 5. Log retention For long term retention, export logs to a storage account or archive them to a data lake. This is not configured by default but can be added by customers after the initial deployment. The default retention period for logs is 30 days. This can be changed by customers after the initial deployment. 6. Monitoring Tools Utilize Azure Monitor and Log Analytics tools to receive real-time alerts for critical events. Integration with Azure monitoring solutions enhances proactive incident response and system stability. Additional tools like Azure Sentinel can be used for advanced security monitoring and threat detection but are not configured by default. 8. Audit Trails All diagnostics are enabled by default in the standard deployment, including audit trails for Key Vault and similar resources. Audit trails are stored in the Azure Log Analytics Workspace. Regularly review audit trails to ensure the integrity and security of log data."
  },
  "operations/network-security-groups.html": {
    "href": "operations/network-security-groups.html",
    "title": "Network Security Group Configurations | FoundationaLLM",
    "keywords": "Network Security Group Configurations FoundationaLLM uses Azure Virtual Networks for network segmentation. The Standard Deployment uses Network Security Groups (NSGs) to control inbound and outbound traffic. The following table lists the NSGs used in the Standard Deployment and the ports that are open by default. NSG Rules Application Gateway Rule Name Access DestinationAddressPrefix DestinationPortRange Direction Priority Protocol ProvisioningState SourceAddressPrefix SourcePortRange Notes allow-internet-http-inbound Allow VirtualNetwork 80 Inbound 128 Tcp Succeeded Internet * Customers may restrict inbound connectivity as desired. allow-internet-https-inbound Allow VirtualNetwork 443 Inbound 132 Tcp Succeeded Internet * Customers may restrict inbound connectivity as desired. allow-gatewaymanager-inbound Allow * 65200-65535 Inbound 148 Tcp Succeeded GatewayManager * This rule is required by Azure and cannot be changed.1 allow-loadbalancer-inbound Allow * * Inbound 164 * Succeeded AzureLoadBalancer * This rule is required by Azure and cannot be changed.1 deny-all-inbound Deny * * Inbound 4096 * Succeeded * * Customers may modify this rule if needed (not reccomended) 1: For further information regarding required NSG rules for Application Gateway, please see this article."
  },
  "operations/release-notes.html": {
    "href": "operations/release-notes.html",
    "title": "Guidance for creating release notes | FoundationaLLM",
    "keywords": "Guidance for creating release notes Creating release notes is an essential part of the software development and release process. Release notes provide valuable information to end-users, stakeholders, and other team members about the changes, enhancements, and fixes introduced in a software release. Here's a structured process for creating release notes: 1. Define the release scope and content Understand the changes included in the release. Identify new features, enhancements, bug fixes, and any other significant changes. 2. Use a version control system Review the commit history and pull requests associated with the release. Identify the issues or features implemented during the release period. 3. Categorize changes Group changes into categories for clarity. Common categories include: New Features Enhancements Bug Fixes Deprecations Security Updates 4. Collect information Gather details for each change, including: Brief description of the change. Associated issue or feature request numbers. Names of contributors or teams involved. 5. Prioritize information Arrange the changes in order of importance or relevance to users. Highlight major features or critical bug fixes at the top. 6. Write Release Notes Craft concise and clear release notes. Use a consistent format and style. Include a header with the release version, date, and any important announcements. 7. Provide context Offer context for each change. Explain why a feature was added or why a bug fix was necessary. Include information that helps users understand the impact of the changes. 8. Include links Add links to relevant documentation, issue trackers, or pull requests for more details. This helps users and developers find additional information if needed. 9. Test Release Notes Review the release notes to ensure accuracy and completeness. Verify that all changes are appropriately documented. 10. Review with stakeholders Share the draft release notes with relevant stakeholders, such as product managers, developers, and quality assurance teams. Incorporate feedback and make necessary adjustments. 11. Publish release notes We will publish release notes as part of creating a new release in github. If applicable, notify users through email, social media, or other communication channels. 12. Archive previous release notes Maintain a historical record by archiving previous release notes. Relase notes for previous releases will remain visible with those releases in github. This helps users track changes over time and understand the evolution of the software. 13. Update documentation Ensure that other documentation, such as user guides or API documentation, is updated to reflect the changes introduced in the release. 14. Automate if possible Consider automating parts of the release notes generation process, especially if your project follows a structured development workflow with clear commit messages and pull request descriptions. 15. Seek user feedback Encourage users to provide feedback on the release notes. This can help you improve the clarity and usefulness of future release notes. By following this process, you can create comprehensive and user-friendly release notes that effectively communicate the changes made in each software release."
  },
  "operations/security.html": {
    "href": "operations/security.html",
    "title": "Platform security features & best practices | FoundationaLLM",
    "keywords": "Platform security features & best practices Maintaining the security of the Azure platform is crucial for protecting sensitive data and ensuring the integrity of your infrastructure. Identity and Access Management (IAM) Ensure that only authorized users have access to your Azure resources. FoundationaLLM uses Azure Entra ID for centralized identity management. Enable multi-factor authentication (MFA) for all user accounts. Network Security The standard deployment: Uses Azure Virtual Networks for network segmentation. Implements Network Security Groups (NSGs) to control inbound and outbound traffic. Network Security Rule Details Data Encryption Wherever possible the Standard Deployment uses encryption at rest with system-managed keys. Customer managed keys can be enabled at your discretion. Threat Detection and Monitoring Wherever supported the Standard Deployment enables Azure Diagnostics on the resources it deploys. These logs are sent to a Log Analytics workspace. as part of the standard resources. Customers are encouraged to enable Azure Defender for additional threat detection and monitoring. Customers may use Azure Sentinel for advanced security information and event management (SIEM). Customers already using Azure Sentinel may redirect the logs from the Standard Deployment to their existing Azure Sentinel instance. Patch Management Regularly check the FoundationaLLM github repository for new image releases and update your deployment accordingly."
  },
  "operations/troubleshooting.html": {
    "href": "operations/troubleshooting.html",
    "title": "Troubleshooting & issue reporting guide | FoundationaLLM",
    "keywords": "Troubleshooting & issue reporting guide There are three common issues that may arise when using the FoundationaLLM platform. This guide provides a structured approach to troubleshooting these issues. Troubleshooting Azure App Registration misconfiguration 1. Symptoms: Users unable to authenticate or access Azure services using the app. Error messages related to authentication failures. 2. Troubleshooting Steps: a. Verify App Registration Configuration: Check the Azure Portal for the App Registration settings. Ensure the correct redirect URIs, client secrets, and authentication settings are configured by reviewing (the setup guide)[../deployment/authentication/core-authentication-setup-entra.md#update-app-configuration-settings]. b. Error Logs Examination: Review logs for any authentication-related errors. Check for error details and correlate them with misconfigured settings. Troubleshooting missing Azure App Registration details in Azure App Configuration 1. Symptoms: Application unable to retrieve configuration settings. Errors related to missing or invalid configuration values. Login problems similar to those described in the previous section. 2. Troubleshooting Steps: a. Check Azure App Configuration: Verify that the App Registration details are correctly stored in Azure App Configuration using the setup guide. Ensure that keys, secrets, and connection strings are accurate. c. Azure App Configuration Logs: Inspect Azure App Configuration logs for any errors related to configuration retrieval. Look for issues such as key not found or invalid values. d. Azure Key Vault Integration: FoundationaLLM Azure Key Vault for sensitive configuration, verify the correct values are in Key Vault using [the setup guide][1]. Ensure the Azure App Configuration managed identity has the necessary permissions to access Key Vault secrets. Troubleshooting container crashing 1. Symptoms: Containers restarting frequently or failing to start. Application unavailability due to container issues. 2. Troubleshooting Steps: a. Container Logs Examination: Access container logs in Log Analytics to identify error messages or issues during startup. Look for any crashes, exceptions, or resource constraints. b. Resource Utilization: Check resource utilization metrics (CPU, memory) for the container. Ensure that the container has adequate resources allocated. c. Dependency Check: Examine dependencies within the containerized application. Verify that required services or components are accessible. d. Container Health Checks: Identify and address health check failures impacting container stability. e. Container Image Update: Review the container image version, update to the latest version to receive bug fixes and new features. Additional support and issue reporting If you encounter an issue that is not addressed by the troubleshooting steps outlined in this document, we encourage you to open a GitHub issue. This ensures that our team can provide tailored assistance and continuously improve our troubleshooting resources. Steps to open a GitHub issue Navigate to our GitHub Repository: Visit our GitHub repository at https://github.com/solliancenet/foundationallm. Check Existing Issues: Before creating a new issue, check the existing issues to see if the problem has already been reported or discussed. Create a New Issue: Click on the \"Issues\" tab in the repository. Select \"New Issue\" to open a new issue template. Provide Detailed Information: Clearly describe the issue, including symptoms, error messages, and steps to reproduce. Attach relevant logs or screenshots that can assist in understanding the problem. Tag the Issue Appropriately: Tag the issue with relevant labels, such as \"bug,\" \"enhancement,\" or \"question,\" to categorize it correctly. Monitor for Updates: After creating the issue, monitor it for updates and respond promptly to any requests for additional information. By opening a GitHub issue at https://github.com/solliancenet/foundationallm, you contribute to our collaborative effort in maintaining a robust and well-supported system. Our team values your feedback, and addressing issues through GitHub allows for a transparent and efficient resolution process. Thank you for your collaboration, and we look forward to assisting you with any challenges you may encounter. Your input is instrumental in enhancing the overall reliability and functionality of our system."
  },
  "operations/update.html": {
    "href": "operations/update.html",
    "title": "Updating container versions in the Standard Deployment | FoundationaLLM",
    "keywords": "Updating container versions in the Standard Deployment The Standard Deployment uses the foundationallm/deploy/scripts/Deploy-Images-Aks.ps1 script to deploy latest version of the FoundationaLLM images during initial setup. However, you may want to update the images to a specific version. This can be done by updating the values file and redeploying the images. PREREQUISITES Azure CLI set to the correct tenant/subscription context AKS credentials located in the .kube/config directory To obtain AKS credentials, use the following Azure CLI command: az aks get-credentials --name \"[PREFIX]-aks\" --resource-group \"[DEPLOYMENT RESOURCE GROUP]\" Helm CLI DESCRIPTION This script deploys multiple images on an AKS (Azure Kubernetes Service) cluster using Helm charts. It takes various parameters such as the release name, AKS name, resource group, tag, charts to deploy, values file, namespace, TLS/SSL environment, TLS host, TLS secret name, and autoscale option. PARAMETER name The release name for the deployment. Default is \"foundationallm\". PARAMETER aksName The name of the AKS cluster. PARAMETER resourceGroup The resource group of the AKS cluster. PARAMETER tag The tag of the images to deploy. Default is \"latest\". PARAMETER charts The charts to deploy. Use \"\" to deploy all charts. Default is \"\". PARAMETER valuesFile The path to the values file for Helm charts. Default is \"gvalues.yaml\". PARAMETER namespace The namespace to deploy the charts. If empty, it uses the namespace specified in .kube/config. PARAMETER tlsEnv The TLS/SSL environment to enable. Valid values are \"prod\", \"staging\", \"none\", and \"custom\". Default is \"prod\". PARAMETER tlsHost The hostname of the AKS cluster. Required if tlsEnv is set to \"custom\". PARAMETER tlsSecretName The name of the TLS secret. Required if tlsEnv is set to \"custom\". PARAMETER autoscale Specifies whether to enable autoscaling for the core-job chart. Default is $false. EXAMPLE Deploy-Images-Aks.ps1 ` -aksName \"myAKS\" ` -resourceGroup \"myResourceGroup\" ` -tag \"v1.0\" ` -charts \"core-api,core-job\" ` -valuesFile \"myvalues.yaml\" ` -namespace \"myNamespace\" ` -tlsEnv \"prod\" ` -tlsHost \"myaks.example.com\" ` -tlsSecretName \"myTLSSecret\" ` -autoscale $true Note: The script will NOT generate a gvalues.yaml file for you. If you do not have a gvalues.yaml file locally, use the Helm CLI to obtain it. # Get all releases (e.g., foundationallm-web) helm list # Write gvalues.yaml for release helm get values \"foundationallm-web\" --all > gvalues.yaml"
  },
  "operations/vulnerabilities.html": {
    "href": "operations/vulnerabilities.html",
    "title": "Vulnerabilities: Identification, communication, and remediation | FoundationaLLM",
    "keywords": "Vulnerabilities: Identification, communication, and remediation FoundationaLLM is committed to maintaining the security of our platform and protecting the integrity of your data. We conduct regular security testing to identify and address potential vulnerabilities in our platform. Vulnerability Identification: Regular Red-Team Exercises: Our security protocols include routine red-team exercises aimed at identifying potential vulnerabilities and misconfigurations within the Azure platform. Through these exercises, we simulate real-world attack scenarios to proactively identify and address any weaknesses in our security posture. Regular Builds and Container Image Scans: To stay ahead of emerging threats, we conduct regular builds and scans of our container images. This proactive approach involves identifying and addressing newly reported Common Vulnerabilities and Exposures (CVEs) promptly. By integrating security scans into our regular build processes, we ensure that our container images adhere to the latest security standards and mitigate potential risks effectively. Vulnerability Severity Categorization: Severity levels for vulnerabilities and other security findings are defined as follows: Minor: Vulnerabilities categorized as minor pose low or negligible risk to our system's security. These issues typically have minimal impact on operations and can be addressed during routine maintenance. Major: Major vulnerabilities signify a moderate level of risk and may have a noticeable impact on security if left unaddressed. Immediate attention is given to major vulnerabilities to mitigate potential security gaps and maintain a secure environment. High: Vulnerabilities classified as high represent a significant risk to the security and stability of our Azure platform. Urgent action is taken to address high-severity issues, often involving immediate patches or remediation steps to minimize potential threats. Critical: Critical vulnerabilities pose a severe and imminent threat to the integrity and confidentiality of our system. Immediate and comprehensive measures are implemented to address critical vulnerabilities, including rapid deployment of patches, configuration changes, or other necessary security controls. This severity categorization allows us to prioritize our response efforts based on the potential impact and urgency associated with each vulnerability. Regular assessments and adjustments are made to ensure the accuracy and relevance of the severity levels assigned to vulnerabilities. Communication of Patched Versions: We are committed to maintaining transparent and effective communication regarding security updates and patched versions. Our primary channel for disseminating information about patched versions is our official GitHub release page. This ensures that our users and stakeholders have immediate access to crucial details about the updates, including security enhancements and fixes. Key points related to the communication of patched versions on our GitHub release page: Release Notifications: Timely notifications about new releases, including security patches, will be posted on our GitHub release page. Users are encouraged to subscribe to release notifications to stay informed about the latest updates and security improvements. Detailed Release Notes: Each release on our GitHub page will include comprehensive release notes outlining the changes, enhancements, and specific security vulnerabilities addressed. This transparent approach provides our community with detailed insights into the updates and the importance of applying the latest patches. Vulnerability Disclosure: We adhere to responsible disclosure practices by openly acknowledging and crediting the individuals or organizations that report security vulnerabilities to us. Detailed information about the vulnerabilities, their potential impact, and the corresponding patches will be shared on our GitHub release page. Encouraging Regular Updates: Users are strongly encouraged to regularly check our GitHub release page for the latest updates and security patches. Proactive adoption of the latest releases ensures that users benefit from the most recent security enhancements and protection against potential threats. By leveraging our GitHub release page as a central hub for communication, we aim to streamline the process of disseminating critical information and empowering our user community to maintain a secure environment."
  },
  "release-notes/breaking-changes.html": {
    "href": "release-notes/breaking-changes.html",
    "title": "History of breaking changes | FoundationaLLM",
    "keywords": "History of breaking changes Note This section is for changes that are not yet released but will affect future releases. Breaking changes that will affect future releases Starting with 0.8.0 Core API changes: All Core API endpoints have been moved to the /instances/{instanceId} path. For example, the /status endpoint is now /instances/{instanceId}/status. The /orchestration/* endpoints have been moved to /instances/{instanceId}/completions/*. The previous /orchestration/completions endpoint is now /instances/{instanceId}/completions. The /sessions/{sessionId}/completion endpoint has been moved to /instances/{instanceId}/completions. Instead of having the sessionId as a path parameter, it is now in the request body as part of the CompletionRequest payload. /sessions/{sessionId}/summarize-name has been removed. In the future, the /completions endpoint will be used to generate summaries. OrchestrationRequest and CompletionRequest have combined into a single CompletionRequest object. DirectionCompletionRequest has been removed. Use CompletionRequest instead. Status controllers \\status action in the .NET API projects return value has renamed the Instance property to InstanceName. The CompletionController.cs file under dotnet/CoreApi/controllers has introduced the Async-Completions endpoint to handle asynchronous completions. With the introduction of Async-Completions, long running operations can now report on completion status based on Pending, InProgress, Completed and Failed states. Vectorization Embedding Profile introduces a required key in the Settings property named model_name. Every embedding request now flows through the Gateway API. Vectorization Indexing Profile introduces a required key api_endpoint_configuration_object_id in the Settings property. Retirement of SemanticKernel embedding type. All embedding requests now flow through the Gateway API. Gatekeeper API changes: All Gatekeeper API endpoints have been moved to the /instances/{instanceId} path. For example, the /status endpoint is now /instances/{instanceId}/status. The /orchestration/* endpoints have been moved to /instances/{instanceId}/completions/*. Orchestration API changes: All Gatekeeper API endpoints have been moved to the /instances/{instanceId} path. For example, the /status endpoint is now /instances/{instanceId}/status. The /orchestration/* endpoints have been moved to /instances/{instanceId}/completions/*. ======= New APIs Gateway Adapter API - requires the following configuration settings: FoundationaLLM:APIs:GatewayAdapterAPI:APIUrl FoundationaLLM:APIs:GatewayAdapterAPI:APIKey (mapped to the foundationallm-apis-gatewayadapterapi-apikey secret) FoundationaLLM:APIs:GatewayAdapterAPI:APIAppInsightsConnectionString (mapped to the foundationallm-app-insights-connection-string secret) State API - requires the following configuration settings: FoundationaLLM:APIs:StateAPI:APIUrl FoundationaLLM:APIs:StateAPI:APIKey (mapped to the foundationallm-apis-stateapi-apikey secret) FoundationaLLM:APIs:StateAPI:APIAppInsightsConnectionString (mapped to the foundationallm-app-insights-connection-string secret) Note These new APIs will be converted to use the new APIEndpoint artifacts. Changes in app registration names API Name Entra ID app registration name Application ID URI Scope name Core API FoundationaLLM-Core-API api://FoundationaLLM-Core Data.Read Management API FoundationaLLM-Management-API api://FoundationaLLM-Management Data.Manage Authorization API FoundationaLLM-Authorization-API api://FoundationaLLM-Authorization Authorization.Manage User Portal FoundationaLLM-Core-Portal api://FoundationaLLM-Core-Portal N/A Management Portal FoundationaLLM-Management-Portal api://FoundationaLLM-Management-Portal N/A Changes in app configuration settings The FoundationaLLM:APIs and FoundationaLLM:ExternalAPIs configuration namespaces have been replaced with the FoundationaLLM:APIEndpoints configuration namespace. Important All existing API registrations need to be updated to reflect these changes. The only two settings that will exist under FoundationaLLM:APIEndpoints are APIKey (for those API enpoints which use API key authentication) and AppInsightsConnectionString, all the other settings are now part of the APIEndpoint artifact managed by the FoundationaLLM.Configuration resource provider. This is an example for CoreAPI: FoundationaLLM:APIEndpoints:CoreAPI:APIKey FoundationaLLM:APIEndpoints:CoreAPI:AppInsightsConnectionString The FoundationaLLM:AzureAIStudio configuration namespace expects an APIEndpointConfigurationName property instead of BaseUrl. A new configuration setting named FoundationaLLM:Instance:SecurityGroupRetrievalStrategy with a value of IdentityManagementService must exist in the app configuration. It will be added by default in new deployments. Two new configuration settings required by the new FoundationaLLM.AzureOpenAI resource provider: FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AuthenticationType FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AccountName Pre-0.8.0 Vectorization resource stores use a unique collection name, Resources. They also add a new top-level property named DefaultResourceName. The items in the index_references collection have a property incorrectly named type which was renamed to index_entry_id. New gateway API, requires the following app configurations: FoundationaLLM:APIs:GatewayAPI:APIUrl FoundationaLLM:APIs:GatewayAPI:APIKey (with secret foundationallm-apis-gatewayapi-apikey) FoundationaLLM:APIs:GatewayAPI:AppInsightsConnectionString (with secret foundationallm-app-insights-connection-string) FoundationaLLM:Gateway:AzureOpenAIAccounts The AgentFactory and AgentFactoryAPI classes have been renamed to Orchestration and OrchestrationAPI, respectively. The following App Config settings need to be replaced in existing environments: FoundationaLLM:APIs:AgentFactoryAPI:APIKey -> FoundationaLLM:APIs:OrchestrationAPI:APIKey FoundationaLLM:APIs:AgentFactoryAPI:APIUrl -> FoundationaLLM:APIs:OrchestrationAPI:APIUrl FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString -> FoundationaLLM:APIs:OrchestrationAPI:AppInsightsConnectionString FoundationaLLM:Events:AzureEventGridEventService:Profiles:AgentFactoryAPI -> FoundationaLLM:Events:AzureEventGridEventService:Profiles:OrchestrationAPI FoundationaLLM:APIs:AgentFactoryAPI:ForceHttpsRedirection -? FoundationaLLM:APIs:OrchestrationAPI:ForceHttpsRedirection The following Key Vault secrets need to be replaced in existing environments: foundationallm-apis-agentfactoryapi-apikey -> foundationallm-apis-orchestrationapi-apikey There is an upgrade script available that migrates these settings and secrets to their new names. The following App Config settings are no longer needed: FoundationaLLM:Vectorization:Queues:Embed:ConnectionString FoundationaLLM:Vectorization:Queues:Extract:ConnectionString FoundationaLLM:Vectorization:Queues:Index:ConnectionString FoundationaLLM:Vectorization:Queues:Partition:ConnectionString The following Key Vault secret is no longer needed: foundationallm-vectorization-queues-connectionstring The following App Config settings need to be added as key-values: FoundationaLLM:Vectorization:Queues:Embed:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) FoundationaLLM:Vectorization:Queues:Extract:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) FoundationaLLM:Vectorization:Queues:Index:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) FoundationaLLM:Vectorization:Queues:Partition:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) The value for the App Config setting FoundationaLLM:Events:AzureEventGridEventService:Profiles:OrchestrationAPI should be set in the following format: { \"EventProcessingCycleSeconds\": 20, \"Topics\": [ { \"Name\": \"storage\", \"SubscriptionPrefix\": \"orch\", \"EventTypeProfiles\": [ { \"EventType\": \"Microsoft.Storage.BlobCreated\", \"EventSets\": [ { \"Namespace\": \"ResourceProvider.FoundationaLLM.Agent\", \"Source\": \"/subscriptions/0a03d4f9-c6e4-4ee1-87fb-e2005d2c213d/resourceGroups/rg-fllm-aca-050/providers/Microsoft.Storage/storageAccounts/stejahszxcubrpi\", \"SubjectPrefix\": \"/blobServices/default/containers/resource-provider/blobs/FoundationaLLM.Agent\" }, { \"Namespace\": \"ResourceProvider.FoundationaLLM.Vectorization\", \"Source\": \"/subscriptions/0a03d4f9-c6e4-4ee1-87fb-e2005d2c213d/resourceGroups/rg-fllm-aca-050/providers/Microsoft.Storage/storageAccounts/stejahszxcubrpi\", \"SubjectPrefix\": \"/blobServices/default/containers/resource-provider/blobs/FoundationaLLM.Vectorization\" }, { \"Namespace\": \"ResourceProvider.FoundationaLLM.Prompt\", \"Source\": \"/subscriptions/0a03d4f9-c6e4-4ee1-87fb-e2005d2c213d/resourceGroups/rg-fllm-aca-050/providers/Microsoft.Storage/storageAccounts/stejahszxcubrpi\", \"SubjectPrefix\": \"/blobServices/default/containers/resource-provider/blobs/FoundationaLLM.Prompt\" } ] } ] } ] } Vectorization text embedding profiles require only two items in the configuration_references section: DeploymentName and Endpoint. Optionally, a deployment_name entry can be specified in the settings section to override the default value in configuration_references.Endpoint. Here is an example of the updated format for a text embedding profile: { \"type\": \"text-embedding-profile\", \"name\": \"AzureOpenAI_Embedding_BaselineGlobalMacro\", \"object_id\": \"/instances/a6221c30-0bf2-4003-adb8-d3086bb2ad49/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/AzureOpenAI_Embedding_BaselineGlobalMacro\", \"display_name\": null, \"description\": null, \"text_embedding\": \"SemanticKernelTextEmbedding\", \"settings\": { \"deployment_name\": \"embeddings-3-large\" }, \"configuration_references\": { \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" }, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } External orchestration APIs must be configured using the FoundationaLLM:ExternalAPIs configuration namespace. For example, the BaselineTradingGlobalMacro external API has the following configurations: FoundationaLLM:ExternalAPIs:BaselineTradingGlobalMacro:APIUrl FoundationaLLM:ExternalAPIs:BaselineTradingGlobalMacro:APIKey Note These entries do not need to be created as part of the deployment process. App Config key namespace that was previously FoundationaLLM:Vectorization:ContentSources:* has been moved to FoundationaLLM:DataSources:*. All existing keys need to be moved to the new namespace. New app config entries required: FoundationaLLM:Attachment:ResourceProviderService:Storage:AuthenticationType FoundationaLLM:Attachment:ResourceProviderService:Storage:AccountName App Config key namespace that was previously FoundationaLLM:Vectorization:ContentSources:* has been moved to FoundationaLLM:DataSources:*. All existing keys need to be moved to the new namespace. The following App Config setting needs to be added/updated as key-values: Add FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafetyPromptShield Add FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableLakeraGuard Add FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableEnkryptGuardrails Rename FoundationaLLM:AzureContentSafety:APIKey in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIKey Rename FoundationaLLM:AzureContentSafety:APIUrl in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIUrl Rename FoundationaLLM:AzureContentSafety:HateSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:HateSeverity Rename FoundationaLLM:AzureContentSafety:SelfHarmSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SelfHarmSeverity Rename FoundationaLLM:AzureContentSafety:SexualSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SexualSeverity Rename FoundationaLLM:AzureContentSafety:ViolenceSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:ViolenceSeverity Add FoundationaLLM:APIs:Gatekeeper:LakeraGuard:APIKey Add FoundationaLLM:APIs:Gatekeeper:LakeraGuard:APIUrl Add FoundationaLLM:APIs:Gatekeeper:EnkryptGuardrails:APIKey Add FoundationaLLM:APIs:Gatekeeper:EnkryptGuardrails:APIUrl The following Key Vault secret is needed: lakera-guard-api-key enkrypt-guardrails-apikey"
  },
  "role-based-access-control/index.html": {
    "href": "role-based-access-control/index.html",
    "title": "FoundationaLLM RBAC documentation | FoundationaLLM",
    "keywords": "FoundationaLLM RBAC documentation FoundationaLLM role-based access control (FoundationaLLM RBAC) is a system that provides fine-grained access control to FoundationaLLM resources. It is a system that allows you to control who can access what in your FoundationaLLM instance. Concepts Understand FoundationaLLM role definitions Understand FoundationaLLM role assignments Understand scope for FoundationaLLM RBAC Manage role assignments"
  },
  "role-based-access-control/role-assignments.html": {
    "href": "role-based-access-control/role-assignments.html",
    "title": "Understand FoundationaLLM role assignments | FoundationaLLM",
    "keywords": "Understand FoundationaLLM role assignments Role assignments enable you to grant a principal (such as a user, a group, a managed identity, or a service principal) access to a specific FoundationaLLM resource. Role assignment Acess to FoundationaLLM resources is granted through role assignments, and is reoked by removing a role assignment. A role assignment has several components: The principal, or who is being given access. The role definition (role), or what access is being granted. The scope at which the role is assigned, or where the access applies. The name of the role assignment. The description of the role assignment that helps explain why it exists. The following is an example of a FoundationaLLM role assignment: { \"RoleAssignmentName\": \"00000000-0000-0000-0000-000000000000\", \"RoleAssignmentId\": \"/instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000\", \"Scope\": \"/instances/11111111-1111-1111-1111-111111111111\", \"RoleDefinitionName\": \"Contributor\", \"RoleDefinitionId\": \"e459c3a6-6b93-4062-85b3-fffc9fb253df\", \"ObjectId\": \"22222222-2222-2222-2222-222222222222\", \"ObjectType\": \"User\", \"DisplayName\": \"Jack The Cat\", \"SignInName\": \"jackthecat@foundationallm.ai\", \"Description\": \"Jack The Cat has contributor access to the FoundationaLLM instance.\" } The following table describes the properties of a role assignment. Property Description RoleAssignmentName The name of the role assignment (is always a GUID). RoleAssignmentId The unique identifier of the role assignment which includes the name. Scope The FoundationaLLM resource identifier that the role assignment applies to. RoleDefinitionName The name of the role definition. RoleDefinitionId The unique identifier of the role definition. DisplayName The display name of the principal. ObjectId The unique identifier of the principal (can be a user, a group, a managed identity, or a service principal). ObjectType The type of the principal. Valid values include User, Group, and ServicePrincipal. DisplayName The display name of the principal. SignInName The unique principal name (UPN) of the principal. Description The description of the role assignment."
  },
  "role-based-access-control/role-definitions.html": {
    "href": "role-based-access-control/role-definitions.html",
    "title": "Understand FoundationaLLM role definitions | FoundationaLLM",
    "keywords": "Understand FoundationaLLM role definitions Role definition A role defininition (or just role) is a collection of permissions. A role definition lists the actions that can be performed, such as read, write, and delete. The following table describes the propoerties of a role definition. Property Description Name The display name of the role definition. Id The unique identifier of the role definition. Description The description of the role definition. Actions An array of strings that lists the control plane actions that a role definition can perform. For example, FoundationaLLM.Agent/agents/create. NotActions An array of strings that lists the actions that are excluded from the actions listed in the Actions property. DataActions An array of strings that lists the data plane actions that a role definition can perform. For example, FoundationaLLM.Agent/agents/read. NotDataActions An array of strings that lists the data plane actions that are excluded from the actions listed in the DataActions property. AssignableScopes An array of strings that lists the scopes that the role definition can be assigned to. Actions format The string that represents an action has the following format: FoundationaLLM.{ProviderName}/{resourceType}/{action} Examples of actions include read, write, and delete. The wildcard character (*) can be used to match any resource type or action. For example, FoundationaLLM.Agent/*/read matches all read actions for all resource types in the FoundationaLLM.Agent provider. Role definition example The following example shows the Contributor role definition. The wildcard (*) character under Actions indicates that the principal assigned to the role can perform all actions (i.e., it can manage everything). This includes also actions defined in the future, as FoundationaLLM adds new resource types. The actions under NotActions are subtracted from Actions. In this specific case, NotActions removes the role's ability to manage access to resources. { \"Name\": \"Contributor\", \"Id\": \"e459c3a6-6b93-4062-85b3-fffc9fb253df\", \"Description\": \"Allows you to manage everything except access to resources.\", \"Actions\": [ \"*\" ], \"NotActions\": [ \"FoundationaLLM.Authorization/*/delete\", \"FoundationaLLM.Authorization/*/write\" ], \"DataActions\": [], \"NotDataActions\": [], \"AssignableScopes\": [ \"/\" ] } Control and data actions Control plane actions are specified in the Actions and NotActions properties. Examples of control plane actions in FoundationaLLM include: Manage access to an agent Create a new data source Delete a prompt Data plane actions are specified in the DataActions and NotDataActions properties. NOTE: FoundationaLLM maintains a strict separation between the control and data planes. Control plane access is not inherited to the data plane. For example, if a user has the FoundationaLLM.Agent/agents/create permission, it does not mean that the user has the FoundationaLLM.Agent/agents/read permission."
  },
  "role-based-access-control/role-management.html": {
    "href": "role-based-access-control/role-management.html",
    "title": "Manage role assignments | FoundationaLLM",
    "keywords": "Manage role assignments FoundationaLLM roles are assigned to users, groups, service principals, and managed identities through the Management API. As described in the role definitions article, administrators can apply fine-grained access control to features and resources to ensure the deployment adheres to least-privilege best practices when properly assigned. Role management endpoints The Management API provides the following role management endpoints: Method Endpoint Description GET /security/roles Returns a list of all roles. GET /security/roles/{RoleDefinitionId} Returns the role settings for the specified role. GET /security/roles/{RoleDefinitionId}/assignments Returns a list of all role assignments for the specified role. GET /security/roles/{RoleDefinitionId}/assignments/{RoleAssignmentId} Returns the role assignment settings for the specified role assignment. GET /security/roles/{Scope} Returns a list of all roles at the specified scope. GET /security/roles/{Scope}/assignments Returns a list of all role assignments at the specified scope. POST /security/roles/assign Assigns a role to an Entra ID user or group. POST /security/roles/revoke Revokes a role from an Entra ID user or group. Note The Management Portal provides a graphical user interface over the Management API for managing roles and role assignments, among other FLLM configuration settings. All role assignment changes are audited and can be viewed in the Management Portal. Auditing ensures that all changes to role assignments are tracked and can be reviewed at a later time, which is often required for compliance purposes. Role assignment data store The role-based access control (RBAC) engine uses a dedicated data store to manage role assignments. Doing so ensures isolation from the rest of the FoundationaLLM data platform, which is used to store data sources, prompts, and other resources accessible to users possessing varying levels of access. The isolation also supports the ability to scale the RBAC engine independently from the rest of the FoundationaLLM data platform. The data store is implemented as a dedicated Azure Cosmos DB account or Azure Data Lake Storage Gen2 account."
  },
  "role-based-access-control/scope.html": {
    "href": "role-based-access-control/scope.html",
    "title": "Understand scope for FoundationaLLM RBAC | FoundationaLLM",
    "keywords": "Understand scope for FoundationaLLM RBAC Scope is the set of resources that a role assignment can access. When assigning roles, it is importan to understand how scope works so that you grant security principals only the level of access they need. Limiting scope also limits the potential damage that can be done if a security principal is compromised. Scope levels In FoundationaLLM, you can specify a scope at the following levels: Instance: The FoundationaLLM deployment itself. Resource: A specific resource in FoundationaLLM, such as an agent. The following rules apply to scope levels: Scopes are structured as a hierarchy. For example, a resource scope is always a child of an instance scope. Each level make the scope more specific. For example, a resource scope is more specific than an instance scope. Roles can be assigned at any of these levels of scope. Lower levels inherit the permissions of higher levels. For example, a role assignment at the instance level applies to all resources in the instance. Scope format Scope is a string that identifies the exact scope of the role assignment. The scope is usually referred to as the resource identifier or resource ID. The scope consists of a series of identifiers separated by the slash (/) character. You can think of this string as expressing the following hierarchy, where text without placeholders ({}) are fixed identifiers: /instances /{instanceId} /providers /{providerName} /{resourceType} /{resourceSubType1} /{resourceSubType2} /{resourceName} {instanceId} is unique identifier of the FoundationaLLM deployment (a GUID). {providerName} is the name of the FoundationaLLM resource provider (for example, FoundationaLLM.Agent). {resourceType} and {resourceSubType*} identify levels within the resource provider. {resourceName} is the name of a specific resource. Scope examples Scope Example Instance /instances/11111111-1111-1111-1111-111111111111 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Agent/agents/agent1 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.DataSource/dataSources/datasource1 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Agent/agents/agent1/models/gpt4."
  },
  "schema.html": {
    "href": "schema.html",
    "title": "Agent Schemas | FoundationaLLM",
    "keywords": "Agent Schemas This document provides a general overview of agent, data source, and vectorization configuration."
  },
  "setup-guides/agents/index.html": {
    "href": "setup-guides/agents/index.html",
    "title": "Agents | FoundationaLLM",
    "keywords": "Agents FoundationaLLM (FLLM) agents are the core of the solution. They are responsible for providing users with a customized experience based on its configuration. Knowledge management agent Prompts Prompts are an important aspect for agents. A prompt defines the persona, instructions and guardrails provided to the large language model (LLM) so that it formulates accurate responses in desired formats. Prompt resources"
  },
  "setup-guides/agents/knowledge-management-agent.html": {
    "href": "setup-guides/agents/knowledge-management-agent.html",
    "title": "Knowledge management agent | FoundationaLLM",
    "keywords": "Knowledge management agent The FoundationaLLM (FLLM) Knowledge Management agent type supports the following scenarios: With an Inline Context: Knowledge Management agents with an Inline Context pass the user's prompt directly to the Large Language Model (LLM). Without an Inline Context: Knowledge Management agents without an Inline Context implement the Retrieval Augmented Generation (RAG) design pattern. RAG augments the user prompt with additional context to generate a more accurate response. The RAG flow uses a retrieval model to retrieve relevant documents from a knowledge base, such as a vector store, and then uses the retrieved documents to augment the user prompt before sending it to the LLM. The creation of a Knowledge Management agent without an Inline Context requires an existing knowledge base, such as a vector store. Use the Vectorization API to create a vector store prior to the creation of the agent. Knowledge Management Agent Configuration The Knowledge Management agent configuration may reference the following resources: Vectorization text embedding profile: The text embedding profile contains the configuration of the text embedding model used to embed the user prompt and perform a vector search in the knowledge base. This must match the text embedding profile used to populate the knowledge base. Vectorization indexing profile: The indexing profile contains the configuration of the service hosting the index. Prompt: The system prompt of the agent, describing the persona of the agent. Note: The Knowledge Management agent implementation currently supports the AzureAISearchIndexer indexing profile. The structure of a Knowledge Management agent is the following: { \"type\": \"knowledge-management\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Agent/agents/<name>\", \"description\": \"<description>\", \"display_name\": \"<display_name>\", \"inline_context\": true, \"vectorization\": { \"dedicated_pipeline\": \"\", \"data_source_object_id\": \"<data_source_object_id>\", \"indexing_profile_object_id\": \"<indexing_profile_object_id>\", \"text_embedding_profile_object_id\": \"<text_embedding_profile_object_id>\", \"text_partitioning_profile_object_id\": \"<text_partitioning_profile_object_id>\", \"vectorization_data_pipeline_object_id\": \"\", \"trigger_type\": \"\", \"trigger_cron_schedule\": \"\" }, \"prompt_object_id\": \"<prompt_resource_objectid>\", \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.0, \"use_chat\": true, \"api_endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"version\": \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\", \"deployment\": \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" }, \"sessions_enabled\": true, \"conversation_history\": { \"enabled\": true, \"max_history\": 5 }, \"gatekeeper\": { \"use_system_setting\": false, \"options\": [ \"ContentSafety\", \"Presidio\" ] }, \"orchestration_settings\": { \"orchestrator\": \"LangChain\", \"endpoint_configuration\": { \"endpoint\": \"\", \"api_version\": \"\", \"api_key\": \"\", \"auth_type\": \"\", \"api_key\": \"\", \"provider\": \"\", \"operation_type\": \"chat\" }, \"model_parameters\": { \"deployment_name\": \"\" } } } where: <name> is the name of the agent. <instance_id> is the instance ID of the deployment. <description> is the description of the agent. Ensure that this description details the purpose of the agent. <display_name> controls the title of the agent in the Chat UI dropdown menu. <data_source_object_id> is the object ID of the Data Source resource. <indexing_profile_object_id> is the object ID of the indexing profile resource. <text_embedding_profile_object_id> is the object ID of the text embedding profile resource. <text_partitioning_profile_object_id> is the object ID of the text partitioning profile resource. <prompt_resource_objectid> is the object ID of the prompt resource. Parameter Description type The type of the agent - will always be knowledge-management. type must be the first key in the request body. name The name of the agent. object_id The object ID of the agent. Remove this element when creating an agent as this is generated by the Management API. description The description of the agent, ensure this description details the purpose of the agent. display_name The title of the agent in the Chat UI dropdown menu. This field is optional. inline_context Whether or not the agent has an Inline Context. vectorization The vectorization object is only required for Knowledge Management agents without an Inline Context (inline_context is false). If the vectorization object is included, the indexing_profile_object_id and text_embedding_profile_object_id keys are required. vectorization.dedicated_pipeline A boolean indicating whether or not the agent has a dedicated Vectorization pipeline (implemented in an upcoming release). vectorization.data_source_object_id The object ID of the Data Source resource. vectorization.indexing_profile_object_id The object ID of the indexing profile resource. vectorization.text_embedding_profile_object_id The object ID of the text embedding profile resource. vectorization.text_partitioning_profile_object_id The object ID of the text partitioning profile resource. vectorization.vectorization_data_pipeline_object_id The resource ID of the agent's Vectorization pipeline (implemented in an upcoming release). vectorization.trigger_type The trigger type of the agent's Vectorization pipeline (implemented in an upcoming release). Permissible values are Manual, Schedule, and Event. vectorization.trigger_cron_schedule The schedule of the trigger in Cron format (implemented in an upcoming release). This property is valid only when trigger_type is Schedule. prompt_object_id The object ID of the prompt resource. language_model The language model configuration. The language_model object has been deprecated as of release 0.6.0. language_model.type The type of the language model. Currently supporting OpenAI based langauge models. language_model.provider The provider of the language model. Currently supporting microsoft or openai. language_model.temperature The temperature value for the language model. A value between 0 and 1. Values closer to 0 return more factual information whereas values closer to 1 yield more creative responses. language_model.use_chat Determines the type of language model to use, as an example, when using Microsoft's Azure OpenAI, specifying use_chat equal to true will use the AzureChatOpenAI model vs. the AzureOpenAI model in LangChain. language_model.api_endpoint The configuration setting key that houses the API endpoint of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.api_key The configuration setting key that houses a reference to a key vault value containing the API key for the language model service. Ensure these values are populated in key vault and app configuration. language_model.api_version The configuration setting key that houses the API version of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.version The configuration setting key that houses the version of the language model deployment. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.deployment The configuration setting key that houses the name given to the deployed language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. sessions_enabled A boolean value that indicates whether the agent is session-less (false) or supports sessions(true). conversation_history The conversation history configuration. conversation_history.enabled Indicates if conversation history is retained for subsequent agent interactions(true). conversation_history.max_history indicates the number of messages to be retained. gatekeeper The gatekeeper configuration. gatekeeper.use_system_setting Indicates if the system settings are used for the gatekeeper. gatekeeper.options Contains the list of gatekeeper options. The sample provided overrides the system setting for gatekeeper and enables Azure Content Safety and MS Presidio in the messaging pipeline. orchestration_settings The settings for the agent orchestrator. orchestration_settings.orchestrator FoundationaLLM currently supports LangChain and SemanticKernel for both types of Knowledge Management agents; however, Knowledge Management agents with an Inline Context can also use the AzureOpenAIDirect and AzureAIDirect orchestrators. orchestration_settings.endpoint_configuration The endpoint configuration of the hosted LLM. FoundationaLLM currently supports Azure OpenAI and OpenAI. orchestration_settings.endpoint_configuration.endpoint The endpoint URL of the hosted LLM. The URL should be provided directly for the LangChain or SemanticKernel orchestrators; it should be provided as an Azure App Configuration key reference for the AzureOpenAIDirect or AzureAIDirect orchestrators. orchestration_settings.endpoint_configuration.api_version The API version of the hosted LLM. For Azure OpenAI, this value should be set to the latest GA version. The API version should be provided directly for the LangChain or SemanticKernel orchestrators; it should be provided as an Azure App Configuration key reference for the AzureOpenAIDirect or AzureAIDirect orchestrators. orchestration_settings.endpoint_configuration.auth_type The authentication method of the hosted LLM. This value can either be token or key. For Azure OpenAI deployments, this value should be token, which configures the orchestrator to use Managed Identities for authentication. key-based authentication uses API keys. orchestration_settings.endpoint_configuration.api_key The name of the Azure App Configuration key storing the LLM endpoint API key. This parameter is required if auth_type is set to key. orchestration_settings.endpoint_configuration.provider The provider of the hosted LLM. FoundationaLLM currently supports microsoft (Azure OpenAI) or openai. orchestration_settings.endpoint_configuration.operation_type This field is set to chat by default and can be omitted. orchestration_settings.model_parameters Endpoint-specific model parameters. This field must be non-null if the provider is microsoft. orchestration_settings.model_parameters.deployment_name This field should be set to the name of the Azure OpenAI model deployment if the provider is microsoft. AzureOpenAIDirect Orchestrator The AzureOpenAIDirect orchestrator passes the user's prompt to an LLM deployed in an instance of Azure OpenAI Service, bypassing LangChain or Semantic Kernel. Example Configuration: { \"orchestration_settings\": { \"orchestrator\": \"AzureOpenAIDirect\", \"endpoint_configuration\": { \"endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"auth_type\": \"key\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"operation_type\": \"chat\" }, \"model_parameters\": { \"deployment_name\": \"completions\" } } } Note: AzureOpenAIDirect is only compatible with Knowledge Management agents with an Inline Context. AzureAIDirect Orchestrator The AzureAIDirect orchestrator passes the user's prompt to an LLM deployed as an Azure AI Studio real-time endpoint. This orchestrator allows customers to use a wider range of LLMs with FLLM agents. Example Configuration: { \"orchestration_settings\": { \"orchestrator\": \"AzureAIDirect\", \"endpoint_configuration\": { \"endpoint\": \"<AZURE APP CONFIGURATION KEY>\", \"api_key\": \"<AZURE APP CONFIGURATION KEY>\" }, \"model_parameters\": { \"temperature\": 0.8, \"max_new_tokens\": 1000, \"deployment_name\": \"<AZURE AI STUDIO DEPLOYMENT NAME>\" } } } Note: AzureAIDirect is only compatible with Knowledge Management agents with an Inline Context. Managing Knowledge Management Agents This section describes how to manage knowledge management agents using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Content-Type: application/json BODY <agent_configuration> where <agent_configuration> is the JSON agent configuration structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Note FLLM currently implements logical deletes for Knowledge Management agents. This means that users cannot create a Knowledge Management agent with the same name as a deleted Knowledge Management agent. Support for purging Knowledge Management agents will be added in a future release. Validating a Knowledge Management Agent Once configured, the knowledge management agent can be validated using an API call to the Core API or via the User Portal. Note It can take up to 5 minutes for a new Knowledge Management agent to appear in the User Portal or be accessible for requests from the Core API. Overriding agent parameters The agent parameters can be overridden at the time of the API call. Refer to the Core API documentation for more information."
  },
  "setup-guides/agents/prompt-resource.html": {
    "href": "setup-guides/agents/prompt-resource.html",
    "title": "Prompt | FoundationaLLM",
    "keywords": "Prompt The FoundationaLLM (FLLM) prompt resource encapsulates the system prompt of an agent. The system prompt describes the persona of the agent and any instructional guardrails used to generate the desired responses to user prompts. The prompt resource is used in the Knowledge Management agent configuration. Prompt configuration The structure of a prompt is the following: { \"type\": \"multipart\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Prompt/prompts/<name>\", \"description\": \"<description>\", \"prefix\": \"<prompt_prefix>\", \"suffix\": \"<prompt_suffix>\" } where: <name> is the name of the agent. <instance_id> is the instance ID of the deployment. <description> is the description of the prompt, describing the persona of the agent. <prompt_prefix> is the beginning of the prompt. <prompt_suffix> (optional) appended to the end of the prompt (after any prefix and context). Parameter Description type The type - will be multipart. multipart prompts have a prefix and suffix. Support for basic prompts, which have no suffix, will be added in a future release. type must be the first parameter in the request body. name The name of the prompt. object_id The object ID of the prompt. Remove this key when creating a prompt, as it is automatically populated by the Management API. description The description of the prompt, ensure this description details the purpose or role of the prompt. prompt_prefix The beginning of the prompt. prompt_suffix Text appended to the ending of the prompt. Managing prompts This section describes how to manage knowledge management prompts using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name> Content-Type: application/json BODY <prompt_configuration> where <prompt_configuration> is the prompt configuration structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name> Note The delete operation is a logical delete. To purge a Prompt, call the /purge endpoint after deleting the Prompt. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name>/purge Content-Type: application/json BODY {}"
  },
  "setup-guides/branding/index.html": {
    "href": "setup-guides/branding/index.html",
    "title": "Branding Customization | FoundationaLLM",
    "keywords": "Branding Customization The FoundationaLLM application provides a way to customize the branding of the applications. The branding customization can be done by setting any of the 19 configuration values available in the App Configuration resource in your Azure Resource Group. It can also be changed using the REST API calls pertaining to Branding. Accessing the App Configuration for branding customization In your Azure Resource Group, navigate to the App Configuration resource and select the Configuration Explorer option under Operations. You will see a list of all configuration settings for FoundationaLLM , filter the list on the word Branding and you will be able to see the 19 relevant configuration settings pertaining to Branding. The default User Interface of the FoundationaLLM is shown below The Login screen can also be customized as shown below The chat window can be customized as shown below FoundationaLLM:Branding:AccentColor Takes a hexadecimal color value to set the accent color of the chat application which is used for top header and the the token counter in the chat. FoundationaLLM:Branding:AccentTextColor Takes a hexadecimal color value to set the accent text color of the chat application which is used for top header and the the token counter in the chat. FoundationaLLM:Branding:AgentIconUrl A string value to set the Agent Icon Url which is displayed in the chat window. FoundationaLLM:Branding:BackgroundColor Takes a hexadecimal color value to set the background color of the chat application. FoundationaLLM:Branding:CompanyName Not is use. Reserved for future enhancements. FoundationaLLM:Branding:FavIconUrl A string value to set the FavIcon Url which is displayed in the browser tab. Important The FavIconUrl can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the FavIconUrl is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the configuration value directly. Important Any changes to the FoundationaLLM:Branding:FavIconUrl will require a restart of the CoreAPI image to take effect. FoundationaLLM:Branding:FooterText A string value to set the Footer Text value which is displayed at the bottom right of the screen. FoundationaLLM:Branding:KioskMode This is a boolean flag to indicate if the application is running in kiosk mode, if true will remove the sessions panel on the left navigation panel. FoundationaLLM:Branding:LogoText A string value to set the Logo Text value which is displayed only if the FoundationaLLM:Branding:LogoUrl is not set. FoundationaLLM:Branding:LogoUrl A string value to set the Logo Url which is displayed in top left header and also in the login screen. Important The LogoUrl can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the LogoUrl is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the configuration value directly. FoundationaLLM:Branding:PageTitle A string value to set the Page Title value which is displayed in the browser tab. Important Any changes to the FoundationaLLM:Branding:PageTitle will require a restart of the CoreAPI image to take effect. FoundationaLLM:Branding:PrimaryButtonBackgroundColor Takes a hexadecimal color value to set the Primary Button Background color of the chat application. It affects the Send button in the chat at the bottom right, the Close button the View Prompt screen and the login button in the login screen. FoundationaLLM:Branding:PrimaryButtonTextColor Takes a hexadecimal color value to set the Primary Button Text color of the chat application. It affects the Send button in the chat at the bottom right, the Close button the View Prompt screen and the login button in the login screen. FoundationaLLM:Branding:PrimaryColor Takes a hexadecimal color value to set the Primary color of the chat application. It affects the left navigation panel and the User Message panel in the chat. FoundationaLLM:Branding:PrimaryTextColor Takes a hexadecimal color value to set the Primary Text color of the chat application. It affects the left navigation panel and the User Message panel in the chat. FoundationaLLM:Branding:SecondaryButtonBackgroundColor Takes a hexadecimal color value to set the Secondary Button Background color of the chat application. It affects the collapsable arrow in the left navigation panel, the Sign Out bottom at the bottom and the attachment of files button in the chat window. FoundationaLLM:Branding:SecondaryButtonTextColor Takes a hexadecimal color value to set the Secondary Button Text color of the chat application. It affects the collapsable arrow in the left navigation panel, the Sign Out bottom at the bottom and the attachment of files button in the chat window. FoundationaLLM:Branding:SecondaryColor Takes a hexadecimal color value to set the Secondary color of the chat application. It affects the background color of the session identifier in the left navigations panel and the background of the entire login screen. FoundationaLLM:Branding:SecondaryTextColor Takes a hexadecimal color value to set the Secondary Text color of the chat application. It affects the background color of the session identifier in the left navigations panel."
  },
  "setup-guides/exposed-apis/core-api.html": {
    "href": "setup-guides/exposed-apis/core-api.html",
    "title": "Core API | FoundationaLLM",
    "keywords": "Core API The Core API serves as the entry point for user requests to FoundationaLLM's underlying engine. While clients primarily interact with the Core API through the Chat UI, the Core API exposes some convenient interfaces for developers. Sessionless Completion The sessionless completion endpoint enables users to query agents without first creating a chat session. Endpoint: [DEPLOYMENT URL]/core/orchestration/completion?api-version=1.0 Note: For AKS deployments, [DEPLOYMENT URL] is the same as the cluster FQDN, while for ACA deployments, the Core API endpoint can be found by navigating to the [DEPLOYMENT PREFIX]coreca Container App in the Azure Portal. Sample Request: { \"user_prompt\": \"What are your capabilities?\", \"settings\": { \"agent_name\": \"internal-context\", \"model_parameters\": { \"temperature\": 0.4, \"deployment_name\": \"completions\", \"top_k\": 5, \"top_p\": 0.9, \"do_sample\": true, \"max_new_tokens\": 100, \"return_full_text\": true, \"ignore_eos\": true }, \"agent_parameters\": { \"index_filter_expression\": \"search.ismatch('FoundationaLLM', 'Text')\", \"index_top_n\": 5 } } } Note The settings object provides to override various parameters at runtime, and is optional. Within settings both model_parameters and settings.agent_parameters (along with their members) are optional. If not provided, the Core API will use the default model and agent settings. model_parameters: | Name | Type | Description | | ---- | ---- | ----------- | | temperature | float | Controls randomness. Lowering the temperature means that the model will produce more repetitive and deterministic responses. Increasing the temperature will result in more unexpected or creative responses. Try adjusting temperature or Top P but not both. This value should be a float between 0.0 and 1.0. | | deployment_name | string | The deployment name for the language model. | | top_k | int | The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. | | top_p | float | The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling. Top P (or Top Probabilities) is imilar to temperature, this controls randomness but uses a different method. Lowering Top P will narrow the model’s token selection to likelier tokens. Increasing Top P will let the model choose from tokens with both high and low likelihood. Try adjusting temperature or Top P but not both. | | do_sample | bool | Whether or not to use sampling; use greedy decoding otherwise. | | max_new_tokens | int | Sets a limit on the number of tokens per model response. The API supports a maximum of number of tokens (depending on the deployment) shared between the prompt (including system message, examples, message history, and user query) and the model's response. One token is roughly 4 characters for typical English text. | | return_full_text | bool | Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. | | ignore_eos | bool | Whether to ignore the End of Sequence(EOS) token and continue generating tokens after the EOS token is generated. Defaults to False. | agent_parameters: | Name | Type | Description | | ---- | ---- | ----------- | | index_filter_expression | string | This value should be a string representing the search filter expression to limit documents to be searched by the index retriever | | index_top_n | int | Controls the number of search results to return from an index for prompt augmentation. | Payload Headers: Header Value Details Authorization Bearer [ENTRA ID BEARER TOKEN] Valid token from Entra ID Content-Type application/json Sample Response: { \"text\": \"FoundationaLLM is a copilot platform that simplifies and streamlines building knowledge management and analytic agents over the data sources present across your enterprise. It provides integration with enterprise data sources used by agents for in-context learning, fine-grain security controls over data used by agents, and pre/post completion filters that guard against attack. The solution is scalable and load balances across multiple endpoints. It is also extensible to new data sources, new LLM orchestrators, and LLMs. You can learn more about FoundationaLLM at https://foundationallm.ai.\" } Sample Postman Request: /orchestration/completion/Requests a completion from the downstream APIs."
  },
  "setup-guides/exposed-apis/index.html": {
    "href": "setup-guides/exposed-apis/index.html",
    "title": "Exposed API Documentation | FoundationaLLM",
    "keywords": "Exposed API Documentation FoundationaLLM (FLLM) exposes two convenient API interfaces that enable developers and architects to directly interact with the FLLM platform for automation and integration tasks. This approach provides an alternative to using the provided user interfaces. Core API: The Core API supports direct completion requests against FLLM's agents. Management API: The Management API abstracts FLLM's configuration, enabling programmatic setup of agents, datasources, and prompts. The Management UI implements a frontend interface on top of the Management API, simplifying common agent configuration tasks"
  },
  "setup-guides/exposed-apis/management-api.html": {
    "href": "setup-guides/exposed-apis/management-api.html",
    "title": "| FoundationaLLM",
    "keywords": "Management API Think of the FoundationaLLM Core API as a read-only API. It provides a way to query the system for information about agents, users, and other resources. The Management API, on the other hand, is a read-write API. It allows you to create, update, and delete resources in the system. Management API Endpoints The Management API provides configuration and resource management endpoints that can be consumed in the following three ways: Direct REST-based calls programmatically or through some tool like Postman. Through the Management Portal user interface. Through the FoundationaLLM CLI (Coming Soon). These options eliminate the need to directly manipulate files to define agents and their related resources, enable certain users to update categories of app configurations without needing to have access to the Azure App Configuration service, and perform additional platform-related steps as needed when changing configurations without the user needing to know about them (restart services, refresh caches, etc.). Management API Features In addition to modifying/creating content and platform components, the Management API centralizes health and service monitoring. Using the Management API from Postman, you can replace the {{baseUrl}} variable with the actual URL of the Management API resource, and the {{InstanceId}} variable with the actual instance ID from your app configuration resource that was generated for you. You can \"GET\" the configuration of an agent, and \"POST\" to create a new agent or \"PUT\" to update an existing agent."
  },
  "setup-guides/exposed-apis/resource-management/resource-management.html": {
    "href": "setup-guides/exposed-apis/resource-management/resource-management.html",
    "title": "Resource Management in FoundationaLLM | FoundationaLLM",
    "keywords": "Resource Management in FoundationaLLM With the introduction of the Management API, you can now manage resources in FoundationaLLM programmatically or through the Management API User Interface Portal. This includes creating, updating, and deleting resources in the system. Resource Providers The main concept of the Management API is the resource provider. A resource provider is a service that provides resources to the FoundationaLLM system. For example, the agents, prompts and datasources are provided by a resource provider. The Management API provides a way to manage these resources without the need to manually work with JSON files in storage containers and mimics the same concept and functionality of resources in the Azure Portal. Resource Provider Structure The resource-provider container in the main storage account that was deployed on your behalf in your subscription contains the following structure: Agent References This first folder FoundationaLLM.Agent contains the Agent References. The content of the _agent-references references all the locations of the JSON files that contain the agent information. The _agent-references folder contains the following structure: { \"AgentReferences\": [ { \"Name\": \"sotu-2023\", \"Filename\": \"/FoundationaLLM.Agent/sotu-2023.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu2\", \"Filename\": \"/FoundationaLLM.Agent/sotu2.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu3\", \"Filename\": \"/FoundationaLLM.Agent/sotu3.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu\", \"Filename\": \"/FoundationaLLM.Agent/sotu.json\", \"Type\": \"knowledge-management\" } ] } From that starting point for the agent references, we get to point to JSON file that describes each agent available to the system. Let's start by taking a look at one odf the agents from above called sotu-2023.json { \"name\": \"sotu-2023\", \"type\": \"knowledge-management\", \"object_id\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Agent/agents/sotu-2023\", \"description\": \"Knowledge Management Agent that queries the State of the Union speech transcript\", \"indexing_profile\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/indexingprofiles/sotu-index\", \"embedding_profile\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding\", \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.0, \"use_chat\": true, \"api_endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"version\": \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\", \"deployment\": \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" }, \"sessions_enabled\": true, \"conversation_history\": { \"enabled\": true, \"max_history\": 5 }, \"gatekeeper\": { \"use_system_setting\": false, \"options\": [ \"ContentSafety\", \"Presidio\" ] }, \"orchestrator\": \"LangChain\", \"prompt\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Prompt/prompts/sotu\" } Notice all the different keys and values that are present to identify the agent. This JSON file is usually created or modifed through the Management API UI Portal or via POST or PUT requests to the Management API using a product like POSTMAN. The type could be \"knowledge-management\" or \"analytical\" The language-model section is to identify the provider, its accuracy and endpoints to retrieve from the app configuration resource. sessions_enabled is a boolean to enable or disable the ability to start a session Vs just a one time query using an API tool like Postman. conversation_history is to enable or disable the ability to store the conversation history and the maximum number of conversations to store in case the previous session_enabled is set to true. The gatekeeper section is to enable or disable the use of the system settings for content safety and presidio. If set to false, then the options array will be used to identify the specific gatekeepers to use. The orchestrator is the name of the orchestrator to use for the agent. The orchestrator is the component that is responsible for managing the flow of the conversation and the execution of the agent's logic. It could be LangChain or Semantic Kernel and more options could be used in the future with the growth of the platform and the industry for orchestrators. The prompt is the reference to the prompt that the agent will use to start the conversation. The prompt is a resource that is used to start the conversation with the agent. It is a JSON file that contains the prompt text and the prompt settings. Prompt References The second folder FoundationaLLM.Prompt contains the Prompt References. Within that folder, we have the _prompt-references JSON file that contains the following structure: { \"PromptReferences\": [ { \"Name\": \"sotu5\", \"Filename\": \"/FoundationaLLM.Prompt/sotu5.json\" }, { \"Name\": \"sotu-test\", \"Filename\": \"/FoundationaLLM.Prompt/sotu-test.json\" }, { \"Name\": \"sotu\", \"Filename\": \"/FoundationaLLM.Prompt/sotu.json\" } ] } These references point to the JSON files that contain the prompt information. Let's take a look at one of the prompts from above called sotu5.json for an example: { \"name\": \"sotu5\", \"type\": \"prompt\", \"object_id\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Prompt/prompts/sotu5\", \"description\": \"Prompt for the Knowledge Management Agent that queries the State of the Union speech transcript\", \"prefix\": \"You are a political science professional named Baldwin. You are responsible for answering questions regarding the February 2023 State of the Union Address.\\nAnswer only questions about the February 2023 State of the Union address. Do not make anything up. Check your answers before replying.\\nProvide concise answers that are polite and professional.\", \"suffix\": \"\" } It contains the name, type of prompt, the object_id reference, description and of course most importantly the prefix and suffix of the prompt. The prefix and suffix are the text that will be used to start and end the conversation with the agent. Data Source References A Data Source refers to the location of data that is to be leveraged by an agent. The data source could be a storage account, database, website, etc. The data source references are stored in the FoundationaLLM.DataSource folder. The references are stored in the _datasource-references JSON file that contains the following structure: { \"DataSourceReferences\": [ { \"Name\": \"datalake01\", \"Filename\": \"/FoundationaLLM.DataSource/datalake01.json\", \"Type\": \"azure-data-lake\", \"Deleted\": false }, { \"Name\": \"sharepointsite01\", \"Filename\": \"/FoundationaLLM.DataSource/sharepointsite01.json\", \"Type\": \"sharepoint-online-site\", \"Deleted\": false } ] } These references point to the JSON files that contain the prompt information. Let's take a look at one of the prompts from above called datalake01.json for an example: { \"name\": \"datalake01\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"display_name\": null, \"description\": \"Azure Data Lake data source.\", \"folders\": [ \"/vectorization-input/journals/2024\" ], \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:DataSources:datalake01:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:DataSources:datalake01:ConnectionString\", \"APIKey\": \"FoundationaLLM:DataSources:datalake01:APIKey\", \"Endpoint\": \"FoundationaLLM:DataSources:datalake01:Endpoint\" }, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } In this example, the data source is an Azure Data Lake data source. The folders array contains the paths to the folders in the data lake that contain the data to be used by the agent. The configuration_references section contains the references to the configuration settings that are used to connect to the data source. The created_on, updated_on, created_by, updated_by are the timestamps and the user that created and updated the data source. The deleted flag is used to mark the data source as deleted. Vectorization Profile References Finally the third folder FoundationaLLM.Vectorization contains the Vectorization References. Where you will find important JSON files: vectorization-indexing-profiles.json { \"DefaultResourceName\": \"AzureAISearch_Default_002\", \"Resources\": [ { \"type\": \"indexing-profile\", \"name\": \"AzureAISearch_Default_002\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/indexingprofiles/AzureAISearch_Default_002\", \"description\": null, \"deleted\": false, \"indexer\": \"AzureAISearchIndexer\", \"settings\": { \"IndexName\": \"fllm-default-002\", \"TopN\": \"3\", \"Filters\": \"\", \"EmbeddingFieldName\": \"Embedding\", \"TextFieldName\": \"Text\" }, \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } } ] } This is where we identify the name and the Indexer to use for the indexing of the content. And within the configuration_references section, we identify the AuthenticationType and Endpoint to use for the indexing. It could be indexing against the Azure AI Search or any other indexer that is available in the system and more will be supported in the future. The DefaultResourceName is the name of the default indexing profile to use in the system if none is specified. vectorization-text-embedding-profiles.json { \"DefaultResourceName\": \"AzureOpenAI_Embedding\", \"Resources\": [ { \"type\": \"text-embedding-profile\", \"name\": \"AzureOpenAI_Embedding\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding\", \"description\": null, \"deleted\": false, \"text_embedding\": \"SemanticKernelTextEmbedding\", \"settings\": {}, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey\", \"APIVersion\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType\", \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" } } ] } This is where we identify the name and the Text Embedding to use for the vectorization of the text. And within the configuration_references section, we identify the APIKey, APIVersion, AuthenticationType, DeploymentName and Endpoint to use for the text embedding. vectorization-text-partitioning-profiles.json { \"DefaultResourceName\": \"DefaultTokenTextPartition_Small\", \"Resources\": [ { \"type\": \"text-partitioning-profile\", \"name\": \"DefaultTokenTextPartition_Small\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textpartitioningprofiles/DefaultTokenTextPartition_Small\", \"display_name\": null, \"description\": null, \"text_splitter\": \"TokenTextSplitter\", \"settings\": { \"Tokenizer\": \"MicrosoftBPETokenizer\", \"TokenizerEncoder\": \"cl100k_base\", \"ChunkSizeTokens\": \"500\", \"OverlapSizeTokens\": \"50\" }, \"configuration_references\": {}, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } ] } This is where we identify the name and the Text Splitter to use for the chunking and overlapping of the text. In the settings section, we identify the tokenizer and the encoder to use for the text partitioning and the chunk size and overlap size in tokens. vectorization-pipelines.json A vectorization pipeline provides a definition for a reusable and triggerable profile that includes identifying a data source that is the source for vectorization, vectorization profiles, as well as the trigger type. { \"DefaultResourceName\": \"sdzwa\", \"Resources\": [ { \"type\": \"vectorization-pipeline\", \"name\": \"sdzwa\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationPipelines/sdzwa\", \"display_name\": null, \"description\": \"Vectorization data pipeline dedicated to the sdzwa january 2024 pdf.\", \"active\": false, \"data_source_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"text_partitioning_profile_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/Streamline\", \"text_embedding_profile_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding_v2\", \"indexing_profile_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/indexingprofiles/AzureAISearch_Default_002\", \"trigger_type\": \"Event\", \"trigger_cron_schedule\": null, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } ] } Vectorization Request Resources The storage of vectorization request resources are located in the vectorization-state container following the standard organization of /requests/yyyyMMdd/yyyyMMdd-vectorizationrequestid.json where yyyyMMdd (UTC) is the date of the request and vectorizationrequestid is the unique identifier of the request. When a vectorization request is received, the request gets created and is updated once the request has been processed. An example of a completed vectorization request is: { \"id\": \"f8d940a2-77c0-4b3e-8709-e26445f9743e\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationRequests/f8d940a2-77c0-4b3e-8709-e26445f9743e\", \"Expired\": false, \"resource_filepath\": \"requests/20240419/20240419-f8d940a2-77c0-4b3e-8709-e26445f9743e.json\", \"content_identifier\": { \"data_source_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"multipart_id\": [ \"fllmaks14sa.dfs.core.windows.net\", \"vectorization-input\", \"sdzwa/journals/2024/SDZWA-Journal-January-2024.pdf\" ], \"canonical_id\": \"sdzwa/journals/2024/SDZWA-Journal-January-2024\", \"metadata\": null }, \"processing_type\": \"Asynchronous\", \"pipeline_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationPipelines/sdzwa\", \"pipeline_execution_id\": \"541ae81c-08ea-4ba0-b58c-9d904260a5a2\", \"processing_state\": \"Completed\", \"execution_start\": \"2024-04-19T03:57:33.4571856Z\", \"execution_end\": \"2024-04-19T04:00:41.8572236Z\", \"error_messages\": [], \"steps\": [ { \"id\": \"extract\", \"parameters\": {} }, { \"id\": \"partition\", \"parameters\": { \"text_partitioning_profile_name\": \"Streamline\" } }, { \"id\": \"embed\", \"parameters\": { \"text_embedding_profile_name\": \"AzureOpenAI_Embedding_v2\" } }, { \"id\": \"index\", \"parameters\": { \"indexing_profile_name\": \"AzureAISearch_Default_002\" } } ], \"completed_steps\": [ \"extract\", \"partition\", \"embed\", \"index\" ], \"remaining_steps\": [], \"current_step\": null, \"error_count\": 0, \"running_operations\": {}, \"last_successful_step_time\": \"2024-04-19T04:00:41.8554435Z\" } Valid states for the processing_state property are New, InProgress, Completed, and Failed. Any errors encountered during the processing of a request are stored in the error_messages array. Note: Triggering the vectorization process is done through the Management API by issuing a process action on the resource. See the Triggering Vectorization section for more information. Synchronous Versus Asynchronous Vectorization The vectorization process can be done in a synchronized or asynchronized manner. The synchronized manner is when the vectorization process is done in real time in memory and the results are returned immediately. The asynchronized manner is when the vectorization process is done in the background and the results are returned at a later time. The asynchronized manner is useful when the vectorization process is expected to take a long time to complete and the user does not want to wait for the results. The asynchronized manner is also useful when the vectorization process is expected to be done in batches and the user does not want to wait for the results of each batch. For example, you would use syncronized vactorization when you have one or few files that you want to vectorize and you want the results immediately. You would use asynchronized vectorization when you have hundred or thousands of files that you want to vectorize and you want the results at a later time."
  },
  "setup-guides/index.html": {
    "href": "setup-guides/index.html",
    "title": "Setup guides | FoundationaLLM",
    "keywords": "Setup guides After deploying FoundationaLLM, you can customize the solution components to adapt it for your needs. Follow the Quickstart guide to get started with FoundationaLLM. Set up FLLM agents to define a persona and connect to your data sources to generate responses. Configure vectorization to enable vector search."
  },
  "setup-guides/management-ui/management-ui.html": {
    "href": "setup-guides/management-ui/management-ui.html",
    "title": "Management UI | FoundationaLLM",
    "keywords": "Management UI The Management UI enables FLLM administrators to configure agents without directly calling the Management API. Creating New Agent Navigate to the Create New Agent page using the side navigation bar. Set the agent type: Knowledge Management or Analytics. FoundationaLLM currently only supports Knowledge Management agents. Set the agent Knowledge Source: Expand the dropdown arrow next to the upper left box. Select the correct Content Source Profile. Expand the dropdown arrow next to the upper right box to open the Indexing Profile dropdown. Select the correct Indexing Profile. Expand the dropdown arrow next to the lower left box. Set the Chunk size and Overlap size settings for text partitioning. Select Done. Expand the dropdown arrow next to the lower right box. Set the trigger Frequency; FoundationaLLM currently only supports Manual triggers. Configure user-agent interactions. Enable conversation history using the Yes/No Radio Button. Select Done. Configure the Gatekeeper. Then, select Done. Enable/Disable the Gatekeeper using the Radio Button Set the Content Safety platform to either None or Azure Content Safety using the dropdown menu Set the Data Protection platform to either None or Microsoft Presidio using the dropdown menu Lastly, set the System Prompt. The prompt prefixes users' requests to the agent, influencing the tone and functionality of the agent. After setting the desired agent configuration, select Create Agent at the bottom right-hand corner of the page. You will be able to edit the agent configuration after creation from the Public Agents page."
  },
  "setup-guides/quickstart.html": {
    "href": "setup-guides/quickstart.html",
    "title": "Quickstart guide | FoundationaLLM",
    "keywords": "Quickstart guide After deploying FoundationaLLM, complete the following steps to get started: Configure your deployment's authentication settings. Setup your agents to define a persona and connect to your data sources to generate responses. Find your User Portal URL and log in to start using FoundationaLLM. Find your User Portal (chat UI) URL If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with chatuica. Within the Overview pane, copy the Application Url value. This is the URL for the chat application. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. When you navigate to the chat UI application, you will be prompted to log in. Find your Core API URL If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the Core API: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with coreca. Within the Overview pane, copy the Application Url value. This is the URL for the Core API. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. Your Core API URL (for your AKS deployment) is the URL you just copied with /core appended to the end of it. For example, if your Core API URL is https://1cf699fd0d89446eabf2.eastus.aksapp.io/, then your Core API URL is https://1cf699fd0d89446eabf2.eastus.aksapp.io/core."
  },
  "setup-guides/vectorization/index.html": {
    "href": "setup-guides/vectorization/index.html",
    "title": "Vectorization | FoundationaLLM",
    "keywords": "Vectorization This section describes the content vectorization concepts and how to configure vectorization in FoundationaLLM. Use the links below to learn more about configuring vectorization in FoundationaLLM: Vectorization concepts Configuring vectorization Managing vectorization profiles Triggering vectorization Monitoring and troubleshooting vectorization"
  },
  "setup-guides/vectorization/vectorization-concepts.html": {
    "href": "setup-guides/vectorization/vectorization-concepts.html",
    "title": "Vectorization Concepts | FoundationaLLM",
    "keywords": "Vectorization Concepts FoundationaLLM (FLLM) provides utilities and services to support vectorizing your data in batch and on-demand modalities. Vectorization is a multi-step process, starting with loading your data, splitting (or chunking) the data as required, performing vector embeddings, and storing the vectors into a vector index so an agent can later retrieve relevant information through a vector search. In FLLM, vectorization is an idempotent operation, meaning that vectorizing the same document multiple times will result in the same vector being stored in the vector index. This is useful for re-vectorizing documents that have been updated, or for cases where only parts of the vectorization process need to be run (e.g., only the vector embeddings need to be updated). For each individual document, vectorization is performed by executing a vectorization request process action via the Management API upon receiving a valid vectorization request, either through a direct call or via a triggered vectorization pipeline. Based on the details of the vectorization request, a processing a vectorization request can be executed in one of the following modes: Synchonously - the vectorization steps start executing immediately and execute sequentially until the processing is completed or an error occurs. This type of execution is used for on-demand vectorization and is well suited for small to medium sized documents and relatively small numbers of documents at a time. Asynchronously - the vectorization steps are submitted to queues and executed by workers. This type of execution is used for batch vectorization and is well suited for large numbers of documents at a time. It is also well suited for vectorizing documents of any size. The FLLM platform components involved in vectorization are: Management API (creates vectorization requests and exposes the process action on vectorization request resources). Vectorization API (processes vectorization requests and executes synchonous vectorization pipelines). Note: The Vectorization API is used internally by the FoundationaLLM platform and is not intended to be used directly by users. Vectorization Worker(s) (execute asynchronous vectorization pipelines). A FLLM instance deploys one instance of the Vectorization API and one or more instances of the Vectorization Worker. See Configuring vectorization for more details on configuring these components. Note The initialization of both the Vectorization API and the Vectorization Worker is a time consuming process, as it involves dowloading and initializing various elements (e.g., Byte-Pair encoding dictionaries). As a result, after restarting the API, it might take up to a minute until it becomes ready to accept vectorization requests. It is recommended to either use the status endpoint of the Vectorization API to determine when it is ready to accept requests, or to wait for a minute after restarting the API before sending vectorization requests. Vectorization Pipelines Vectorization pipelines are aggregations of multiple vectorization requests, for example, a vectorization pipeline may be defined to vectorize all documents in a specific data source, such as an ADLS Gen2 container. Vectorization pipelines can be triggered in one of the following ways: None (no triggering of vectorization pipelines). Manual (vectorization pipelines are triggered manually by calling the Vectorization API). The typical use cases for on-demand vectorization (either synchronous or asynchronous) are testing, manual vectorization (or re-vectorization), and application integration (where another platform component triggers vectorization). Content-based (vectorization pipelines are triggered automatically when either new content is added to a content source or existing content is updated). Schedule-based (vectorization pipelines are triggered automatically based on a schedule). Note Content-based and schedule-based triggering are currently in pre-release and are not yet available in public releases of FLLM. When working with vectorization in FLLM, the typical steps you have to perform are: Ensure that the Management API, Vectorization API and Vectorization Worker are configured and running. This is a one-time operation. For more details, see Configuring vectorization. Create vectorization profiles. You can either reuse existing profiles or create new ones. For more details, see Managing vectorization profiles. Submit vectorization requests to the Management API. For more details, see Triggering vectorization."
  },
  "setup-guides/vectorization/vectorization-configuration.html": {
    "href": "setup-guides/vectorization/vectorization-configuration.html",
    "title": "Configuring vectorization | FoundationaLLM",
    "keywords": "Configuring vectorization This section provides details on how to configure the vectorization API and workers in FoundationaLLM. Note These configurations should already be in place if you deployed FoundationaLLM (FLLM) using the recommended deployment scripts. The details presented here are provided for cases in which you need to troubleshoot or customize the configuration. Configuration for Vectorization API The following table describes the Azure artifacts required for the vectorization pipelines. Artifact name Description vectorization-input Azure storage container used by default to store documents to be picked up by the vectorization pipeline. Must be created on a Data Lake storage account (with the hierarchical namespace enabled). The following table describes the environment variables required for the vectorization pipelines. Environment variable Description FoundationaLLM_AppConfig_ConnectionString Connection string to the Azure App Configuration instance. The following table describes the required configuration parameters for the vectorization pipelines. App Configuration Key Default Value Description FoundationaLLM:APIs:VectorizationAPI:APIUrl The URL of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:APIKey Key Vault secret name: foundationallm-apis-vectorizationapi-apikey The API key of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization API. Note Refer to the App Configuration values page for more information on how to set these and other configuration values. Configuration for Vectorization workers The following table describes the Azure artifacts required for the vectorization pipelines. Artifact Name Description embed Azure storage queue used for the embed vectorization pipeline. Can be created on the storage account used for the other queues. extract Azure storage queue used for the extract vectorization pipeline. Can be created on the storage account used for the other queues. index Azure storage queue used for the index vectorization pipeline. Can be created on the storage account used for the other queues. partition Azure storage queue used for the partition vectorization pipeline. Can be created on the storage account used for the other queues. vectorization-state Azure storage container used for the vectorization state service. Can be created on the storage account used for the other queues. resource-provider Azure storage container used for the internal states of the FoundationaLLM resource providers. resource-provider/FoundationaLLM.Vectorization/vectorization-pipelines.json Azure storage blob used for the vectorization pipeline resources managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization pipelines. resource-provider/FoundationaLLM.Vectorization/vectorization-text-partitioning-profiles.json Azure storage blob used for the text partitioning profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization text partitioning profiles. resource-provider/FoundationaLLM.Vectorization/vectorization-text-embedding-profiles.json Azure storage blob used for the text embedding profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization text embedding profiles. resource-provider/FoundationaLLM.Vectorization/vectorization-indexing-profiles.json Azure storage blob used for the indexing profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization indexing profiles. resource-provider/FoundationaLLM.DataSources Azure storage directory where the data sources managed by the FoundationaLLM.DataSources resource provider are stored. vectorization-state/requests/{requestid-yyyyMMdd}.json Azure storage directory where vectorization requests managed by the vectorization state service are stored. vectorization-state/execution-state/{canonical_id} Azure storage directory where the execution state of the vectorization requests and their resulting artifacts are stored. The canonical_id is defined in the vectorization request. vectorization-state/pipeline-state/{pipeline_name}/{pipeline_name}-{execution_id}.json Azure storage directory where the state of the vectorization pipeline execution is stored. The pipeline_name is the name of the vectorization pipeline and the execution_id is the unique identifier of the execution. The following table describes the environment variables required for the vectorization pipelines. Environment variable Description FoundationaLLM_AppConfig_ConnectionString Connection string to the Azure App Configuration instance. The following table describes the required App Configuration parameters for the vectorization pipelines. App Configuration Key Default Value Description FoundationaLLM:APIs:VectorizationWorker:APIUrl The URL of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:APIKey Key Vault secret name: foundationallm-apis-vectorizationworker-apikey The API key of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization worker API. FoundationaLLM:Vectorization:VectorizationWorker The settings used by each instance of the vectorization worker service. For more details, see default vectorization worker settings. FoundationaLLM:Vectorization:Queues:Embed:AccountName The account name of the Azure Storage account used for the embed vectorization queue. FoundationaLLM:Vectorization:Queues:Extract:AccountName The account name of the Azure Storage account used for the extract vectorization queue. FoundationaLLM:Vectorization:Queues:Index:AccountName The account name of the Azure Storage account used for the index vectorization queue. FoundationaLLM:Vectorization:Queues:Partition:AccountName The account name of the Azure Storage account used for the partition vectorization queue. FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey Key Vault secret name: foundationallm-vectorization-semantickerneltextembedding-openai-apikey The API key used to connect to the Azure OpenAI service. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName The name of the Azure OpenAI model deployment. The default value is embeddings. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint The endpoint of the Azure OpenAI service. FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey Key Vault secret name: foundationallm-vectorization-azureaisearch-apikey The API key used to connect to the Azure OpenAI service. FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint The endpoint of the Azure OpenAI service. Note Refer to the App Configuration values page for more information on how to set these and other configuration values. The following table describes the external content used by the vectorization worker to initialize: Uri Description https://openaipublic.blob.core.windows.net/encodings/cl100k_base.tiktoken The public Azure Blob Storage account used to download the OpenAI BPE ranking files. Note The vectorization worker must be able to open HTTPS connections to the external content listed above. Default vectorization worker settings The default settings for the vectorization worker are stored in the FoundationaLLM:Vectorization:VectorizationWorker App Configuration key. The default structure for this key is: { \"RequestManagers\": [ { \"RequestSourceName\": \"extract\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"partition\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"embed\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"index\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 } ], \"RequestSources\": [ { \"Name\": \"extract\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"partition\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"embed\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"index\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 } ], \"QueuingEngine\": \"AzureStorageQueue\" } The following table provides details about the configuration parameters: Parameter Description RequestManagers The list of request managers used by the vectorization worker. Each request manager is responsible for managing the execution of vectorization pipelines for a specific vectorization step. The configuration must include all request managers. RequestManagers.MaxHandlerInstances The maximum number of request handlers that process requests for the specified request source. By default, the value is 1. You can change the value to increase the processing capacity of each vectorization worker instance. The value applies to all istances of the vectorization worker. NOTE: It is important to align the value of this setting with the level of compute and memory resources allocated to the individual vectorization worker instances. RequestManagers.QueueProcessingPace Optional The delay in seconds to wait between requests after a request has been processed. The default value is 5. RequestManagers.QueuePollingInterval Optional The polling interval in seconds, this is the amount of time to wait if the previous check on the queue had no items. The default value is 60. RequestManagers.QueueMaxNumberOfRetries Optional The maximum number of retries to attempt to process a request before being removed from the queue. The default value is 5. RequestSources The list of request sources used by the vectorization worker. Each request source is responsible for managing the requests for a specific vectorization step. The configuration must include all request sources. RequestSources.Name The name of the request source. The name must match the name of the request manager. RequestSources.AccountName The name of the configuration key for the Azure Storage account used for the queue (include the tokens after FoundationaLLM:Vectorization:Queues:). RequestSources.VisibilityTimeoutSeconds In the case of queue-based request sources (the default for the vectorization worker), specifies the time in seconds until a dequeued vectorization step request must be executed. During this timeout, the message will not be visible to other handler instances within the same worker or from other worker instances. If the handler fails to process the vectorization step request successfully and remove it from the queue within the specified timeout, the message will become visibile again. The default value is 600 seconds and should not be changed."
  },
  "setup-guides/vectorization/vectorization-monitoring-troubleshooting.html": {
    "href": "setup-guides/vectorization/vectorization-monitoring-troubleshooting.html",
    "title": "Monitoring and troubleshooting vectorization | FoundationaLLM",
    "keywords": "Monitoring and troubleshooting vectorization The typical steps you have to perform when monitoring and troubleshooting vectorization in FoundationaLLM (FLLM) are: Check the configuration of the Vectorization API and Vectorization Worker. For more details, see Configuring vectorization. Check the working condition of the Management API, Vectorization API and Vectorization Worker(s). Ensure the services have started and initialized successfully. Check the status endpoints for the Core API, Vectorization API and the Management API. You can do this by submitting a HTTP GET request to the /status endpoint of these APIs and validate that you get a HTTP 200 OK response with body like <api_name> - ready. Check the logs of the Management Vectorization API and Vectorization Worker(s) for errors. By default, the logs are written to the Azure App Insights Log Analytics Workspace deployed by FLLM. Check the definitions of the vectorization profiles used in the vectorization requests. For more details, see Managing vectorization profiles. Ensure all the required app configuration elements are present and have the correct values. Check the state of the vectorization requests. By default, the vectorization requests are stored in the vectorization-state container of the Azure Storage account deployed by FLLM. State and logging of vectorization requests All state and logging of vectorization requests are stored in the vectorization-state container of the Azure Storage account deployed by FLLM. Vectorization request resource files Each vectorization request resource is stored in the vectorization-state/requests folder. The request resources are created and managed through the Management API. The naming convention is: vectorization-state/requests/<request_id>-<yyyMMdd>.json. The resource file is updated as the vectorization request progresses through the processing. The resource file contains the following fields that can assist in troubleshooting: Field Description id The unique identifier of the vectorization request. When looking up the subsequent execution state, this is the identifier that is used in the file name. content-identifier.canonical_id The canonical id of the vectorization request. This is the path within the execution-state folder where additional logs and associated vectorization artifacts are stored. processing-state The current state of the vectorization request, values can be New, InProgress, Completed, Failed error_messages A high level list of error messages encountered during processing. current_step The step currently being executed, or the step in which a failure occurred. pipeline_object_id When created through a vectorization pipeline, this field contains the object id of the pipeline. pipeline_execution_id When process is initiated through a vectorization pipeline, this field contains the unique identifier of the pipeline execution. Vectorization execution state files The execution state of a vectorization request is stored in the vectorization-state/execution-state folder. The naming convention is: vectorization-state/execution-state/<canonical_id>/<file_name>_state_<request_id>.json. The execution state file provide verbose details about the request that is updated as the vectorization request is processed. This file records generated assets and logs. Error messages can be found in the log field. Vectorization pipeline state files The state of the vectorization pipeline is stored in the vectorization-state/pipeline-state folder. The naming convention is: vectorization-state/pipeline-state/<pipeline_name>/<pipeline_name>-<pipeline_execution_id>.json. The pipeline state records associated vectorization requests that are processed together in a single pipeline in the vectorization_requests field. The overall pipeline state is calculated based on the states of the collection of vectorization requests, this state is calculated by the following table in order: Condition Pipeline state At least one request is InProgress InProgress All requests are Completed Completed At least one request is Failed Failed All requests are New or there are no requests being tracked. New You can use the Management API with the object id of the request to retrieve the vectorization request resource that contains a high level overview of any errors that have occurred. If more detailed information is required, then reviewing the execution state file is recommended."
  },
  "setup-guides/vectorization/vectorization-profiles.html": {
    "href": "setup-guides/vectorization/vectorization-profiles.html",
    "title": "Managing vectorization profiles | FoundationaLLM",
    "keywords": "Managing vectorization profiles The FoundationaLLM (FLLM) vectorization pipelines require the following types of profiles: Data Sources Text partitioning profiles Text embedding profiles Indexing profiles Data Sources Data sources are managed with the FoundationaLLM.DataSource resource provider through the Management API. The structure of a data source profile is the following: { \"type\": \"<data_source_type>\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.DataSource/dataSources/<name>\", \"display_name\": null, \"description\": \"<description>\", \"<settings>\": [ \"<value>\" ], \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:DataSources:datalake01:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:DataSources:datalake01:ConnectionString\" }, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } where: <data_source_type> is the type of the data source. The supported types are AzureDataLake, SharePointOnline, WebSite and AzureSQLDatabase. <name> is the name of the data source. <instance_id> is the unique identifier of the FLLM instance. <description> is the description of the Data Source. <settings> is a JSON object containing the data source settings, the name of the property varies by data source type. <configuration_references> is a JSON object containing the profile configuration references. The content of this object also varies by data source type. The reminder of this section describes the configuration parameters for each of the supported Data Source types. AzureDataLake \"folders\": [ \"/vectorization-input/sdzwa/journals/2024\" ], \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:DataSources:datalake01:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:DataSources:datalake01:ConnectionString\", \"APIKey\": \"FoundationaLLM:DataSources:datalake01:APIKey\", \"Endpoint\": \"FoundationaLLM:DataSources:datalake01:Endpoint\" }, The configuration parameters for AzureDataLake are the following: Parameter Description folders The list of folders in the Azure Data Lake storage account that contain the data to be vectorized. configuration_references.AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. configuration_references.ConnectionString The connection string to the Azure Storage account used for the the Azure Data Lake vectorization Data Source. SharePointOnline \"site_url\": \"https://solliance.sharepoint.com/sites/foundationallm01\", \"document_libraries\": [ \"/documents01\" ], \"configuration_references\": { \"ClientId\": \"FoundationaLLM:DataSources:sharepointsite01:ClientId\", \"TenantId\": \"FoundationaLLM:DataSources:sharepointsite01:TenantId\", \"CertificateName\": \"FoundationaLLM:DataSources:sharepointsite01:CertificateName\", \"KeyVaultURL\": \"FoundationaLLM:DataSources:sharepointsite01:KeyVaultURL\" }, The configuration parameters for SharePointOnline are the following: Parameter Description site_url The URL of the SharePoint Online site collection. document_libraries The list of document libraries in the SharePoint Online site collection that contain the data to be vectorized. configuration_references.CertificateName The name of the X.509 Certificate. The certificate must be valid and be uploaded into an Azure Key Vault certificate store. configuration_references.KeyVaultURL The URL of the KeyVault where the X.509 Certificate is stored. configuration_references.ClientId The Application (client) Id of the Microsoft Entra ID App Registration. See Entra ID app registration for SharePoint Online Data Source. configuration_references.TenantId The unique identifier of the SharePoint Online tenant. AzureSQLDatabase \"tables\": [ \"Table1\" ], \"configuration_references\": { \"ConnectionString\": \"FoundationaLLM:DataSources:sqldatabase01:ConnectionString\", \"AuthenticationType\": \"FoundationaLLM:DataSources:sqldatabase01:AuthenticationType\" }, The configuration parameters for AzureSQLDatabase are the following: Parameter Description tables The list of tables in the Azure SQL database that contain the data to be vectorized. configuration_references.ConnectionString The connection string to the Azure SQL database used for the Azure SQL Database vectorization Data Source. configuration_references.AuthenticationType The authentication type used to connect to the Azure SQL database. Can be one of AzureIdentity or ConnectionString. Managing Data Sources This section describes how to manage Data Sources using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/<name> Content-Type: application/json BODY <data source> where <data source> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/<name> Note The delete operation is a logical delete. To purge a Data Source, call the /purge endpoint after deleting the Data Source. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/<name>/purge Content-Type: application/json BODY {} Check Name HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/checkname Content-Type: application/json BODY { \"name\": \"<name>\" } Text partitioning profiles The structure of a text partitioning profile is the following: { \"type\": \"text-partitioning-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name>\", \"description\": \"<description>\", \"deleted\": false, \"text_splitter\": \"<text_splitter>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>} } where: <name> is the name of the text partitioning profile. <description> is the description of the text partitioning profile. <text_splitter> is the type of the text splitter. The supported types are TextTokenSplitter. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported text splitters. TextTokenSplitter \"settings\" : { \"Tokenizer\": \"MicrosoftBPETokenizer\", \"TokenizerEncoder\": \"cl100k_base\", \"ChunkSizeTokens\": \"2000\", \"OverlapSizeTokens\": \"200\" }, \"configuration_references\": {} The configuration parameters for TokenTextSplitter are the following: Parameter Description settings.Tokenizer The tokenizer used to split the text into tokens. Currently, the only supported tokenizer is MicrosoftBPETokenizer. Under the hood, it uses the .NET equivalent of OpenAI's tiktoken. settings.TokenizerEncoder The encoder used by the tokenizer. Currently, the only supported encoder is cl100k_base. This encoder is the one currently used by Azure OpenAI (and OpenAI) in gpt-3.5-turbo and gpt-4. settings.ChunkSizeTokens The maximum number of tokens in each text chunk. settings.OverlapSizeTokens The maximum number of tokens that overlap between two consecutive chunks. Managing text partitioning profiles This section describes how to manage text partitioning profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name> Content-Type: application/json BODY <text partitioning profile> where <text partitioning profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name> Note The delete operation is a logical delete. To purge a Text Partitioning Profile, call the /purge endpoint after deleting the Text Partitioning Profile. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name>/purge Content-Type: application/json BODY {} Text embedding profiles The structure of a text embedding profile is the following: { \"type\": \"text-embedding-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name>\", \"display_name\": null, \"description\": \"<description>\", \"text_embedding\": \"<text_embedding>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>}, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } where: <name> is the name of the text embedding profile. <description> is the description of the text embedding profile. <text_embedding> is the type of the text embedder. The supported types are SemanticKernelTextEmbedding and GatewayTextEmbedding. SemanticKernelTextEmbedding supports synchronous and asynchronous vectorization, while GatewayTextEmbedding only supports asynchronous vectorization. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported text embedders. SemanticKernelTextEmbedding \"settings\": {}, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey\", \"APIVersion\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType\", \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" } The configuration parameters for SemanticKernelTextEmbedding are the following: Parameter Description configuration_references.APIKey The API key used to connect to the Azure OpenAI service. By default, this maps to the Azure OpenAI service deployed by FLLM. configuration_references.APIVersion The API version used to connect to the Azure OpenAI service. By default, this value is 2023-05-15. configuration_references.AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. By default, it is set to APIKey. configuration_references.DeploymentName The name of the Azure OpenAI model deployment. The default value is embeddings. configuration_references.Endpoint The endpoint of the Azure OpenAI service. By default, this maps to the Azure OpenAI service deployed by FLLM. GatewayTextEmbedding \"settings\": { \"model_name\": \"embeddings\" }, \"configuration_references\": {} The settings for GatewayTextEmbedding are the following: Parameter Description settings.model_name The name of the embeddings model deployment in Azure OpenAI Service. Managing text embedding profiles This section describes how to manage text embedding profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name> Content-Type: application/json BODY <text embedding profile> where <text embedding profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name> Note The delete operation is a logical delete. To purge a Text Embedding Profile, call the /purge endpoint after deleting the Text Embedding Profile. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name>/purge Content-Type: application/json BODY {} Indexing profiles The structure of an indexing profile is the following: { \"type\": \"indexing-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/indexingProfiles/<name>\", \"display_name\": null, \"description\": \"<description>\", \"deleted\": false, \"indexer\": \"<indexer>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>}, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } where: <name> is the name of the indexing profile. <description> is the description of the indexing profile. <indexer> is the type of the indexer. The supported types are AzureAISearchIndexer. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported indexers. AzureAISearchIndexer \"settings\": { \"IndexName\": \"fllm-default-001\", \"TopN\": \"3\", \"Filters\": \"\", \"EmbeddingFieldName\": \"Embedding\", \"TextFieldName\": \"Text\" }, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } The configuration parameters for AzureAISearchIndexer are the following: Parameter Description settings.IndexName The name of the Azure AI Search index. If the index does not exist, it will be created. settings.TopN The number of embeddings closest to the index query to return. settings.Filters Optional filters to further refine the index search. settings.EmbeddingFieldName Field name of the embedding vector in the JSON documents returned by Azure AI Search. settings.TextFieldName Field name of the text equivalent of the embedding vector in the JSON documents returned by Azure AI Search. configuration_references.APIKey The API key used to connect to the Azure AI Search service. By default, this maps to the Azure AI Search service deployed by FLLM. ConfigurationReference.AuthenticationType The authentication type used to connect to the Azure AI Search service. Can be one of AzureIdentity or APIKey. By default, it is set to APIKey. configuration_references.Endpoint The endpoint of the Azure AI Search service. By default, this maps to the Azure AI Search service deployed by FLLM. Managing indexing profiles This section describes how to manage indexing profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/<name> Content-Type: application/json BODY <indexing profile> where <indexing profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/<name> Note The delete operation is a logical delete. To purge an Indexing Profile, call the /purge endpoint after deleting the Indexing Profile. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/<name>/purge Content-Type: application/json BODY {} Check Name HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/checkname Content-Type: application/json BODY { \"name\": \"<name>\" } Additional configuration steps Entra ID app registration for SharePoint Online Data Source Apps typically access SharePoint Online through certificates: Anyone having the certificate and its private key can use the app with the permissions granted to it. Create a new App registration in your Microsoft Entra ID tenant. Next, provide a Name for your application and click on Register at the bottom of the blade. Navigate to the API Permissions blade and click on Add a permission button Here you choose the permissions that you will grant to this application. Select SharePoint from the Microsoft APIs tab, then select Application permissions as the type of permissions required, choose the desired permissions (i.e. Sites.Read.All) and click on Add permissions. Here are the required scopes: Group.ReadWrite.All User.ReadWrite.All Sites.Read.All OR Sites.Selected Sites.Read.All will allow the application to read documents and list items in all site collections. Sites.Selected will allow the application to access only a subset of site collections. The specific site collections and the permissions granted will be configured separately, in SharePoint Online. The application permission requires admin consent in a tenant before it can be used. In order to do this, click on API permissions in the left menu again. At the bottom you will see a section Grant consent. Click on the Grant admin consent for {{organization}} button and confirm the action by clicking on the Yes button that appears at the top. To invoke SharePoint Online with an app-only access token, you have to create and configure a self-signed X.509 certificate, which will be used to authenticate your application against Microsoft Entra ID. You can find additional details on how to do this in this document. Next step is to register the certificate you created to this application. Click on Certificates & secrets blade. Next, click on the Upload certificate button, select the .CER file you generated earlier and click on Add to upload it. To confirm that the certificate was successfully registered, click on Manifest blade and search for the keyCredentials property, which contains your certificate details. It should look like this: \"keyCredentials\": [ { \"customKeyIdentifier\": \"<$base64CertHash>\", \"endDate\": \"yyyy-MM-ddThh:mm:ssZ\", \"keyId\": \"<$guid>\", \"startDate\": \"yyyy-MM-ddThh:mm:ssZ\", \"type\": \"AsymmetricX509Cert\", \"usage\": \"Verify\", \"value\": \"<$base64Cert>\", \"displayName\": \"CN=<$name of your cert>\" } ] Upload and store the certificate in the KeyVault where the FoundationaLLM Vectorization API has permissions to read Secrets. You will need the Certificate Name for the App Configuration settings listed in the table above. NOTE Can I use other means besides certificates for realizing app-only access for my Azure AD app? NO, all other options are blocked by SharePoint Online and will result in an Access Denied message. Create a new Data Source using the Management API. Ensure that you set the necessary App Configuration settings appropriately."
  },
  "setup-guides/vectorization/vectorization-triggering.html": {
    "href": "setup-guides/vectorization/vectorization-triggering.html",
    "title": "Triggering vectorization | FoundationaLLM",
    "keywords": "Triggering vectorization Vectorization pipelines are started when the Management API receives a processvectorization request. The following types of triggers are supported: None (no triggering of vectorization pipelines). Manual (vectorization pipelines are triggered manually by calling the Vectorization API). The typical use cases for on-demand vectorization (either synchronous or asynchronous) are testing, manual vectorization (or re-vectorization), and application integration (where another platform component triggers vectorization). Content-based (vectorization pipelines are triggered automatically when either new content is added to a content source or existing content is updated). Schedule-based (vectorization pipelines are triggered automatically based on a schedule). Note Content-based and schedule-based triggering are currently in pre-release and are not yet available in public releases of FLLM. Vectorization requests The typical structure of a vectorization request is the following { \"id\": \"fc4a2499-4771-4a2d-9ba0-3874c3d4586c\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationRequests/fc4a2499-4771-4a2d-9ba0-3874c3d4586c\", \"content_identifier\": { \"data_source_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"multipart_id\": [ \"abcdefg.dfs.core.windows.net\", \"vectorization-input\", \"/journals/2024/Journal-January-2024.pdf\" ], \"canonical_id\": \"/journals/Journal-January-2024\", \"metadata\": null }, \"processing_type\": \"Synchronous\", \"steps\": [ { \"id\": \"extract\", \"parameters\": {} }, { \"id\": \"partition\", \"parameters\": { \"text_partitioning_profile_name\": \"DefaultTokenTextPartition_Small\" } }, { \"id\": \"embed\", \"parameters\": { \"text_embedding_profile_name\": \"AzureOpenAI_Embedding\" } }, { \"id\": \"index\", \"parameters\": { \"indexing_profile_name\": \"AzureAISearch_CPTEST\" } } ], \"completed_steps\": [ ], \"remaining_steps\": [ \"extract\", \"partition\", \"embed\", \"index\" ] } The following table describes the properties of a vectorization request. Property Description id The unique identifier of the vectorization request. The system issuing the request is responsible for generating this value. object_id The object ID of the vectorization request. This can be empty when creating the request. content_identifier The content identifier of the content to be vectorized. content_identifier.data_source_object_id The object id of the data source resource indicating the location of the data to be vectorized. content_identifier.multipart_id The multipart ID of the content to be vectorized. The multipart ID is a list of strings that uniquely identifies the content. The multipart ID is specific to the content source profile. content_identifier.canonical_id The canonical ID of the content to be vectorized. The canonical ID is a string that uniquely identifies the content in a logical namespace. The caller is responsible for the generation of this identifier. The identifier should have a path form (using the / separator). The last part of the path should always be equal to the file name (without its extension). processing_type The type of processing to be performed. The following values are supported: Synchronous and Asynchronous. See Vectorization concepts for more details. steps The vectorization steps to be executed. Most vectorization requests will contain the full set of standard steps: extract, partition, embed, and index. Each step (except for the extract one) will contain one parameter specifying the name of the associated vectorization profile name. completed_steps The list of steps that have been completed. This array needs to be empty when creating a vectorization request. remaining_steps The list of steps that are yet to be executed. This array can't be empty when creating a vectorization request, at least one step is needed. The meaning of the multipart strings depends on the specific type of the data source. The following table describes the meaning of the multipart strings for the AzureDataLake content source. Position Description 1 The URL of the Azure Data Lake storage account. When providing this value, you can use the known neutral URLs naming conventions. 2 The name of the container. 3 The path of the file relative to the container. The following table describes the meaning of the multipart strings for the SharePointOnline content source. Position Description 1 The URL of the SharePoint Online tenant. When providing this value, you can use the known neutral URLs naming conventions. 2 The path of the site/subsite relative to the tenant URL. 3 The folder path, starting with the document library name. 4 The name of the file. The following table describes the meaning of the multipart strings for the AzureSQLDatabase content source. Position Description 1 The name of the database schema. 2 The name of the table. 3 The name of the column that stores file content. 4 The name of the column that stores file row identifier. 5 The value of the row identifier. 5 The file name. The following table describes the meaning of the multipart strings for the WebSite content source. Position Description 1 The protocol, either http or https. 2 The web URL without the protocol. 3 CSS classes to filter by, space delimited. Known neutral URLs Depending on the specific configuration of various layers of security, vectorization request might end up being filtered out by infrastructure components like firewalls or proxies. To avoid this, the Vectorization API supports the use of known neutral URLs. Known neutral URLs are URLs that have a neutral form that is not subject to filtering. The platform currently supports two conventions for specifing known neutral URLs: Simple: xyz.blob.core.windows.net - this will be translated into https://xyz.blob.core.windows.net by the platform. Complex: FLLM:xyz#blob#core#windows#net - this will be translated into https://xyz.blob.core.windows.net by the platform. Depending on the specific configuration of the infrastructure, one of the two conventions might be more suitable than the other. Note To avoid bypassing security measures, the use of known neutral URLs is currently restricted to the following domains: onelake.dfs.fabric.microsoft.com, blob.core.windows.net, dfs.core.windows.net, and sharepoint.com. When parsing multipart components that are subject to known neutral URL naming conventions, the platform will apply the following logic: If the component starts with https:// or http:// (case-insensitive), the platform will not apply any transformation since the explicit intent is to use a fully qualified URL. If the component starts with FLLM:, the platform will replace the FLLM: prefix with https:// and replace all # characters with .. Then, it will check if the tail of the resulting URL is in the list of allowed domains. If it is, the platform will use the resulting URL. If it is not, the platform will use the original form of the component. At this point, the platform will assume that the component is a simple known neutral URL and will prepend https:// to it. Then, if the tail of the resulting URL is in the list of allowed domains, the platform will use the resulting URL. If it is not, the platform will use the original form of the component. Creating a vectorization request See Vectorization Request Resources for more information on creating a vectorization request. Upon completion, the API will return a response with the following structure: { \"object_id\":\"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationrequests/6041849a-d4d8-428d-97ff-c6a3443ecdae\", \"is_success\":true, \"error_message\":null } Processing a vectorization request To initiate the processing of a vectorization request, the caller must issue a process request to the Management API through a POST on the resource object id (the body is {}). The following is an example of a process, example: {baseUrl}/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationrequests/6041849a-d4d8-428d-97ff-c6a3443ecdae/process."
  }
}
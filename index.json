{
  "api/dotnet/AzureAI.Models.Resources.AzureAIReference.html": {
    "href": "api/dotnet/AzureAI.Models.Resources.AzureAIReference.html",
    "title": "Class AzureAIReference | FoundationaLLM",
    "summary": "Class AzureAIReference Namespace AzureAI.Models.Resources Assembly AzureAI.dll public class AzureAIReference : ResourceReference Inheritance object ResourceReference AzureAIReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the agent. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/AzureAI.Models.Resources.html": {
    "href": "api/dotnet/AzureAI.Models.Resources.html",
    "title": "Namespace AzureAI.Models.Resources | FoundationaLLM",
    "summary": "Namespace AzureAI.Models.Resources Classes AzureAIReference"
  },
  "api/dotnet/AzureAI.ResourceProviders.AzureAIResourceProviderService.html": {
    "href": "api/dotnet/AzureAI.ResourceProviders.AzureAIResourceProviderService.html",
    "title": "Class AzureAIResourceProviderService | FoundationaLLM",
    "summary": "Class AzureAIResourceProviderService Namespace AzureAI.ResourceProviders Assembly AzureAI.dll Implements the FoundationaLLM.AzureAI resource provider. public class AzureAIResourceProviderService : ResourceProviderServiceBase<AzureAIReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AzureAIReference> AzureAIResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AzureAIReference>._resourceReferenceStore ResourceProviderServiceBase<AzureAIReference>._serviceProvider ResourceProviderServiceBase<AzureAIReference>._authorizationServiceClient ResourceProviderServiceBase<AzureAIReference>._storageService ResourceProviderServiceBase<AzureAIReference>._eventService ResourceProviderServiceBase<AzureAIReference>._resourceValidatorFactory ResourceProviderServiceBase<AzureAIReference>._validator ResourceProviderServiceBase<AzureAIReference>._logger ResourceProviderServiceBase<AzureAIReference>._instanceSettings ResourceProviderServiceBase<AzureAIReference>._storageContainerName ResourceProviderServiceBase<AzureAIReference>._serializerSettings ResourceProviderServiceBase<AzureAIReference>.Name ResourceProviderServiceBase<AzureAIReference>.IsInitialized ResourceProviderServiceBase<AzureAIReference>.InitializationTask ResourceProviderServiceBase<AzureAIReference>.AllowedResourceTypes ResourceProviderServiceBase<AzureAIReference>.StorageAccountName ResourceProviderServiceBase<AzureAIReference>.StorageContainerName ResourceProviderServiceBase<AzureAIReference>.Initialize() ResourceProviderServiceBase<AzureAIReference>.WaitForInitialization() ResourceProviderServiceBase<AzureAIReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AzureAIReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AzureAIReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AzureAIReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AzureAIReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<AzureAIReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AzureAIReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<AzureAIReference>.HandleCacheResetCommand() ResourceProviderServiceBase<AzureAIReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<AzureAIReference>.GetResourceProviderState() ResourceProviderServiceBase<AzureAIReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AzureAIReference, bool, Task<T>>) ResourceProviderServiceBase<AzureAIReference>.LoadResource<T>(AzureAIReference) ResourceProviderServiceBase<AzureAIReference>.LoadResource<T>(string) ResourceProviderServiceBase<AzureAIReference>.CreateResource<T>(AzureAIReference, T) ResourceProviderServiceBase<AzureAIReference>.CreateResource(AzureAIReference, Stream, string) ResourceProviderServiceBase<AzureAIReference>.CreateResources<T1, T2>(AzureAIReference, T1, AzureAIReference, T2) ResourceProviderServiceBase<AzureAIReference>.SaveResource<T>(AzureAIReference, T) ResourceProviderServiceBase<AzureAIReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<AzureAIReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<AzureAIReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<AzureAIReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<AzureAIReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AzureAIReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<AzureAIReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<AzureAIReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AzureAIReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<AzureAIReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<AzureAIReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<AzureAIReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<AzureAIReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAIResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IAzureCosmosDBService, IServiceProvider, ILogger<AzureAIResourceProviderService>) Implements the FoundationaLLM.AzureAI resource provider. public AzureAIResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureCosmosDBService cosmosDBService, IServiceProvider serviceProvider, ILogger<AzureAIResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService providing Cosmos DB services. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<AzureAIResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) The internal implementation of ExecuteResourceActionAsync. Must be overridden in derived classes. protected override Task<TResult> ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, TAction actionPayload, UnifiedUserIdentity userIdentity) where T : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. actionPayload TAction The TAction object containing details about the action to be executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> A TResult object with the result of the action. Type Parameters T TAction TResult Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of ResourceExistsAsync. Must be overridden in derived classes. protected override Task<(bool Exists, bool Deleted)> ResourceExistsAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(bool Exists, bool Deleted)> A tuple indicating whether the resource exists or not and whether it is logically deleted or not. Type Parameters T The type of resource being checked. Remarks If a resource was logically deleted but not purged, this method will return True, indicating the existence of the resource. UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/AzureAI.ResourceProviders.html": {
    "href": "api/dotnet/AzureAI.ResourceProviders.html",
    "title": "Namespace AzureAI.ResourceProviders | FoundationaLLM",
    "summary": "Namespace AzureAI.ResourceProviders Classes AzureAIResourceProviderService Implements the FoundationaLLM.AzureAI resource provider."
  },
  "api/dotnet/AzureAI.html": {
    "href": "api/dotnet/AzureAI.html",
    "title": "Namespace AzureAI | FoundationaLLM",
    "summary": "Namespace AzureAI Namespaces AzureAI.Models.Resources AzureAI.ResourceProviders"
  },
  "api/dotnet/FoundationaLLM.AIModel.Models.AIModelReference.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Models.AIModelReference.html",
    "title": "Class AIModelReference | FoundationaLLM",
    "summary": "Class AIModelReference Namespace FoundationaLLM.AIModel.Models Assembly FoundationaLLM.AIModel.dll Contains a reference to an AIModel public class AIModelReference : ResourceReference Inheritance object ResourceReference AIModelReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the data source. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.AIModel.Models.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Models.html",
    "title": "Namespace FoundationaLLM.AIModel.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AIModel.Models Classes AIModelReference Contains a reference to an AIModel"
  },
  "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.AIModelResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.AIModelResourceProviderService.html",
    "title": "Class AIModelResourceProviderService | FoundationaLLM",
    "summary": "Class AIModelResourceProviderService Namespace FoundationaLLM.AIModel.ResourceProviders Assembly FoundationaLLM.AIModel.dll Implements the FoundationaLLM.AIModel resource provider. public class AIModelResourceProviderService : ResourceProviderServiceBase<AIModelReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AIModelReference> AIModelResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AIModelReference>._resourceReferenceStore ResourceProviderServiceBase<AIModelReference>._serviceProvider ResourceProviderServiceBase<AIModelReference>._authorizationServiceClient ResourceProviderServiceBase<AIModelReference>._storageService ResourceProviderServiceBase<AIModelReference>._eventService ResourceProviderServiceBase<AIModelReference>._resourceValidatorFactory ResourceProviderServiceBase<AIModelReference>._validator ResourceProviderServiceBase<AIModelReference>._logger ResourceProviderServiceBase<AIModelReference>._instanceSettings ResourceProviderServiceBase<AIModelReference>._storageContainerName ResourceProviderServiceBase<AIModelReference>._serializerSettings ResourceProviderServiceBase<AIModelReference>.Name ResourceProviderServiceBase<AIModelReference>.IsInitialized ResourceProviderServiceBase<AIModelReference>.InitializationTask ResourceProviderServiceBase<AIModelReference>.AllowedResourceTypes ResourceProviderServiceBase<AIModelReference>.StorageAccountName ResourceProviderServiceBase<AIModelReference>.StorageContainerName ResourceProviderServiceBase<AIModelReference>.Initialize() ResourceProviderServiceBase<AIModelReference>.WaitForInitialization() ResourceProviderServiceBase<AIModelReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AIModelReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AIModelReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AIModelReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AIModelReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<AIModelReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<AIModelReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AIModelReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<AIModelReference>.HandleCacheResetCommand() ResourceProviderServiceBase<AIModelReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<AIModelReference>.GetResourceProviderState() ResourceProviderServiceBase<AIModelReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AIModelReference, bool, Task<T>>) ResourceProviderServiceBase<AIModelReference>.LoadResource<T>(AIModelReference) ResourceProviderServiceBase<AIModelReference>.LoadResource<T>(string) ResourceProviderServiceBase<AIModelReference>.CreateResource<T>(AIModelReference, T) ResourceProviderServiceBase<AIModelReference>.CreateResource(AIModelReference, Stream, string) ResourceProviderServiceBase<AIModelReference>.CreateResources<T1, T2>(AIModelReference, T1, AIModelReference, T2) ResourceProviderServiceBase<AIModelReference>.SaveResource<T>(AIModelReference, T) ResourceProviderServiceBase<AIModelReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<AIModelReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<AIModelReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<AIModelReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<AIModelReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AIModelReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<AIModelReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<AIModelReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AIModelReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<AIModelReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<AIModelReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<AIModelReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<AIModelReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AIModelResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.AIModel resource provider. public AIModelResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.AIModel.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AIModel.ResourceProviders Classes AIModelResourceProviderService Implements the FoundationaLLM.AIModel resource provider."
  },
  "api/dotnet/FoundationaLLM.AIModel.Validation.AIModelBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Validation.AIModelBaseValidator.html",
    "title": "Class AIModelBaseValidator | FoundationaLLM",
    "summary": "Class AIModelBaseValidator Namespace FoundationaLLM.AIModel.Validation Assembly FoundationaLLM.AIModel.dll Validator for the AIModelBase model. public class AIModelBaseValidator : AbstractValidator<AIModelBase>, IValidator<AIModelBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AIModelBase> AIModelBaseValidator Implements IValidator<AIModelBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AIModelBase>.Validate(AIModelBase) AbstractValidator<AIModelBase>.ValidateAsync(AIModelBase, CancellationToken) AbstractValidator<AIModelBase>.Validate(ValidationContext<AIModelBase>) AbstractValidator<AIModelBase>.ValidateAsync(ValidationContext<AIModelBase>, CancellationToken) AbstractValidator<AIModelBase>.CreateDescriptor() AbstractValidator<AIModelBase>.RuleFor<TProperty>(Expression<Func<AIModelBase, TProperty>>) AbstractValidator<AIModelBase>.Transform<TProperty, TTransformed>(Expression<Func<AIModelBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AIModelBase>.Transform<TProperty, TTransformed>(Expression<Func<AIModelBase, TProperty>>, Func<AIModelBase, TProperty, TTransformed>) AbstractValidator<AIModelBase>.RuleForEach<TElement>(Expression<Func<AIModelBase, IEnumerable<TElement>>>) AbstractValidator<AIModelBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AIModelBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AIModelBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AIModelBase, IEnumerable<TElement>>>, Func<AIModelBase, TElement, TTransformed>) AbstractValidator<AIModelBase>.RuleSet(string, Action) AbstractValidator<AIModelBase>.When(Func<AIModelBase, bool>, Action) AbstractValidator<AIModelBase>.When(Func<AIModelBase, ValidationContext<AIModelBase>, bool>, Action) AbstractValidator<AIModelBase>.Unless(Func<AIModelBase, bool>, Action) AbstractValidator<AIModelBase>.Unless(Func<AIModelBase, ValidationContext<AIModelBase>, bool>, Action) AbstractValidator<AIModelBase>.WhenAsync(Func<AIModelBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.WhenAsync(Func<AIModelBase, ValidationContext<AIModelBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.UnlessAsync(Func<AIModelBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.UnlessAsync(Func<AIModelBase, ValidationContext<AIModelBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AIModelBase>.Include(IValidator<AIModelBase>) AbstractValidator<AIModelBase>.Include<TValidator>(Func<AIModelBase, TValidator>) AbstractValidator<AIModelBase>.GetEnumerator() AbstractValidator<AIModelBase>.EnsureInstanceNotNull(object) AbstractValidator<AIModelBase>.PreValidate(ValidationContext<AIModelBase>, ValidationResult) AbstractValidator<AIModelBase>.RaiseValidationException(ValidationContext<AIModelBase>, ValidationResult) AbstractValidator<AIModelBase>.OnRuleAdded(IValidationRule<AIModelBase>) AbstractValidator<AIModelBase>.CascadeMode AbstractValidator<AIModelBase>.ClassLevelCascadeMode AbstractValidator<AIModelBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AIModelBaseValidator() Configures the validation rules for the FoundationaLLM.AIModel model. public AIModelBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.AIModel.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.Validation.html",
    "title": "Namespace FoundationaLLM.AIModel.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AIModel.Validation Classes AIModelBaseValidator Validator for the AIModelBase model."
  },
  "api/dotnet/FoundationaLLM.AIModel.html": {
    "href": "api/dotnet/FoundationaLLM.AIModel.html",
    "title": "Namespace FoundationaLLM.AIModel | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AIModel Namespaces FoundationaLLM.AIModel.Models FoundationaLLM.AIModel.ResourceProviders FoundationaLLM.AIModel.Validation"
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReference.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.AgentReference.html",
    "title": "Class AgentReference | FoundationaLLM",
    "summary": "Class AgentReference Namespace FoundationaLLM.Agent.Models.Resources Assembly FoundationaLLM.Agent.dll Provides details about an agent. public class AgentReference : ResourceReference Inheritance object ResourceReference AgentReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the agent. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Agent.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Agent.Models.Resources | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Agent.Models.Resources Classes AgentReference Provides details about an agent."
  },
  "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.ResourceProviders.AgentResourceProviderService.html",
    "title": "Class AgentResourceProviderService | FoundationaLLM",
    "summary": "Class AgentResourceProviderService Namespace FoundationaLLM.Agent.ResourceProviders Assembly FoundationaLLM.Agent.dll Implements the FoundationaLLM.Agent resource provider. public class AgentResourceProviderService : ResourceProviderServiceBase<AgentReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AgentReference> AgentResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AgentReference>._resourceReferenceStore ResourceProviderServiceBase<AgentReference>._serviceProvider ResourceProviderServiceBase<AgentReference>._authorizationServiceClient ResourceProviderServiceBase<AgentReference>._storageService ResourceProviderServiceBase<AgentReference>._eventService ResourceProviderServiceBase<AgentReference>._resourceValidatorFactory ResourceProviderServiceBase<AgentReference>._validator ResourceProviderServiceBase<AgentReference>._logger ResourceProviderServiceBase<AgentReference>._instanceSettings ResourceProviderServiceBase<AgentReference>._storageContainerName ResourceProviderServiceBase<AgentReference>._serializerSettings ResourceProviderServiceBase<AgentReference>.Name ResourceProviderServiceBase<AgentReference>.IsInitialized ResourceProviderServiceBase<AgentReference>.InitializationTask ResourceProviderServiceBase<AgentReference>.AllowedResourceTypes ResourceProviderServiceBase<AgentReference>.StorageAccountName ResourceProviderServiceBase<AgentReference>.StorageContainerName ResourceProviderServiceBase<AgentReference>.Initialize() ResourceProviderServiceBase<AgentReference>.WaitForInitialization() ResourceProviderServiceBase<AgentReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AgentReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AgentReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AgentReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AgentReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<AgentReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<AgentReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AgentReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<AgentReference>.HandleCacheResetCommand() ResourceProviderServiceBase<AgentReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<AgentReference>.GetResourceProviderState() ResourceProviderServiceBase<AgentReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AgentReference, bool, Task<T>>) ResourceProviderServiceBase<AgentReference>.LoadResource<T>(AgentReference) ResourceProviderServiceBase<AgentReference>.LoadResource<T>(string) ResourceProviderServiceBase<AgentReference>.CreateResource<T>(AgentReference, T) ResourceProviderServiceBase<AgentReference>.CreateResource(AgentReference, Stream, string) ResourceProviderServiceBase<AgentReference>.CreateResources<T1, T2>(AgentReference, T1, AgentReference, T2) ResourceProviderServiceBase<AgentReference>.SaveResource<T>(AgentReference, T) ResourceProviderServiceBase<AgentReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<AgentReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<AgentReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<AgentReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<AgentReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AgentReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<AgentReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<AgentReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AgentReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<AgentReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<AgentReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<AgentReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<AgentReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IAzureCosmosDBService, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Agent resource provider. public AgentResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureCosmosDBService cosmosDBService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService providing Cosmos DB services. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Agent.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Agent.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Agent.ResourceProviders Classes AgentResourceProviderService Implements the FoundationaLLM.Agent resource provider."
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.AgentBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.AgentBaseValidator.html",
    "title": "Class AgentBaseValidator | FoundationaLLM",
    "summary": "Class AgentBaseValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the AgentBase model. public class AgentBaseValidator : AbstractValidator<AgentBase>, IValidator<AgentBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AgentBase> AgentBaseValidator Implements IValidator<AgentBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AgentBase>.Validate(AgentBase) AbstractValidator<AgentBase>.ValidateAsync(AgentBase, CancellationToken) AbstractValidator<AgentBase>.Validate(ValidationContext<AgentBase>) AbstractValidator<AgentBase>.ValidateAsync(ValidationContext<AgentBase>, CancellationToken) AbstractValidator<AgentBase>.CreateDescriptor() AbstractValidator<AgentBase>.RuleFor<TProperty>(Expression<Func<AgentBase, TProperty>>) AbstractValidator<AgentBase>.Transform<TProperty, TTransformed>(Expression<Func<AgentBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AgentBase>.Transform<TProperty, TTransformed>(Expression<Func<AgentBase, TProperty>>, Func<AgentBase, TProperty, TTransformed>) AbstractValidator<AgentBase>.RuleForEach<TElement>(Expression<Func<AgentBase, IEnumerable<TElement>>>) AbstractValidator<AgentBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AgentBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AgentBase>.TransformForEach<TElement, TTransformed>(Expression<Func<AgentBase, IEnumerable<TElement>>>, Func<AgentBase, TElement, TTransformed>) AbstractValidator<AgentBase>.RuleSet(string, Action) AbstractValidator<AgentBase>.When(Func<AgentBase, bool>, Action) AbstractValidator<AgentBase>.When(Func<AgentBase, ValidationContext<AgentBase>, bool>, Action) AbstractValidator<AgentBase>.Unless(Func<AgentBase, bool>, Action) AbstractValidator<AgentBase>.Unless(Func<AgentBase, ValidationContext<AgentBase>, bool>, Action) AbstractValidator<AgentBase>.WhenAsync(Func<AgentBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.WhenAsync(Func<AgentBase, ValidationContext<AgentBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.UnlessAsync(Func<AgentBase, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.UnlessAsync(Func<AgentBase, ValidationContext<AgentBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<AgentBase>.Include(IValidator<AgentBase>) AbstractValidator<AgentBase>.Include<TValidator>(Func<AgentBase, TValidator>) AbstractValidator<AgentBase>.GetEnumerator() AbstractValidator<AgentBase>.EnsureInstanceNotNull(object) AbstractValidator<AgentBase>.PreValidate(ValidationContext<AgentBase>, ValidationResult) AbstractValidator<AgentBase>.RaiseValidationException(ValidationContext<AgentBase>, ValidationResult) AbstractValidator<AgentBase>.OnRuleAdded(IValidationRule<AgentBase>) AbstractValidator<AgentBase>.CascadeMode AbstractValidator<AgentBase>.ClassLevelCascadeMode AbstractValidator<AgentBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentBaseValidator() Configures the validation rules for the AgentBase model. public AgentBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.KnowledgeManagementAgentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.KnowledgeManagementAgentValidator.html",
    "title": "Class KnowledgeManagementAgentValidator | FoundationaLLM",
    "summary": "Class KnowledgeManagementAgentValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the KnowledgeManagementAgent model. public class KnowledgeManagementAgentValidator : AbstractValidator<KnowledgeManagementAgent>, IValidator<KnowledgeManagementAgent>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<KnowledgeManagementAgent> KnowledgeManagementAgentValidator Implements IValidator<KnowledgeManagementAgent> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<KnowledgeManagementAgent>.Validate(KnowledgeManagementAgent) AbstractValidator<KnowledgeManagementAgent>.ValidateAsync(KnowledgeManagementAgent, CancellationToken) AbstractValidator<KnowledgeManagementAgent>.Validate(ValidationContext<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.ValidateAsync(ValidationContext<KnowledgeManagementAgent>, CancellationToken) AbstractValidator<KnowledgeManagementAgent>.CreateDescriptor() AbstractValidator<KnowledgeManagementAgent>.RuleFor<TProperty>(Expression<Func<KnowledgeManagementAgent, TProperty>>) AbstractValidator<KnowledgeManagementAgent>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeManagementAgent, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeManagementAgent, TProperty>>, Func<KnowledgeManagementAgent, TProperty, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.RuleForEach<TElement>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>) AbstractValidator<KnowledgeManagementAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeManagementAgent, IEnumerable<TElement>>>, Func<KnowledgeManagementAgent, TElement, TTransformed>) AbstractValidator<KnowledgeManagementAgent>.RuleSet(string, Action) AbstractValidator<KnowledgeManagementAgent>.When(Func<KnowledgeManagementAgent, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.When(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.Unless(Func<KnowledgeManagementAgent, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.Unless(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, bool>, Action) AbstractValidator<KnowledgeManagementAgent>.WhenAsync(Func<KnowledgeManagementAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.WhenAsync(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.UnlessAsync(Func<KnowledgeManagementAgent, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.UnlessAsync(Func<KnowledgeManagementAgent, ValidationContext<KnowledgeManagementAgent>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeManagementAgent>.Include(IValidator<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.Include<TValidator>(Func<KnowledgeManagementAgent, TValidator>) AbstractValidator<KnowledgeManagementAgent>.GetEnumerator() AbstractValidator<KnowledgeManagementAgent>.EnsureInstanceNotNull(object) AbstractValidator<KnowledgeManagementAgent>.PreValidate(ValidationContext<KnowledgeManagementAgent>, ValidationResult) AbstractValidator<KnowledgeManagementAgent>.RaiseValidationException(ValidationContext<KnowledgeManagementAgent>, ValidationResult) AbstractValidator<KnowledgeManagementAgent>.OnRuleAdded(IValidationRule<KnowledgeManagementAgent>) AbstractValidator<KnowledgeManagementAgent>.CascadeMode AbstractValidator<KnowledgeManagementAgent>.ClassLevelCascadeMode AbstractValidator<KnowledgeManagementAgent>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementAgentValidator() Configures the validation rules for the KnowledgeManagementAgent model. public KnowledgeManagementAgentValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.ToolValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.ToolValidator.html",
    "title": "Class ToolValidator | FoundationaLLM",
    "summary": "Class ToolValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the Tool model. public class ToolValidator : AbstractValidator<Tool>, IValidator<Tool>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Tool> ToolValidator Implements IValidator<Tool> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Tool>.Validate(Tool) AbstractValidator<Tool>.ValidateAsync(Tool, CancellationToken) AbstractValidator<Tool>.Validate(ValidationContext<Tool>) AbstractValidator<Tool>.ValidateAsync(ValidationContext<Tool>, CancellationToken) AbstractValidator<Tool>.CreateDescriptor() AbstractValidator<Tool>.RuleFor<TProperty>(Expression<Func<Tool, TProperty>>) AbstractValidator<Tool>.Transform<TProperty, TTransformed>(Expression<Func<Tool, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Tool>.Transform<TProperty, TTransformed>(Expression<Func<Tool, TProperty>>, Func<Tool, TProperty, TTransformed>) AbstractValidator<Tool>.RuleForEach<TElement>(Expression<Func<Tool, IEnumerable<TElement>>>) AbstractValidator<Tool>.TransformForEach<TElement, TTransformed>(Expression<Func<Tool, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Tool>.TransformForEach<TElement, TTransformed>(Expression<Func<Tool, IEnumerable<TElement>>>, Func<Tool, TElement, TTransformed>) AbstractValidator<Tool>.RuleSet(string, Action) AbstractValidator<Tool>.When(Func<Tool, bool>, Action) AbstractValidator<Tool>.When(Func<Tool, ValidationContext<Tool>, bool>, Action) AbstractValidator<Tool>.Unless(Func<Tool, bool>, Action) AbstractValidator<Tool>.Unless(Func<Tool, ValidationContext<Tool>, bool>, Action) AbstractValidator<Tool>.WhenAsync(Func<Tool, CancellationToken, Task<bool>>, Action) AbstractValidator<Tool>.WhenAsync(Func<Tool, ValidationContext<Tool>, CancellationToken, Task<bool>>, Action) AbstractValidator<Tool>.UnlessAsync(Func<Tool, CancellationToken, Task<bool>>, Action) AbstractValidator<Tool>.UnlessAsync(Func<Tool, ValidationContext<Tool>, CancellationToken, Task<bool>>, Action) AbstractValidator<Tool>.Include(IValidator<Tool>) AbstractValidator<Tool>.Include<TValidator>(Func<Tool, TValidator>) AbstractValidator<Tool>.GetEnumerator() AbstractValidator<Tool>.EnsureInstanceNotNull(object) AbstractValidator<Tool>.PreValidate(ValidationContext<Tool>, ValidationResult) AbstractValidator<Tool>.RaiseValidationException(ValidationContext<Tool>, ValidationResult) AbstractValidator<Tool>.OnRuleAdded(IValidationRule<Tool>) AbstractValidator<Tool>.CascadeMode AbstractValidator<Tool>.ClassLevelCascadeMode AbstractValidator<Tool>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ToolValidator() Configures the validation rules for the Tool model. public ToolValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.WorkflowValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.WorkflowValidator.html",
    "title": "Class WorkflowValidator | FoundationaLLM",
    "summary": "Class WorkflowValidator Namespace FoundationaLLM.Agent.Validation.Metadata Assembly FoundationaLLM.Agent.dll Validator for the Workflow model. public class WorkflowValidator : AbstractValidator<Workflow>, IValidator<Workflow>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<Workflow> WorkflowValidator Implements IValidator<Workflow> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<Workflow>.Validate(Workflow) AbstractValidator<Workflow>.ValidateAsync(Workflow, CancellationToken) AbstractValidator<Workflow>.Validate(ValidationContext<Workflow>) AbstractValidator<Workflow>.ValidateAsync(ValidationContext<Workflow>, CancellationToken) AbstractValidator<Workflow>.CreateDescriptor() AbstractValidator<Workflow>.RuleFor<TProperty>(Expression<Func<Workflow, TProperty>>) AbstractValidator<Workflow>.Transform<TProperty, TTransformed>(Expression<Func<Workflow, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<Workflow>.Transform<TProperty, TTransformed>(Expression<Func<Workflow, TProperty>>, Func<Workflow, TProperty, TTransformed>) AbstractValidator<Workflow>.RuleForEach<TElement>(Expression<Func<Workflow, IEnumerable<TElement>>>) AbstractValidator<Workflow>.TransformForEach<TElement, TTransformed>(Expression<Func<Workflow, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<Workflow>.TransformForEach<TElement, TTransformed>(Expression<Func<Workflow, IEnumerable<TElement>>>, Func<Workflow, TElement, TTransformed>) AbstractValidator<Workflow>.RuleSet(string, Action) AbstractValidator<Workflow>.When(Func<Workflow, bool>, Action) AbstractValidator<Workflow>.When(Func<Workflow, ValidationContext<Workflow>, bool>, Action) AbstractValidator<Workflow>.Unless(Func<Workflow, bool>, Action) AbstractValidator<Workflow>.Unless(Func<Workflow, ValidationContext<Workflow>, bool>, Action) AbstractValidator<Workflow>.WhenAsync(Func<Workflow, CancellationToken, Task<bool>>, Action) AbstractValidator<Workflow>.WhenAsync(Func<Workflow, ValidationContext<Workflow>, CancellationToken, Task<bool>>, Action) AbstractValidator<Workflow>.UnlessAsync(Func<Workflow, CancellationToken, Task<bool>>, Action) AbstractValidator<Workflow>.UnlessAsync(Func<Workflow, ValidationContext<Workflow>, CancellationToken, Task<bool>>, Action) AbstractValidator<Workflow>.Include(IValidator<Workflow>) AbstractValidator<Workflow>.Include<TValidator>(Func<Workflow, TValidator>) AbstractValidator<Workflow>.GetEnumerator() AbstractValidator<Workflow>.EnsureInstanceNotNull(object) AbstractValidator<Workflow>.PreValidate(ValidationContext<Workflow>, ValidationResult) AbstractValidator<Workflow>.RaiseValidationException(ValidationContext<Workflow>, ValidationResult) AbstractValidator<Workflow>.OnRuleAdded(IValidationRule<Workflow>) AbstractValidator<Workflow>.CascadeMode AbstractValidator<Workflow>.ClassLevelCascadeMode AbstractValidator<Workflow>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors WorkflowValidator() Configures the validation rules for the Workflow model. public WorkflowValidator()"
  },
  "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.Validation.Metadata.html",
    "title": "Namespace FoundationaLLM.Agent.Validation.Metadata | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Agent.Validation.Metadata Classes AgentBaseValidator Validator for the AgentBase model. KnowledgeManagementAgentValidator Validator for the KnowledgeManagementAgent model. ToolValidator Validator for the Tool model. WorkflowValidator Validator for the Workflow model."
  },
  "api/dotnet/FoundationaLLM.Agent.html": {
    "href": "api/dotnet/FoundationaLLM.Agent.html",
    "title": "Namespace FoundationaLLM.Agent | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Agent Namespaces FoundationaLLM.Agent.Models.Resources FoundationaLLM.Agent.ResourceProviders FoundationaLLM.Agent.Validation.Metadata"
  },
  "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.AttachmentResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.AttachmentResourceProviderService.html",
    "title": "Class AttachmentResourceProviderService | FoundationaLLM",
    "summary": "Class AttachmentResourceProviderService Namespace FoundationaLLM.Attachment.ResourceProviders Assembly FoundationaLLM.Attachment.dll Implements the FoundationaLLM.Attachment resource provider. public class AttachmentResourceProviderService : ResourceProviderServiceBase<AttachmentReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<AttachmentReference> AttachmentResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<AttachmentReference>._resourceReferenceStore ResourceProviderServiceBase<AttachmentReference>._serviceProvider ResourceProviderServiceBase<AttachmentReference>._authorizationServiceClient ResourceProviderServiceBase<AttachmentReference>._storageService ResourceProviderServiceBase<AttachmentReference>._eventService ResourceProviderServiceBase<AttachmentReference>._resourceValidatorFactory ResourceProviderServiceBase<AttachmentReference>._validator ResourceProviderServiceBase<AttachmentReference>._logger ResourceProviderServiceBase<AttachmentReference>._instanceSettings ResourceProviderServiceBase<AttachmentReference>._storageContainerName ResourceProviderServiceBase<AttachmentReference>._serializerSettings ResourceProviderServiceBase<AttachmentReference>.Name ResourceProviderServiceBase<AttachmentReference>.IsInitialized ResourceProviderServiceBase<AttachmentReference>.InitializationTask ResourceProviderServiceBase<AttachmentReference>.AllowedResourceTypes ResourceProviderServiceBase<AttachmentReference>.StorageAccountName ResourceProviderServiceBase<AttachmentReference>.StorageContainerName ResourceProviderServiceBase<AttachmentReference>.Initialize() ResourceProviderServiceBase<AttachmentReference>.WaitForInitialization() ResourceProviderServiceBase<AttachmentReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AttachmentReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.UpsertResourceAsync(ResourcePath, string, ResourceProviderFormFile, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AttachmentReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AttachmentReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<AttachmentReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<AttachmentReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<AttachmentReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<AttachmentReference>.HandleCacheResetCommand() ResourceProviderServiceBase<AttachmentReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<AttachmentReference>.GetResourceProviderState() ResourceProviderServiceBase<AttachmentReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AttachmentReference, bool, Task<T>>) ResourceProviderServiceBase<AttachmentReference>.LoadResource<T>(AttachmentReference) ResourceProviderServiceBase<AttachmentReference>.LoadResource<T>(string) ResourceProviderServiceBase<AttachmentReference>.CreateResource<T>(AttachmentReference, T) ResourceProviderServiceBase<AttachmentReference>.CreateResource(AttachmentReference, Stream, string) ResourceProviderServiceBase<AttachmentReference>.CreateResources<T1, T2>(AttachmentReference, T1, AttachmentReference, T2) ResourceProviderServiceBase<AttachmentReference>.SaveResource<T>(AttachmentReference, T) ResourceProviderServiceBase<AttachmentReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<AttachmentReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<AttachmentReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<AttachmentReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<AttachmentReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<AttachmentReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<AttachmentReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<AttachmentReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<AttachmentReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<AttachmentReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<AttachmentReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<AttachmentReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<AttachmentReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AttachmentResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IAzureCosmosDBService, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Attachment resource provider. public AttachmentResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureCosmosDBService cosmosDBService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService providing Cosmos DB services. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object?>, UnifiedUserIdentity) The internal implementation of UpdateResourcePropertiesAsync. Must be overridden in derived classes. protected override Task<TResult> UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, Dictionary<string, object?> propertyValues, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. propertyValues Dictionary<string, object> The dictionary with propery names and values to update. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> Type Parameters T The type of the resource being updated. TResult The type of the result returned. UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Attachment.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Attachment.ResourceProviders Classes AttachmentResourceProviderService Implements the FoundationaLLM.Attachment resource provider."
  },
  "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentFileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentFileValidator.html",
    "title": "Class AttachmentFileValidator | FoundationaLLM",
    "summary": "Class AttachmentFileValidator Namespace FoundationaLLM.Attachment.Validation Assembly FoundationaLLM.Attachment.dll Validator for the AttachmentFile model. public class AttachmentFileValidator : AbstractValidator<AttachmentFile>, IValidator<AttachmentFile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AttachmentFile> AttachmentFileValidator Implements IValidator<AttachmentFile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AttachmentFile>.Validate(AttachmentFile) AbstractValidator<AttachmentFile>.ValidateAsync(AttachmentFile, CancellationToken) AbstractValidator<AttachmentFile>.Validate(ValidationContext<AttachmentFile>) AbstractValidator<AttachmentFile>.ValidateAsync(ValidationContext<AttachmentFile>, CancellationToken) AbstractValidator<AttachmentFile>.CreateDescriptor() AbstractValidator<AttachmentFile>.RuleFor<TProperty>(Expression<Func<AttachmentFile, TProperty>>) AbstractValidator<AttachmentFile>.Transform<TProperty, TTransformed>(Expression<Func<AttachmentFile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AttachmentFile>.Transform<TProperty, TTransformed>(Expression<Func<AttachmentFile, TProperty>>, Func<AttachmentFile, TProperty, TTransformed>) AbstractValidator<AttachmentFile>.RuleForEach<TElement>(Expression<Func<AttachmentFile, IEnumerable<TElement>>>) AbstractValidator<AttachmentFile>.TransformForEach<TElement, TTransformed>(Expression<Func<AttachmentFile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AttachmentFile>.TransformForEach<TElement, TTransformed>(Expression<Func<AttachmentFile, IEnumerable<TElement>>>, Func<AttachmentFile, TElement, TTransformed>) AbstractValidator<AttachmentFile>.RuleSet(string, Action) AbstractValidator<AttachmentFile>.When(Func<AttachmentFile, bool>, Action) AbstractValidator<AttachmentFile>.When(Func<AttachmentFile, ValidationContext<AttachmentFile>, bool>, Action) AbstractValidator<AttachmentFile>.Unless(Func<AttachmentFile, bool>, Action) AbstractValidator<AttachmentFile>.Unless(Func<AttachmentFile, ValidationContext<AttachmentFile>, bool>, Action) AbstractValidator<AttachmentFile>.WhenAsync(Func<AttachmentFile, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.WhenAsync(Func<AttachmentFile, ValidationContext<AttachmentFile>, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.UnlessAsync(Func<AttachmentFile, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.UnlessAsync(Func<AttachmentFile, ValidationContext<AttachmentFile>, CancellationToken, Task<bool>>, Action) AbstractValidator<AttachmentFile>.Include(IValidator<AttachmentFile>) AbstractValidator<AttachmentFile>.Include<TValidator>(Func<AttachmentFile, TValidator>) AbstractValidator<AttachmentFile>.GetEnumerator() AbstractValidator<AttachmentFile>.EnsureInstanceNotNull(object) AbstractValidator<AttachmentFile>.PreValidate(ValidationContext<AttachmentFile>, ValidationResult) AbstractValidator<AttachmentFile>.RaiseValidationException(ValidationContext<AttachmentFile>, ValidationResult) AbstractValidator<AttachmentFile>.OnRuleAdded(IValidationRule<AttachmentFile>) AbstractValidator<AttachmentFile>.CascadeMode AbstractValidator<AttachmentFile>.ClassLevelCascadeMode AbstractValidator<AttachmentFile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AttachmentFileValidator() Configures the validation rules for the AttachmentFile model. public AttachmentFileValidator()"
  },
  "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentValidator-1.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Validation.AttachmentValidator-1.html",
    "title": "Class AttachmentValidator<T> | FoundationaLLM",
    "summary": "Class AttachmentValidator<T> Namespace FoundationaLLM.Attachment.Validation Assembly FoundationaLLM.Attachment.dll Base validator for attachments. public class AttachmentValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : AttachmentFile Type Parameters T The type of attachment to validate. Inheritance object AbstractValidator<T> AttachmentValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.OnRuleAdded(IValidationRule<T>) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidConfigurationReference(AttachmentFile) Validates the value of a specified configuration reference. protected bool ValidConfigurationReference(AttachmentFile attachment) Parameters attachment AttachmentFile The attachment object being validated. Returns bool True if the value of the configuration reference is valid, False otherwise."
  },
  "api/dotnet/FoundationaLLM.Attachment.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.Validation.html",
    "title": "Namespace FoundationaLLM.Attachment.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Attachment.Validation Classes AttachmentFileValidator Validator for the AttachmentFile model. AttachmentValidator<T> Base validator for attachments."
  },
  "api/dotnet/FoundationaLLM.Attachment.html": {
    "href": "api/dotnet/FoundationaLLM.Attachment.html",
    "title": "Namespace FoundationaLLM.Attachment | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Attachment Namespaces FoundationaLLM.Attachment.ResourceProviders FoundationaLLM.Attachment.Validation"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.AuthorizeController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.AuthorizeController.html",
    "title": "Class AuthorizeController | FoundationaLLM",
    "summary": "Class AuthorizeController Namespace FoundationaLLM.Authorization.API.Controllers Assembly FoundationaLLM.Authorization.API.dll Provides methods for processing authorization requests. [Authorize(Policy = \"MicrosoftEntraIDNoScopes\")] [ApiController] [Route(\"instances/{instanceId}/authorize\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class AuthorizeController Inheritance object AuthorizeController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizeController(IAuthorizationCore) Provides methods for processing authorization requests. public AuthorizeController(IAuthorizationCore authorizationCore) Parameters authorizationCore IAuthorizationCore The IAuthorizationCore service used to process authorization requests. Methods ProcessAuthorizationRequest(string, ActionAuthorizationRequest) [HttpPost(Name = \"ProcessAuthorizationRequest\")] public IActionResult ProcessAuthorizationRequest(string instanceId, ActionAuthorizationRequest request) Parameters instanceId string request ActionAuthorizationRequest Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.RoleAssignmentsController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.RoleAssignmentsController.html",
    "title": "Class RoleAssignmentsController | FoundationaLLM",
    "summary": "Class RoleAssignmentsController Namespace FoundationaLLM.Authorization.API.Controllers Assembly FoundationaLLM.Authorization.API.dll Provides security endpoints. [Authorize(Policy = \"MicrosoftEntraIDNoScopes\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/roleassignments\")] public class RoleAssignmentsController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller RoleAssignmentsController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentsController(IAuthorizationCore) Provides security endpoints. public RoleAssignmentsController(IAuthorizationCore authorizationCore) Parameters authorizationCore IAuthorizationCore The IAuthorizationCore service used to process authorization requests. Methods AssignRole(string, RoleAssignmentCreateRequest) Assigns a role to an Entra ID user or group. [HttpPost] public Task<IActionResult> AssignRole(string instanceId, RoleAssignmentCreateRequest roleAssignmentCreateRequest) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentCreateRequest RoleAssignmentCreateRequest The role assignment create request. Returns Task<IActionResult> The role assignment result. GetRoleAssignments(string, RoleAssignmentQueryParameters) Returns a list of role assignments for the specified instance. [HttpPost(\"query\")] public IActionResult GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters Returns IActionResult The list of all role assignments for the specified instance. RevokeRoleAssignment(string, string) Revokes a role from an Entra ID user or group. [HttpDelete(\"{*roleAssignmentName}\")] public Task<IActionResult> RevokeRoleAssignment(string instanceId, string roleAssignmentName) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentName string The role assignment object identifier. Returns Task<IActionResult> The role assignment result."
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.SecretKeysController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.SecretKeysController.html",
    "title": "Class SecretKeysController | FoundationaLLM",
    "summary": "Class SecretKeysController Namespace FoundationaLLM.Authorization.API.Controllers Assembly FoundationaLLM.Authorization.API.dll Provides methods for processing secret keys requests. [Authorize(Policy = \"MicrosoftEntraIDNoScopes\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/secretkeys\")] public class SecretKeysController Inheritance object SecretKeysController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SecretKeysController(IAuthorizationCore) Provides methods for processing secret keys requests. public SecretKeysController(IAuthorizationCore authorizationCore) Parameters authorizationCore IAuthorizationCore The IAuthorizationCore service used to process secret keys requests. Methods DeleteSecretKey(string, string, string) [HttpDelete(\"{contextId}\")] public Task<IActionResult> DeleteSecretKey(string instanceId, string contextId, string secretKeyId) Parameters instanceId string contextId string secretKeyId string Returns Task<IActionResult> GetSecretKeys(string, string) [HttpGet(\"{contextId}\")] public IActionResult GetSecretKeys(string instanceId, string contextId) Parameters instanceId string contextId string Returns IActionResult UpsertSecretKey(string, SecretKey) [HttpPost] public Task<IActionResult> UpsertSecretKey(string instanceId, SecretKey secretKey) Parameters instanceId string secretKey SecretKey Returns Task<IActionResult> ValidateSecretKey(string, string, string) [HttpPost(\"{contextId}\")] public Task<IActionResult> ValidateSecretKey(string instanceId, string contextId, string secretKeyValue) Parameters instanceId string contextId string secretKeyValue string Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Authorization.API.Controllers Assembly FoundationaLLM.Authorization.API.dll Provides methods for checking the status of the service. [Authorize(Policy = \"MicrosoftEntraIDNoScopes\")] [ApiController] [Route(\"\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus() Returns OK if the requester is authenticated and allowed to execute requests against this service. [Route(\"instances/{instanceId}/auth-status\")] [HttpGet] public IActionResult GetAuthStatus() Returns IActionResult GetServiceStatus() Returns the status of the Core API service. [AllowAnonymous] [Route(\"status\")] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Authorization.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Authorization.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Authorization.API.Controllers Classes AuthorizeController Provides methods for processing authorization requests. RoleAssignmentsController Provides security endpoints. SecretKeysController Provides methods for processing secret keys requests. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.AuthorizationResourceProviderService.html",
    "title": "Class AuthorizationResourceProviderService | FoundationaLLM",
    "summary": "Class AuthorizationResourceProviderService Namespace FoundationaLLM.Authorization.ResourceProviders Assembly FoundationaLLM.Authorization.dll Implements the FoundationaLLM.Authorization resource provider. public class AuthorizationResourceProviderService : ResourceProviderServiceBase<ResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<ResourceReference> AuthorizationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<ResourceReference>._resourceReferenceStore ResourceProviderServiceBase<ResourceReference>._serviceProvider ResourceProviderServiceBase<ResourceReference>._authorizationServiceClient ResourceProviderServiceBase<ResourceReference>._storageService ResourceProviderServiceBase<ResourceReference>._eventService ResourceProviderServiceBase<ResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<ResourceReference>._validator ResourceProviderServiceBase<ResourceReference>._logger ResourceProviderServiceBase<ResourceReference>._instanceSettings ResourceProviderServiceBase<ResourceReference>._storageContainerName ResourceProviderServiceBase<ResourceReference>._serializerSettings ResourceProviderServiceBase<ResourceReference>.Name ResourceProviderServiceBase<ResourceReference>.IsInitialized ResourceProviderServiceBase<ResourceReference>.InitializationTask ResourceProviderServiceBase<ResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<ResourceReference>.StorageAccountName ResourceProviderServiceBase<ResourceReference>.StorageContainerName ResourceProviderServiceBase<ResourceReference>.Initialize() ResourceProviderServiceBase<ResourceReference>.WaitForInitialization() ResourceProviderServiceBase<ResourceReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<ResourceReference>.HandleCacheResetCommand() ResourceProviderServiceBase<ResourceReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderState() ResourceProviderServiceBase<ResourceReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(ResourceReference) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<ResourceReference>.CreateResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.CreateResource(ResourceReference, Stream, string) ResourceProviderServiceBase<ResourceReference>.CreateResources<T1, T2>(ResourceReference, T1, ResourceReference, T2) ResourceProviderServiceBase<ResourceReference>.SaveResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<ResourceReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<ResourceReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<ResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<ResourceReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Authorization resource provider. public AuthorizationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationServiceClient, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationServiceClient IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Authorization.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Authorization.ResourceProviders Classes AuthorizationResourceProviderService Implements the FoundationaLLM.Authorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.RoleAssignmentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.RoleAssignmentValidator.html",
    "title": "Class RoleAssignmentValidator | FoundationaLLM",
    "summary": "Class RoleAssignmentValidator Namespace FoundationaLLM.Authorization.Validation Assembly FoundationaLLM.Authorization.dll Validator for the RoleAssignment model. public class RoleAssignmentValidator : AbstractValidator<RoleAssignment>, IValidator<RoleAssignment>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<RoleAssignment> RoleAssignmentValidator Implements IValidator<RoleAssignment> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<RoleAssignment>.Validate(RoleAssignment) AbstractValidator<RoleAssignment>.ValidateAsync(RoleAssignment, CancellationToken) AbstractValidator<RoleAssignment>.Validate(ValidationContext<RoleAssignment>) AbstractValidator<RoleAssignment>.ValidateAsync(ValidationContext<RoleAssignment>, CancellationToken) AbstractValidator<RoleAssignment>.CreateDescriptor() AbstractValidator<RoleAssignment>.RuleFor<TProperty>(Expression<Func<RoleAssignment, TProperty>>) AbstractValidator<RoleAssignment>.Transform<TProperty, TTransformed>(Expression<Func<RoleAssignment, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<RoleAssignment>.Transform<TProperty, TTransformed>(Expression<Func<RoleAssignment, TProperty>>, Func<RoleAssignment, TProperty, TTransformed>) AbstractValidator<RoleAssignment>.RuleForEach<TElement>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>) AbstractValidator<RoleAssignment>.TransformForEach<TElement, TTransformed>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<RoleAssignment>.TransformForEach<TElement, TTransformed>(Expression<Func<RoleAssignment, IEnumerable<TElement>>>, Func<RoleAssignment, TElement, TTransformed>) AbstractValidator<RoleAssignment>.RuleSet(string, Action) AbstractValidator<RoleAssignment>.When(Func<RoleAssignment, bool>, Action) AbstractValidator<RoleAssignment>.When(Func<RoleAssignment, ValidationContext<RoleAssignment>, bool>, Action) AbstractValidator<RoleAssignment>.Unless(Func<RoleAssignment, bool>, Action) AbstractValidator<RoleAssignment>.Unless(Func<RoleAssignment, ValidationContext<RoleAssignment>, bool>, Action) AbstractValidator<RoleAssignment>.WhenAsync(Func<RoleAssignment, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.WhenAsync(Func<RoleAssignment, ValidationContext<RoleAssignment>, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.UnlessAsync(Func<RoleAssignment, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.UnlessAsync(Func<RoleAssignment, ValidationContext<RoleAssignment>, CancellationToken, Task<bool>>, Action) AbstractValidator<RoleAssignment>.Include(IValidator<RoleAssignment>) AbstractValidator<RoleAssignment>.Include<TValidator>(Func<RoleAssignment, TValidator>) AbstractValidator<RoleAssignment>.GetEnumerator() AbstractValidator<RoleAssignment>.EnsureInstanceNotNull(object) AbstractValidator<RoleAssignment>.PreValidate(ValidationContext<RoleAssignment>, ValidationResult) AbstractValidator<RoleAssignment>.RaiseValidationException(ValidationContext<RoleAssignment>, ValidationResult) AbstractValidator<RoleAssignment>.OnRuleAdded(IValidationRule<RoleAssignment>) AbstractValidator<RoleAssignment>.CascadeMode AbstractValidator<RoleAssignment>.ClassLevelCascadeMode AbstractValidator<RoleAssignment>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentValidator() Configured the validation rules for the RoleAssignment model. public RoleAssignmentValidator()"
  },
  "api/dotnet/FoundationaLLM.Authorization.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.Validation.html",
    "title": "Namespace FoundationaLLM.Authorization.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Authorization.Validation Classes RoleAssignmentValidator Validator for the RoleAssignment model."
  },
  "api/dotnet/FoundationaLLM.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Authorization.html",
    "title": "Namespace FoundationaLLM.Authorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Authorization Namespaces FoundationaLLM.Authorization.API.Controllers FoundationaLLM.Authorization.ResourceProviders FoundationaLLM.Authorization.Validation"
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Interfaces.IAuthorizationCore.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Interfaces.IAuthorizationCore.html",
    "title": "Interface IAuthorizationCore | FoundationaLLM",
    "summary": "Interface IAuthorizationCore Namespace FoundationaLLM.AuthorizationEngine.Interfaces Assembly FoundationaLLM.AuthorizationEngine.dll Defines the methods for authorization core. public interface IAuthorizationCore Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AllowAuthorizationRequestsProcessing(string, string) Checks if a specified security principal is allowed to process authorization requests. bool AllowAuthorizationRequestsProcessing(string instanceId, string securityPrincipalId) Parameters instanceId string The FoundationaLLM instance id. securityPrincipalId string The id of the security principal whose authorization is checked. Returns bool True if the security principal is allowed to process authorization requests. CreateRoleAssignment(string, RoleAssignmentCreateRequest) Creates a role assignment for a specified security principal. Task<RoleAssignmentOperationResult> CreateRoleAssignment(string instanceId, RoleAssignmentCreateRequest roleAssignmentCreateRequest) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentCreateRequest RoleAssignmentCreateRequest The role assignment create request. Returns Task<RoleAssignmentOperationResult> The role assignment result. DeleteRoleAssignment(string, string) Revokes a role from an Entra ID user or group. Task<RoleAssignmentOperationResult> DeleteRoleAssignment(string instanceId, string roleAssignmentName) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentName string The unique name of the role assignment to delete. Returns Task<RoleAssignmentOperationResult> The role assignment result. DeleteSecretKey(string, string, string) Deletes a specified secret key. Task DeleteSecretKey(string instanceId, string contextId, string secretKeyId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to delete. secretKeyId string The unique identifier of the secret key being deleted. Returns Task GetRoleAssignments(string, RoleAssignmentQueryParameters) Returns a list of role assignments for the specified instance and resource path. List<RoleAssignment> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. Returns List<RoleAssignment> The list of all role assignments for the specified instance. GetSecretKeys(string, string) Gets a list of SecretKey items that are associated with the specified instance and context. List<SecretKey> GetSecretKeys(string instanceId, string contextId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context for which the secret keys are retrieved. Returns List<SecretKey> A list of SecretKey items. Remarks Each consumer of secret keys should have a unique context identifier. For example, FoundationaLLM resource providers could use the resource object identifier as the context identifier. ProcessAuthorizationRequest(string, ActionAuthorizationRequest) Processes an authorization request. ActionAuthorizationResult ProcessAuthorizationRequest(string instanceId, ActionAuthorizationRequest authorizationRequest) Parameters instanceId string The FoundationaLLM instance id. authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest containing the details of the authorization request. Returns ActionAuthorizationResult An ActionAuthorizationResult indicating whether the requested authorization was successfull or not for each resource path. UpsertSecretKey(string, SecretKey) Creates a new or updates an existing SecretKey item. Task<string?> UpsertSecretKey(string instanceId, SecretKey secretKey) Parameters instanceId string The FoundationaLLM instance identifier. secretKey SecretKey The SecretKey item containing the properties of the secret key being created or updated. Returns Task<string> If the secret key is being created, it returns the secret value of the key. Otherwise, returns null. ValidateSecretKey(ClientSecretKey) Validates a secret key value. Task<SecretKeyValidationResult> ValidateSecretKey(ClientSecretKey clientSecretKey) Parameters clientSecretKey ClientSecretKey The ClientSecretKey containing the secret key value to validate. Returns Task<SecretKeyValidationResult> A SecretKeyValidationResult item with the results of the validation. Remarks Each valid secret key has an associated virtual identity that is returned in the VirtualIdentity property. It is the responsibility of the caller to use the virtual identity to authorize the request."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Interfaces.html",
    "title": "Namespace FoundationaLLM.AuthorizationEngine.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AuthorizationEngine.Interfaces Interfaces IAuthorizationCore Defines the methods for authorization core."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Middleware.AuthorizationAPIMiddleware.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Middleware.AuthorizationAPIMiddleware.html",
    "title": "Class AuthorizationAPIMiddleware | FoundationaLLM",
    "summary": "Class AuthorizationAPIMiddleware Namespace FoundationaLLM.AuthorizationEngine.Middleware Assembly FoundationaLLM.AuthorizationEngine.dll Middleware that retrieves context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method. public class AuthorizationAPIMiddleware Inheritance object AuthorizationAPIMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationAPIMiddleware(RequestDelegate) Initializes a new instance of the AuthorizationAPIMiddleware class. public AuthorizationAPIMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, IAuthorizationCore) Executes the middleware. public Task InvokeAsync(HttpContext context, IAuthorizationCore authorizationCore) Parameters context HttpContext The current HTTP request context. authorizationCore IAuthorizationCore Returns Task"
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Middleware.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Middleware.html",
    "title": "Namespace FoundationaLLM.AuthorizationEngine.Middleware | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AuthorizationEngine.Middleware Classes AuthorizationAPIMiddleware Middleware that retrieves context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.Configuration.AuthorizationCoreSettings.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.Configuration.AuthorizationCoreSettings.html",
    "title": "Class AuthorizationCoreSettings | FoundationaLLM",
    "summary": "Class AuthorizationCoreSettings Namespace FoundationaLLM.AuthorizationEngine.Models.Configuration Assembly FoundationaLLM.AuthorizationEngine.dll Configuration settings for the authorization core. public class AuthorizationCoreSettings Inheritance object AuthorizationCoreSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceIds The list of instance identifiers of the FoundationaLLM instances that are managed by the authorization core. public List<string> InstanceIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.AuthorizationEngine.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AuthorizationEngine.Models.Configuration Classes AuthorizationCoreSettings Configuration settings for the authorization core."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.PolicyAssignmentStore.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.PolicyAssignmentStore.html",
    "title": "Class PolicyAssignmentStore | FoundationaLLM",
    "summary": "Class PolicyAssignmentStore Namespace FoundationaLLM.AuthorizationEngine.Models Assembly FoundationaLLM.AuthorizationEngine.dll Models the content of the policy assignments store managed by the FoundationaLLM.Authorization resource provider. public class PolicyAssignmentStore Inheritance object PolicyAssignmentStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceId The unique identifier of the FoundationaLLM instance. [JsonPropertyName(\"instance_id\")] public required string InstanceId { get; set; } Property Value string PolicyAssignments The list of all policy assignments in the FoundationaLLM instance. [JsonPropertyName(\"policy_assignments\")] public required List<PolicyAssignment> PolicyAssignments { get; set; } Property Value List<PolicyAssignment> Methods EnrichPolicyAssignments() Loads calculated properties for all policy assignments. public void EnrichPolicyAssignments()"
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.RoleAssignmentStore.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.RoleAssignmentStore.html",
    "title": "Class RoleAssignmentStore | FoundationaLLM",
    "summary": "Class RoleAssignmentStore Namespace FoundationaLLM.AuthorizationEngine.Models Assembly FoundationaLLM.AuthorizationEngine.dll Models the content of the role assignments store managed by the FoundationaLLM.Authorization resource provider. public class RoleAssignmentStore Inheritance object RoleAssignmentStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceId The unique identifier of the FoundationaLLM instance. [JsonPropertyName(\"instance_id\")] public required string InstanceId { get; set; } Property Value string RoleAssignments The list of all role assignments in the FoundationaLLM instance. [JsonPropertyName(\"role_assignments\")] public required List<RoleAssignment> RoleAssignments { get; set; } Property Value List<RoleAssignment> Methods EnrichRoleAssignments() Loads calculated properties for all role assignments. public void EnrichRoleAssignments()"
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.SecretKeyStore.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.SecretKeyStore.html",
    "title": "Class SecretKeyStore | FoundationaLLM",
    "summary": "Class SecretKeyStore Namespace FoundationaLLM.AuthorizationEngine.Models Assembly FoundationaLLM.AuthorizationEngine.dll Models the content of the secret keys store managed by the FoundationaLLM.Authorization resource provider. public class SecretKeyStore Inheritance object SecretKeyStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceId The unique identifier of the FoundationaLLM instance. [JsonPropertyName(\"instance_id\")] public required string InstanceId { get; set; } Property Value string SecretKeys The lists of all secret keys in the FoundationaLLM instance grouped by the context identifier. [JsonPropertyName(\"secret_keys\")] public required Dictionary<string, List<PersistedSecretKey>> SecretKeys { get; set; } Property Value Dictionary<string, List<PersistedSecretKey>> Remarks The keys of the dictionary are the secret keys context identifiers."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Models.html",
    "title": "Namespace FoundationaLLM.AuthorizationEngine.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AuthorizationEngine.Models Namespaces FoundationaLLM.AuthorizationEngine.Models.Configuration Classes PolicyAssignmentStore Models the content of the policy assignments store managed by the FoundationaLLM.Authorization resource provider. RoleAssignmentStore Models the content of the role assignments store managed by the FoundationaLLM.Authorization resource provider. SecretKeyStore Models the content of the secret keys store managed by the FoundationaLLM.Authorization resource provider."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.AuthorizationCore.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.AuthorizationCore.html",
    "title": "Class AuthorizationCore | FoundationaLLM",
    "summary": "Class AuthorizationCore Namespace FoundationaLLM.AuthorizationEngine.Services Assembly FoundationaLLM.AuthorizationEngine.dll Implements the core authorization engine. public class AuthorizationCore : IAuthorizationCore Inheritance object AuthorizationCore Implements IAuthorizationCore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationCore(IOptions<AuthorizationCoreSettings>, IStorageService, IAzureKeyVaultService, IConfiguration, IResourceValidatorFactory, ILogger<AuthorizationCore>) Creates a new instance of the AuthorizationCore class. public AuthorizationCore(IOptions<AuthorizationCoreSettings> options, IStorageService storageService, IAzureKeyVaultService azureKeyVaultService, IConfiguration configuration, IResourceValidatorFactory resourceValidatorFactory, ILogger<AuthorizationCore> logger) Parameters options IOptions<AuthorizationCoreSettings> The options used to configure the authorization core. storageService IStorageService The IStorageService providing storage services. azureKeyVaultService IAzureKeyVaultService The IAzureKeyVaultService providing key vault services. configuration IConfiguration The application configuration values. resourceValidatorFactory IResourceValidatorFactory The resource validator factory used to create resource validators. logger ILogger<AuthorizationCore> The logger used for logging. Methods AllowAuthorizationRequestsProcessing(string, string) Checks if a specified security principal is allowed to process authorization requests. public bool AllowAuthorizationRequestsProcessing(string instanceId, string securityPrincipalId) Parameters instanceId string The FoundationaLLM instance id. securityPrincipalId string The id of the security principal whose authorization is checked. Returns bool True if the security principal is allowed to process authorization requests. CreateRoleAssignment(string, RoleAssignmentCreateRequest) Creates a role assignment for a specified security principal. public Task<RoleAssignmentOperationResult> CreateRoleAssignment(string instanceId, RoleAssignmentCreateRequest roleAssignmentCreateRequest) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentCreateRequest RoleAssignmentCreateRequest The role assignment create request. Returns Task<RoleAssignmentOperationResult> The role assignment result. DeleteRoleAssignment(string, string) Revokes a role from an Entra ID user or group. public Task<RoleAssignmentOperationResult> DeleteRoleAssignment(string instanceId, string roleAssignmentName) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentName string The unique name of the role assignment to delete. Returns Task<RoleAssignmentOperationResult> The role assignment result. DeleteSecretKey(string, string, string) Deletes a specified secret key. public Task DeleteSecretKey(string instanceId, string contextId, string secretKeyId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to delete. secretKeyId string The unique identifier of the secret key being deleted. Returns Task GetRoleAssignments(string, RoleAssignmentQueryParameters) Returns a list of role assignments for the specified instance and resource path. public List<RoleAssignment> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. Returns List<RoleAssignment> The list of all role assignments for the specified instance. GetSecretKeys(string, string) Gets a list of SecretKey items that are associated with the specified instance and context. public List<SecretKey> GetSecretKeys(string instanceId, string contextId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context for which the secret keys are retrieved. Returns List<SecretKey> A list of SecretKey items. Remarks Each consumer of secret keys should have a unique context identifier. For example, FoundationaLLM resource providers could use the resource object identifier as the context identifier. ProcessAuthorizationRequest(string, ActionAuthorizationRequest) Processes an authorization request. public ActionAuthorizationResult ProcessAuthorizationRequest(string instanceId, ActionAuthorizationRequest authorizationRequest) Parameters instanceId string The FoundationaLLM instance id. authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest containing the details of the authorization request. Returns ActionAuthorizationResult An ActionAuthorizationResult indicating whether the requested authorization was successfull or not for each resource path. UpsertSecretKey(string, SecretKey) Creates a new or updates an existing SecretKey item. public Task<string?> UpsertSecretKey(string instanceId, SecretKey secretKey) Parameters instanceId string The FoundationaLLM instance identifier. secretKey SecretKey The SecretKey item containing the properties of the secret key being created or updated. Returns Task<string> If the secret key is being created, it returns the secret value of the key. Otherwise, returns null. ValidateSecretKey(ClientSecretKey) Validates a secret key value. public Task<SecretKeyValidationResult> ValidateSecretKey(ClientSecretKey clientSecretKey) Parameters clientSecretKey ClientSecretKey The ClientSecretKey containing the secret key value to validate. Returns Task<SecretKeyValidationResult> A SecretKeyValidationResult item with the results of the validation. Remarks Each valid secret key has an associated virtual identity that is returned in the VirtualIdentity property. It is the responsibility of the caller to use the virtual identity to authorize the request."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.PolicyAssignmentCache.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.PolicyAssignmentCache.html",
    "title": "Class PolicyAssignmentCache | FoundationaLLM",
    "summary": "Class PolicyAssignmentCache Namespace FoundationaLLM.AuthorizationEngine.Services Assembly FoundationaLLM.AuthorizationEngine.dll In-memory cache for policy assignments. public class PolicyAssignmentCache Inheritance object PolicyAssignmentCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PolicyAssignmentCache(PolicyAssignmentStore) Creates a new instance of the PolicyAssignmentCache class. public PolicyAssignmentCache(PolicyAssignmentStore policyAssignmentStore) Parameters policyAssignmentStore PolicyAssignmentStore The policy assignment store containing the policy assignments used to initialize the cache. Methods GetPolicyAssignments(string) public List<PolicyAssignment> GetPolicyAssignments(string scope) Parameters scope string Returns List<PolicyAssignment>"
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.RoleAssignmentCache.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.RoleAssignmentCache.html",
    "title": "Class RoleAssignmentCache | FoundationaLLM",
    "summary": "Class RoleAssignmentCache Namespace FoundationaLLM.AuthorizationEngine.Services Assembly FoundationaLLM.AuthorizationEngine.dll In-memory cache for role assignments. public class RoleAssignmentCache Inheritance object RoleAssignmentCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RoleAssignmentCache(RoleAssignmentStore) Creates a new instance of the RoleAssignmentCache class. public RoleAssignmentCache(RoleAssignmentStore roleAssignmentStore) Parameters roleAssignmentStore RoleAssignmentStore The role assignment store containing the role assignments used to initialize the cache. Methods AddOrUpdateRoleAssignment(RoleAssignment) Adds or updates a role assignment in the cache. public void AddOrUpdateRoleAssignment(RoleAssignment roleAssignment) Parameters roleAssignment RoleAssignment The RoleAssignment to add or update in the cache. GetRoleAssignments(string) Gets all role assignments for a principal. public List<RoleAssignment> GetRoleAssignments(string principalId) Parameters principalId string The unique identifier of the principal for which role assignments are retrieved. Returns List<RoleAssignment> RemoveRoleAssignment(string) Removes a role assignment from the cache. public void RemoveRoleAssignment(string roleAssignmentId) Parameters roleAssignmentId string The unique identifier of the role assigment to be removed."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.SecretKeyCache.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.SecretKeyCache.html",
    "title": "Class SecretKeyCache | FoundationaLLM",
    "summary": "Class SecretKeyCache Namespace FoundationaLLM.AuthorizationEngine.Services Assembly FoundationaLLM.AuthorizationEngine.dll In-memory cache for secret keys. public class SecretKeyCache Inheritance object SecretKeyCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the SecretKeyCache class. Constructors SecretKeyCache(SecretKeyStore, IConfiguration, ILogger) In-memory cache for secret keys. public SecretKeyCache(SecretKeyStore secretKeyStore, IConfiguration configuration, ILogger logger) Parameters secretKeyStore SecretKeyStore The SecretKeyStore containing the data to initialize the cache. configuration IConfiguration The application configuration values. logger ILogger The ILogger used for logging. Remarks Initializes a new instance of the SecretKeyCache class. Methods AddOrUpdatePersistedSecretKey(PersistedSecretKey) Adds or updates a secret key in the cache. public void AddOrUpdatePersistedSecretKey(PersistedSecretKey persistedSecretKey) Parameters persistedSecretKey PersistedSecretKey The PersistedSecretKey to add or update in the cache. GetKeys(string) Gets the secret key associated with the specified context and key identifier. public List<PersistedSecretKey> GetKeys(string contextId) Parameters contextId string The context to which the secret keys belong. Returns List<PersistedSecretKey> RemovePersistedSecretKey(PersistedSecretKey) Adds or updates a secret key in the cache. public void RemovePersistedSecretKey(PersistedSecretKey persistedSecretKey) Parameters persistedSecretKey PersistedSecretKey The PersistedSecretKey to add or update in the cache. TryGetKey(string, string, out PersistedSecretKey) Gets the secret key associated with the specified context and key identifier. public bool TryGetKey(string contextId, string keyId, out PersistedSecretKey key) Parameters contextId string The context to which the secret key belongs. keyId string The identifier of the secret key. key PersistedSecretKey The PersistedSecretKey that is looked for. Returns bool true if the secret key was found, false otherwise."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Services.html",
    "title": "Namespace FoundationaLLM.AuthorizationEngine.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AuthorizationEngine.Services Classes AuthorizationCore Implements the core authorization engine. PolicyAssignmentCache In-memory cache for policy assignments. RoleAssignmentCache In-memory cache for role assignments. SecretKeyCache In-memory cache for secret keys."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Validation.ActionAuthorizationRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Validation.ActionAuthorizationRequestValidator.html",
    "title": "Class ActionAuthorizationRequestValidator | FoundationaLLM",
    "summary": "Class ActionAuthorizationRequestValidator Namespace FoundationaLLM.AuthorizationEngine.Validation Assembly FoundationaLLM.AuthorizationEngine.dll Validator for the ActionAuthorizationRequest model. public class ActionAuthorizationRequestValidator : AbstractValidator<ActionAuthorizationRequest>, IValidator<ActionAuthorizationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ActionAuthorizationRequest> ActionAuthorizationRequestValidator Implements IValidator<ActionAuthorizationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ActionAuthorizationRequest>.Validate(ActionAuthorizationRequest) AbstractValidator<ActionAuthorizationRequest>.ValidateAsync(ActionAuthorizationRequest, CancellationToken) AbstractValidator<ActionAuthorizationRequest>.Validate(ValidationContext<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.ValidateAsync(ValidationContext<ActionAuthorizationRequest>, CancellationToken) AbstractValidator<ActionAuthorizationRequest>.CreateDescriptor() AbstractValidator<ActionAuthorizationRequest>.RuleFor<TProperty>(Expression<Func<ActionAuthorizationRequest, TProperty>>) AbstractValidator<ActionAuthorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<ActionAuthorizationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<ActionAuthorizationRequest, TProperty>>, Func<ActionAuthorizationRequest, TProperty, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.RuleForEach<TElement>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>) AbstractValidator<ActionAuthorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<ActionAuthorizationRequest, IEnumerable<TElement>>>, Func<ActionAuthorizationRequest, TElement, TTransformed>) AbstractValidator<ActionAuthorizationRequest>.RuleSet(string, Action) AbstractValidator<ActionAuthorizationRequest>.When(Func<ActionAuthorizationRequest, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.When(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.Unless(Func<ActionAuthorizationRequest, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.Unless(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, bool>, Action) AbstractValidator<ActionAuthorizationRequest>.WhenAsync(Func<ActionAuthorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.WhenAsync(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.UnlessAsync(Func<ActionAuthorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.UnlessAsync(Func<ActionAuthorizationRequest, ValidationContext<ActionAuthorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<ActionAuthorizationRequest>.Include(IValidator<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.Include<TValidator>(Func<ActionAuthorizationRequest, TValidator>) AbstractValidator<ActionAuthorizationRequest>.GetEnumerator() AbstractValidator<ActionAuthorizationRequest>.EnsureInstanceNotNull(object) AbstractValidator<ActionAuthorizationRequest>.PreValidate(ValidationContext<ActionAuthorizationRequest>, ValidationResult) AbstractValidator<ActionAuthorizationRequest>.RaiseValidationException(ValidationContext<ActionAuthorizationRequest>, ValidationResult) AbstractValidator<ActionAuthorizationRequest>.OnRuleAdded(IValidationRule<ActionAuthorizationRequest>) AbstractValidator<ActionAuthorizationRequest>.CascadeMode AbstractValidator<ActionAuthorizationRequest>.ClassLevelCascadeMode AbstractValidator<ActionAuthorizationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ActionAuthorizationRequestValidator() Configures the validation rules for the ActionAuthorizationRequest model. public ActionAuthorizationRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.Validation.html",
    "title": "Namespace FoundationaLLM.AuthorizationEngine.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AuthorizationEngine.Validation Classes ActionAuthorizationRequestValidator Validator for the ActionAuthorizationRequest model."
  },
  "api/dotnet/FoundationaLLM.AuthorizationEngine.html": {
    "href": "api/dotnet/FoundationaLLM.AuthorizationEngine.html",
    "title": "Namespace FoundationaLLM.AuthorizationEngine | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AuthorizationEngine Namespaces FoundationaLLM.AuthorizationEngine.Interfaces FoundationaLLM.AuthorizationEngine.Middleware FoundationaLLM.AuthorizationEngine.Models FoundationaLLM.AuthorizationEngine.Services FoundationaLLM.AuthorizationEngine.Validation"
  },
  "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.AzureOpenAIResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.AzureOpenAIResourceProviderService.html",
    "title": "Class AzureOpenAIResourceProviderService | FoundationaLLM",
    "summary": "Class AzureOpenAIResourceProviderService Namespace FoundationaLLM.AzureOpenAI.ResourceProviders Assembly FoundationaLLM.AzureOpenAI.dll Implements the FoundationaLLM.AzureOpenAI resource provider. public class AzureOpenAIResourceProviderService : ResourceProviderServiceBase<ResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<ResourceReference> AzureOpenAIResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<ResourceReference>._resourceReferenceStore ResourceProviderServiceBase<ResourceReference>._serviceProvider ResourceProviderServiceBase<ResourceReference>._authorizationServiceClient ResourceProviderServiceBase<ResourceReference>._storageService ResourceProviderServiceBase<ResourceReference>._eventService ResourceProviderServiceBase<ResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<ResourceReference>._validator ResourceProviderServiceBase<ResourceReference>._logger ResourceProviderServiceBase<ResourceReference>._instanceSettings ResourceProviderServiceBase<ResourceReference>._storageContainerName ResourceProviderServiceBase<ResourceReference>._serializerSettings ResourceProviderServiceBase<ResourceReference>.Name ResourceProviderServiceBase<ResourceReference>.IsInitialized ResourceProviderServiceBase<ResourceReference>.InitializationTask ResourceProviderServiceBase<ResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<ResourceReference>.StorageAccountName ResourceProviderServiceBase<ResourceReference>.StorageContainerName ResourceProviderServiceBase<ResourceReference>.Initialize() ResourceProviderServiceBase<ResourceReference>.WaitForInitialization() ResourceProviderServiceBase<ResourceReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync(ResourcePath, string, ResourceProviderFormFile, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<ResourceReference>.HandleCacheResetCommand() ResourceProviderServiceBase<ResourceReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderState() ResourceProviderServiceBase<ResourceReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(ResourceReference) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<ResourceReference>.CreateResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.CreateResource(ResourceReference, Stream, string) ResourceProviderServiceBase<ResourceReference>.CreateResources<T1, T2>(ResourceReference, T1, ResourceReference, T2) ResourceProviderServiceBase<ResourceReference>.SaveResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<ResourceReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<ResourceReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<ResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<ResourceReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAIResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IEventService, IResourceValidatorFactory, IAzureCosmosDBService, IServiceProvider, ILogger<AzureOpenAIResourceProviderService>) Implements the FoundationaLLM.AzureOpenAI resource provider. public AzureOpenAIResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureCosmosDBService cosmosDBService, IServiceProvider serviceProvider, ILogger<AzureOpenAIResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService providing Cosmos DB services. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<AzureOpenAIResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) The internal implementation of ExecuteResourceActionAsync. Must be overridden in derived classes. protected override Task<TResult> ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, TAction actionPayload, UnifiedUserIdentity userIdentity) where T : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. actionPayload TAction The TAction object containing details about the action to be executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> A TResult object with the result of the action. Type Parameters T TAction TResult Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of ResourceExistsAsync. Must be overridden in derived classes. protected override Task<(bool Exists, bool Deleted)> ResourceExistsAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(bool Exists, bool Deleted)> A tuple indicating whether the resource exists or not and whether it is logically deleted or not. Type Parameters T The type of resource being checked. Remarks If a resource was logically deleted but not purged, this method will return True, indicating the existence of the resource. UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.AzureOpenAI.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.AzureOpenAI.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.AzureOpenAI.ResourceProviders Classes AzureOpenAIResourceProviderService Implements the FoundationaLLM.AzureOpenAI resource provider."
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.CodeController.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.CodeController.html",
    "title": "Class CodeController | FoundationaLLM",
    "summary": "Class CodeController Namespace FoundationaLLM.CSharpCodeSession.API.Controllers Assembly FoundationaLLM.CSharpCodeSession.API.dll [ApiController] [Route(\"[controller]\")] public class CodeController : ControllerBase Inheritance object ControllerBase CodeController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CodeController(ILogger<CodeController>) public CodeController(ILogger<CodeController> logger) Parameters logger ILogger<CodeController> Methods ExecuteCode(CodeExecutionRequest) [HttpPost(\"execute\")] public Task<IActionResult> ExecuteCode(CodeExecutionRequest request) Parameters request CodeExecutionRequest Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.FilesController.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.FilesController.html",
    "title": "Class FilesController | FoundationaLLM",
    "summary": "Class FilesController Namespace FoundationaLLM.CSharpCodeSession.API.Controllers Assembly FoundationaLLM.CSharpCodeSession.API.dll [ApiController] [Route(\"[controller]\")] public class FilesController : ControllerBase Inheritance object ControllerBase FilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors FilesController(ILogger<FilesController>) public FilesController(ILogger<FilesController> logger) Parameters logger ILogger<FilesController> Methods DeleteFiles() [HttpPost(\"delete\")] public IActionResult DeleteFiles() Returns IActionResult DownloadFile(DownloadFileRequest) [HttpPost(\"download\")] public IActionResult DownloadFile(DownloadFileRequest downloadFileRequest) Parameters downloadFileRequest DownloadFileRequest Returns IActionResult ListFiles() [HttpGet] public IActionResult ListFiles() Returns IActionResult UploadFile(IFormFile) [HttpPost(\"upload\")] public Task<IActionResult> UploadFile(IFormFile file) Parameters file IFormFile Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.CSharpCodeSession.API.Controllers Assembly FoundationaLLM.CSharpCodeSession.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StatusController() Provides methods for checking the status of the service. public StatusController() Methods Get() Returns the status of the Orchestration API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Orchestration API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Controllers.html",
    "title": "Namespace FoundationaLLM.CSharpCodeSession.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.CSharpCodeSession.API.Controllers Classes CodeController FilesController StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.CodeExecutionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.CodeExecutionRequest.html",
    "title": "Class CodeExecutionRequest | FoundationaLLM",
    "summary": "Class CodeExecutionRequest Namespace FoundationaLLM.CSharpCodeSession.API.Models Assembly FoundationaLLM.CSharpCodeSession.API.dll Represents a request to execute code. public class CodeExecutionRequest Inheritance object CodeExecutionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Code Gets or sets the code to be executed. [JsonPropertyName(\"code\")] public required string Code { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.CodeExecutionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.CodeExecutionResponse.html",
    "title": "Class CodeExecutionResponse | FoundationaLLM",
    "summary": "Class CodeExecutionResponse Namespace FoundationaLLM.CSharpCodeSession.API.Models Assembly FoundationaLLM.CSharpCodeSession.API.dll Represents the response from executing code. public class CodeExecutionResponse Inheritance object CodeExecutionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Output Gets or sets the output of the code execution. [JsonPropertyName(\"output\")] public required string Output { get; set; } Property Value string Results Gets or sets the results of the code execution. [JsonPropertyName(\"results\")] public required object Results { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.DownloadFileRequest.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.DownloadFileRequest.html",
    "title": "Class DownloadFileRequest | FoundationaLLM",
    "summary": "Class DownloadFileRequest Namespace FoundationaLLM.CSharpCodeSession.API.Models Assembly FoundationaLLM.CSharpCodeSession.API.dll Represents a request to download a file. public class DownloadFileRequest Inheritance object DownloadFileRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileName Gets or sets the file name to be downloaded. [JsonPropertyName(\"file_name\")] public required string FileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.ListFilesResponse.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.ListFilesResponse.html",
    "title": "Class ListFilesResponse | FoundationaLLM",
    "summary": "Class ListFilesResponse Namespace FoundationaLLM.CSharpCodeSession.API.Models Assembly FoundationaLLM.CSharpCodeSession.API.dll Represents the response for listing files. public class ListFilesResponse Inheritance object ListFilesResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Files Gets or sets the list of files. [JsonPropertyName(\"files\")] public List<string> Files { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.StatusResponse.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.StatusResponse.html",
    "title": "Class StatusResponse | FoundationaLLM",
    "summary": "Class StatusResponse Namespace FoundationaLLM.CSharpCodeSession.API.Models Assembly FoundationaLLM.CSharpCodeSession.API.dll Basic response model that indicates the status of an operation. public class StatusResponse Inheritance object StatusResponse Derived UploadFileResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Status Gets or sets the status of the upload operation. [JsonPropertyName(\"status\")] public string Status { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.UploadFileResponse.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.UploadFileResponse.html",
    "title": "Class UploadFileResponse | FoundationaLLM",
    "summary": "Class UploadFileResponse Namespace FoundationaLLM.CSharpCodeSession.API.Models Assembly FoundationaLLM.CSharpCodeSession.API.dll Response model for file upload. public class UploadFileResponse : StatusResponse Inheritance object StatusResponse UploadFileResponse Inherited Members StatusResponse.Status object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileName Gets or sets the name of the file that was uploaded. [JsonPropertyName(\"file_name\")] public required string FileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.Models.html",
    "title": "Namespace FoundationaLLM.CSharpCodeSession.API.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.CSharpCodeSession.API.Models Classes CodeExecutionRequest Represents a request to execute code. CodeExecutionResponse Represents the response from executing code. DownloadFileRequest Represents a request to download a file. ListFilesResponse Represents the response for listing files. StatusResponse Basic response model that indicates the status of an operation. UploadFileResponse Response model for file upload."
  },
  "api/dotnet/FoundationaLLM.CSharpCodeSession.API.html": {
    "href": "api/dotnet/FoundationaLLM.CSharpCodeSession.API.html",
    "title": "Namespace FoundationaLLM.CSharpCodeSession.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.CSharpCodeSession.API Namespaces FoundationaLLM.CSharpCodeSession.API.Controllers FoundationaLLM.CSharpCodeSession.API.Models"
  },
  "api/dotnet/FoundationaLLM.Client.Core.CoreClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.CoreClient.html",
    "title": "Class CoreClient | FoundationaLLM",
    "summary": "Class CoreClient Namespace FoundationaLLM.Client.Core Assembly FoundationaLLM.Client.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CoreClient : ICoreClient Inheritance object CoreClient Implements ICoreClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreClient() Constructor for mocking. This does not initialize the clients. public CoreClient() CoreClient(string, TokenCredential, string) Initializes a new instance of the CoreClient class with the specified Core API URI and TokenCredential. public CoreClient(string coreUri, TokenCredential credential, string instanceId) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) CoreClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the CoreClient class with the specified Core API URI, TokenCredential, and optional client settings. public CoreClient(string coreUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Methods AttachFileAndAskQuestionAsync(Stream, string, string, string, string, bool, string?, ChatSessionProperties?) Attaches a file to the completion request and sends a question to the agent using the Core API.If the useSession parameter is true, the method uses an existing session or creates a new chat session and optionally renames it. existing session public Task<Message> AttachFileAndAskQuestionAsync(Stream fileStream, string fileName, string contentType, string agentName, string question, bool useSession, string? sessionId, ChatSessionProperties? chatSessionProperties) Parameters fileStream Stream The file contents of the new Attachment resource. fileName string The name of the file. contentType string The Content-Type header value of a valid mime type that is used to create a new MediaTypeHeaderValue as part of the MultipartFormDataContent sent to the API endpoint. agentName string The name of the FoundationaLLM agent that will handle the completion request. question string The user prompt to send to the agent along with the attachment. useSession bool If true, the completion is sent to a new or existing session. If false, no session is created and the sessionless orchestration flow is used. sessionId string The ID of an existing session. If null or empty, a new session is created first. chatSessionProperties ChatSessionProperties Optional session properties. Returns Task<Message> A completion from the designated FoundationaLLM agent. CreateChatSessionAsync(ChatSessionProperties) Creates a new chat session with the specified name. public Task<string> CreateChatSessionAsync(ChatSessionProperties chatSessionProperties) Parameters chatSessionProperties ChatSessionProperties Returns Task<string> The new chat session ID. DeleteSessionAsync(string) Deletes a chat session. public Task DeleteSessionAsync(string sessionId) Parameters sessionId string The ID of the session to delete. Returns Task GetAgentsAsync() Retrieves agents available to the user for orchestration and session-based requests. public Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> A list of available agents. GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. public Task<IEnumerable<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<IEnumerable<Message>> GetCompletionAsync(CompletionRequest) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. You must ensure that the completion request contains an AgentName and UserPrompt. public Task<Message> GetCompletionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the AgentName and UserPrompt at a minimum. Returns Task<Message> A completion from the designated FoundationaLLM agent. GetCompletionAsync(string, string) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. public Task<Message> GetCompletionAsync(string userPrompt, string agentName) Parameters userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Message> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(CompletionRequest) Runs a single completion request with an agent using the Core API and a chat session. You must ensure that the orchestration request contains a SessionID, AgentName, and UserPrompt. public Task<Message> GetCompletionWithSessionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the SessionID, AgentName, and UserPrompt at a minimum. Returns Task<Message> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(string?, ChatSessionProperties?, string, string) Runs a single completion request with an agent using the Core API and a chat session. To specify an existing session, provide the session ID. Otherwise, a new session will be created. If the session name is provided, the session is renamed. public Task<Message> GetCompletionWithSessionAsync(string? sessionId, ChatSessionProperties? chatSessionProperties, string userPrompt, string agentName) Parameters sessionId string The ID of an existing session. If null or empty, a new session is created first. chatSessionProperties ChatSessionProperties userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Message> A completion from the designated FoundationaLLM agent. RateMessageAsync(string, string, MessageRatingRequest) Sets the rating for a message. public Task RateMessageAsync(string sessionId, string messageId, MessageRatingRequest rating) Parameters sessionId string The chat session ID that contains the message to rate. messageId string The ID of the message to rate. rating MessageRatingRequest The rating and optional comments to assign to the message. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Client.Core.CoreRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.CoreRESTClient.html",
    "title": "Class CoreRESTClient | FoundationaLLM",
    "summary": "Class CoreRESTClient Namespace FoundationaLLM.Client.Core Assembly FoundationaLLM.Client.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class CoreRESTClient : ICoreRESTClient Inheritance object CoreRESTClient Implements ICoreRESTClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreRESTClient() Constructor for mocking. This does not initialize the clients. public CoreRESTClient() CoreRESTClient(string, TokenCredential, string) Initializes a new instance of the CoreRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL. public CoreRESTClient(string coreUri, TokenCredential credential, string instanceId) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) CoreRESTClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the CoreRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL and optional client settings. public CoreRESTClient(string coreUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Properties Attachments Contains methods to interact with the Attachments endpoints. public IAttachmentRESTClient Attachments { get; } Property Value IAttachmentRESTClient Branding Contains methods to interact with the Branding endpoints. public IBrandingRESTClient Branding { get; } Property Value IBrandingRESTClient Completions Contains methods to interact with the Orchestration endpoints. public ICompletionRESTClient Completions { get; } Property Value ICompletionRESTClient Sessions Contains methods to interact with the Sessions endpoints. public ISessionRESTClient Sessions { get; } Property Value ISessionRESTClient Status Contains methods to interact with the Status endpoints. public IStatusRESTClient Status { get; } Property Value IStatusRESTClient UserProfiles Contains methods to interact with the UserProfiles endpoints. public IUserProfileRESTClient UserProfiles { get; } Property Value IUserProfileRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IAttachmentRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IAttachmentRESTClient.html",
    "title": "Interface IAttachmentRESTClient | FoundationaLLM",
    "summary": "Interface IAttachmentRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's Attachments endpoints. public interface IAttachmentRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods UploadAttachmentAsync(Stream, string, string) Uploads a file attachment to the Core API. Task<string> UploadAttachmentAsync(Stream fileStream, string fileName, string contentType) Parameters fileStream Stream The file contents of the new Attachment resource. fileName string The name of the file. contentType string The Content-Type header value of a valid mime type that is used to create a new MediaTypeHeaderValue as part of the MultipartFormDataContent sent to the API endpoint. Returns Task<string> The Object ID of the Attachment Resource Provider created from the filestream."
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IBrandingRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IBrandingRESTClient.html",
    "title": "Interface IBrandingRESTClient | FoundationaLLM",
    "summary": "Interface IBrandingRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's Branding endpoints. public interface IBrandingRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetBrandingAsync() Retrieves the branding information for the client. Task<ClientBrandingConfiguration> GetBrandingAsync() Returns Task<ClientBrandingConfiguration>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICompletionRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICompletionRESTClient.html",
    "title": "Interface ICompletionRESTClient | FoundationaLLM",
    "summary": "Interface ICompletionRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's completions endpoints. public interface ICompletionRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAgentsAsync() Retrieves agents available to the user for orchestration and session-based requests. Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetChatCompletionAsync(CompletionRequest) Performs a completion request to the Core API. For session-based requests, set the CompletionRequest.SessionId property to the unique identifier for the session. Set the property to null or empty for non-session-based requests. Session-less completion requests do not maintain message history or data retention in Cosmos DB. Task<Message> GetChatCompletionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The completion request data sent to the endpoint. Returns Task<Message>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreClient.html",
    "title": "Interface ICoreClient | FoundationaLLM",
    "summary": "Interface ICoreClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides high-level methods to interact with the Core API. public interface ICoreClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AttachFileAndAskQuestionAsync(Stream, string, string, string, string, bool, string?, ChatSessionProperties?) Attaches a file to the completion request and sends a question to the agent using the Core API.If the useSession parameter is true, the method uses an existing session or creates a new chat session and optionally renames it. existing session Task<Message> AttachFileAndAskQuestionAsync(Stream fileStream, string fileName, string contentType, string agentName, string question, bool useSession, string? sessionId, ChatSessionProperties? chatSessionProperties) Parameters fileStream Stream The file contents of the new Attachment resource. fileName string The name of the file. contentType string The Content-Type header value of a valid mime type that is used to create a new MediaTypeHeaderValue as part of the MultipartFormDataContent sent to the API endpoint. agentName string The name of the FoundationaLLM agent that will handle the completion request. question string The user prompt to send to the agent along with the attachment. useSession bool If true, the completion is sent to a new or existing session. If false, no session is created and the sessionless orchestration flow is used. sessionId string The ID of an existing session. If null or empty, a new session is created first. chatSessionProperties ChatSessionProperties Optional session properties. Returns Task<Message> A completion from the designated FoundationaLLM agent. CreateChatSessionAsync(ChatSessionProperties) Creates a new chat session with the specified name. Task<string> CreateChatSessionAsync(ChatSessionProperties sessionProperties) Parameters sessionProperties ChatSessionProperties The session properties. Returns Task<string> The new chat session ID. DeleteSessionAsync(string) Deletes a chat session. Task DeleteSessionAsync(string sessionId) Parameters sessionId string The ID of the session to delete. Returns Task GetAgentsAsync() Retrieves agents available to the user for orchestration and session-based requests. Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> A list of available agents. GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. Task<IEnumerable<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<IEnumerable<Message>> GetCompletionAsync(CompletionRequest) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. You must ensure that the completion request contains an AgentName and UserPrompt. Task<Message> GetCompletionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the AgentName and UserPrompt at a minimum. Returns Task<Message> A completion from the designated FoundationaLLM agent. GetCompletionAsync(string, string) Runs a single completion with an agent using the Core API without a chat session (sessionless). This method sends a user prompt to the agent and returns the completion response. Task<Message> GetCompletionAsync(string userPrompt, string agentName) Parameters userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Message> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(CompletionRequest) Runs a single completion request with an agent using the Core API and a chat session. You must ensure that the orchestration request contains a SessionID, AgentName, and UserPrompt. Task<Message> GetCompletionWithSessionAsync(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The orchestration request that contains the SessionID, AgentName, and UserPrompt at a minimum. Returns Task<Message> A completion from the designated FoundationaLLM agent. GetCompletionWithSessionAsync(string?, ChatSessionProperties?, string, string) Runs a single completion request with an agent using the Core API and a chat session. To specify an existing session, provide the session ID. Otherwise, a new session will be created. If the session name is provided, the session is renamed. Task<Message> GetCompletionWithSessionAsync(string? sessionId, ChatSessionProperties? sessionProperties, string userPrompt, string agentName) Parameters sessionId string The ID of an existing session. If null or empty, a new session is created first. sessionProperties ChatSessionProperties Optional session priperties. userPrompt string The user prompt to send to the agent. agentName string The name of the FoundationaLLM agent that will handle the completion request. Returns Task<Message> A completion from the designated FoundationaLLM agent. RateMessageAsync(string, string, MessageRatingRequest) Sets the rating for a message. Task RateMessageAsync(string sessionId, string messageId, MessageRatingRequest rating) Parameters sessionId string The chat session ID that contains the message to rate. messageId string The ID of the message to rate. rating MessageRatingRequest The rating and optional comments to assign to the message. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ICoreRESTClient.html",
    "title": "Interface ICoreRESTClient | FoundationaLLM",
    "summary": "Interface ICoreRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Contains methods to interact with the Core API's endpoints. public interface ICoreRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Attachments Contains methods to interact with the Attachments endpoints. IAttachmentRESTClient Attachments { get; } Property Value IAttachmentRESTClient Branding Contains methods to interact with the Branding endpoints. IBrandingRESTClient Branding { get; } Property Value IBrandingRESTClient Completions Contains methods to interact with the Orchestration endpoints. ICompletionRESTClient Completions { get; } Property Value ICompletionRESTClient Sessions Contains methods to interact with the Sessions endpoints. ISessionRESTClient Sessions { get; } Property Value ISessionRESTClient Status Contains methods to interact with the Status endpoints. IStatusRESTClient Status { get; } Property Value IStatusRESTClient UserProfiles Contains methods to interact with the UserProfiles endpoints. IUserProfileRESTClient UserProfiles { get; } Property Value IUserProfileRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ISessionRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.ISessionRESTClient.html",
    "title": "Interface ISessionRESTClient | FoundationaLLM",
    "summary": "Interface ISessionRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's session endpoints. public interface ISessionRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateSessionAsync(ChatSessionProperties) Creates a new session with the specified name. Task<string> CreateSessionAsync(ChatSessionProperties chatSessionProperties) Parameters chatSessionProperties ChatSessionProperties The session properties. Returns Task<string> Returns the new Session ID. DeleteSessionAsync(string) Deletes a chat session. Task DeleteSessionAsync(string sessionId) Parameters sessionId string Returns Task GetAllChatSessionsAsync() Retrieves all chat sessions. Task<IEnumerable<Conversation>> GetAllChatSessionsAsync() Returns Task<IEnumerable<Conversation>> GetChatSessionMessagesAsync(string) Returns the chat messages related to an existing session. Task<IEnumerable<Message>> GetChatSessionMessagesAsync(string sessionId) Parameters sessionId string Returns Task<IEnumerable<Message>> GetCompletionPromptAsync(string, string) Gets a completion prompt by session ID and completion prompt ID. Task<CompletionPrompt> GetCompletionPromptAsync(string sessionId, string completionPromptId) Parameters sessionId string completionPromptId string Returns Task<CompletionPrompt> RateMessageAsync(string, string, MessageRatingRequest) Sets the rating for a message. Task RateMessageAsync(string sessionId, string messageId, MessageRatingRequest rating) Parameters sessionId string The chat session ID that contains the message to rate. messageId string The ID of the message to rate. rating MessageRatingRequest The rating and optional comments to assign to the message. Returns Task RenameChatSession(string, ChatSessionProperties) Renames a chat session. Task<string> RenameChatSession(string sessionId, ChatSessionProperties chatSessionProperties) Parameters sessionId string The chat session ID. chatSessionProperties ChatSessionProperties The session properties. Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IStatusRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IStatusRESTClient.html",
    "title": "Interface IStatusRESTClient | FoundationaLLM",
    "summary": "Interface IStatusRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's status endpoints. public interface IStatusRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetServiceStatusAsync() Returns the status of the Core API service. A token is not required since the status endpoint supports anonymous access. Task<ServiceStatusInfo> GetServiceStatusAsync() Returns Task<ServiceStatusInfo> IsAuthenticatedAsync() Checks whether the requester is authenticated and allowed to execute requests against the Core API service. Task<bool> IsAuthenticatedAsync() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IUserProfileRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.IUserProfileRESTClient.html",
    "title": "Interface IUserProfileRESTClient | FoundationaLLM",
    "summary": "Interface IUserProfileRESTClient Namespace FoundationaLLM.Client.Core.Interfaces Assembly FoundationaLLM.Client.Core.dll Provides methods to manage calls to the Core API's user profile endpoints. public interface IUserProfileRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserProfilesAsync() Retrieves user profiles. Task<IEnumerable<UserProfile>> GetUserProfilesAsync() Returns Task<IEnumerable<UserProfile>>"
  },
  "api/dotnet/FoundationaLLM.Client.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Client.Core.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Client.Core.Interfaces Interfaces IAttachmentRESTClient Provides methods to manage calls to the Core API's Attachments endpoints. IBrandingRESTClient Provides methods to manage calls to the Core API's Branding endpoints. ICompletionRESTClient Provides methods to manage calls to the Core API's completions endpoints. ICoreClient Provides high-level methods to interact with the Core API. ICoreRESTClient Contains methods to interact with the Core API's endpoints. ISessionRESTClient Provides methods to manage calls to the Core API's session endpoints. IStatusRESTClient Provides methods to manage calls to the Core API's status endpoints. IUserProfileRESTClient Provides methods to manage calls to the Core API's user profile endpoints."
  },
  "api/dotnet/FoundationaLLM.Client.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Core.html",
    "title": "Namespace FoundationaLLM.Client.Core | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Client.Core Namespaces FoundationaLLM.Client.Core.Interfaces Classes CoreClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. CoreRESTClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAIModelManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAIModelManagementClient.html",
    "title": "Interface IAIModelManagementClient | FoundationaLLM",
    "summary": "Interface IAIModelManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage AI model resources. public interface IAIModelManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAIModelAsync(string) Retrieves a specific AI model by name. Task<ResourceProviderGetResult<AIModelBase>> GetAIModelAsync(string aiModelName) Parameters aiModelName string The name of the AI model to retrieve. Returns Task<ResourceProviderGetResult<AIModelBase>> GetAIModelsAsync() Retrieves all AI model resources. Task<List<ResourceProviderGetResult<AIModelBase>>> GetAIModelsAsync() Returns Task<List<ResourceProviderGetResult<AIModelBase>>> All AI model resources to which the caller has access and which have not been marked as deleted. UpsertAIModel(AIModelBase) Upserts an AI model resource. If an AI model does not exist, it will be created. If an AI model configuration does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAIModel(AIModelBase aiModel) Parameters aiModel AIModelBase The API endpoint configuration resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAgentManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAgentManagementClient.html",
    "title": "Interface IAgentManagementClient | FoundationaLLM",
    "summary": "Interface IAgentManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage agent resources. public interface IAgentManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckAgentNameAsync(ResourceName) Checks the availability of a resource name for an agent. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing agent or an agent that was deleted but not purged. Task<ResourceNameCheckResult> CheckAgentNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeleteAgentAsync(string) Deletes an agent resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeAgentAsync(string) method with the same name. Task DeleteAgentAsync(string agentName) Parameters agentName string The name of the agent resource to delete. Returns Task GetAgentAsync(string) Retrieves a specific agent by name. Task<ResourceProviderGetResult<AgentBase>> GetAgentAsync(string agentName) Parameters agentName string The name of the agent resource to retrieve. Returns Task<ResourceProviderGetResult<AgentBase>> GetAgentsAsync() Retrieves all agent resources. Task<List<ResourceProviderGetResult<AgentBase>>> GetAgentsAsync() Returns Task<List<ResourceProviderGetResult<AgentBase>>> All agent resources to which the caller has access and which have not been marked as deleted. PurgeAgentAsync(string) Purges a deleted agent by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeAgentAsync(string agentName) Parameters agentName string The name of the agent to purge. Returns Task<ResourceProviderActionResult> UpsertAgentAsync(AgentBase) Upserts an agent resource. If an agent does not exist, it will be created. If an agent does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAgentAsync(AgentBase agent) Parameters agent AgentBase The agent resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAttachmentManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IAttachmentManagementClient.html",
    "title": "Interface IAttachmentManagementClient | FoundationaLLM",
    "summary": "Interface IAttachmentManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage attachment resources. public interface IAttachmentManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteAttachmentAsync(string) Deletes an attachment resource by name. Task DeleteAttachmentAsync(string attachmentName) Parameters attachmentName string The name of the attachment resource to delete. Returns Task GetAttachmentAsync(string) Retrieves a specific attachment by name. Task<ResourceProviderGetResult<AttachmentFile>> GetAttachmentAsync(string attachmentName) Parameters attachmentName string The name of the attachment resource to retrieve. Returns Task<ResourceProviderGetResult<AttachmentFile>> GetAttachmentsAsync() Retrieves all attachment resources. Task<List<ResourceProviderGetResult<AttachmentFile>>> GetAttachmentsAsync() Returns Task<List<ResourceProviderGetResult<AttachmentFile>>> All attachment resources to which the caller has access. UpsertAttachmentAsync(AttachmentFile) Upserts an attachment resource. If an attachment does not exist, it will be created. If an attachment does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAttachmentAsync(AttachmentFile attachment) Parameters attachment AttachmentFile The attachment resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IConfigurationManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IConfigurationManagementClient.html",
    "title": "Interface IConfigurationManagementClient | FoundationaLLM",
    "summary": "Interface IConfigurationManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provider methods for managing configuration resources. public interface IConfigurationManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteAppConfigurationAsync(string) Deletes an Azure App Configuration key and associated Azure Key Vault secret. Task DeleteAppConfigurationAsync(string key) Parameters key string The name of the Azure App Configuration key to delete. Returns Task GetAppConfigurationsAsync() Retrieves all app configuration values. Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetAppConfigurationsAsync() Returns Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetAppConfigurationsByFilterAsync(string) Retrieves app configuration values by a filter. Either enter an exact key or a partial key with a wildcard (asterisk: ) to filter results. For example, \"FoundationaLLM:Branding:\" will return all app configuration values that start with \"FoundationaLLM:Branding:\". Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetAppConfigurationsByFilterAsync(string key) Parameters key string The full key value or key filter with a wildcard. Returns Task<List<ResourceProviderGetResult<AppConfigurationKeyBase>>> GetExternalOrchestrationServiceAsync(string) Returns a specific external orchestration service by name. Task<ResourceProviderGetResult<APIEndpointConfiguration>> GetExternalOrchestrationServiceAsync(string externalOrchestrationServiceName) Parameters externalOrchestrationServiceName string The name of the external orchestration service to retrieve. Returns Task<ResourceProviderGetResult<APIEndpointConfiguration>> GetExternalOrchestrationServicesAsync() Retrieves all external orchestration services. Task<List<ResourceProviderGetResult<APIEndpointConfiguration>>> GetExternalOrchestrationServicesAsync() Returns Task<List<ResourceProviderGetResult<APIEndpointConfiguration>>> UpsertAPIEndpointConfiguration(APIEndpointConfiguration) Upserts an api endpoint configuration resource. If an api endpoint configuration does not exist, it will be created. If an api endpoint configuration does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertAPIEndpointConfiguration(APIEndpointConfiguration apiEndpointConfiguration) Parameters apiEndpointConfiguration APIEndpointConfiguration The api endpoint configuration resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertAppConfigurationAsync(AppConfigurationKeyBase) Upserts an app configuration value. If the value does not exist, it will be created. To create a standard Key-value App Configuration, use the AppConfigurationKeyValue class for the appConfiguration parameter. To create a Key Vault reference App Configuration, use the AppConfigurationKeyVaultReference class for the appConfiguration parameter. Task<ResourceProviderUpsertResult> UpsertAppConfigurationAsync(AppConfigurationKeyBase appConfiguration) Parameters appConfiguration AppConfigurationKeyBase Use either the AppConfigurationKeyValue type or the AppConfigurationKeyVaultReference type to save the App Config value as a key-value setting or a Key Vault reference, respectively. Returns Task<ResourceProviderUpsertResult>"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IDataSourceManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IDataSourceManagementClient.html",
    "title": "Interface IDataSourceManagementClient | FoundationaLLM",
    "summary": "Interface IDataSourceManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage data source resources. public interface IDataSourceManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckDataSourceNameAsync(ResourceName) Checks the availability of a resource name for a data source. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing data source or a data source that was deleted but not purged. Task<ResourceNameCheckResult> CheckDataSourceNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeleteDataSourceAsync(string) Upserts a data source resource. If a data source does not exist, it will be created. If a data source does exist, it will be updated. Task DeleteDataSourceAsync(string dataSourceName) Parameters dataSourceName string The data source resource to create or update. Returns Task Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. FilterDataSourceAsync(ResourceFilter) Returns data sources that match the filter criteria. Task<List<DataSourceBase>> FilterDataSourceAsync(ResourceFilter resourceFilter) Parameters resourceFilter ResourceFilter The filter criteria to apply to the request. Returns Task<List<DataSourceBase>> GetDataSourceAsync(string) Retrieves a specific data source by name. Task<ResourceProviderGetResult<DataSourceBase>> GetDataSourceAsync(string dataSourceName) Parameters dataSourceName string The name of the data source resource to retrieve. Returns Task<ResourceProviderGetResult<DataSourceBase>> GetDataSourcesAsync() Retrieves all data source resources. Task<List<ResourceProviderGetResult<DataSourceBase>>> GetDataSourcesAsync() Returns Task<List<ResourceProviderGetResult<DataSourceBase>>> All data source resources to which the caller has access and which have not been marked as deleted. PurgeDataSourceAsync(string) Purges a deleted data source by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeDataSourceAsync(string dataSourceName) Parameters dataSourceName string The name of the data source to purge. Returns Task<ResourceProviderActionResult> UpsertDataSourceAsync(DataSourceBase) Upserts a data source resource. If a data source does not exist, it will be created. If a data source does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertDataSourceAsync(DataSourceBase dataSource) Parameters dataSource DataSourceBase The data source resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IIdentityRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IIdentityRESTClient.html",
    "title": "Interface IIdentityRESTClient | FoundationaLLM",
    "summary": "Interface IIdentityRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage calls to the Management API's identity endpoints. public interface IIdentityRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetGroupAsync(string) Retrieves a specific group account by its identifier. Task<Group> GetGroupAsync(string groupId) Parameters groupId string Returns Task<Group> GetUserAsync(string) Retrieves a specific user account by its identifier. Task<User> GetUserAsync(string userId) Parameters userId string Returns Task<User> RetrieveGroupsAsync(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. Task<IEnumerable<Group>> RetrieveGroupsAsync(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IEnumerable<Group>> RetrieveObjectsByIdsAsync(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. Task<IEnumerable<DirectoryObject>> RetrieveObjectsByIdsAsync(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IEnumerable<DirectoryObject>> RetrieveUsersAsync(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. Task<IEnumerable<User>> RetrieveUsersAsync(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IEnumerable<User>>"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementClient.html",
    "title": "Interface IManagementClient | FoundationaLLM",
    "summary": "Interface IManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides high-level methods to interact with the Management API. public interface IManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIModels Contains methods to interact with AIModel resources. IAIModelManagementClient AIModels { get; } Property Value IAIModelManagementClient Agents Contains methods to interact with Agent resources. IAgentManagementClient Agents { get; } Property Value IAgentManagementClient Attachments Contains methods to interact with Attachment resources. IAttachmentManagementClient Attachments { get; } Property Value IAttachmentManagementClient Configuration Contains methods to interact with Configuration resources. IConfigurationManagementClient Configuration { get; } Property Value IConfigurationManagementClient DataSources Contains methods to interact with DataSource resources. IDataSourceManagementClient DataSources { get; } Property Value IDataSourceManagementClient Prompts Contains methods to interact with Prompt resources. IPromptManagementClient Prompts { get; } Property Value IPromptManagementClient Vectorization Contains methods to interact with Vectorization resources. IVectorizationManagementClient Vectorization { get; } Property Value IVectorizationManagementClient Methods GetResourceByObjectId<T>(string) Retrieves a resource by its ObjectId. Task<T> GetResourceByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<T> Returns a deserialized resource object. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase. GetResourceWithActionsAndRolesByObjectId<T>(string) Retrieves a resource by its ObjectId, including actions and roles. Task<ResourceProviderGetResult<T>> GetResourceWithActionsAndRolesByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<ResourceProviderGetResult<T>> Returns a deserialized resource object and its list of allowed actions and roles. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IManagementRESTClient.html",
    "title": "Interface IManagementRESTClient | FoundationaLLM",
    "summary": "Interface IManagementRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Contains methods to interact with the Management API's endpoints. public interface IManagementRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Identity Contains methods to interact with the Identity endpoints. IIdentityRESTClient Identity { get; } Property Value IIdentityRESTClient Resources Contains methods to interact with the Resources endpoints. IResourceRESTClient Resources { get; } Property Value IResourceRESTClient Status Contains methods to interact with the Status endpoints. IStatusRESTClient Status { get; } Property Value IStatusRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IPromptManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IPromptManagementClient.html",
    "title": "Interface IPromptManagementClient | FoundationaLLM",
    "summary": "Interface IPromptManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage prompt resources. public interface IPromptManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckPromptNameAsync(ResourceName) Checks the availability of a resource name for a prompt. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing prompt or a prompt that was deleted but not purged. Task<ResourceNameCheckResult> CheckPromptNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeletePromptAsync(string) Deletes a prompt resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgePromptAsync(string) method with the same name. Task DeletePromptAsync(string promptName) Parameters promptName string The name of the prompt resource to delete. Returns Task GetPromptAsync(string) Retrieves a specific prompt by name. Task<ResourceProviderGetResult<PromptBase>> GetPromptAsync(string promptName) Parameters promptName string The name of the prompt resource to retrieve. Returns Task<ResourceProviderGetResult<PromptBase>> GetPromptsAsync() Retrieves all prompt resources. Task<List<ResourceProviderGetResult<PromptBase>>> GetPromptsAsync() Returns Task<List<ResourceProviderGetResult<PromptBase>>> All prompt resources to which the caller has access and which have not been marked as deleted. PurgePromptAsync(string) Purges a deleted prompt by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgePromptAsync(string promptName) Parameters promptName string The name of the prompt to purge. Returns Task<ResourceProviderActionResult> UpsertPromptAsync(PromptBase) Upserts a prompt resource. If a prompt does not exist, it will be created. If a prompt does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertPromptAsync(PromptBase prompt) Parameters prompt PromptBase The prompt resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IResourceRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IResourceRESTClient.html",
    "title": "Interface IResourceRESTClient | FoundationaLLM",
    "summary": "Interface IResourceRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage calls to the Management API's resource endpoints. public interface IResourceRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DeleteResourceAsync(string, string) Deletes a resource. Task DeleteResourceAsync(string resourceProvider, string resourcePath) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task ExecuteResourceActionAsync<T>(string, string, object) Executes resource actions, serializing the action result to the specified type, For most actions, the result will be a ResourceProviderActionResult. Task<T> ExecuteResourceActionAsync<T>(string resourceProvider, string resourcePath, object request) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type and action. request object The action payload. Returns Task<T> The ObjectId of the created or updated resource. Type Parameters T GetResourcesAsync<T>(string) Gets one or more resource. Task<T> GetResourcesAsync<T>(string fullResourcePath) Parameters fullResourcePath string The full resource path, including the Instance ID, resource provider, and logical path of the resource type. Returns Task<T> Type Parameters T Deserializes the return content to the passed in type. GetResourcesAsync<T>(string, string) Gets one or more resource. Task<T> GetResourcesAsync<T>(string resourceProvider, string resourcePath) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<T> Type Parameters T Deserializes the return content to the passed in type. UpsertResourceAsync(string, string, object) Creates or updates resources. Task<ResourceProviderUpsertResult> UpsertResourceAsync(string resourceProvider, string resourcePath, object resource) Parameters resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. resource object The resource to be created or updated. Returns Task<ResourceProviderUpsertResult> The ObjectId of the created or updated resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IStatusRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IStatusRESTClient.html",
    "title": "Interface IStatusRESTClient | FoundationaLLM",
    "summary": "Interface IStatusRESTClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage calls to the Management API's status endpoints. public interface IStatusRESTClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetServiceStatusAsync() Returns the status of the Management API service. A token is not required since the status endpoint supports anonymous access. Task<ServiceStatusInfo> GetServiceStatusAsync() Returns Task<ServiceStatusInfo> IsAuthenticatedAsync() Checks whether the requester is authenticated and allowed to execute requests against the Management API service. Task<bool> IsAuthenticatedAsync() Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IVectorizationManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.IVectorizationManagementClient.html",
    "title": "Interface IVectorizationManagementClient | FoundationaLLM",
    "summary": "Interface IVectorizationManagementClient Namespace FoundationaLLM.Client.Management.Interfaces Assembly FoundationaLLM.Client.Management.dll Provides methods to manage vectorization resources. public interface IVectorizationManagementClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ActivateVectorizationPipelineAsync(string) Activates a vectorization pipeline. Task<VectorizationResult> ActivateVectorizationPipelineAsync(string pipelineName) Parameters pipelineName string The vectorization pipeline to activate. Returns Task<VectorizationResult> CheckIndexingProfileNameAsync(ResourceName) Checks the availability of a resource name for an indexing profile. If the name is available, the Status value will be \"Allowed\". If the name is not available, the Status value will be \"Denied\" and the Message will explain the reason why. Typically, a denied name is due to a name conflict with an existing indexing profile or an indexing profile that was deleted but not purged. Task<ResourceNameCheckResult> CheckIndexingProfileNameAsync(ResourceName resourceName) Parameters resourceName ResourceName Contains the name of the resource to check. Returns Task<ResourceNameCheckResult> Exceptions ArgumentException Thrown when the required properties within the argument are empty or missing. DeactivateVectorizationPipelineAsync(string) Deactivates a vectorization pipeline. Task<VectorizationResult> DeactivateVectorizationPipelineAsync(string pipelineName) Parameters pipelineName string The vectorization pipeline to deactivate. Returns Task<VectorizationResult> DeleteIndexingProfileAsync(string) Deletes an indexing profile resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeIndexingProfileAsync(string) method with the same name. Task DeleteIndexingProfileAsync(string name) Parameters name string The name of the indexing profile resource to delete. Returns Task DeleteTextEmbeddingProfileAsync(string) Deletes a text embedding profile resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeTextEmbeddingProfileAsync(string) method with the same name. Task DeleteTextEmbeddingProfileAsync(string name) Parameters name string The name of the text embedding profile resource to delete. Returns Task DeleteTextPartitioningProfileAsync(string) Deletes a text partitioning profile resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeTextPartitioningProfileAsync(string) method with the same name. Task DeleteTextPartitioningProfileAsync(string name) Parameters name string The name of the text partitioning profile resource to delete. Returns Task DeleteVectorizationPipelineAsync(string) Deletes a vectorization pipeline resource by name. Please note that all deletes are soft deletes. The resource will be marked as deleted but not purged. To permanently remove a resource, execute the PurgeVectorizationPipelineAsync(string) method with the same name. Task DeleteVectorizationPipelineAsync(string name) Parameters name string The name of the vectorization pipeline resource to delete. Returns Task FilterIndexingProfileAsync(ResourceFilter) Returns indexing profiles that match the filter criteria. Task<List<IndexingProfile>> FilterIndexingProfileAsync(ResourceFilter resourceFilter) Parameters resourceFilter ResourceFilter The filter criteria to apply to the request. Returns Task<List<IndexingProfile>> GetIndexingProfileAsync(string) Retrieves a specific indexing profile by name. Task<ResourceProviderGetResult<IndexingProfile>> GetIndexingProfileAsync(string name) Parameters name string The name of the indexing profile to retrieve. Returns Task<ResourceProviderGetResult<IndexingProfile>> GetIndexingProfilesAsync() Retrieves all indexing profiles. Task<List<ResourceProviderGetResult<IndexingProfile>>> GetIndexingProfilesAsync() Returns Task<List<ResourceProviderGetResult<IndexingProfile>>> All indexing profiles to which the caller has access and which have not been marked as deleted. GetTextEmbeddingProfileAsync(string) Retrieves a specific text embedding profile by name. Task<ResourceProviderGetResult<TextEmbeddingProfile>> GetTextEmbeddingProfileAsync(string name) Parameters name string The name of the text embedding profile to retrieve. Returns Task<ResourceProviderGetResult<TextEmbeddingProfile>> GetTextEmbeddingProfilesAsync() Retrieves all text embedding profiles. Task<List<ResourceProviderGetResult<TextEmbeddingProfile>>> GetTextEmbeddingProfilesAsync() Returns Task<List<ResourceProviderGetResult<TextEmbeddingProfile>>> All text embedding profiles to which the caller has access and which have not been marked as deleted. GetTextPartitioningProfileAsync(string) Retrieves a specific text partitioning profile by name. Task<ResourceProviderGetResult<TextPartitioningProfile>> GetTextPartitioningProfileAsync(string name) Parameters name string The name of the text partitioning profile to retrieve. Returns Task<ResourceProviderGetResult<TextPartitioningProfile>> GetTextPartitioningProfilesAsync() Retrieves all text partitioning profiles. Task<List<ResourceProviderGetResult<TextPartitioningProfile>>> GetTextPartitioningProfilesAsync() Returns Task<List<ResourceProviderGetResult<TextPartitioningProfile>>> All text partitioning profiles to which the caller has access and which have not been marked as deleted. GetVectorizationPipelineAsync(string) Retrieves a specific vectorization pipeline by name. Task<ResourceProviderGetResult<VectorizationPipeline>> GetVectorizationPipelineAsync(string name) Parameters name string The name of the vectorization pipeline to retrieve. Returns Task<ResourceProviderGetResult<VectorizationPipeline>> GetVectorizationPipelinesAsync() Retrieves all vectorization pipelines. Task<List<ResourceProviderGetResult<VectorizationPipeline>>> GetVectorizationPipelinesAsync() Returns Task<List<ResourceProviderGetResult<VectorizationPipeline>>> All vectorization pipelines to which the caller has access and which have not been marked as deleted. PurgeIndexingProfileAsync(string) Purges a deleted indexing profile by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeIndexingProfileAsync(string indexingProfileName) Parameters indexingProfileName string The name of the indexing profile to purge. Returns Task<ResourceProviderActionResult> PurgeTextEmbeddingProfileAsync(string) Purges a deleted text embedding profile by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeTextEmbeddingProfileAsync(string textEmbeddingProfileName) Parameters textEmbeddingProfileName string The name of the text embedding profile to purge. Returns Task<ResourceProviderActionResult> PurgeTextPartitioningProfileAsync(string) Purges a deleted text partitioning profile by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeTextPartitioningProfileAsync(string textPartitioningProfileName) Parameters textPartitioningProfileName string The name of the text partitioning profile to purge. Returns Task<ResourceProviderActionResult> PurgeVectorizationPipelineAsync(string) Purges a deleted vectorization pipeline by its name. This action is irreversible. Task<ResourceProviderActionResult> PurgeVectorizationPipelineAsync(string pipelineName) Parameters pipelineName string The name of the vectorization pipeline to purge. Returns Task<ResourceProviderActionResult> UpsertIndexingProfileAsync(IndexingProfile) Upserts an indexing profile resource. If an indexing profile does not exist, it will be created. If an indexing profile does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertIndexingProfileAsync(IndexingProfile resource) Parameters resource IndexingProfile The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertTextEmbeddingProfileAsync(TextEmbeddingProfile) Upserts a text embedding profile resource. If a text embedding profile does not exist, it will be created. If a text embedding profile does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertTextEmbeddingProfileAsync(TextEmbeddingProfile resource) Parameters resource TextEmbeddingProfile The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertTextPartitioningProfileAsync(TextPartitioningProfile) Upserts a text partitioning profile resource. If a text partitioning profile does not exist, it will be created. If a text partitioning profile does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertTextPartitioningProfileAsync(TextPartitioningProfile resource) Parameters resource TextPartitioningProfile The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource. UpsertVectorizationPipelineAsync(VectorizationPipeline) Upserts a vectorization pipeline resource. If a vectorization pipeline does not exist, it will be created. If a vectorization pipeline does exist, it will be updated. Task<ResourceProviderUpsertResult> UpsertVectorizationPipelineAsync(VectorizationPipeline resource) Parameters resource VectorizationPipeline The resource to create or update. Returns Task<ResourceProviderUpsertResult> Returns a ResourceProviderUpsertResult, which contains the Object ID of the resource."
  },
  "api/dotnet/FoundationaLLM.Client.Management.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.Interfaces.html",
    "title": "Namespace FoundationaLLM.Client.Management.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Client.Management.Interfaces Interfaces IAIModelManagementClient Provides methods to manage AI model resources. IAgentManagementClient Provides methods to manage agent resources. IAttachmentManagementClient Provides methods to manage attachment resources. IConfigurationManagementClient Provider methods for managing configuration resources. IDataSourceManagementClient Provides methods to manage data source resources. IIdentityRESTClient Provides methods to manage calls to the Management API's identity endpoints. IManagementClient Provides high-level methods to interact with the Management API. IManagementRESTClient Contains methods to interact with the Management API's endpoints. IPromptManagementClient Provides methods to manage prompt resources. IResourceRESTClient Provides methods to manage calls to the Management API's resource endpoints. IStatusRESTClient Provides methods to manage calls to the Management API's status endpoints. IVectorizationManagementClient Provides methods to manage vectorization resources."
  },
  "api/dotnet/FoundationaLLM.Client.Management.ManagementClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.ManagementClient.html",
    "title": "Class ManagementClient | FoundationaLLM",
    "summary": "Class ManagementClient Namespace FoundationaLLM.Client.Management Assembly FoundationaLLM.Client.Management.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ManagementClient : IManagementClient Inheritance object ManagementClient Implements IManagementClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ManagementClient() Constructor for mocking. This does not initialize the clients. public ManagementClient() ManagementClient(string, TokenCredential, string) Initializes a new instance of the ManagementClient class with the specified Management API URI, TokenCredential, and Instance ID. public ManagementClient(string managementUri, TokenCredential credential, string instanceId) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) ManagementClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the CoreClient class with the specified Core API URI, TokenCredential, and optional client settings. public ManagementClient(string managementUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Properties AIModels Contains methods to interact with AIModel resources. public IAIModelManagementClient AIModels { get; } Property Value IAIModelManagementClient Agents Contains methods to interact with Agent resources. public IAgentManagementClient Agents { get; } Property Value IAgentManagementClient Attachments Contains methods to interact with Attachment resources. public IAttachmentManagementClient Attachments { get; } Property Value IAttachmentManagementClient Configuration Contains methods to interact with Configuration resources. public IConfigurationManagementClient Configuration { get; } Property Value IConfigurationManagementClient DataSources Contains methods to interact with DataSource resources. public IDataSourceManagementClient DataSources { get; } Property Value IDataSourceManagementClient Prompts Contains methods to interact with Prompt resources. public IPromptManagementClient Prompts { get; } Property Value IPromptManagementClient Vectorization Contains methods to interact with Vectorization resources. public IVectorizationManagementClient Vectorization { get; } Property Value IVectorizationManagementClient Methods GetResourceByObjectId<T>(string) Retrieves a resource by its ObjectId. public Task<T> GetResourceByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<T> Returns a deserialized resource object. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase. GetResourceWithActionsAndRolesByObjectId<T>(string) Retrieves a resource by its ObjectId, including actions and roles. public Task<ResourceProviderGetResult<T>> GetResourceWithActionsAndRolesByObjectId<T>(string objectId) where T : ResourceBase Parameters objectId string The resource's Object ID (full resource path). Returns Task<ResourceProviderGetResult<T>> Returns a deserialized resource object and its list of allowed actions and roles. Type Parameters T The type of resource to retrieve. It must be derived from ResourceBase."
  },
  "api/dotnet/FoundationaLLM.Client.Management.ManagementRESTClient.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.ManagementRESTClient.html",
    "title": "Class ManagementRESTClient | FoundationaLLM",
    "summary": "Class ManagementRESTClient Namespace FoundationaLLM.Client.Management Assembly FoundationaLLM.Client.Management.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ManagementRESTClient : IManagementRESTClient Inheritance object ManagementRESTClient Implements IManagementRESTClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ManagementRESTClient() Constructor for mocking. This does not initialize the clients. public ManagementRESTClient() ManagementRESTClient(string, TokenCredential, string) Initializes a new instance of the ManagementRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL. public ManagementRESTClient(string managementUri, TokenCredential credential, string instanceId) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) ManagementRESTClient(string, TokenCredential, string, APIClientSettings) Initializes a new instance of the ManagementRESTClient class and configures IHttpClientFactory with a named instance for the CoreAPI (CoreAPI) based on the passed in URL and optional client settings. public ManagementRESTClient(string managementUri, TokenCredential credential, string instanceId, APIClientSettings options) Parameters managementUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. Properties Identity Contains methods to interact with the Identity endpoints. public IIdentityRESTClient Identity { get; } Property Value IIdentityRESTClient Resources Contains methods to interact with the Resources endpoints. public IResourceRESTClient Resources { get; } Property Value IResourceRESTClient Status Contains methods to interact with the Status endpoints. public IStatusRESTClient Status { get; } Property Value IStatusRESTClient"
  },
  "api/dotnet/FoundationaLLM.Client.Management.html": {
    "href": "api/dotnet/FoundationaLLM.Client.Management.html",
    "title": "Namespace FoundationaLLM.Client.Management | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Client.Management Namespaces FoundationaLLM.Client.Management.Interfaces Classes ManagementClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. ManagementRESTClient Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Client.html": {
    "href": "api/dotnet/FoundationaLLM.Client.html",
    "title": "Namespace FoundationaLLM.Client | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Client Namespaces FoundationaLLM.Client.Core FoundationaLLM.Client.Management"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationAttribute.html",
    "title": "Class APIKeyAuthenticationAttribute | FoundationaLLM",
    "summary": "Class APIKeyAuthenticationAttribute Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Service filter attribute for X-API-Key header validation. public class APIKeyAuthenticationAttribute : ServiceFilterAttribute, IFilterFactory, IOrderedFilter, IFilterMetadata Inheritance object Attribute ServiceFilterAttribute APIKeyAuthenticationAttribute Implements IFilterFactory IOrderedFilter IFilterMetadata Inherited Members ServiceFilterAttribute.CreateInstance(IServiceProvider) ServiceFilterAttribute.Order ServiceFilterAttribute.ServiceType ServiceFilterAttribute.IsReusable Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors APIKeyAuthenticationAttribute() Initializes a new instance of the APIKeyAuthenticationAttribute class. public APIKeyAuthenticationAttribute()"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyAuthenticationFilter.html",
    "title": "Class APIKeyAuthenticationFilter | FoundationaLLM",
    "summary": "Class APIKeyAuthenticationFilter Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Auth filter for X-API-Key header validation. public class APIKeyAuthenticationFilter : IAuthorizationFilter, IFilterMetadata Inheritance object APIKeyAuthenticationFilter Implements IAuthorizationFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Constructors APIKeyAuthenticationFilter(IAPIKeyValidationService) Auth filter for X-API-Key header validation. public APIKeyAuthenticationFilter(IAPIKeyValidationService apiKeyValidation) Parameters apiKeyValidation IAPIKeyValidationService Remarks Initializes a new instance of the APIKeyAuthenticationFilter class. Methods OnAuthorization(AuthorizationFilterContext) Override for default OnAuthorization step to set UnauthorizedObjectResult on the context if the required header is missing or invalid. public void OnAuthorization(AuthorizationFilterContext context) Parameters context AuthorizationFilterContext The context containing the HTTP request headers."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationService.html",
    "title": "Class APIKeyValidationService | FoundationaLLM",
    "summary": "Class APIKeyValidationService Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Implements the IAPIKeyValidationService interface. public class APIKeyValidationService : IAPIKeyValidationService Inheritance object APIKeyValidationService Implements IAPIKeyValidationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the APIKeyValidationService class. Constructors APIKeyValidationService(IOptions<APIKeyValidationSettings>) Implements the IAPIKeyValidationService interface. public APIKeyValidationService(IOptions<APIKeyValidationSettings> options) Parameters options IOptions<APIKeyValidationSettings> otions for the deployed API key validation service. Remarks Creates a new instance of the APIKeyValidationService class. Methods IsValid(string) Checks if an API key is valid or not. public bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean value representing the validity of the API key."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.APIKeyValidationSettings.html",
    "title": "Class APIKeyValidationSettings | FoundationaLLM",
    "summary": "Class APIKeyValidationSettings Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Represents settings for API key validation. public record APIKeyValidationSettings : IEquatable<APIKeyValidationSettings> Inheritance object APIKeyValidationSettings Implements IEquatable<APIKeyValidationSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key. public required string APIKey { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.AgentAccessTokenAuthenticationHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.AgentAccessTokenAuthenticationHandler.html",
    "title": "Class AgentAccessTokenAuthenticationHandler | FoundationaLLM",
    "summary": "Class AgentAccessTokenAuthenticationHandler Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Handles authentication for agent access tokens. public class AgentAccessTokenAuthenticationHandler : AuthenticationHandler<AgentAccessTokenOptions>, IAuthenticationHandler Inheritance object AuthenticationHandler<AgentAccessTokenOptions> AgentAccessTokenAuthenticationHandler Implements IAuthenticationHandler Inherited Members AuthenticationHandler<AgentAccessTokenOptions>.InitializeAsync(AuthenticationScheme, HttpContext) AuthenticationHandler<AgentAccessTokenOptions>.InitializeEventsAsync() AuthenticationHandler<AgentAccessTokenOptions>.CreateEventsAsync() AuthenticationHandler<AgentAccessTokenOptions>.InitializeHandlerAsync() AuthenticationHandler<AgentAccessTokenOptions>.BuildRedirectUri(string) AuthenticationHandler<AgentAccessTokenOptions>.ResolveTarget(string) AuthenticationHandler<AgentAccessTokenOptions>.AuthenticateAsync() AuthenticationHandler<AgentAccessTokenOptions>.HandleAuthenticateOnceAsync() AuthenticationHandler<AgentAccessTokenOptions>.HandleAuthenticateOnceSafeAsync() AuthenticationHandler<AgentAccessTokenOptions>.HandleForbiddenAsync(AuthenticationProperties) AuthenticationHandler<AgentAccessTokenOptions>.HandleChallengeAsync(AuthenticationProperties) AuthenticationHandler<AgentAccessTokenOptions>.ChallengeAsync(AuthenticationProperties) AuthenticationHandler<AgentAccessTokenOptions>.ForbidAsync(AuthenticationProperties) AuthenticationHandler<AgentAccessTokenOptions>.Scheme AuthenticationHandler<AgentAccessTokenOptions>.Options AuthenticationHandler<AgentAccessTokenOptions>.Context AuthenticationHandler<AgentAccessTokenOptions>.Request AuthenticationHandler<AgentAccessTokenOptions>.Response AuthenticationHandler<AgentAccessTokenOptions>.OriginalPath AuthenticationHandler<AgentAccessTokenOptions>.OriginalPathBase AuthenticationHandler<AgentAccessTokenOptions>.Logger AuthenticationHandler<AgentAccessTokenOptions>.UrlEncoder AuthenticationHandler<AgentAccessTokenOptions>.Clock AuthenticationHandler<AgentAccessTokenOptions>.TimeProvider AuthenticationHandler<AgentAccessTokenOptions>.OptionsMonitor AuthenticationHandler<AgentAccessTokenOptions>.Events AuthenticationHandler<AgentAccessTokenOptions>.ClaimsIssuer AuthenticationHandler<AgentAccessTokenOptions>.CurrentUri object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the AgentAccessTokenAuthenticationHandler class. Constructors AgentAccessTokenAuthenticationHandler(IEnumerable<IResourceProviderService>, IOptionsMonitor<AgentAccessTokenOptions>, ILoggerFactory, UrlEncoder) Handles authentication for agent access tokens. public AgentAccessTokenAuthenticationHandler(IEnumerable<IResourceProviderService> resourceProviderServices, IOptionsMonitor<AgentAccessTokenOptions> options, ILoggerFactory logger, UrlEncoder encoder) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The IResourceProviderService resource provider services. options IOptionsMonitor<AgentAccessTokenOptions> The monitor for the options instance. logger ILoggerFactory The ILoggerFactory used to create loggers. encoder UrlEncoder The UrlEncoder used to perform URL character encoding. Remarks Initializes a new instance of the AgentAccessTokenAuthenticationHandler class. Methods HandleAuthenticateAsync() Handles authentication for agent access tokens. protected override Task<AuthenticateResult> HandleAuthenticateAsync() Returns Task<AuthenticateResult>"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.AgentAccessTokenDefaults.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.AgentAccessTokenDefaults.html",
    "title": "Class AgentAccessTokenDefaults | FoundationaLLM",
    "summary": "Class AgentAccessTokenDefaults Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Default values used by AgentAccessTokenAuthenticationHandler for agent access token authentication. public static class AgentAccessTokenDefaults Inheritance object AgentAccessTokenDefaults Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AuthenticationScheme Default value for AuthenticationScheme property in the AgentAccessTokenOptions. public const string AuthenticationScheme = \"AgentAccessToken\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.AgentAccessTokenOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.AgentAccessTokenOptions.html",
    "title": "Class AgentAccessTokenOptions | FoundationaLLM",
    "summary": "Class AgentAccessTokenOptions Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Options class provides information needed to control Agent Access Token Authentication handler behavior public class AgentAccessTokenOptions : AuthenticationSchemeOptions Inheritance object AuthenticationSchemeOptions AgentAccessTokenOptions Inherited Members AuthenticationSchemeOptions.Validate() AuthenticationSchemeOptions.Validate(string) AuthenticationSchemeOptions.ClaimsIssuer AuthenticationSchemeOptions.Events AuthenticationSchemeOptions.EventsType AuthenticationSchemeOptions.ForwardDefault AuthenticationSchemeOptions.ForwardAuthenticate AuthenticationSchemeOptions.ForwardChallenge AuthenticationSchemeOptions.ForwardForbid AuthenticationSchemeOptions.ForwardSignIn AuthenticationSchemeOptions.ForwardSignOut AuthenticationSchemeOptions.ForwardDefaultSelector AuthenticationSchemeOptions.TimeProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.ServiceContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.ServiceContext.html",
    "title": "Class ServiceContext | FoundationaLLM",
    "summary": "Class ServiceContext Namespace FoundationaLLM.Common.Authentication Assembly FoundationaLLM.Common.dll Provides the context of the current service. public static class ServiceContext Inheritance object ServiceContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AzureCredential The default Azure credential to use for authentication. public static TokenCredential? AzureCredential { get; set; } Property Value TokenCredential Production Indicates whether the environment we run in is production or not. public static bool Production { get; set; } Property Value bool ServiceIdentity The UnifiedUserIdentity of the service based on its managed identity.\"/> public static UnifiedUserIdentity? ServiceIdentity { get; set; } Property Value UnifiedUserIdentity ServiceInstanceName Gets or sets the name of the instance service. public static string ServiceInstanceName { get; set; } Property Value string ServiceName Gets or sets the name of the service. public static string ServiceName { get; set; } Property Value string Methods CreateAzureCredential() Creates a new TokenCredential. public static TokenCredential CreateAzureCredential() Returns TokenCredential A ManagedIdentityCredential instance if Production is true and an AzureCliCredential instance otherwise. Initialize(bool, string, string) Initializes the service context. public static void Initialize(bool production, string serviceName, string scope = \"api://FoundationaLLM-Authorization\") Parameters production bool Indicates whether the environment is production or not. serviceName string The service name. scope string The scope used to retrieve the access token."
  },
  "api/dotnet/FoundationaLLM.Common.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Authentication | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Authentication Classes APIKeyAuthenticationAttribute Service filter attribute for X-API-Key header validation. APIKeyAuthenticationFilter Auth filter for X-API-Key header validation. APIKeyValidationService Implements the IAPIKeyValidationService interface. APIKeyValidationSettings Represents settings for API key validation. AgentAccessTokenAuthenticationHandler Handles authentication for agent access tokens. AgentAccessTokenDefaults Default values used by AgentAccessTokenAuthenticationHandler for agent access token authentication. AgentAccessTokenOptions Options class provides information needed to control Agent Access Token Authentication handler behavior ServiceContext Provides the context of the current service."
  },
  "api/dotnet/FoundationaLLM.Common.Clients.AuthorizationServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.AuthorizationServiceClient.html",
    "title": "Class AuthorizationServiceClient | FoundationaLLM",
    "summary": "Class AuthorizationServiceClient Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Provides methods for interacting with the Authorization API. public class AuthorizationServiceClient : IAuthorizationServiceClient Inheritance object AuthorizationServiceClient Implements IAuthorizationServiceClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationServiceClient(IHttpClientFactory, IOptions<AuthorizationServiceClientSettings>, ILogger<AuthorizationServiceClient>) Initializes a new instance of the AuthorizationServiceClient class. public AuthorizationServiceClient(IHttpClientFactory httpClientFactory, IOptions<AuthorizationServiceClientSettings> options, ILogger<AuthorizationServiceClient> logger) Parameters httpClientFactory IHttpClientFactory The centralized factory from which to create HTTP clients. options IOptions<AuthorizationServiceClientSettings> AuthorizationServiceClientSettings options. logger ILogger<AuthorizationServiceClient> The logger used for logging. Methods CreateRoleAssignment(string, RoleAssignmentCreateRequest, UnifiedUserIdentity) Creates a new role assignment. public Task<RoleAssignmentOperationResult> CreateRoleAssignment(string instanceId, RoleAssignmentCreateRequest roleAssignmentRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentCreateRequest The RoleAssignmentCreateRequest containing the details of the role assignment to be created. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentOperationResult> A RoleAssignmentOperationResult containing information about the result of the operation. DeleteRoleAssignment(string, string, UnifiedUserIdentity) Deletes a role assignment. public Task<RoleAssignmentOperationResult> DeleteRoleAssignment(string instanceId, string roleAssignment, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentOperationResult> A RoleAssignmentOperationResult containing information about the result of the operation. DeleteSecretKey(string, string, string) Deletes a specified secret key. public Task DeleteSecretKey(string instanceId, string contextId, string secretKeyId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to delete. secretKeyId string The unique identifier of the secret key being deleted. Returns Task GetRoleAssignments(string, RoleAssignmentQueryParameters, UnifiedUserIdentity) Returns a list of role assignments. public Task<List<RoleAssignment>> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. userIdentity UnifiedUserIdentity The user identity. Returns Task<List<RoleAssignment>> The list of all role assignments for the specified instance. GetSecretKeys(string, string) Gets a list of SecretKey items that are associated with the specified instance and context. public Task<List<SecretKey>> GetSecretKeys(string instanceId, string contextId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context for which the secret keys are retrieved. Returns Task<List<SecretKey>> A list of SecretKey items. Remarks Each consumer of secret keys should have a unique context identifier. For example, FoundationaLLM resource providers could use the resource object identifier as the context identifier. ProcessAuthorizationRequest(string, string, string?, List<string>, bool, bool, bool, UnifiedUserIdentity) Processes an action authorization request. public Task<ActionAuthorizationResult> ProcessAuthorizationRequest(string instanceId, string action, string? roleName, List<string> resourcePaths, bool expandResourceTypePaths, bool includeRoleAssignments, bool includeActions, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. action string The action identifier. roleName string An optional role name to check for assignment. resourcePaths List<string> The resource paths. expandResourceTypePaths bool A value indicating whether to expand resource type paths that are not authorized. includeRoleAssignments bool includeActions bool A value indicating whether to include authorizable actions in the response. userIdentity UnifiedUserIdentity The user identity. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing. Remarks If the action specified by action is not authorized for a resource type path, and expandResourceTypePaths is set to true, the response will include any authorized resource paths matching the resource type path. If includeRoles is set to true, for each authrorized resource path, the response will include the roles assigned directly or indirectly to the resource path. If action is set to true, for each authorized resource path, the response will include the autorizable actions assigned directly or indirectly to the resource path. UpsertSecretKey(string, SecretKey) Creates a new or updates an existing SecretKey item. public Task<string?> UpsertSecretKey(string instanceId, SecretKey secretKey) Parameters instanceId string The FoundationaLLM instance identifier. secretKey SecretKey The SecretKey item containing the properties of the secret key being created or updated. Returns Task<string> If the secret bey is being created, it returns the secret value of the key. Otherwise, returns null. ValidateSecretKey(string, string, string) Validates a secret key value. public Task<SecretKeyValidationResult> ValidateSecretKey(string instanceId, string contextId, string secretKeyValue) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to validate. secretKeyValue string The secret value of the key. Returns Task<SecretKeyValidationResult> A SecretKeyValidationResult item with the results of the validation. Remarks Each valid secret key has an associated virtual identity that is returned in the VirtualIdentity property. It is the responsibility of the caller to use the virtual identity to authorize the request."
  },
  "api/dotnet/FoundationaLLM.Common.Clients.ContextServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.ContextServiceClient.html",
    "title": "Class ContextServiceClient | FoundationaLLM",
    "summary": "Class ContextServiceClient Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Provides methods to call the FoundationaLLM Context API service. public class ContextServiceClient : IContextServiceClient Inheritance object ContextServiceClient Implements IContextServiceClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextServiceClient(IOrchestrationContext, IHttpClientFactoryService, ILogger<ContextServiceClient>) Provides methods to call the FoundationaLLM Context API service. public ContextServiceClient(IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService, ILogger<ContextServiceClient> logger) Parameters callContext IOrchestrationContext httpClientFactoryService IHttpClientFactoryService logger ILogger<ContextServiceClient> Methods CreateCodeSession(string, string, string, string, string, string) Calls the Context API service to create a code session. public Task<ContextServiceResponse<CreateCodeSessionResponse>> CreateCodeSession(string instanceId, string agentName, string conversationId, string context, string endpointProvider, string language) Parameters instanceId string The FoundationaLLM instance identifier. agentName string The name of the agent. conversationId string The conversation identifier. context string The context within the conversation in which the code session must be created (e.g., an agent tool name). endpointProvider string The name of the code session endpoint provider. language string The programming language of the code session. Returns Task<ContextServiceResponse<CreateCodeSessionResponse>> A ContextServiceResponse<T> instance where T is of type CreateCodeSessionResponse. CreateFile(string, string, string, string, Stream) Calls the Context API service to create a file. public Task<ContextServiceResponse<ContextFileRecord>> CreateFile(string instanceId, string conversationId, string fileName, string fileContentType, Stream fileContent) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The conversation identifier. fileName string The name of the file to be created. fileContentType string The content type of the file to be created. fileContent Stream The binary content of the file. Returns Task<ContextServiceResponse<ContextFileRecord>> A ContextServiceResponse<T> instance where T is of type ContextFileRecord. GetFileContent(string, string) Calls the Context API service to get the content of a file. public Task<ContextServiceResponse<ContextFileContent>> GetFileContent(string instanceId, string fileId) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The unique identifier of the file. Returns Task<ContextServiceResponse<ContextFileContent>> A ContextServiceResponse<T> instance where T is of type ContextFileContent. GetFileRecord(string, string) Calls the Context API service to get a file record. public Task<ContextServiceResponse<ContextFileRecord>> GetFileRecord(string instanceId, string fileId) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The unique identifier of the file. Returns Task<ContextServiceResponse<ContextFileRecord>> A ContextServiceResponse<T> instance where T is of type ContextFileRecord. GetKnowledgeSources(string, IEnumerable<string>?) Call the Context API to retrieve the list of knowledge sources. public Task<IEnumerable<KnowledgeSource>> GetKnowledgeSources(string instanceId, IEnumerable<string>? knowledgeSourceNames = null) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceNames IEnumerable<string> An optional list of specific knowledge sources to retrieve. Returns Task<IEnumerable<KnowledgeSource>> The list of knowledge sources. QueryKnowledgeSource(string, string, ContextKnowledgeSourceQueryRequest) Calls the Context API to query a knowledge source. public Task<ContextKnowledgeSourceQueryResponse> QueryKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest queryRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request object containing query parameters and options. Returns Task<ContextKnowledgeSourceQueryResponse> A response containing the result of the query execution. RenderKnowledgeSourceGraph(string, string, ContextKnowledgeSourceQueryRequest?) Retrieves the knowledge source's knowledge graph in a format suitable for visualization or further processing. public Task<ContextKnowledgeSourceRenderGraphResponse> RenderKnowledgeSourceGraph(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest? queryRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request containing the details of the query. Returns Task<ContextKnowledgeSourceRenderGraphResponse> UpdateKnowledgeSource(string, string, ContextKnowledgeSourceUpdateRequest) Calls the Context API service to update a knowledge source with the specified knowledge graph and vector database/store details. public Task<ContextServiceResponse> UpdateKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceUpdateRequest updateRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. updateRequest ContextKnowledgeSourceUpdateRequest The update request containing the knowledge graph and vector database/store details. Returns Task<ContextServiceResponse> A response indicating the success of the operation and an optional error message."
  },
  "api/dotnet/FoundationaLLM.Common.Clients.GatewayServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.GatewayServiceClient.html",
    "title": "Class GatewayServiceClient | FoundationaLLM",
    "summary": "Class GatewayServiceClient Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Provides methods to call the Gateway API service. public class GatewayServiceClient Inheritance object GatewayServiceClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayServiceClient(HttpClient, ILogger) Creates a new instance of the Gateway API service. public GatewayServiceClient(HttpClient gatewayAPIHttpClient, ILogger logger) Parameters gatewayAPIHttpClient HttpClient An HttpClient configured to call the Gateway API. logger ILogger The ILogger used for logging. Methods CreateAgentCapability(string, string, string, Dictionary<string, object>?) public Task<Dictionary<string, object>> CreateAgentCapability(string instanceId, string capabilityCategory, string capabilityName, Dictionary<string, object>? parameters = null) Parameters instanceId string capabilityCategory string capabilityName string parameters Dictionary<string, object> Returns Task<Dictionary<string, object>> GetCompletionOperationResult(string, string) public Task<TextOperationResult> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string operationId string Returns Task<TextOperationResult> GetEmbeddingOperationResult(string, string) public Task<TextOperationResult> GetEmbeddingOperationResult(string instanceId, string operationId) Parameters instanceId string operationId string Returns Task<TextOperationResult> StartCompletionOperation(string, TextCompletionRequest) public Task<TextOperationResult> StartCompletionOperation(string instanceId, TextCompletionRequest completionRequest) Parameters instanceId string completionRequest TextCompletionRequest Returns Task<TextOperationResult> StartEmbeddingOperation(string, TextEmbeddingRequest) public Task<TextOperationResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest) Parameters instanceId string embeddingRequest TextEmbeddingRequest Returns Task<TextOperationResult>"
  },
  "api/dotnet/FoundationaLLM.Common.Clients.NullAuthorizationServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.NullAuthorizationServiceClient.html",
    "title": "Class NullAuthorizationServiceClient | FoundationaLLM",
    "summary": "Class NullAuthorizationServiceClient Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Implements an authorization service that bypasses the Authorization API and allows all access by default. public class NullAuthorizationServiceClient : IAuthorizationServiceClient Inheritance object NullAuthorizationServiceClient Implements IAuthorizationServiceClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateRoleAssignment(string, RoleAssignmentCreateRequest, UnifiedUserIdentity) Creates a new role assignment. public Task<RoleAssignmentOperationResult> CreateRoleAssignment(string instanceId, RoleAssignmentCreateRequest roleAssignmentRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentCreateRequest The RoleAssignmentCreateRequest containing the details of the role assignment to be created. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentOperationResult> A RoleAssignmentOperationResult containing information about the result of the operation. DeleteRoleAssignment(string, string, UnifiedUserIdentity) Deletes a role assignment. public Task<RoleAssignmentOperationResult> DeleteRoleAssignment(string instanceId, string roleAssignment, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentOperationResult> A RoleAssignmentOperationResult containing information about the result of the operation. DeleteSecretKey(string, string, string) Deletes a specified secret key. public Task DeleteSecretKey(string instanceId, string contextId, string secretKeyId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to delete. secretKeyId string The unique identifier of the secret key being deleted. Returns Task GetRoleAssignments(string, RoleAssignmentQueryParameters, UnifiedUserIdentity) Returns a list of role assignments. public Task<List<RoleAssignment>> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. userIdentity UnifiedUserIdentity The user identity. Returns Task<List<RoleAssignment>> The list of all role assignments for the specified instance. GetSecretKeys(string, string) Gets a list of SecretKey items that are associated with the specified instance and context. public Task<List<SecretKey>> GetSecretKeys(string instanceId, string contextId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context for which the secret keys are retrieved. Returns Task<List<SecretKey>> A list of SecretKey items. Remarks Each consumer of secret keys should have a unique context identifier. For example, FoundationaLLM resource providers could use the resource object identifier as the context identifier. ProcessAuthorizationRequest(string, string, string?, List<string>, bool, bool, bool, UnifiedUserIdentity) Processes an action authorization request. public Task<ActionAuthorizationResult> ProcessAuthorizationRequest(string instanceId, string action, string? roleName, List<string> resourcePaths, bool expandResourceTypePaths, bool includeRoleAssignments, bool includeActions, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. action string The action identifier. roleName string An optional role name to check for assignment. resourcePaths List<string> The resource paths. expandResourceTypePaths bool A value indicating whether to expand resource type paths that are not authorized. includeRoleAssignments bool includeActions bool A value indicating whether to include authorizable actions in the response. userIdentity UnifiedUserIdentity The user identity. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing. Remarks If the action specified by action is not authorized for a resource type path, and expandResourceTypePaths is set to true, the response will include any authorized resource paths matching the resource type path. If includeRoles is set to true, for each authrorized resource path, the response will include the roles assigned directly or indirectly to the resource path. If action is set to true, for each authorized resource path, the response will include the autorizable actions assigned directly or indirectly to the resource path. UpsertSecretKey(string, SecretKey) Creates a new or updates an existing SecretKey item. public Task<string?> UpsertSecretKey(string instanceId, SecretKey secretKey) Parameters instanceId string The FoundationaLLM instance identifier. secretKey SecretKey The SecretKey item containing the properties of the secret key being created or updated. Returns Task<string> If the secret bey is being created, it returns the secret value of the key. Otherwise, returns null. ValidateSecretKey(string, string, string) Validates a secret key value. public Task<SecretKeyValidationResult> ValidateSecretKey(string instanceId, string contextId, string secretKeyValue) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to validate. secretKeyValue string The secret value of the key. Returns Task<SecretKeyValidationResult> A SecretKeyValidationResult item with the results of the validation. Remarks Each valid secret key has an associated virtual identity that is returned in the VirtualIdentity property. It is the responsibility of the caller to use the virtual identity to authorize the request."
  },
  "api/dotnet/FoundationaLLM.Common.Clients.PollingHttpClient-2.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.PollingHttpClient-2.html",
    "title": "Class PollingHttpClient<TRequest, TResponse> | FoundationaLLM",
    "summary": "Class PollingHttpClient<TRequest, TResponse> Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Provides a generic HTTP client that can be used to poll for a response. public class PollingHttpClient<TRequest, TResponse> where TRequest : CompletionRequestBase where TResponse : CompletionResponseBase Type Parameters TRequest The type of the payload to send to start the operation. TResponse The type of the response received when the operation is completed. Inheritance object PollingHttpClient<TRequest, TResponse> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PollingHttpClient(HttpClient, HttpClient, TRequest?, string, string, TimeSpan, TimeSpan, ILogger) Provides a generic HTTP client that can be used to poll for a response. public PollingHttpClient(HttpClient operationStarterHttpClient, HttpClient operationRetrieverHttpClient, TRequest? request, string operationStarterPath, string operationRetrieverPathTemplate, TimeSpan pollingInterval, TimeSpan maxWaitTime, ILogger logger) Parameters operationStarterHttpClient HttpClient The HttpClient used to start the operation. operationRetrieverHttpClient HttpClient The HttpClient used to retrieve the operation (including its status). request TRequest The TRequest request to send to the service. operationStarterPath string The path used to start the operation. operationRetrieverPathTemplate string The path template used to retrieve the operation (including its status). pollingInterval TimeSpan The TimeSpan interval to poll for the response. maxWaitTime TimeSpan The TimeSpan maximum time to wait for the response. logger ILogger The logger used for logging. Methods ExecuteOperationAsync(CancellationToken) Executes an operation and waits for the response using a polling mechanism. The polling mechanism is based on the following assumptions: - The {operationStarterPath} endpoint will accept a POST with a TRequest object as payload and will return a 202 Accepted status code when the operation is started. - The returned response will contain a LongRunningOperation object with the operation id. - The polling endpoint is available at {operationStarterPath}/{operationId}/status. - The polling endpoint will return a 200 status code when the operation is found. - The returned response will contain a LongRunningOperation object with the current status of the operation, possibly including the result if the operation completed. - The polling endpoint will return a 404 Not Found status code when the operation is not found. public Task<TResponse?> ExecuteOperationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken The CancellationToken indicating the need to cancel the process. Returns Task<TResponse> The TResponse object containing the response. Exceptions InvalidOperationException GetOperationStatusAsync(string, CancellationToken) Gets the status of a running operation. public Task<LongRunningOperation> GetOperationStatusAsync(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The identifier of the running operation. cancellationToken CancellationToken The CancellationToken indicating the need to cancel the process. Returns Task<LongRunningOperation> A LongRunningOperationobject providing details about the running operation. StartOperationAsync(CancellationToken) Starts an operation and returns immediately. public Task<LongRunningOperation> StartOperationAsync(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken The CancellationToken indicating the need to cancel the process. Returns Task<LongRunningOperation> A LongRunningOperationobject providing details about the newly started operation."
  },
  "api/dotnet/FoundationaLLM.Common.Clients.PollingResourceRunner-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.PollingResourceRunner-1.html",
    "title": "Class PollingResourceRunner<TResource> | FoundationaLLM",
    "summary": "Class PollingResourceRunner<TResource> Namespace FoundationaLLM.Common.Clients Assembly FoundationaLLM.Common.dll Runs a resource using a polling mechanism to check for completion. public class PollingResourceRunner<TResource> where TResource : ResourceBase, IRunnableResource Type Parameters TResource The type of the runnable resource to run. Inheritance object PollingResourceRunner<TResource> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Start(string, IResourceProviderService, TResource, TimeSpan, TimeSpan, ILogger, UnifiedUserIdentity, CancellationToken) Runs the resource and waits for it to complete. public static Task<bool> Start(string instanceId, IResourceProviderService resourceProviderService, TResource resource, TimeSpan pollingInterval, TimeSpan maxWaitInterval, ILogger logger, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken = default) Parameters instanceId string The FoundationaLLM instance identifier. resourceProviderService IResourceProviderService The resource provider service that manages the runnable resource. resource TResource The runnable resource to run. pollingInterval TimeSpan The interval to poll for the status. maxWaitInterval TimeSpan The maximum interval to wait for the resource run to complete. logger ILogger The logger used for logging. userIdentity UnifiedUserIdentity The identity of the user driving the run. cancellationToken CancellationToken The cancellation token indicating the need to cancel the run. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Common.Clients.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Clients.html",
    "title": "Namespace FoundationaLLM.Common.Clients | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Clients Classes AuthorizationServiceClient Provides methods for interacting with the Authorization API. ContextServiceClient Provides methods to call the FoundationaLLM Context API service. GatewayServiceClient Provides methods to call the Gateway API service. NullAuthorizationServiceClient Implements an authorization service that bypasses the Authorization API and allows all access by default. PollingHttpClient<TRequest, TResponse> Provides a generic HTTP client that can be used to poll for a response. PollingResourceRunner<TResource> Runs a resource using a polling mechanism to check for completion."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentCapabilityCategoryNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentCapabilityCategoryNames.html",
    "title": "Class AgentCapabilityCategoryNames | FoundationaLLM",
    "summary": "Class AgentCapabilityCategoryNames Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants for the agent capability names. public static class AgentCapabilityCategoryNames Inheritance object AgentCapabilityCategoryNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureAIAgents Indicates the agent has the Azure AI Agents Service capability. public const string AzureAIAgents = \"AzureAI.AgentService\" Field Value string FoundationaLLMKnowledgeManagement Indicates the agent has the FoundationaLLM Knowledge Management capability. public const string FoundationaLLMKnowledgeManagement = \"FoundationaLLM.KnowledgeManagement\" Field Value string OpenAIAssistants Indicates the agent has the OpenAI Assistants API capability. public const string OpenAIAssistants = \"OpenAI.Assistants\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentParametersKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentParametersKeys.html",
    "title": "Class AgentParametersKeys | FoundationaLLM",
    "summary": "Class AgentParametersKeys Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants of the keys for all overridable Agent settings. public static class AgentParametersKeys Inheritance object AgentParametersKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All agent parameter keys. public static readonly string[] All Field Value string[] IndexFilterExpression The key name for the index filter expression agent parameter. This value should be a string representing the search filter expression to limit documents to be searched by the index. public const string IndexFilterExpression = \"index_filter_expression\" Field Value string IndexTopN Controls the number of search results to return from an index for prompt augmentation. public const string IndexTopN = \"index_top_n\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentPropertyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentPropertyNames.html",
    "title": "Class AgentPropertyNames | FoundationaLLM",
    "summary": "Class AgentPropertyNames Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Provides the names of the properties allowed in the agent resource property bag. public static class AgentPropertyNames Inheritance object AgentPropertyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureOpenAIAssistantId The identifier of the Azure OpenAI Assistants assistant. public const string AzureOpenAIAssistantId = \"Azure.OpenAI.Assistant.Id\" Field Value string AzureOpenAIAssistantVectorStoreId The identifier of the Azure OpenAI Assistant level vector store (global at the agent level). public const string AzureOpenAIAssistantVectorStoreId = \"Azure.OpenAI.Assistant.VectorStoreId\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentToolCategories.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentToolCategories.html",
    "title": "Class AgentToolCategories | FoundationaLLM",
    "summary": "Class AgentToolCategories Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Provides the agent tool categories. public static class AgentToolCategories Inheritance object AgentToolCategories Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CodeInterpreter The code interpreter category of tools. public const string CodeInterpreter = \"Code Interpreter\" Field Value string Generic The generic category of tools. Contains tools that are not part of any other category. public const string Generic = \"Generic\" Field Value string ImageGeneration The image generation category of tools. public const string ImageGeneration = \"Image Generation\" Field Value string KnowledgeSearch The knowledge search category of tools. public const string KnowledgeSearch = \"Knowledge Search\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentToolNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentToolNames.html",
    "title": "Class AgentToolNames | FoundationaLLM",
    "summary": "Class AgentToolNames Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Registry of built-in tool names. public static class AgentToolNames Inheritance object AgentToolNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DALLEImageGenerationTool Name of the built-in tool for DALL-E image generation. public const string DALLEImageGenerationTool = \"DALLEImageGeneration\" Field Value string OpenAIAssistantsCodeInterpreterTool Name of the built-in tool for the OpenAI Assistants Code Interpreter. public const string OpenAIAssistantsCodeInterpreterTool = \"OpenAIAssistantsCodeInterpreter\" Field Value string OpenAIAssistantsFileSearchTool Name of the built-in tool OpenAIAssistantsFileSearch. public const string OpenAIAssistantsFileSearchTool = \"OpenAIAssistantsFileSearch\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentToolPropertyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.AgentToolPropertyNames.html",
    "title": "Class AgentToolPropertyNames | FoundationaLLM",
    "summary": "Class AgentToolPropertyNames Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Provides well-known parameter names for agent tools. public static class AgentToolPropertyNames Inheritance object AgentToolPropertyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CodeSessionEndpoint The code session endpoint. public const string CodeSessionEndpoint = \"code_session_endpoint\" Field Value string CodeSessionEndpointProvider The name of the code session provider. public const string CodeSessionEndpointProvider = \"code_session_endpoint_provider\" Field Value string CodeSessionId The identifier of the code session. public const string CodeSessionId = \"code_session_id\" Field Value string CodeSessionLanguage The programming language of the code session. public const string CodeSessionLanguage = \"code_session_language\" Field Value string CodeSessionRequired Indicates whether the agent tool requires a code session. public const string CodeSessionRequired = \"code_session_required\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.CompletionRequestObjectsKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.CompletionRequestObjectsKeys.html",
    "title": "Class CompletionRequestObjectsKeys | FoundationaLLM",
    "summary": "Class CompletionRequestObjectsKeys Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants for the keys that can be added to the Objects dictionary. public static class CompletionRequestObjectsKeys Inheritance object CompletionRequestObjectsKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All completion request objects dictionary keys. public static readonly string[] All Field Value string[] AllAgents The key name for the dictionary containing names and descriptions of agents other than the completion request's agent. This value should be a dictionary where keys are agent names and values are agent descriptions. public const string AllAgents = \"AllAgents\" Field Value string AzureAIAgentServiceAgentId The key name for the Azure AI Agent Service agent identifier value. public const string AzureAIAgentServiceAgentId = \"AzureAI.AgentService.Agent.Id\" Field Value string AzureAIAgentServiceThreadId The key name for the Azure AI Agent Service thread identifier value. public const string AzureAIAgentServiceThreadId = \"AzureAI.AgentService.Thread.Id\" Field Value string ContextAPIEndpointConfiguration The key name for the Context API EndpointConfiguration identifier value. public const string ContextAPIEndpointConfiguration = \"ContextAPIEndpointConfiguration\" Field Value string GatewayAPIEndpointConfiguration The key name for the Gateway API EndpointConfiguration identifier value. public const string GatewayAPIEndpointConfiguration = \"GatewayAPIEndpointConfiguration\" Field Value string InstanceId The key name for the FoundationaLLM instance identifier value. public const string InstanceId = \"FoundationaLLM.InstanceId\" Field Value string OpenAIAssistantsAssistantId The key name for the OpenAI assistant identifier value. public const string OpenAIAssistantsAssistantId = \"OpenAI.Assistants.Assistant.Id\" Field Value string OpenAIAssistantsThreadId The key name for the OpenAI assistant thread identifier value. public const string OpenAIAssistantsThreadId = \"OpenAI.Assistants.Thread.Id\" Field Value string ToolNames The key name for the list of tool names that are registered with the agent. public const string ToolNames = \"ToolNames\" Field Value string WorkflowInvocationAttachedFiles The key name for the workflow invocation attached files. public const string WorkflowInvocationAttachedFiles = \"Workflow.Invocation.AttachedFiles\" Field Value string WorkflowInvocationConversationFiles The key name for the workflow invocation conversation files. public const string WorkflowInvocationConversationFiles = \"Workflow.Invocation.ConversationFiles\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.InputMessageRoles.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.InputMessageRoles.html",
    "title": "Class InputMessageRoles | FoundationaLLM",
    "summary": "Class InputMessageRoles Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Constants for input message roles. public static class InputMessageRoles Inheritance object InputMessageRoles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Assistant Assistant role. public const string Assistant = \"assistant\" Field Value string System System role. public const string System = \"system\" Field Value string Tool Tool role. public const string Tool = \"tool\" Field Value string User User role. public const string User = \"user\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.ModelParametersKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.ModelParametersKeys.html",
    "title": "Class ModelParametersKeys | FoundationaLLM",
    "summary": "Class ModelParametersKeys Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Contains constants of the keys for all overridable model settings. public static class ModelParametersKeys Inheritance object ModelParametersKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All model parameter keys. public static readonly string[] All Field Value string[] DoSample Whether or not to use sampling; use greedy decoding otherwise. public const string DoSample = \"do_sample\" Field Value string IgnoreEOS Whether to ignore the EOS token and continue generating tokens after the EOS token is generated. Defaults to False. public const string IgnoreEOS = \"ignore_eos\" Field Value string MaxNewTokens Sets a limit on the number of tokens per model response. The API supports a maximum of 4000 tokens shared between the prompt (including system message, examples, message history, and user query) and the model's response. One token is roughly 4 characters for typical English text. public const string MaxNewTokens = \"max_new_tokens\" Field Value string ReturnFullText Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. public const string ReturnFullText = \"return_full_text\" Field Value string Temperature Controls randomness. Lowering the temperature means that the model will produce more repetitive and deterministic responses. Increasing the temperature will result in more unexpected or creative responses. Try adjusting temperature or Top P but not both. This value should be a float between 0.0 and 1.0. public const string Temperature = \"temperature\" Field Value string TopK The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. public const string TopK = \"top_k\" Field Value string TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling. Top P (or Top Probabilities) is imilar to temperature, this controls randomness but uses a different method. Lowering Top P will narrow the model’s token selection to likelier tokens. Increasing Top P will let the model choose from tokens with both high and low likelihood. Try adjusting temperature or Top P but not both. public const string TopP = \"top_p\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.OperationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.OperationTypes.html",
    "title": "Class OperationTypes | FoundationaLLM",
    "summary": "Class OperationTypes Namespace FoundationaLLM.Common.Constants.Agents Assembly FoundationaLLM.Common.dll Type of endpoint operations. public static class OperationTypes Inheritance object OperationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Chat Chat completions operation. public const string Chat = \"chat\" Field Value string Completions Completions operation. public const string Completions = \"completions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Agents.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Agents.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Agents | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Agents Classes AgentCapabilityCategoryNames Contains constants for the agent capability names. AgentParametersKeys Contains constants of the keys for all overridable Agent settings. AgentPropertyNames Provides the names of the properties allowed in the agent resource property bag. AgentToolCategories Provides the agent tool categories. AgentToolNames Registry of built-in tool names. AgentToolPropertyNames Provides well-known parameter names for agent tools. CompletionRequestObjectsKeys Contains constants for the keys that can be added to the Objects dictionary. InputMessageRoles Constants for input message roles. ModelParametersKeys Contains constants of the keys for all overridable model settings. OperationTypes Type of endpoint operations."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationParametersKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationParametersKeys.html",
    "title": "Class AuthenticationParametersKeys | FoundationaLLM",
    "summary": "Class AuthenticationParametersKeys Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Provides authetication key names for the AuthenticationParameters properties on ApiEndpointConfigurations public static class AuthenticationParametersKeys Inheritance object AuthenticationParametersKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKeyConfigurationName The name of the App Config entry that contains the API key. public const string APIKeyConfigurationName = \"api_key_configuration_name\" Field Value string APIKeyHeaderName The name of the header where the API key should provided. public const string APIKeyHeaderName = \"api_key_header_name\" Field Value string APIKeyPrefix An optional prefix that must be added before the API key (e.g., Bearer). public const string APIKeyPrefix = \"api_key_prefix\" Field Value string All All authentication parameter keys. public static readonly string[] All Field Value string[] Scope The scope required for authentication. public const string Scope = \"scope\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.AuthenticationTypes.html",
    "title": "Enum AuthenticationTypes | FoundationaLLM",
    "summary": "Enum AuthenticationTypes Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Authentication types for API Endpoints public enum AuthenticationTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields APIKey = 1 API key authentication type. AccountKey = 3 Account key authentication type. AzureIdentity = 0 Azure managed identity authentication type. ConnectionString = 2 Connection string authentication type. Unknown = -1 Unknown authentication type."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.EntraUserClaimConstants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.EntraUserClaimConstants.html",
    "title": "Class EntraUserClaimConstants | FoundationaLLM",
    "summary": "Class EntraUserClaimConstants Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Additional claim constants that are not included in Microsoft.Identity.Web.ClaimConstants. public static class EntraUserClaimConstants Inheritance object EntraUserClaimConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Groups Groups claim. public const string Groups = \"groups\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.GroupIDs.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.GroupIDs.html",
    "title": "Class GroupIDs | FoundationaLLM",
    "summary": "Class GroupIDs Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Constants for well-known group IDs. public static class GroupIDs Inheritance object GroupIDs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllAgentsVirtualSecurityGroup Virtual security group for all agents. public const string AllAgentsVirtualSecurityGroup = \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ObjectTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ObjectTypes.html",
    "title": "Class ObjectTypes | FoundationaLLM",
    "summary": "Class ObjectTypes Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Contains the names of common authentication object types. public static class ObjectTypes Inheritance object ObjectTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Group A group account. public const string Group = \"Group\" Field Value string Other Other object type. public const string Other = \"Other\" Field Value string ServicePrincipal A service principal account. public const string ServicePrincipal = \"ServicePrincipal\" Field Value string User A user account. public const string User = \"User\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.RoleAssignmentResultReasons.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.RoleAssignmentResultReasons.html",
    "title": "Class RoleAssignmentResultReasons | FoundationaLLM",
    "summary": "Class RoleAssignmentResultReasons Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll Constants for role assignment result reasons. public static class RoleAssignmentResultReasons Inheritance object RoleAssignmentResultReasons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AssignmentExists The assignment already exists. public const string AssignmentExists = \"AssignmentExists\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ScopeURIs.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.ScopeURIs.html",
    "title": "Class ScopeURIs | FoundationaLLM",
    "summary": "Class ScopeURIs Namespace FoundationaLLM.Common.Constants.Authentication Assembly FoundationaLLM.Common.dll The URIs for the scopes used in the application. public static class ScopeURIs Inheritance object ScopeURIs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Authorization The Application ID URI for the Authorization API. public const string FoundationaLLM_Authorization = \"api://FoundationaLLM-Authorization\" Field Value string FoundationaLLM_Core The Application ID URI for the Core API. public const string FoundationaLLM_Core = \"api://FoundationaLLM-Core\" Field Value string FoundationaLLM_Management The Application ID URI for the Management API. public const string FoundationaLLM_Management = \"api://FoundationaLLM-Management\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Authentication | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Authentication Classes AuthenticationParametersKeys Provides authetication key names for the AuthenticationParameters properties on ApiEndpointConfigurations EntraUserClaimConstants Additional claim constants that are not included in Microsoft.Identity.Web.ClaimConstants. GroupIDs Constants for well-known group IDs. ObjectTypes Contains the names of common authentication object types. RoleAssignmentResultReasons Constants for role assignment result reasons. ScopeURIs The URIs for the scopes used in the application. Enums AuthenticationTypes Authentication types for API Endpoints"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizableActionNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizableActionNames.html",
    "title": "Class AuthorizableActionNames | FoundationaLLM",
    "summary": "Class AuthorizableActionNames Namespace FoundationaLLM.Common.Constants.Authorization Assembly FoundationaLLM.Common.dll Provides the names of the authorizable actions managed by the FoundationaLLM.Authorization provider. public static class AuthorizableActionNames Inheritance object AuthorizableActionNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_AIModel_AIModels_Delete Delete AI models. public const string FoundationaLLM_AIModel_AIModels_Delete = \"FoundationaLLM.AIModel/aiModels/delete\" Field Value string FoundationaLLM_AIModel_AIModels_Read Read AI models public const string FoundationaLLM_AIModel_AIModels_Read = \"FoundationaLLM.AIModel/aiModels/read\" Field Value string FoundationaLLM_AIModel_AIModels_Write Create or update AI models. public const string FoundationaLLM_AIModel_AIModels_Write = \"FoundationaLLM.AIModel/aiModels/write\" Field Value string FoundationaLLM_AIModel_Management_Write Execute management actions. public const string FoundationaLLM_AIModel_Management_Write = \"FoundationaLLM.AIModel/management/write\" Field Value string FoundationaLLM_Agent_Agents_Delete Delete agents. public const string FoundationaLLM_Agent_Agents_Delete = \"FoundationaLLM.Agent/agents/delete\" Field Value string FoundationaLLM_Agent_Agents_Read Read agents. public const string FoundationaLLM_Agent_Agents_Read = \"FoundationaLLM.Agent/agents/read\" Field Value string FoundationaLLM_Agent_Agents_Write Create or update agents. public const string FoundationaLLM_Agent_Agents_Write = \"FoundationaLLM.Agent/agents/write\" Field Value string FoundationaLLM_Agent_Management_Write Execute management actions. public const string FoundationaLLM_Agent_Management_Write = \"FoundationaLLM.Agent/management/write\" Field Value string FoundationaLLM_Agent_Tools_Delete Delete tools. public const string FoundationaLLM_Agent_Tools_Delete = \"FoundationaLLM.Agent/tools/delete\" Field Value string FoundationaLLM_Agent_Tools_Read Read tools. public const string FoundationaLLM_Agent_Tools_Read = \"FoundationaLLM.Agent/tools/read\" Field Value string FoundationaLLM_Agent_Tools_Write Create or update tools. public const string FoundationaLLM_Agent_Tools_Write = \"FoundationaLLM.Agent/tools/write\" Field Value string FoundationaLLM_Agent_Workflows_Delete Delete workflows. public const string FoundationaLLM_Agent_Workflows_Delete = \"FoundationaLLM.Agent/workflows/delete\" Field Value string FoundationaLLM_Agent_Workflows_Read Read workflows. public const string FoundationaLLM_Agent_Workflows_Read = \"FoundationaLLM.Agent/workflows/read\" Field Value string FoundationaLLM_Agent_Workflows_Write Create or update workflows. public const string FoundationaLLM_Agent_Workflows_Write = \"FoundationaLLM.Agent/workflows/write\" Field Value string FoundationaLLM_Attachment_Attachments_Delete Delete attachments. public const string FoundationaLLM_Attachment_Attachments_Delete = \"FoundationaLLM.Attachment/attachments/delete\" Field Value string FoundationaLLM_Attachment_Attachments_Read Read attachments. public const string FoundationaLLM_Attachment_Attachments_Read = \"FoundationaLLM.Attachment/attachments/read\" Field Value string FoundationaLLM_Attachment_Attachments_Write Create or update attachments. public const string FoundationaLLM_Attachment_Attachments_Write = \"FoundationaLLM.Attachment/attachments/write\" Field Value string FoundationaLLM_Authorization_Management_Write Execute management actions. public const string FoundationaLLM_Authorization_Management_Write = \"FoundationaLLM.Authorization/management/write\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Delete Delete role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Delete = \"FoundationaLLM.Authorization/roleAssignments/delete\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Read Read role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Read = \"FoundationaLLM.Authorization/roleAssignments/read\" Field Value string FoundationaLLM_Authorization_RoleAssignments_Write Create or update role assignments. public const string FoundationaLLM_Authorization_RoleAssignments_Write = \"FoundationaLLM.Authorization/roleAssignments/write\" Field Value string FoundationaLLM_Authorization_RoleDefinitions_Read Read role definitions. public const string FoundationaLLM_Authorization_RoleDefinitions_Read = \"FoundationaLLM.Authorization/roleDefinitions/read\" Field Value string FoundationaLLM_AzureAI_AgentConversationMappings_Read Read Azure AI Agent Service conversation mappings. public const string FoundationaLLM_AzureAI_AgentConversationMappings_Read = \"FoundationaLLM.AzureAI/agentConversationMappings/read\" Field Value string FoundationaLLM_AzureAI_AgentConversationMappings_Write Create or update Azure AI Agent Service conversation mappings. public const string FoundationaLLM_AzureAI_AgentConversationMappings_Write = \"FoundationaLLM.AzureAI/agentConversationMappings/write\" Field Value string FoundationaLLM_AzureAI_AgentFileMappings_Delete Delete Azure AI Agent Service file mappings. public const string FoundationaLLM_AzureAI_AgentFileMappings_Delete = \"FoundationaLLM.AzureAI/agentFileMappings/delete\" Field Value string FoundationaLLM_AzureAI_AgentFileMappings_Read Read Azure AI Agent Service file mappings. public const string FoundationaLLM_AzureAI_AgentFileMappings_Read = \"FoundationaLLM.AzureAI/agentFileMappings/read\" Field Value string FoundationaLLM_AzureAI_AgentFileMappings_Write Create or update Azure AI Agent Service file mappings. public const string FoundationaLLM_AzureAI_AgentFileMappings_Write = \"FoundationaLLM.AzureAI/agentFileMappings/write\" Field Value string FoundationaLLM_AzureAI_ConversationMappings_Delete Delete Azure AI Agent Service conversation mappings. public const string FoundationaLLM_AzureAI_ConversationMappings_Delete = \"FoundationaLLM.AzureAI/agentConversationMappings/delete\" Field Value string FoundationaLLM_AzureAI_Management_Write Execute management actions. public const string FoundationaLLM_AzureAI_Management_Write = \"FoundationaLLM.AzureAI/management/write\" Field Value string FoundationaLLM_AzureAI_Projects_Delete Delete Azure AI project resources. public const string FoundationaLLM_AzureAI_Projects_Delete = \"FoundationaLLM.AzureAI/projects/delete\" Field Value string FoundationaLLM_AzureAI_Projects_Read Read Azure AI Agent Service project resources. public const string FoundationaLLM_AzureAI_Projects_Read = \"FoundationaLLM.AzureAI/projects/read\" Field Value string FoundationaLLM_AzureAI_Projects_Write Create or update Azure AI project resource. public const string FoundationaLLM_AzureAI_Projects_Write = \"FoundationaLLM.AzureAI/projects/write\" Field Value string FoundationaLLM_AzureOpenAI_ConversationMappings_Delete Delete Azure OpenAI conversation mappings. public const string FoundationaLLM_AzureOpenAI_ConversationMappings_Delete = \"FoundationaLLM.AzureOpenAI/conversationMappings/delete\" Field Value string FoundationaLLM_AzureOpenAI_ConversationMappings_Read Read Azure OpenAI conversation mappings. public const string FoundationaLLM_AzureOpenAI_ConversationMappings_Read = \"FoundationaLLM.AzureOpenAI/conversationMappings/read\" Field Value string FoundationaLLM_AzureOpenAI_ConversationMappings_Write Create or update Azure OpenAI conversation mappings. public const string FoundationaLLM_AzureOpenAI_ConversationMappings_Write = \"FoundationaLLM.AzureOpenAI/conversationMappings/write\" Field Value string FoundationaLLM_AzureOpenAI_FileMappings_Delete Delete Azure OpenAI file mappings. public const string FoundationaLLM_AzureOpenAI_FileMappings_Delete = \"FoundationaLLM.AzureOpenAI/fileMappings/delete\" Field Value string FoundationaLLM_AzureOpenAI_FileMappings_Read Read Azure OpenAI file mappings. public const string FoundationaLLM_AzureOpenAI_FileMappings_Read = \"FoundationaLLM.AzureOpenAI/fileMappings/read\" Field Value string FoundationaLLM_AzureOpenAI_FileMappings_Write Create or update Azure OpenAI file mappings. public const string FoundationaLLM_AzureOpenAI_FileMappings_Write = \"FoundationaLLM.AzureOpenAI/fileMappings/write\" Field Value string FoundationaLLM_AzureOpenAI_Management_Write Execute management actions. public const string FoundationaLLM_AzureOpenAI_Management_Write = \"FoundationaLLM.AzureOpenAI/management/write\" Field Value string FoundationaLLM_Configuration_APIEndpoinConfigurations_Delete Delete API endpoint configurations. public const string FoundationaLLM_Configuration_APIEndpoinConfigurations_Delete = \"FoundationaLLM.Configuration/apiEndpointConfigurations/delete\" Field Value string FoundationaLLM_Configuration_APIEndpointConfigurations_Read Read API endpoint configurations. public const string FoundationaLLM_Configuration_APIEndpointConfigurations_Read = \"FoundationaLLM.Configuration/apiEndpointConfigurations/read\" Field Value string FoundationaLLM_Configuration_APIEndpointConfigurations_Write Create or update API endpoint configurations. public const string FoundationaLLM_Configuration_APIEndpointConfigurations_Write = \"FoundationaLLM.Configuration/apiEndpointConfigurations/write\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Delete Delete app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Delete = \"FoundationaLLM.Configuration/appConfigurations/delete\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Read Read app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Read = \"FoundationaLLM.Configuration/appConfigurations/read\" Field Value string FoundationaLLM_Configuration_AppConfigurations_Write Create or update app configurations. public const string FoundationaLLM_Configuration_AppConfigurations_Write = \"FoundationaLLM.Configuration/appConfigurations/write\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Delete Delete key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Delete = \"FoundationaLLM.Configuration/keyVaultSecrets/delete\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Read Read key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Read = \"FoundationaLLM.Configuration/keyVaultSecrets/read\" Field Value string FoundationaLLM_Configuration_KeyVaultSecrets_Write Create or update key vault secrets. public const string FoundationaLLM_Configuration_KeyVaultSecrets_Write = \"FoundationaLLM.Configuration/keyVaultSecrets/write\" Field Value string FoundationaLLM_Configuration_Management_Write Execute management actions. public const string FoundationaLLM_Configuration_Management_Write = \"FoundationaLLM.Configuration/management/write\" Field Value string FoundationaLLM_Context_KnowledgeSources_Delete Delete context knowledge sources. public const string FoundationaLLM_Context_KnowledgeSources_Delete = \"FoundationaLLM.Context/knowledgeSources/delete\" Field Value string FoundationaLLM_Context_KnowledgeSources_Read Read context knowledge sources. public const string FoundationaLLM_Context_KnowledgeSources_Read = \"FoundationaLLM.Context/knowledgeSources/read\" Field Value string FoundationaLLM_Context_KnowledgeSources_Write Create or update context knowledge sources. public const string FoundationaLLM_Context_KnowledgeSources_Write = \"FoundationaLLM.Context/knowledgeSources/write\" Field Value string FoundationaLLM_Context_Management_Write Execute management actions. public const string FoundationaLLM_Context_Management_Write = \"FoundationaLLM.Context/management/write\" Field Value string FoundationaLLM_Conversation_Conversations_Delete Delete conversations. public const string FoundationaLLM_Conversation_Conversations_Delete = \"FoundationaLLM.Conversation/conversations/delete\" Field Value string FoundationaLLM_Conversation_Conversations_Read Read conversations public const string FoundationaLLM_Conversation_Conversations_Read = \"FoundationaLLM.Conversation/conversations/read\" Field Value string FoundationaLLM_Conversation_Conversations_Write Create or update conversations. public const string FoundationaLLM_Conversation_Conversations_Write = \"FoundationaLLM.Conversation/conversations/write\" Field Value string FoundationaLLM_Conversation_Management_Write Execute management actions. public const string FoundationaLLM_Conversation_Management_Write = \"FoundationaLLM.Conversation/management/write\" Field Value string FoundationaLLM_DataPipeline_DataPipelines_Delete Delete data pipelines. public const string FoundationaLLM_DataPipeline_DataPipelines_Delete = \"FoundationaLLM.DataPipeline/dataPipelines/delete\" Field Value string FoundationaLLM_DataPipeline_DataPipelines_Read Read data pipelines. public const string FoundationaLLM_DataPipeline_DataPipelines_Read = \"FoundationaLLM.DataPipeline/dataPipelines/read\" Field Value string FoundationaLLM_DataPipeline_DataPipelines_Write Create or update data pipelines. public const string FoundationaLLM_DataPipeline_DataPipelines_Write = \"FoundationaLLM.DataPipeline/dataPipelines/write\" Field Value string FoundationaLLM_DataPipeline_Management_Write Execute management actions. public const string FoundationaLLM_DataPipeline_Management_Write = \"FoundationaLLM.DataPipeline/management/write\" Field Value string FoundationaLLM_DataSource_DataSources_Delete Delete data sources. public const string FoundationaLLM_DataSource_DataSources_Delete = \"FoundationaLLM.DataSource/dataSources/delete\" Field Value string FoundationaLLM_DataSource_DataSources_Read Read data sources. public const string FoundationaLLM_DataSource_DataSources_Read = \"FoundationaLLM.DataSource/dataSources/read\" Field Value string FoundationaLLM_DataSource_DataSources_Write Create or update data sources. public const string FoundationaLLM_DataSource_DataSources_Write = \"FoundationaLLM.DataSource/dataSources/write\" Field Value string FoundationaLLM_DataSource_Management_Write Execute management actions. public const string FoundationaLLM_DataSource_Management_Write = \"FoundationaLLM.DataSource/management/write\" Field Value string FoundationaLLM_Plugin_Management_Write Execute management actions. public const string FoundationaLLM_Plugin_Management_Write = \"FoundationaLLM.Plugin/management/write\" Field Value string FoundationaLLM_Plugin_PluginPackages_Delete Delete plugin packages. public const string FoundationaLLM_Plugin_PluginPackages_Delete = \"FoundationaLLM.Plugin/pluginPackages/delete\" Field Value string FoundationaLLM_Plugin_PluginPackages_Read Read plugin packages. public const string FoundationaLLM_Plugin_PluginPackages_Read = \"FoundationaLLM.Plugin/pluginPackages/read\" Field Value string FoundationaLLM_Plugin_PluginPackages_Write Create or update plugin packages. public const string FoundationaLLM_Plugin_PluginPackages_Write = \"FoundationaLLM.Plugin/pluginPackages/write\" Field Value string FoundationaLLM_Plugin_Plugins_Delete Delete plugins. public const string FoundationaLLM_Plugin_Plugins_Delete = \"FoundationaLLM.Plugin/plugins/delete\" Field Value string FoundationaLLM_Plugin_Plugins_Read Read plugins. public const string FoundationaLLM_Plugin_Plugins_Read = \"FoundationaLLM.Plugin/plugins/read\" Field Value string FoundationaLLM_Plugin_Plugins_Write Create or update plugins. public const string FoundationaLLM_Plugin_Plugins_Write = \"FoundationaLLM.Plugin/plugins/write\" Field Value string FoundationaLLM_Prompt_Management_Write Execute management actions. public const string FoundationaLLM_Prompt_Management_Write = \"FoundationaLLM.Prompt/management/write\" Field Value string FoundationaLLM_Prompt_Prompts_Delete Delete prompts. public const string FoundationaLLM_Prompt_Prompts_Delete = \"FoundationaLLM.Prompt/prompts/delete\" Field Value string FoundationaLLM_Prompt_Prompts_Read Read prompts. public const string FoundationaLLM_Prompt_Prompts_Read = \"FoundationaLLM.Prompt/prompts/read\" Field Value string FoundationaLLM_Prompt_Prompts_Write Create or update prompts. public const string FoundationaLLM_Prompt_Prompts_Write = \"FoundationaLLM.Prompt/prompts/write\" Field Value string FoundationaLLM_Vector_Management_Write Execute management actions. public const string FoundationaLLM_Vector_Management_Write = \"FoundationaLLM.Vector/management/write\" Field Value string FoundationaLLM_Vector_VectorDatabases_Delete Delete vector databases. public const string FoundationaLLM_Vector_VectorDatabases_Delete = \"FoundationaLLM.Vector/vectorDatabases/delete\" Field Value string FoundationaLLM_Vector_VectorDatabases_Read Read vector databases. public const string FoundationaLLM_Vector_VectorDatabases_Read = \"FoundationaLLM.Vector/vectorDatabases/read\" Field Value string FoundationaLLM_Vector_VectorDatabases_Write Create or update vector databases. public const string FoundationaLLM_Vector_VectorDatabases_Write = \"FoundationaLLM.Vector/vectorDatabases/write\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Delete Delete vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Delete = \"FoundationaLLM.Vectorization/contentSourceProfiles/delete\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Read Read vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Read = \"FoundationaLLM.Vectorization/contentSourceProfiles/read\" Field Value string FoundationaLLM_Vectorization_ContentSourceProfiles_Write Create or update vectorization content source profiles. public const string FoundationaLLM_Vectorization_ContentSourceProfiles_Write = \"FoundationaLLM.Vectorization/contentSourceProfiles/write\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Delete Delete vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Delete = \"FoundationaLLM.Vectorization/indexingProfiles/delete\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Read Read vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Read = \"FoundationaLLM.Vectorization/indexingProfiles/read\" Field Value string FoundationaLLM_Vectorization_IndexingProfiles_Write Create or update vectorization indexing profiles. public const string FoundationaLLM_Vectorization_IndexingProfiles_Write = \"FoundationaLLM.Vectorization/indexingProfiles/write\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Delete Delete vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Delete = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/delete\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Read Read vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Read = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/read\" Field Value string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Write Create or update vectorization text embedding profiles. public const string FoundationaLLM_Vectorization_TextEmbeddingProfiles_Write = \"FoundationaLLM.Vectorization/textEmbeddingProfiles/write\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Delete Delete vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Delete = \"FoundationaLLM.Vectorization/textPartitioningProfiles/delete\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Read Read vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Read = \"FoundationaLLM.Vectorization/textPartitioningProfiles/read\" Field Value string FoundationaLLM_Vectorization_TextPartitioningProfiles_Write Create or update vectorization text partitioning profiles. public const string FoundationaLLM_Vectorization_TextPartitioningProfiles_Write = \"FoundationaLLM.Vectorization/textPartitioningProfiles/write\" Field Value string FoundationaLLM_Vectorization_VectorizationPipelines_Delete Delete vectorization pipelines. public const string FoundationaLLM_Vectorization_VectorizationPipelines_Delete = \"FoundationaLLM.Vectorization/vectorizationPipelines/delete\" Field Value string FoundationaLLM_Vectorization_VectorizationPipelines_Read Read vectorization pipelines. public const string FoundationaLLM_Vectorization_VectorizationPipelines_Read = \"FoundationaLLM.Vectorization/vectorizationPipelines/read\" Field Value string FoundationaLLM_Vectorization_VectorizationPipelines_Write Create or update vectorization pipelines. public const string FoundationaLLM_Vectorization_VectorizationPipelines_Write = \"FoundationaLLM.Vectorization/vectorizationPipelines/write\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Delete Delete vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Delete = \"FoundationaLLM.Vectorization/vectorizationRequests/delete\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Read Read vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Read = \"FoundationaLLM.Vectorization/vectorizationRequests/read\" Field Value string FoundationaLLM_Vectorization_VectorizationRequests_Write Create or update vectorization requests. public const string FoundationaLLM_Vectorization_VectorizationRequests_Write = \"FoundationaLLM.Vectorization/vectorizationRequests/write\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizableOperations.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizableOperations.html",
    "title": "Class AuthorizableOperations | FoundationaLLM",
    "summary": "Class AuthorizableOperations Namespace FoundationaLLM.Common.Constants.Authorization Assembly FoundationaLLM.Common.dll Provides the names of the core authorizable operations. public static class AuthorizableOperations Inheritance object AuthorizableOperations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Delete Delete or purge resources. public const string Delete = \"delete\" Field Value string Read Read resources. public const string Read = \"read\" Field Value string Write Create or update resources. public const string Write = \"write\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizationPolicyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.AuthorizationPolicyNames.html",
    "title": "Class AuthorizationPolicyNames | FoundationaLLM",
    "summary": "Class AuthorizationPolicyNames Namespace FoundationaLLM.Common.Constants.Authorization Assembly FoundationaLLM.Common.dll Provides authorization policy names. public static class AuthorizationPolicyNames Inheritance object AuthorizationPolicyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLMAgentAccessToken Authorization policy for FoundationaLLM Agent Access Tokens. public const string FoundationaLLMAgentAccessToken = \"FoundationaLLMAgentAccessToken\" Field Value string MicrosoftEntraIDNoScopes Authorization policy for Microsoft Entra ID with no scopes. public const string MicrosoftEntraIDNoScopes = \"MicrosoftEntraIDNoScopes\" Field Value string MicrosoftEntraIDStandard Standard authorization policy for Microsoft Entra ID. public const string MicrosoftEntraIDStandard = \"MicrosoftEntraIDStandard\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.RoleDefinitionNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.RoleDefinitionNames.html",
    "title": "Class RoleDefinitionNames | FoundationaLLM",
    "summary": "Class RoleDefinitionNames Namespace FoundationaLLM.Common.Constants.Authorization Assembly FoundationaLLM.Common.dll Provides the names of the role definitions managed by the FoundationaLLM.Authorization provider. public static class RoleDefinitionNames Inheritance object RoleDefinitionNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Agent_Access_Tokens_Contributor Create new agent access tokens. public const string Agent_Access_Tokens_Contributor = \"8c5ea0d3-f5a1-4be5-90a7-a12921c45542\" Field Value string Agents_Contributor Create new agents. public const string Agents_Contributor = \"3f28aa77-a854-4aa7-ae11-ffda238275c9\" Field Value string Attachments_Contributor Upload attachments including uploading to Azure OpenAI file store. public const string Attachments_Contributor = \"8e77fb6a-7a78-43e1-b628-d9e2285fe25a\" Field Value string Contributor Full access to manage all resources without the possiblity of assigning roles in FoundationaLLM RBAC. public const string Contributor = \"a9f0020f-6e3a-49bf-8d1d-35fd53058edf\" Field Value string Conversations_Contributor Create and update conversations, including Azure OpenAI Assistants threads. public const string Conversations_Contributor = \"d0d21b90-5317-499a-9208-3a6cb71b84f9\" Field Value string Data_Pipelines_Contributor Create new data pipelines. public const string Data_Pipelines_Contributor = \"2da16a58-ed63-431a-b90e-9df32c2cae4a\" Field Value string Data_Pipelines_Execution_Manager Manage all aspects related to data pipeline runs. public const string Data_Pipelines_Execution_Manager = \"e959eecb-8edf-4442-b532-4990f9a1df2b\" Field Value string Owner Full access to manage all resources, including the ability to assign roles in FoundationaLLM RBAC. public const string Owner = \"1301f8d4-3bea-4880-945f-315dbd2ddb46\" Field Value string Prompts_Contributor Create new prompts. public const string Prompts_Contributor = \"479e7b36-5965-4a7f-baf7-84e57be854aa\" Field Value string Reader View all resources without the possiblity of making any changes. public const string Reader = \"00a53e72-f66e-4c03-8f81-7e885fd2eb35\" Field Value string Resource_Providers_Administrator Execute management actions on resource providers. public const string Resource_Providers_Administrator = \"63b6cc4d-9e1c-4891-8201-cf58286ebfe6\" Field Value string Role_Based_Access_Control_Administrator Manage access to FoundationaLLM resources by assigning roles using FoundationaLLM RBAC. public const string Role_Based_Access_Control_Administrator = \"17ca4b59-3aee-497d-b43b-95dd7d916f99\" Field Value string User_Access_Administrator Manage access to FoundationaLLM resources. public const string User_Access_Administrator = \"fb8e0fd0-f7e2-4957-89d6-19f44f7d6618\" Field Value string Vector_Databases_Contributor Create new vector databases. public const string Vector_Databases_Contributor = \"c026f070-abc2-4419-aed9-ec0676f81519\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.UserIdentityPropertyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.UserIdentityPropertyNames.html",
    "title": "Class UserIdentityPropertyNames | FoundationaLLM",
    "summary": "Class UserIdentityPropertyNames Namespace FoundationaLLM.Common.Constants.Authorization Assembly FoundationaLLM.Common.dll Defines the property names for the user identity. public static class UserIdentityPropertyNames Inheritance object UserIdentityPropertyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields UserPrincipalName The user's principal name (UPN). public const string UserPrincipalName = \"UPN\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Authorization.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Authorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Authorization Classes AuthorizableActionNames Provides the names of the authorizable actions managed by the FoundationaLLM.Authorization provider. AuthorizableOperations Provides the names of the core authorizable operations. AuthorizationPolicyNames Provides authorization policy names. RoleDefinitionNames Provides the names of the role definitions managed by the FoundationaLLM.Authorization provider. UserIdentityPropertyNames Defines the property names for the user identity."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AuthorizationClaims.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AuthorizationClaims.html",
    "title": "Class AuthorizationClaims | FoundationaLLM",
    "summary": "Class AuthorizationClaims Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Claims that are used in the authorization process. public static class AuthorizationClaims Inheritance object AuthorizationClaims Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ApplicationId A replacement for appid. The application ID of the client using the token. The application can act as itself or on behalf of a user. The application ID typically represents an application object, but it can also represent a service principal object in Microsoft Entra ID. public const string ApplicationId = \"azp\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AzureAI.AzureAIAgentServiceCapabilityParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AzureAI.AzureAIAgentServiceCapabilityParameterNames.html",
    "title": "Class AzureAIAgentServiceCapabilityParameterNames | FoundationaLLM",
    "summary": "Class AzureAIAgentServiceCapabilityParameterNames Namespace FoundationaLLM.Common.Constants.AzureAI Assembly FoundationaLLM.Common.dll Provides the names of the parameters that can be used to create Azure AI Agent Service capabilities. public class AzureAIAgentServiceCapabilityParameterNames Inheritance object AzureAIAgentServiceCapabilityParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks The constants are used by the callers of the GatewayServiceClient implementations. Fields AddFileToCodeInterpreter Indicates the need to add an existing Azure AI agent file to an Azure AI agent code interpreter tool. public const string AddFileToCodeInterpreter = \"AzureAI.AgentService.Agent.File.AddToCodeInterpreter\" Field Value string AddFileToVectorStore Indicates the need to add an existing Azure AI file to an existing Azure AI vector store. public const string AddFileToVectorStore = \"AzureAI.AgentService.File.AddToVectorStore\" Field Value string AgentFileObjectId The object identifier of the FoundationaLLM agent file resource. public const string AgentFileObjectId = \"FoundationaLLM.Agent.File.ObjectId\" Field Value string AgentId Provides the identifier of an existing Azure AI agent. public const string AgentId = \"AzureAI.AgentService.Agent.Id\" Field Value string AgentPrompt Provides the prompt used by the Azure AI agent. public const string AgentPrompt = \"AzureAI.AgentService.Agent.Prompt\" Field Value string AttachmentObjectId The object identifier of the FoundationaLLM attachment resource. public const string AttachmentObjectId = \"FoundationaLLM.Attachment.ObjectId\" Field Value string AzureAIModelDeploymentName Provides the model deployment name used by the Azure AI agent. public const string AzureAIModelDeploymentName = \"AzureAI.ModelDeploymentName\" Field Value string CreateAgent Indicates the need to create a new Azure AI agent. public const string CreateAgent = \"AzureAI.AgentService.Agent.Create\" Field Value string CreateFile Indicates the need to create a new Azure AI agent file. public const string CreateFile = \"AzureAI.AgentService.File.Create\" Field Value string CreateThread Indicates the need to create a new Azure AI agent thread. public const string CreateThread = \"AzureAI.AgentService.Thread.Create\" Field Value string CreateVectorStore Indicates the need to create a vector store in the Azure AI Agent Service. public const string CreateVectorStore = \"AzureAI.AgentService.VectorStore.Create\" Field Value string FileActionOnCodeInterpreterSuccess Indicates whether the Open AI agent file addition or file removal for the code interpreter completed successfully. public const string FileActionOnCodeInterpreterSuccess = \"AzureAI.AgentService.File.FileActionOnCodeInterpreterSuccess\" Field Value string FileActionOnVectorStoreSuccess Indicates whether the Azure AI agent file vectorization or file removal process completed successfully. public const string FileActionOnVectorStoreSuccess = \"AzureAI.AgentService.File.FileActionOnVectorStoreSuccess\" Field Value string FileId Provides the identifier of an existing Azure AI file. public const string FileId = \"AzureAI.AgentService.File.Id\" Field Value string ProjectConnectionString Provides the Azure AI project connection string. public const string ProjectConnectionString = \"AzureAI.Project.ConnectionString\" Field Value string RemoveFileFromCodeInterpreter Indicates the need to remove an existing Azure AI agent file from an Azure AI agent code interpreter tool. public const string RemoveFileFromCodeInterpreter = \"AzureAI.AgentService.Agent.File.RemoveFromCodeInterpreter\" Field Value string RemoveFileFromVectorStore Indicates the need to remove an existing Azure AI agent file from an Azure AI vector store. public const string RemoveFileFromVectorStore = \"AzureAI.AgentService.File.RemoveFromVectorStore\" Field Value string ThreadId Provides the identifier of an existing AzureAI agent thread. public const string ThreadId = \"AzureAI.AgentService.Thread.Id\" Field Value string VectorStoreId Provides the identifier of an existing Azure AI agent vector store. public const string VectorStoreId = \"AzureAI.AgentService.VectorStore.Id\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AzureAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AzureAI.html",
    "title": "Namespace FoundationaLLM.Common.Constants.AzureAI | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.AzureAI Classes AzureAIAgentServiceCapabilityParameterNames Provides the names of the parameters that can be used to create Azure AI Agent Service capabilities."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.AzureCosmosDBContainers.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.AzureCosmosDBContainers.html",
    "title": "Class AzureCosmosDBContainers | FoundationaLLM",
    "summary": "Class AzureCosmosDBContainers Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM Cosmos DB container names. public static class AzureCosmosDBContainers Inheritance object AzureCosmosDBContainers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Agents Stores agent resource references. public const string Agents = \"Agents\" Field Value string Attachments Stores file attachment references. public const string Attachments = \"Attachments\" Field Value string CompletionsCache The vector store for cached completions (used by the semantic cache service). public const string CompletionsCache = \"CompletionsCache\" Field Value string DataPipelines Stores objects managed by the FoundationaLLM.DataPipeline resource provider. public const string DataPipelines = \"DataPipelines\" Field Value string ExternalResources Stores information about external resources (e.g., Azure OpenAI assistants threads and files). public const string ExternalResources = \"ExternalResources\" Field Value string Leases The Cosmos DB change feed leases container. public const string Leases = \"leases\" Field Value string Operations Stores context for long running operations. public const string Operations = \"Operations\" Field Value string Sessions Stores chat sessions and related messages. public const string Sessions = \"Sessions\" Field Value string State Stores state data for background processing. public const string State = \"State\" Field Value string UserProfiles Stores user profile data. public const string UserProfiles = \"UserProfiles\" Field Value string UserSessions Stores a mapping between user identities and chat sessions. public const string UserSessions = \"UserSessions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.APIEndpointProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.APIEndpointProviders.html",
    "title": "Class APIEndpointProviders | FoundationaLLM",
    "summary": "Class APIEndpointProviders Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Language Model provider constants. public static class APIEndpointProviders Inheritance object APIEndpointProviders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AZUREAI Azure AI Inferencing API public const string AZUREAI = \"azureai\" Field Value string All All providers. public static readonly string[] All Field Value string[] BEDROCK Amazon Bedrock public const string BEDROCK = \"bedrock\" Field Value string MICROSOFT Microsoft public const string MICROSOFT = \"microsoft\" Field Value string OPENAI OpenAI public const string OPENAI = \"openai\" Field Value string VERTEXAI Google VertexAI public const string VERTEXAI = \"vertexai\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeyFilters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeyFilters.html",
    "title": "Class AppConfigurationKeyFilters | FoundationaLLM",
    "summary": "Class AppConfigurationKeyFilters Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all configuration section filters used to select subsets of configuration settings. public static class AppConfigurationKeyFilters Inheritance object AppConfigurationKeyFilters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints Filter for the configuration section used to identify the settings for all API endpoints. public const string FoundationaLLM_APIEndpoints = \"FoundationaLLM:APIEndpoints:*\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials Filter for the configuration section used to identify the authentication settings for the Authorization API. Due to its special nature, the Authorization API does not have a corresponding APIEndpointConfiguration resource. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration Filter for the configuration section used to identify the settings for the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage Filter for the configuration section used to identify the settings for storage account used by the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration:Storage:*\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration Filter for the configuration section used to identify the settings for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration Filter for the configuration section used to identify the settings for the Azure Cosmos DB NoSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzureCosmosDBNoSQLVectorStore:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration Filter for the configuration section used to identify the settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials Filter for the configuration section used to identify the essential settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials Filter for the configuration section used to identify the essential settings for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials = \"FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration Filter for the configuration section used to identify the settings for the Azure PostgreSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzurePostgreSQLVectorStore:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration Filter for the configuration section for the FoundationaLLM Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Essentials Filter for the configuration section used to identify the essential settings for the Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Essentials = \"FoundationaLLM:APIEndpoints:ContextAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration Filter for the configuration section used to identify the main Core API settings. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB Filter for the configuration section used to identify the Cosmos DB settings for the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra Filter for the configuration section used to identify the Entra ID authentication settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:*\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials Filter for the configuration section used to identify the essential settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials Filter for the configuration section used to identify the essential settings for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration Filter for the configuration section for the FoundationaLLM Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials Filter for the configuration section used to identify the essential settings for the Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration Filter for the configuration section for the FoundationaLLM Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials Filter for the configuration section used to identify the essential settings for the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration Filter for the configuration section for the FoundationaLLM Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials Filter for the configuration section used to identify the essential settings for the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration Filter for the configuration section used to identify the settings for the Encrypt Guardrails service. public const string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration = \"FoundationaLLM:APIEndpoints:EnkryptGuardrails:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration Filter for the configuration section used to identify the settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials Filter for the configuration section used to identify the esential settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials Filter for the configuration section used to identify the essential settings for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration Filter for the configuration section used to identify the settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials Filter for the configuration section used to identify the essential settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials Filter for the configuration section used to identify the essential settings for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration Filter for the configuration section used to identify the settings for the Lakera Guard service. public const string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration = \"FoundationaLLM:APIEndpoints:LakeraGuard:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration Filter for the configuration section used to identify the main LangChain API settings. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules Filter for the configuration section used to identify the main LangChain API settings for external modules. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:*\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials Filter for the configuration section used to identify the essential settings for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration Filter for the configuration section for Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra Filter for the configuration section used to identify the Entra ID authentication settings for Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:*\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials Filter for the configuration section used to identify the essential settings for the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration Filter for the configuration section used to identify the settings for storing persisted completion requests. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials Filter for the configuration section used to identify the essential settings for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration Filter for the configuration section used to identify the main Semantic Kernel API settings. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration:*\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials Filter for the configuration section used to identify the essential settings for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB Filter for the configuration section used to identify the Cosmos DB settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:*\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials Filter for the configuration section used to identify the essential settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials Filter for the configuration section used to identify the essential settings for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:*\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials Filter for the configuration section used to identify the essential settings for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:*\" Field Value string FoundationaLLM_Branding Filter for the configuration section used to identify the branding settings for the User Portal. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding:*\" Field Value string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions Filter for the configuration section used to identify settings for Azure Container Apps Dynamic Sessions code execution services. public const string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions = \"FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions:*\" Field Value string FoundationaLLM_Configuration Filter for the configuration section used to identify the Azure Key Vault settings related to the FoundationaLLM instance. public const string FoundationaLLM_Configuration = \"FoundationaLLM:Configuration:*\" Field Value string FoundationaLLM_DataPipeline_State Filter for the configuration section for the FoundationaLLM Data Pipeline State service. public const string FoundationaLLM_DataPipeline_State = \"FoundationaLLM:DataPipeline:State:*\" Field Value string FoundationaLLM_DataSources Filter for the configuration section used to identify the settings for data sources resources managed by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_DataSources = \"FoundationaLLM:DataSources:*\" Field Value string FoundationaLLM_Events_Profiles_ContextAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Context API. public const string FoundationaLLM_Events_Profiles_ContextAPI = \"FoundationaLLM:Events:Profiles:ContextAPI:*\" Field Value string FoundationaLLM_Events_Profiles_CoreAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Core API. public const string FoundationaLLM_Events_Profiles_CoreAPI = \"FoundationaLLM:Events:Profiles:CoreAPI:*\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Data Pipeline API. public const string FoundationaLLM_Events_Profiles_DataPipelineAPI = \"FoundationaLLM:Events:Profiles:DataPipelineAPI:*\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineBackendWorker Filter for the configuration section used to identify the settings for the events infrastructure used by the Data Pipeline Backend Worker. public const string FoundationaLLM_Events_Profiles_DataPipelineBackendWorker = \"FoundationaLLM:Events:Profiles:DataPipelineBackendWorker:*\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineFrontendWorker Filter for the configuration section used to identify the settings for the events infrastructure used by the Data Pipeline Frontend Worker. public const string FoundationaLLM_Events_Profiles_DataPipelineFrontendWorker = \"FoundationaLLM:Events:Profiles:DataPipelineFrontendWorker:*\" Field Value string FoundationaLLM_Events_Profiles_GatekeeperAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Gatekeeper API. public const string FoundationaLLM_Events_Profiles_GatekeeperAPI = \"FoundationaLLM:Events:Profiles:GatekeeperAPI:*\" Field Value string FoundationaLLM_Events_Profiles_GatewayAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Gateway API. public const string FoundationaLLM_Events_Profiles_GatewayAPI = \"FoundationaLLM:Events:Profiles:GatewayAPI:*\" Field Value string FoundationaLLM_Events_Profiles_ManagementAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Management API. public const string FoundationaLLM_Events_Profiles_ManagementAPI = \"FoundationaLLM:Events:Profiles:ManagementAPI:*\" Field Value string FoundationaLLM_Events_Profiles_OrchestrationAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Orchestration API. public const string FoundationaLLM_Events_Profiles_OrchestrationAPI = \"FoundationaLLM:Events:Profiles:OrchestrationAPI:*\" Field Value string FoundationaLLM_Events_Profiles_VectorizationAPI Filter for the configuration section used to identify the settings for the events infrastructure used by the Vectorization API. public const string FoundationaLLM_Events_Profiles_VectorizationAPI = \"FoundationaLLM:Events:Profiles:VectorizationAPI:*\" Field Value string FoundationaLLM_Events_Profiles_VectorizationWorker Filter for the configuration section used to identify the settings for the events infrastructure used by the Vectorization Worker service. public const string FoundationaLLM_Events_Profiles_VectorizationWorker = \"FoundationaLLM:Events:Profiles:VectorizationWorker:*\" Field Value string FoundationaLLM_Instance Filter for the configuration section used to identify the settings related to the FoundationaLLM instance. public const string FoundationaLLM_Instance = \"FoundationaLLM:Instance:*\" Field Value string FoundationaLLM_PythonSDK Filter for the configuration section used to identify the Python SDK settings. public const string FoundationaLLM_PythonSDK = \"FoundationaLLM:PythonSDK:*\" Field Value string FoundationaLLM_Quota_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM quota management service. public const string FoundationaLLM_Quota_Storage = \"FoundationaLLM:Quota:Storage:*\" Field Value string FoundationaLLM_ResourceProvidersCache Filter for the configuration section used to identify settings for resource providers caching. public const string FoundationaLLM_ResourceProvidersCache = \"FoundationaLLM:ResourceProvidersCache:*\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel_Storage = \"FoundationaLLM:ResourceProviders:AIModel:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent_Storage = \"FoundationaLLM:ResourceProviders:Agent:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment_Storage = \"FoundationaLLM:ResourceProviders:Attachment:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_AzureAI_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.AzureAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureAI_Storage = \"FoundationaLLM:ResourceProviders:AzureAI:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration_Storage = \"FoundationaLLM:ResourceProviders:Configuration:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_DataPipeline_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.DataPipeline resource provider. public const string FoundationaLLM_ResourceProviders_DataPipeline_Storage = \"FoundationaLLM:ResourceProviders:DataPipeline:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource_Storage = \"FoundationaLLM:ResourceProviders:DataSource:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Plugin_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Plugin resource provider. public const string FoundationaLLM_ResourceProviders_Plugin_Storage = \"FoundationaLLM:ResourceProviders:Plugin:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt_Storage = \"FoundationaLLM:ResourceProviders:Prompt:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Vector_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Vector resource provider. public const string FoundationaLLM_ResourceProviders_Vector_Storage = \"FoundationaLLM:ResourceProviders:Vector:Storage:*\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage Filter for the configuration section used to identify the storage settings for the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage = \"FoundationaLLM:ResourceProviders:Vectorization:Storage:*\" Field Value string FoundationaLLM_Vectorization_Queues Filter for the configuration section used to identify the settings for vectorization queues. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues:*\" Field Value string FoundationaLLM_Vectorization_StateService_Storage Filter for the configuration section used to identify the settings for the storage account used by the vectorization state service. public const string FoundationaLLM_Vectorization_StateService_Storage = \"FoundationaLLM:Vectorization:StateService:Storage:*\" Field Value string FoundationaLLM_Vectorization_Steps Filter for the configuration section used to identify the settings for vectorization steps. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps:*\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeySections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeySections.html",
    "title": "Class AppConfigurationKeySections | FoundationaLLM",
    "summary": "Class AppConfigurationKeySections Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all configuration section names used to map configuration values to settings classes. public static class AppConfigurationKeySections Inheritance object AppConfigurationKeySections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints Configuration section used to identify the settings for all API endpoints. public const string FoundationaLLM_APIEndpoints = \"FoundationaLLM:APIEndpoints\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials Configuration section used to identify the authentication settings for the Authorization API. Due to its special nature, the Authorization API does not have a corresponding APIEndpointConfiguration resource. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration Configuration section used to identify the settings for the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage Configuration section used to identify the settings for storage account used by the Azure AI Studio service. public const string FoundationaLLM_APIEndpoints_AzureAIStudio_Configuration_Storage = \"FoundationaLLM:APIEndpoints:AzureAIStudio:Configuration:Storage\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration Configuration section used to identify the settings for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration Configuration section used to identify the settings for the Azure Cosmos DB NoSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzureCosmosDBNoSQLVectorStore:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration Configuration section used to identify the settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials Configuration section used to identify the essential settings for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials Configuration section used to identify the essential settings for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials = \"FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration Configuration section used to identify the settings for the Azure PostgreSQL vector store service. public const string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzurePostgreSQLVectorStore:Configuration\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration Configuration section for the FoundationaLLM Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Essentials Configuration section used to identify the essential settings for the Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Essentials = \"FoundationaLLM:APIEndpoints:ContextAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration Configuration section used to identify the main Core API settings. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB Configuration section used to identify the Cosmos DB settings for the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra Configuration section used to identify the Entra ID authentication settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials Configuration section used to identify the essential settings for Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials Configuration section used to identify the essential settings for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration Configuration section for the FoundationaLLM Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials Configuration section used to identify the essential settings for the Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration Configuration section for the FoundationaLLM Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials Configuration section used to identify the essential settings for the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration Configuration section for the FoundationaLLM Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials Configuration section used to identify the essential settings for the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials\" Field Value string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration Configuration section used to identify the settings for the Encrypt Guardrails service. public const string FoundationaLLM_APIEndpoints_EnkryptGuardrails_Configuration = \"FoundationaLLM:APIEndpoints:EnkryptGuardrails:Configuration\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration Configuration section used to identify the settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials Configuration section used to identify the esential settings for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials Configuration section used to identify the essential settings for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration Configuration section used to identify the settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials Configuration section used to identify the essential settings for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials Configuration section used to identify the essential settings for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration Configuration section used to identify the settings for the Lakera Guard service. public const string FoundationaLLM_APIEndpoints_LakeraGuard_Configuration = \"FoundationaLLM:APIEndpoints:LakeraGuard:Configuration\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration Configuration section used to identify the main LangChain API settings. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules Configuration section used to identify the main LangChain API settings for external modules. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials Configuration section used to identify the essential settings for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration Configuration section for Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra Configuration section used to identify the Entra ID authentication settings for Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials Configuration section used to identify the essential settings for the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration Configuration section used to identify the settings for storing persisted completion requests. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials Configuration section used to identify the essential settings for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration Configuration section used to identify the main Semantic Kernel API settings. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials Configuration section used to identify the essential settings for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB Configuration section used to identify the Cosmos DB settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials Configuration section used to identify the essential settings for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials Configuration section used to identify the essential settings for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials Configuration section used to identify the essential settings for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials\" Field Value string FoundationaLLM_Branding Configuration section used to identify the branding settings for the User Portal. public const string FoundationaLLM_Branding = \"FoundationaLLM:Branding\" Field Value string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions Configuration section used to identify settings for Azure Container Apps Dynamic Sessions code execution services. public const string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions = \"FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions\" Field Value string FoundationaLLM_Configuration Configuration section used to identify the Azure Key Vault settings related to the FoundationaLLM instance. public const string FoundationaLLM_Configuration = \"FoundationaLLM:Configuration\" Field Value string FoundationaLLM_DataPipeline_State Configuration section for the FoundationaLLM Data Pipeline State service. public const string FoundationaLLM_DataPipeline_State = \"FoundationaLLM:DataPipeline:State\" Field Value string FoundationaLLM_DataSources Configuration section used to identify the settings for data sources resources managed by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_DataSources = \"FoundationaLLM:DataSources\" Field Value string FoundationaLLM_Events_Profiles_ContextAPI Configuration section used to identify the settings for the events infrastructure used by the Context API. public const string FoundationaLLM_Events_Profiles_ContextAPI = \"FoundationaLLM:Events:Profiles:ContextAPI\" Field Value string FoundationaLLM_Events_Profiles_CoreAPI Configuration section used to identify the settings for the events infrastructure used by the Core API. public const string FoundationaLLM_Events_Profiles_CoreAPI = \"FoundationaLLM:Events:Profiles:CoreAPI\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineAPI Configuration section used to identify the settings for the events infrastructure used by the Data Pipeline API. public const string FoundationaLLM_Events_Profiles_DataPipelineAPI = \"FoundationaLLM:Events:Profiles:DataPipelineAPI\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineBackendWorker Configuration section used to identify the settings for the events infrastructure used by the Data Pipeline Backend Worker. public const string FoundationaLLM_Events_Profiles_DataPipelineBackendWorker = \"FoundationaLLM:Events:Profiles:DataPipelineBackendWorker\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineFrontendWorker Configuration section used to identify the settings for the events infrastructure used by the Data Pipeline Frontend Worker. public const string FoundationaLLM_Events_Profiles_DataPipelineFrontendWorker = \"FoundationaLLM:Events:Profiles:DataPipelineFrontendWorker\" Field Value string FoundationaLLM_Events_Profiles_GatekeeperAPI Configuration section used to identify the settings for the events infrastructure used by the Gatekeeper API. public const string FoundationaLLM_Events_Profiles_GatekeeperAPI = \"FoundationaLLM:Events:Profiles:GatekeeperAPI\" Field Value string FoundationaLLM_Events_Profiles_GatewayAPI Configuration section used to identify the settings for the events infrastructure used by the Gateway API. public const string FoundationaLLM_Events_Profiles_GatewayAPI = \"FoundationaLLM:Events:Profiles:GatewayAPI\" Field Value string FoundationaLLM_Events_Profiles_ManagementAPI Configuration section used to identify the settings for the events infrastructure used by the Management API. public const string FoundationaLLM_Events_Profiles_ManagementAPI = \"FoundationaLLM:Events:Profiles:ManagementAPI\" Field Value string FoundationaLLM_Events_Profiles_OrchestrationAPI Configuration section used to identify the settings for the events infrastructure used by the Orchestration API. public const string FoundationaLLM_Events_Profiles_OrchestrationAPI = \"FoundationaLLM:Events:Profiles:OrchestrationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationAPI Configuration section used to identify the settings for the events infrastructure used by the Vectorization API. public const string FoundationaLLM_Events_Profiles_VectorizationAPI = \"FoundationaLLM:Events:Profiles:VectorizationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationWorker Configuration section used to identify the settings for the events infrastructure used by the Vectorization Worker service. public const string FoundationaLLM_Events_Profiles_VectorizationWorker = \"FoundationaLLM:Events:Profiles:VectorizationWorker\" Field Value string FoundationaLLM_Instance Configuration section used to identify the settings related to the FoundationaLLM instance. public const string FoundationaLLM_Instance = \"FoundationaLLM:Instance\" Field Value string FoundationaLLM_PythonSDK Configuration section used to identify the Python SDK settings. public const string FoundationaLLM_PythonSDK = \"FoundationaLLM:PythonSDK\" Field Value string FoundationaLLM_Quota_Storage Configuration section used to identify the storage settings for the FoundationaLLM quota management service. public const string FoundationaLLM_Quota_Storage = \"FoundationaLLM:Quota:Storage\" Field Value string FoundationaLLM_ResourceProvidersCache Configuration section used to identify settings for resource providers caching. public const string FoundationaLLM_ResourceProvidersCache = \"FoundationaLLM:ResourceProvidersCache\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage Configuration section used to identify the storage settings for the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel_Storage = \"FoundationaLLM:ResourceProviders:AIModel:Storage\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent_Storage = \"FoundationaLLM:ResourceProviders:Agent:Storage\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment_Storage = \"FoundationaLLM:ResourceProviders:Attachment:Storage\" Field Value string FoundationaLLM_ResourceProviders_AzureAI_Storage Configuration section used to identify the storage settings for the FoundationaLLM.AzureAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureAI_Storage = \"FoundationaLLM:ResourceProviders:AzureAI:Storage\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration_Storage = \"FoundationaLLM:ResourceProviders:Configuration:Storage\" Field Value string FoundationaLLM_ResourceProviders_DataPipeline_Storage Configuration section used to identify the storage settings for the FoundationaLLM.DataPipeline resource provider. public const string FoundationaLLM_ResourceProviders_DataPipeline_Storage = \"FoundationaLLM:ResourceProviders:DataPipeline:Storage\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage Configuration section used to identify the storage settings for the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource_Storage = \"FoundationaLLM:ResourceProviders:DataSource:Storage\" Field Value string FoundationaLLM_ResourceProviders_Plugin_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Plugin resource provider. public const string FoundationaLLM_ResourceProviders_Plugin_Storage = \"FoundationaLLM:ResourceProviders:Plugin:Storage\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt_Storage = \"FoundationaLLM:ResourceProviders:Prompt:Storage\" Field Value string FoundationaLLM_ResourceProviders_Vector_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Vector resource provider. public const string FoundationaLLM_ResourceProviders_Vector_Storage = \"FoundationaLLM:ResourceProviders:Vector:Storage\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage Configuration section used to identify the storage settings for the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage = \"FoundationaLLM:ResourceProviders:Vectorization:Storage\" Field Value string FoundationaLLM_Vectorization_Queues Configuration section used to identify the settings for vectorization queues. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues\" Field Value string FoundationaLLM_Vectorization_StateService_Storage Configuration section used to identify the settings for the storage account used by the vectorization state service. public const string FoundationaLLM_Vectorization_StateService_Storage = \"FoundationaLLM:Vectorization:StateService:Storage\" Field Value string FoundationaLLM_Vectorization_Steps Configuration section used to identify the settings for vectorization steps. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AppConfigurationKeys.html",
    "title": "Class AppConfigurationKeys | FoundationaLLM",
    "summary": "Class AppConfigurationKeys Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all App Configuration key names used by FoundationaLLM. public static class AppConfigurationKeys Inheritance object AppConfigurationKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIScope The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIScope setting. Value description: The scope required to get an access token for the Authorization API. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIScope = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIScope\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIUrl setting. Value description: The URL of the Authorization API. Due to its special nature, the Authorization API does not have a corresponding APIEndpointConfiguration resource and thus the URL must be kept as a configuration setting. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_AbsoluteCacheExpirationSeconds The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:AbsoluteCacheExpirationSeconds setting. Value description: Absolute cache expiration in seconds. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_AbsoluteCacheExpirationSeconds = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:AbsoluteCacheExpirationSeconds\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_CacheExpirationScanFrequencySeconds The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:CacheExpirationScanFrequencySeconds setting. Value description: Gets or sets the minimum length of time between successive scans for expired items in seconds. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_CacheExpirationScanFrequencySeconds = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:CacheExpirationScanFrequencySeconds\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_CacheSizeLimit The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:CacheSizeLimit setting. Value description: The maximum number of items that can be stored in the cache. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_CacheSizeLimit = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:CacheSizeLimit\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_EnableCache The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:EnableCache setting. Value description: Setting that indicates whether the Authorization API Client should use caching. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_EnableCache = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:EnableCache\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_SlidingCacheExpirationSeconds The app configuration key for the FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:SlidingCacheExpirationSeconds setting. Value description: Sets how many seconds the cache entry can be inactive (e.g. not accessed) before it will be removed. This will not extend the entry lifetime beyond the absolute expiration (if set). public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Essentials_SlidingCacheExpirationSeconds = \"FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:SlidingCacheExpirationSeconds\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_HateSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:HateSeverity setting. Value description: The maximum level of hate language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_HateSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:HateSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SelfHarmSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SelfHarmSeverity setting. Value description: The maximum level of self-harm language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SelfHarmSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SelfHarmSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SexualSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SexualSeverity setting. Value description: The maximum level of sexual language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_SexualSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:SexualSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_ViolenceSeverity The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:ViolenceSeverity setting. Value description: The maximum level of violent language that is allowed by the Azure Content Safety service (higher value means that a more severe language is allowed). public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Configuration_ViolenceSeverity = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Configuration:ViolenceSeverity\" Field Value string FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:AzureContentSafety:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:AzureContentSafety:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration_NamespaceId The app configuration key for the FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration:NamespaceId setting. Value description: The object identifier of the Azure Event Grid Namespace object used by the Azure Event Grid event service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Configuration_NamespaceId = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Configuration:NamespaceId\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:AzureEventGrid:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:AzureOpenAI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_CosmosDB_Containers The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Containers setting. Value description: The comma-separated list of database containers used by the Context API file service. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_CosmosDB_Containers = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Containers\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_CosmosDB_Database The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Database setting. Value description: The name of the Azure Cosmos DB database used by the Context API file service. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_CosmosDB_Database = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Database\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_CosmosDB_Endpoint The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Endpoint setting. Value description: The URL of the Azure Cosmos DB service used by the Context API file service. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_CosmosDB_Endpoint = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Endpoint\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_KnowledgeSearchContextFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchContextFileExtensions setting. Value description: The comma-separated list of file extensions that indicate files that can be directly used in the context of a completion request. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_KnowledgeSearchContextFileExtensions = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchContextFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_KnowledgeSearchContextFileMaxSizeBytes The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchContextFileMaxSizeBytes setting. Value description: The dictionary of lists of extensions of files that can be directly used in the context of a completion request and their associated maximum file sizes. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_KnowledgeSearchContextFileMaxSizeBytes = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchContextFileMaxSizeBytes\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_KnowledgeSearchFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchFileExtensions setting. Value description: The comma-separated list of file extensions that are subject to knowledge search. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_KnowledgeSearchFileExtensions = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_Storage_AccountName The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:Storage:AccountName setting. Value description: The Azure Storage account for the FoundationaLLM Context API file service. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_Storage_AccountName = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:Storage:AccountName\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_Storage_AuthenticationType The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_FileService_Storage_AuthenticationType = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:Storage:AuthenticationType\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_KnowledgeService_Embedding The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Embedding setting. Value description: The settings used for embedding operations. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_KnowledgeService_Embedding = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Embedding\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_KnowledgeService_Storage_AccountName The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Storage:AccountName setting. Value description: The Azure Storage account for the FoundationaLLM Context API knowledge service. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_KnowledgeService_Storage_AccountName = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Storage:AccountName\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_KnowledgeService_Storage_AuthenticationType The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_APIEndpoints_ContextAPI_Configuration_KnowledgeService_Storage_AuthenticationType = \"FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Storage:AuthenticationType\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:ContextAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:ContextAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:ContextAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AllowedUploadFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AllowedUploadFileExtensions setting. Value description: The comma-separated list file extensions that users are allowed to upload to a conversation. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AllowedUploadFileExtensions = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AllowedUploadFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AzureAIAgentsFileSearchFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureAIAgentsFileSearchFileExtensions setting. Value description: The comma-separated list file extensions that are supported by the Azure AI Agent Service file search tool. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AzureAIAgentsFileSearchFileExtensions = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureAIAgentsFileSearchFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AzureOpenAIAssistantsFileSearchFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureOpenAIAssistantsFileSearchFileExtensions setting. Value description: The comma-separated list file extensions that are supported by the Azure OpenAI Assistants file search tool. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_AzureOpenAIAssistantsFileSearchFileExtensions = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureOpenAIAssistantsFileSearchFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_BypassGatekeeper The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:BypassGatekeeper setting. Value description: The flag that indicates whether the Core API should bypass or not the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_BypassGatekeeper = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:BypassGatekeeper\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CompletionResponsePollingIntervalMilliseconds The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CompletionResponsePollingIntervalMilliseconds setting. Value description: The size in seconds of the polling interval used to check for completion responses. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CompletionResponsePollingIntervalMilliseconds = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CompletionResponsePollingIntervalMilliseconds\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_ChangeFeedLeaseContainer The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:ChangeFeedLeaseContainer setting. Value description: The name of the container used by Azure Cosmos DB to manage the change feed leases. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_ChangeFeedLeaseContainer = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:ChangeFeedLeaseContainer\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Containers The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Containers setting. Value description: The comma-separated list of database containers used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Containers = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Containers\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Database The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Database setting. Value description: The name of the Azure Cosmos DB database used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Database = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Database\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Endpoint The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Endpoint setting. Value description: The URL of the Azure Cosmos DB service used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_Endpoint = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:Endpoint\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_MonitoredContainers The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:MonitoredContainers setting. Value description: The comma-separated list of database containers that are monitored for changes using the change feed. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_CosmosDB_MonitoredContainers = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CosmosDB:MonitoredContainers\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_AllowACLAuthorization The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:AllowACLAuthorization setting. Value description: Indicates whether tokens that do not have either of the \"scp\" or \"roles\" claims are accepted (true means they are accepted). public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_AllowACLAuthorization = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:AllowACLAuthorization\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_CallbackPath The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_CallbackPath = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:CallbackPath\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_ClientId The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the Core API to authenticate. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_ClientId = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:ClientId\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Instance The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Instance = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Instance\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_RequireScopes The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:RequireScopes setting. Value description: Indicates whether a scope (\"scp\") claim is required for authorization. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_RequireScopes = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:RequireScopes\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Scopes The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Scopes setting. Value description: The list of scopes exposed by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_Scopes = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:Scopes\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_TenantId The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_Entra_TenantId = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:TenantId\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_MaxUploadsPerMessage The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:MaxUploadsPerMessage setting. Value description: The maximum number of files that can be uploaded for a single conversation message. public const string FoundationaLLM_APIEndpoints_CoreAPI_Configuration_MaxUploadsPerMessage = \"FoundationaLLM:APIEndpoints:CoreAPI:Configuration:MaxUploadsPerMessage\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Essentials:APIUrl setting. Value description: The URL of the Core API. Since it's an entry point API, the Core API does not have a corresponding APIEndpointConfiguration resource and thus the URL must be kept as a configuration setting. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:CoreAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:CoreAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:CoreWorker:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:CoreWorker:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:CoreWorker:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_BackendWorkerQueue The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:BackendWorkerQueue setting. Value description: The queue used to submit data pipeline work items for the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_BackendWorkerQueue = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:BackendWorkerQueue\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_FrontendWorkerQueue The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:FrontendWorkerQueue setting. Value description: The queue used to submit data pipeline work items for the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_FrontendWorkerQueue = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:FrontendWorkerQueue\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_Storage_AccountName The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:Storage:AccountName setting. Value description: The Azure Storage account for the FoundationaLLM Data Pipeline API service. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_Storage_AccountName = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:Storage:AccountName\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_Storage_AuthenticationType The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Configuration_Storage_AuthenticationType = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:Storage:AuthenticationType\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_ParallelProcessorsCount The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:ParallelProcessorsCount setting. Value description: The number of parallel processors of data pipeline run work items used by the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_ParallelProcessorsCount = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:ParallelProcessorsCount\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_Queue The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Queue setting. Value description: The queue used to process data pipeline work items by the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_Queue = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Queue\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_Storage_AccountName The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Storage:AccountName setting. Value description: The Azure Storage account for the FoundationaLLM Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_Storage_AccountName = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Storage:AccountName\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_Storage_AuthenticationType The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Configuration_Storage_AuthenticationType = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Storage:AuthenticationType\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_ParallelProcessorsCount The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:ParallelProcessorsCount setting. Value description: The number of parallel processors of data pipeline run work items used by the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_ParallelProcessorsCount = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:ParallelProcessorsCount\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_Queue The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Queue setting. Value description: The queue used to process data pipeline work items by the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_Queue = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Queue\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_Storage_AccountName The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Storage:AccountName setting. Value description: The Azure Storage account for the FoundationaLLM Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_Storage_AccountName = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Storage:AccountName\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_Storage_AuthenticationType The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Configuration_Storage_AuthenticationType = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Storage:AuthenticationType\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafety The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafety setting. Value description: Indicates whether Azure Content Safety is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafety = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafety\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafetyPromptShields The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafetyPromptShields setting. Value description: Indicates whether Azure Content Safety Prompt Shields is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableAzureContentSafetyPromptShields = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableAzureContentSafetyPromptShields\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableEnkryptGuardrails The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableEnkryptGuardrails setting. Value description: Indicates whether Enkrypt Guardrails is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableEnkryptGuardrails = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableEnkryptGuardrails\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableLakeraGuard The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableLakeraGuard setting. Value description: Indicates whether Lakera Guard is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableLakeraGuard = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableLakeraGuard\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableMicrosoftPresidio The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableMicrosoftPresidio setting. Value description: Indicates whether Microsoft Presidio is available for use by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Configuration_EnableMicrosoftPresidio = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Configuration:EnableMicrosoftPresidio\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatekeeperAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatekeeperIntegrationAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureAIAgentServiceMaxVectorizationTimeSeconds The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureAIAgentServiceMaxVectorizationTimeSeconds setting. Value description: The maximum time in seconds allowed for an Azure AI Agent Service vectorization process to complete. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureAIAgentServiceMaxVectorizationTimeSeconds = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureAIAgentServiceMaxVectorizationTimeSeconds\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureOpenAIAccounts The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureOpenAIAccounts setting. Value description: The comma-separated list of Azure OpenAI account names used by the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureOpenAIAccounts = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureOpenAIAccounts\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureOpenAIAssistantsMaxVectorizationTimeSeconds The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureOpenAIAssistantsMaxVectorizationTimeSeconds setting. Value description: The maximum time in seconds allowed for an Azure OpenAI Assistants vectorization process to complete. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_AzureOpenAIAssistantsMaxVectorizationTimeSeconds = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureOpenAIAssistantsMaxVectorizationTimeSeconds\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_TokenRateLimitMultiplier The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:TokenRateLimitMultiplier setting. Value description: The multiplier applied to the token rate limit used to account for differences in tokenization between the Gateway API and the embedding model. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Configuration_TokenRateLimitMultiplier = \"FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:TokenRateLimitMultiplier\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatewayAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:GatewayAdapterAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_Modules The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Modules setting. Value description: Modules configured for external use in the LangChainAPI. The content should have the following pattern: module_name|module_tool_manager,module_name|module_tool_manager... public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_Modules = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Modules\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_RootStorageContainer The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:RootStorageContainer setting. Value description: The name of the root container in the Azure Storage account. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_RootStorageContainer = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:RootStorageContainer\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_Storage_AccountName The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Storage:AccountName setting. Value description: The Azure Storage account for external modules. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_Storage_AccountName = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Storage:AccountName\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_Storage_AuthenticationType The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_ExternalModules_Storage_AuthenticationType = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Storage:AuthenticationType\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_PollingIntervalSeconds The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:PollingIntervalSeconds setting. Value description: The interval in seconds at which the LangChain API will be polled for status. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Configuration_PollingIntervalSeconds = \"FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:PollingIntervalSeconds\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:LangChainAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_AllowedUploadFileExtensions The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:AllowedUploadFileExtensions setting. Value description: The comma-separated list file extensions that users are allowed to upload to a conversation. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_AllowedUploadFileExtensions = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:AllowedUploadFileExtensions\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_CallbackPath The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_CallbackPath = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:CallbackPath\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_ClientId The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the Management API to authenticate. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_ClientId = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:ClientId\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Instance The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Instance = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Instance\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Scopes The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Scopes setting. Value description: The list of scopes exposed by the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_Scopes = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:Scopes\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_TenantId The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Configuration_Entra_TenantId = \"FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:Entra:TenantId\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:APIUrl setting. Value description: The URL of the Management API. Since it's an entry point API, the Management API does not have a corresponding APIEndpointConfiguration resource and thus the URL must be kept as a configuration setting. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:ManagementAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration_CompletionRequestsStorage_AccountName The app configuration key for the FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:AccountName setting. Value description: The Azure Storage account for persisted completion requests. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration_CompletionRequestsStorage_AccountName = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:AccountName\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration_CompletionRequestsStorage_AuthenticationType The app configuration key for the FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration_CompletionRequestsStorage_AuthenticationType = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:AuthenticationType\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration_CompletionRequestsStorage_ContainerName The app configuration key for the FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:ContainerName setting. Value description: The name of the root container in the Azure Storage account. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Configuration_CompletionRequestsStorage_ContainerName = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:ContainerName\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration_MaxConcurrentCompletions The app configuration key for the FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration:MaxConcurrentCompletions setting. Value description: The maximum number of background completion operations allowed to run in parallel. If a new completion request comes in and the maximum number is already reached, the request will generate an error. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Configuration_MaxConcurrentCompletions = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Configuration:MaxConcurrentCompletions\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:SemanticKernelAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Containers The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Containers setting. Value description: The comma-separated list of database containers used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Containers = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Containers\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Database The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Database setting. Value description: The name of the Azure Cosmos DB database used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Database = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Database\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Endpoint The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Endpoint setting. Value description: The URL of the Azure Cosmos DB service used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Configuration_CosmosDB_Endpoint = \"FoundationaLLM:APIEndpoints:StateAPI:Configuration:CosmosDB:Endpoint\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIUrl The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIUrl setting. Value description: The URL of the State API. This entry supports the dependency of the Orchestration implementations to retrieve the URL. Python APIs do not have a resource provider implementation to retrieve the details. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIUrl = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:APIUrl\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:StateAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:StateAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:VectorizationAPI:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:APIKey setting. Value description: The name of the Azure Key Vault secret holding the API key for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:APIKey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString The app configuration key for the FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:AppInsightsConnectionString setting. Value description: The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString = \"FoundationaLLM:APIEndpoints:VectorizationWorker:Essentials:AppInsightsConnectionString\" Field Value string FoundationaLLM_Branding_AccentColor The app configuration key for the FoundationaLLM:Branding:AccentColor setting. Value description: Accent color. public const string FoundationaLLM_Branding_AccentColor = \"FoundationaLLM:Branding:AccentColor\" Field Value string FoundationaLLM_Branding_AccentTextColor The app configuration key for the FoundationaLLM:Branding:AccentTextColor setting. Value description: Accent text color. public const string FoundationaLLM_Branding_AccentTextColor = \"FoundationaLLM:Branding:AccentTextColor\" Field Value string FoundationaLLM_Branding_AgentIconUrl The app configuration key for the FoundationaLLM:Branding:AgentIconUrl setting. Value description: The agent icon that displays next to the agent select list and agent responses. Can be an absolute URL, relative path, or base64string value. public const string FoundationaLLM_Branding_AgentIconUrl = \"FoundationaLLM:Branding:AgentIconUrl\" Field Value string FoundationaLLM_Branding_BackgroundColor The app configuration key for the FoundationaLLM:Branding:BackgroundColor setting. Value description: BackgroundColor. public const string FoundationaLLM_Branding_BackgroundColor = \"FoundationaLLM:Branding:BackgroundColor\" Field Value string FoundationaLLM_Branding_CompanyName The app configuration key for the FoundationaLLM:Branding:CompanyName setting. Value description: Company name. public const string FoundationaLLM_Branding_CompanyName = \"FoundationaLLM:Branding:CompanyName\" Field Value string FoundationaLLM_Branding_DefaultAgentWelcomeMessage The app configuration key for the FoundationaLLM:Branding:DefaultAgentWelcomeMessage setting. Value description: Message to display when starting a new conversation with an agent. This is displayed when the agent is not selected or if the selected agent does not have a configured welcome message. public const string FoundationaLLM_Branding_DefaultAgentWelcomeMessage = \"FoundationaLLM:Branding:DefaultAgentWelcomeMessage\" Field Value string FoundationaLLM_Branding_FavIconUrl The app configuration key for the FoundationaLLM:Branding:FavIconUrl setting. Value description: Fav icon url. public const string FoundationaLLM_Branding_FavIconUrl = \"FoundationaLLM:Branding:FavIconUrl\" Field Value string FoundationaLLM_Branding_FooterText The app configuration key for the FoundationaLLM:Branding:FooterText setting. Value description: Footer text. public const string FoundationaLLM_Branding_FooterText = \"FoundationaLLM:Branding:FooterText\" Field Value string FoundationaLLM_Branding_KioskMode The app configuration key for the FoundationaLLM:Branding:KioskMode setting. Value description: Kiosk mode. public const string FoundationaLLM_Branding_KioskMode = \"FoundationaLLM:Branding:KioskMode\" Field Value string FoundationaLLM_Branding_LogoText The app configuration key for the FoundationaLLM:Branding:LogoText setting. Value description: Logo text. public const string FoundationaLLM_Branding_LogoText = \"FoundationaLLM:Branding:LogoText\" Field Value string FoundationaLLM_Branding_LogoUrl The app configuration key for the FoundationaLLM:Branding:LogoUrl setting. Value description: Logo url. public const string FoundationaLLM_Branding_LogoUrl = \"FoundationaLLM:Branding:LogoUrl\" Field Value string FoundationaLLM_Branding_NoAgentsMessage The app configuration key for the FoundationaLLM:Branding:NoAgentsMessage setting. Value description: Message to display to users when their agent list is empty. public const string FoundationaLLM_Branding_NoAgentsMessage = \"FoundationaLLM:Branding:NoAgentsMessage\" Field Value string FoundationaLLM_Branding_PageTitle The app configuration key for the FoundationaLLM:Branding:PageTitle setting. Value description: Page title. public const string FoundationaLLM_Branding_PageTitle = \"FoundationaLLM:Branding:PageTitle\" Field Value string FoundationaLLM_Branding_PrimaryButtonBackgroundColor The app configuration key for the FoundationaLLM:Branding:PrimaryButtonBackgroundColor setting. Value description: Primary button background color. public const string FoundationaLLM_Branding_PrimaryButtonBackgroundColor = \"FoundationaLLM:Branding:PrimaryButtonBackgroundColor\" Field Value string FoundationaLLM_Branding_PrimaryButtonTextColor The app configuration key for the FoundationaLLM:Branding:PrimaryButtonTextColor setting. Value description: Primary button text color. public const string FoundationaLLM_Branding_PrimaryButtonTextColor = \"FoundationaLLM:Branding:PrimaryButtonTextColor\" Field Value string FoundationaLLM_Branding_PrimaryColor The app configuration key for the FoundationaLLM:Branding:PrimaryColor setting. Value description: Primary color. public const string FoundationaLLM_Branding_PrimaryColor = \"FoundationaLLM:Branding:PrimaryColor\" Field Value string FoundationaLLM_Branding_PrimaryTextColor The app configuration key for the FoundationaLLM:Branding:PrimaryTextColor setting. Value description: Primary text color. public const string FoundationaLLM_Branding_PrimaryTextColor = \"FoundationaLLM:Branding:PrimaryTextColor\" Field Value string FoundationaLLM_Branding_SecondaryButtonBackgroundColor The app configuration key for the FoundationaLLM:Branding:SecondaryButtonBackgroundColor setting. Value description: Secondary button background color. public const string FoundationaLLM_Branding_SecondaryButtonBackgroundColor = \"FoundationaLLM:Branding:SecondaryButtonBackgroundColor\" Field Value string FoundationaLLM_Branding_SecondaryButtonTextColor The app configuration key for the FoundationaLLM:Branding:SecondaryButtonTextColor setting. Value description: Secondary button text color. public const string FoundationaLLM_Branding_SecondaryButtonTextColor = \"FoundationaLLM:Branding:SecondaryButtonTextColor\" Field Value string FoundationaLLM_Branding_SecondaryColor The app configuration key for the FoundationaLLM:Branding:SecondaryColor setting. Value description: Secondary color. public const string FoundationaLLM_Branding_SecondaryColor = \"FoundationaLLM:Branding:SecondaryColor\" Field Value string FoundationaLLM_Branding_SecondaryTextColor The app configuration key for the FoundationaLLM:Branding:SecondaryTextColor setting. Value description: Secondary text color. public const string FoundationaLLM_Branding_SecondaryTextColor = \"FoundationaLLM:Branding:SecondaryTextColor\" Field Value string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions_CodeInterpreter The app configuration key for the FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions:CodeInterpreter setting. Value description: The settings for the Azure Container Apps Dynamic Sessions code interpreter code execution service. public const string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions_CodeInterpreter = \"FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions:CodeInterpreter\" Field Value string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions_CustomContainer The app configuration key for the FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions:CustomContainer setting. Value description: The settings for the Azure Container Apps Dynamic Sessions custom container code execution service. public const string FoundationaLLM_Code_CodeExecution_AzureContainerAppsDynamicSessions_CustomContainer = \"FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions:CustomContainer\" Field Value string FoundationaLLM_Configuration_KeyVaultURI The app configuration key for the FoundationaLLM:Configuration:KeyVaultURI setting. Value description: The URL of the Azure Key Vault providing the secrets. public const string FoundationaLLM_Configuration_KeyVaultURI = \"FoundationaLLM:Configuration:KeyVaultURI\" Field Value string FoundationaLLM_DataPipeline_State_CosmosDB_Containers The app configuration key for the FoundationaLLM:DataPipeline:State:CosmosDB:Containers setting. Value description: The comma-separated list of database containers used by the Data Pipeline API service. public const string FoundationaLLM_DataPipeline_State_CosmosDB_Containers = \"FoundationaLLM:DataPipeline:State:CosmosDB:Containers\" Field Value string FoundationaLLM_DataPipeline_State_CosmosDB_Database The app configuration key for the FoundationaLLM:DataPipeline:State:CosmosDB:Database setting. Value description: The name of the Azure Cosmos DB database used by the Data Pipeline API service. public const string FoundationaLLM_DataPipeline_State_CosmosDB_Database = \"FoundationaLLM:DataPipeline:State:CosmosDB:Database\" Field Value string FoundationaLLM_DataPipeline_State_CosmosDB_Endpoint The app configuration key for the FoundationaLLM:DataPipeline:State:CosmosDB:Endpoint setting. Value description: The URL of the Azure Cosmos DB service used by the Data Pipeline API service. public const string FoundationaLLM_DataPipeline_State_CosmosDB_Endpoint = \"FoundationaLLM:DataPipeline:State:CosmosDB:Endpoint\" Field Value string FoundationaLLM_DataPipeline_State_Storage_AccountName The app configuration key for the FoundationaLLM:DataPipeline:State:Storage:AccountName setting. Value description: The Azure Storage account for the FoundationaLLM Data Pipeline API service. public const string FoundationaLLM_DataPipeline_State_Storage_AccountName = \"FoundationaLLM:DataPipeline:State:Storage:AccountName\" Field Value string FoundationaLLM_DataPipeline_State_Storage_AuthenticationType The app configuration key for the FoundationaLLM:DataPipeline:State:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Storage account. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_DataPipeline_State_Storage_AuthenticationType = \"FoundationaLLM:DataPipeline:State:Storage:AuthenticationType\" Field Value string FoundationaLLM_Events_Profiles_ContextAPI The app configuration key for the FoundationaLLM:Events:Profiles:ContextAPI setting. Value description: The settings used by the Context API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_ContextAPI = \"FoundationaLLM:Events:Profiles:ContextAPI\" Field Value string FoundationaLLM_Events_Profiles_CoreAPI The app configuration key for the FoundationaLLM:Events:Profiles:CoreAPI setting. Value description: The settings used by the Core API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_CoreAPI = \"FoundationaLLM:Events:Profiles:CoreAPI\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineAPI The app configuration key for the FoundationaLLM:Events:Profiles:DataPipelineAPI setting. Value description: The settings used by the Data Pipeline API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_DataPipelineAPI = \"FoundationaLLM:Events:Profiles:DataPipelineAPI\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineBackendWorker The app configuration key for the FoundationaLLM:Events:Profiles:DataPipelineBackendWorker setting. Value description: The settings used by the Data Pipeline Backend Worker to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_DataPipelineBackendWorker = \"FoundationaLLM:Events:Profiles:DataPipelineBackendWorker\" Field Value string FoundationaLLM_Events_Profiles_DataPipelineFrontendWorker The app configuration key for the FoundationaLLM:Events:Profiles:DataPipelineFrontendWorker setting. Value description: The settings used by the Data Pipeline Frontend Worker to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_DataPipelineFrontendWorker = \"FoundationaLLM:Events:Profiles:DataPipelineFrontendWorker\" Field Value string FoundationaLLM_Events_Profiles_GatekeeperAPI The app configuration key for the FoundationaLLM:Events:Profiles:GatekeeperAPI setting. Value description: The settings used by the Gatekeeper API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_GatekeeperAPI = \"FoundationaLLM:Events:Profiles:GatekeeperAPI\" Field Value string FoundationaLLM_Events_Profiles_GatewayAPI The app configuration key for the FoundationaLLM:Events:Profiles:GatewayAPI setting. Value description: The settings used by the Gateway API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_GatewayAPI = \"FoundationaLLM:Events:Profiles:GatewayAPI\" Field Value string FoundationaLLM_Events_Profiles_ManagementAPI The app configuration key for the FoundationaLLM:Events:Profiles:ManagementAPI setting. Value description: The settings used by the Management API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_ManagementAPI = \"FoundationaLLM:Events:Profiles:ManagementAPI\" Field Value string FoundationaLLM_Events_Profiles_OrchestrationAPI The app configuration key for the FoundationaLLM:Events:Profiles:OrchestrationAPI setting. Value description: The settings used by the Orchestration API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_OrchestrationAPI = \"FoundationaLLM:Events:Profiles:OrchestrationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationAPI The app configuration key for the FoundationaLLM:Events:Profiles:VectorizationAPI setting. Value description: The settings used by the Vectorization API to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_VectorizationAPI = \"FoundationaLLM:Events:Profiles:VectorizationAPI\" Field Value string FoundationaLLM_Events_Profiles_VectorizationWorker The app configuration key for the FoundationaLLM:Events:Profiles:VectorizationWorker setting. Value description: The settings used by the Vectorization Worker to process Azure Event Grid events. public const string FoundationaLLM_Events_Profiles_VectorizationWorker = \"FoundationaLLM:Events:Profiles:VectorizationWorker\" Field Value string FoundationaLLM_Instance_Id The app configuration key for the FoundationaLLM:Instance:Id setting. Value description: The unique identifier of the FoundationaLLM instance. public const string FoundationaLLM_Instance_Id = \"FoundationaLLM:Instance:Id\" Field Value string FoundationaLLM_Instance_IdentitySubstitutionSecurityPrincipalId The app configuration key for the FoundationaLLM:Instance:IdentitySubstitutionSecurityPrincipalId setting. Value description: The object identifier of the security principal who is allowed to substitute its identity with a value provided in the X-USER-IDENTITY header. public const string FoundationaLLM_Instance_IdentitySubstitutionSecurityPrincipalId = \"FoundationaLLM:Instance:IdentitySubstitutionSecurityPrincipalId\" Field Value string FoundationaLLM_Instance_IdentitySubstitutionUserPrincipalNamePattern The app configuration key for the FoundationaLLM:Instance:IdentitySubstitutionUserPrincipalNamePattern setting. Value description: The Regex pattern used to validate the values allowed as User Principal Name (UPN) substitutes in the X-USER-IDENTITY header. public const string FoundationaLLM_Instance_IdentitySubstitutionUserPrincipalNamePattern = \"FoundationaLLM:Instance:IdentitySubstitutionUserPrincipalNamePattern\" Field Value string FoundationaLLM_Instance_SecurityGroupRetrievalStrategy The app configuration key for the FoundationaLLM:Instance:SecurityGroupRetrievalStrategy setting. Value description: The security group retrieval strategy of the FoundationaLLM instance. public const string FoundationaLLM_Instance_SecurityGroupRetrievalStrategy = \"FoundationaLLM:Instance:SecurityGroupRetrievalStrategy\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_CallbackPath The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_CallbackPath = \"FoundationaLLM:ManagementPortal:Authentication:Entra:CallbackPath\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_ClientId The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the Management Portal to authenticate. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_ClientId = \"FoundationaLLM:ManagementPortal:Authentication:Entra:ClientId\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_Instance The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_Instance = \"FoundationaLLM:ManagementPortal:Authentication:Entra:Instance\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_Scopes The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:Scopes setting. Value description: The list of scopes used to get the authentication token for the Management API. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_Scopes = \"FoundationaLLM:ManagementPortal:Authentication:Entra:Scopes\" Field Value string FoundationaLLM_ManagementPortal_Authentication_Entra_TenantId The app configuration key for the FoundationaLLM:ManagementPortal:Authentication:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_ManagementPortal_Authentication_Entra_TenantId = \"FoundationaLLM:ManagementPortal:Authentication:Entra:TenantId\" Field Value string FoundationaLLM_PythonSDK_Logging_EnableConsoleLogging The app configuration key for the FoundationaLLM:PythonSDK:Logging:EnableConsoleLogging setting. Value description: The flag indicating whether the Python SDK sends logs to the console or not. public const string FoundationaLLM_PythonSDK_Logging_EnableConsoleLogging = \"FoundationaLLM:PythonSDK:Logging:EnableConsoleLogging\" Field Value string FoundationaLLM_PythonSDK_Logging_LogLevel_Azure The app configuration key for the FoundationaLLM:PythonSDK:Logging:LogLevel:Azure setting. Value description: The default logging level used by the Python SDK. public const string FoundationaLLM_PythonSDK_Logging_LogLevel_Azure = \"FoundationaLLM:PythonSDK:Logging:LogLevel:Azure\" Field Value string FoundationaLLM_PythonSDK_Logging_LogLevel_Default The app configuration key for the FoundationaLLM:PythonSDK:Logging:LogLevel:Default setting. Value description: The default logging level used by the Python SDK. public const string FoundationaLLM_PythonSDK_Logging_LogLevel_Default = \"FoundationaLLM:PythonSDK:Logging:LogLevel:Default\" Field Value string FoundationaLLM_Quota_Storage_AccountName The app configuration key for the FoundationaLLM:Quota:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM quota management service. public const string FoundationaLLM_Quota_Storage_AccountName = \"FoundationaLLM:Quota:Storage:AccountName\" Field Value string FoundationaLLM_Quota_Storage_AuthenticationType The app configuration key for the FoundationaLLM:Quota:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM quota management service. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_Quota_Storage_AuthenticationType = \"FoundationaLLM:Quota:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProvidersCache_AbsoluteCacheExpirationSeconds The app configuration key for the FoundationaLLM:ResourceProvidersCache:AbsoluteCacheExpirationSeconds setting. Value description: Absolute cache expiration in seconds. public const string FoundationaLLM_ResourceProvidersCache_AbsoluteCacheExpirationSeconds = \"FoundationaLLM:ResourceProvidersCache:AbsoluteCacheExpirationSeconds\" Field Value string FoundationaLLM_ResourceProvidersCache_CacheExpirationScanFrequencySeconds The app configuration key for the FoundationaLLM:ResourceProvidersCache:CacheExpirationScanFrequencySeconds setting. Value description: Gets or sets the minimum length of time between successive scans for expired items in seconds. public const string FoundationaLLM_ResourceProvidersCache_CacheExpirationScanFrequencySeconds = \"FoundationaLLM:ResourceProvidersCache:CacheExpirationScanFrequencySeconds\" Field Value string FoundationaLLM_ResourceProvidersCache_CacheSizeLimit The app configuration key for the FoundationaLLM:ResourceProvidersCache:CacheSizeLimit setting. Value description: The maximum number of items that can be stored in the cache. public const string FoundationaLLM_ResourceProvidersCache_CacheSizeLimit = \"FoundationaLLM:ResourceProvidersCache:CacheSizeLimit\" Field Value string FoundationaLLM_ResourceProvidersCache_EnableCache The app configuration key for the FoundationaLLM:ResourceProvidersCache:EnableCache setting. Value description: Setting that indicates whether the resource providers should use caching. public const string FoundationaLLM_ResourceProvidersCache_EnableCache = \"FoundationaLLM:ResourceProvidersCache:EnableCache\" Field Value string FoundationaLLM_ResourceProvidersCache_SlidingCacheExpirationSeconds The app configuration key for the FoundationaLLM:ResourceProvidersCache:SlidingCacheExpirationSeconds setting. Value description: Sets how many seconds the cache entry can be inactive (e.g. not accessed) before it will be removed. This will not extend the entry lifetime beyond the absolute expiration (if set). public const string FoundationaLLM_ResourceProvidersCache_SlidingCacheExpirationSeconds = \"FoundationaLLM:ResourceProvidersCache:SlidingCacheExpirationSeconds\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:AIModel:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel_Storage_AccountName = \"FoundationaLLM:ResourceProviders:AIModel:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_AIModel_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:AIModel:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.AIModel resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_AIModel_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:AIModel:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Agent:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Agent:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Agent_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Agent:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Agent resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Agent_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Agent:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Attachment:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Attachment:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Attachment_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Attachment:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Attachment resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Attachment_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Attachment:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_AzureAI_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:AzureAI:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.AzureAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureAI_Storage_AccountName = \"FoundationaLLM:ResourceProviders:AzureAI:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_AzureAI_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:AzureAI:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.AzureAI resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_AzureAI_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:AzureAI:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Configuration:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Configuration:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Configuration_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Configuration:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Configuration resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Configuration_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Configuration:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_DataPipeline_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:DataPipeline:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.DataPipeline resource provider. public const string FoundationaLLM_ResourceProviders_DataPipeline_Storage_AccountName = \"FoundationaLLM:ResourceProviders:DataPipeline:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_DataPipeline_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:DataPipeline:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.DataPipeline resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_DataPipeline_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:DataPipeline:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:DataSource:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource_Storage_AccountName = \"FoundationaLLM:ResourceProviders:DataSource:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_DataSource_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:DataSource:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.DataSource resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_DataSource_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:DataSource:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Plugin_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Plugin:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Plugin resource provider. public const string FoundationaLLM_ResourceProviders_Plugin_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Plugin:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Plugin_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Plugin:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Plugin resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Plugin_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Plugin:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Prompt:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Prompt:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Prompt_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Prompt:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Prompt resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Prompt_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Prompt:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Vector_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Vector:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Vector resource provider. public const string FoundationaLLM_ResourceProviders_Vector_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Vector:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Vector_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Vector:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Vector resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Vector_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Vector:Storage:AuthenticationType\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage_AccountName The app configuration key for the FoundationaLLM:ResourceProviders:Vectorization:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage_AccountName = \"FoundationaLLM:ResourceProviders:Vectorization:Storage:AccountName\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage_AuthenticationType The app configuration key for the FoundationaLLM:ResourceProviders:Vectorization:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the FoundationaLLM.Vectorization resource provider. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage_AuthenticationType = \"FoundationaLLM:ResourceProviders:Vectorization:Storage:AuthenticationType\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_CallbackPath The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:CallbackPath setting. Value description: The path where the Entra ID instance will redirect during authentication. public const string FoundationaLLM_UserPortal_Authentication_Entra_CallbackPath = \"FoundationaLLM:UserPortal:Authentication:Entra:CallbackPath\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_ClientId The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:ClientId setting. Value description: The unique identifier of the Entra ID app registration used by the User Portal to authenticate. public const string FoundationaLLM_UserPortal_Authentication_Entra_ClientId = \"FoundationaLLM:UserPortal:Authentication:Entra:ClientId\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_Instance The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:Instance setting. Value description: The URL of the Entra ID instance used for authentication. public const string FoundationaLLM_UserPortal_Authentication_Entra_Instance = \"FoundationaLLM:UserPortal:Authentication:Entra:Instance\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_Scopes The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:Scopes setting. Value description: The list of scopes used to get the authentication token for the Core API. public const string FoundationaLLM_UserPortal_Authentication_Entra_Scopes = \"FoundationaLLM:UserPortal:Authentication:Entra:Scopes\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_TenantId The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:TenantId setting. Value description: The unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_UserPortal_Authentication_Entra_TenantId = \"FoundationaLLM:UserPortal:Authentication:Entra:TenantId\" Field Value string FoundationaLLM_UserPortal_Authentication_Entra_TimeoutInMinutes The app configuration key for the FoundationaLLM:UserPortal:Authentication:Entra:TimeoutInMinutes setting. Value description: The timeout in minutes for the auth token in the User Portal. public const string FoundationaLLM_UserPortal_Authentication_Entra_TimeoutInMinutes = \"FoundationaLLM:UserPortal:Authentication:Entra:TimeoutInMinutes\" Field Value string FoundationaLLM_UserPortal_Configuration_ShowFileUpload The app configuration key for the FoundationaLLM:UserPortal:Configuration:ShowFileUpload setting. Value description: Global setting to determine if file upload is allowed on chat messages. public const string FoundationaLLM_UserPortal_Configuration_ShowFileUpload = \"FoundationaLLM:UserPortal:Configuration:ShowFileUpload\" Field Value string FoundationaLLM_UserPortal_Configuration_ShowLastConversationOnStartup The app configuration key for the FoundationaLLM:UserPortal:Configuration:ShowLastConversationOnStartup setting. Value description: If true, the last conversation will be displayed when the user logs in. Otherwise, a new conversation placeholder appears on page load. public const string FoundationaLLM_UserPortal_Configuration_ShowLastConversationOnStartup = \"FoundationaLLM:UserPortal:Configuration:ShowLastConversationOnStartup\" Field Value string FoundationaLLM_UserPortal_Configuration_ShowMessageRating The app configuration key for the FoundationaLLM:UserPortal:Configuration:ShowMessageRating setting. Value description: If true, rating options on agent messages will appear. public const string FoundationaLLM_UserPortal_Configuration_ShowMessageRating = \"FoundationaLLM:UserPortal:Configuration:ShowMessageRating\" Field Value string FoundationaLLM_UserPortal_Configuration_ShowMessageTokens The app configuration key for the FoundationaLLM:UserPortal:Configuration:ShowMessageTokens setting. Value description: If true, the number of consumed tokens on agent and user messages will appear. public const string FoundationaLLM_UserPortal_Configuration_ShowMessageTokens = \"FoundationaLLM:UserPortal:Configuration:ShowMessageTokens\" Field Value string FoundationaLLM_UserPortal_Configuration_ShowViewPrompt The app configuration key for the FoundationaLLM:UserPortal:Configuration:ShowViewPrompt setting. Value description: If true, the 'View Prompt' button on agent messages will appear. public const string FoundationaLLM_UserPortal_Configuration_ShowViewPrompt = \"FoundationaLLM:UserPortal:Configuration:ShowViewPrompt\" Field Value string FoundationaLLM_Vectorization_Queues_Embed_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Embed:AccountName setting. Value description: The Azure Queue Storage account providing the Embed queue. public const string FoundationaLLM_Vectorization_Queues_Embed_AccountName = \"FoundationaLLM:Vectorization:Queues:Embed:AccountName\" Field Value string FoundationaLLM_Vectorization_Queues_Extract_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Extract:AccountName setting. Value description: The Azure Queue Storage account providing the Extract queue. public const string FoundationaLLM_Vectorization_Queues_Extract_AccountName = \"FoundationaLLM:Vectorization:Queues:Extract:AccountName\" Field Value string FoundationaLLM_Vectorization_Queues_Index_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Index:AccountName setting. Value description: The Azure Queue Storage account providing the Index queue. public const string FoundationaLLM_Vectorization_Queues_Index_AccountName = \"FoundationaLLM:Vectorization:Queues:Index:AccountName\" Field Value string FoundationaLLM_Vectorization_Queues_Partition_AccountName The app configuration key for the FoundationaLLM:Vectorization:Queues:Partition:AccountName setting. Value description: The Azure Queue Storage account providing the Partition queue. public const string FoundationaLLM_Vectorization_Queues_Partition_AccountName = \"FoundationaLLM:Vectorization:Queues:Partition:AccountName\" Field Value string FoundationaLLM_Vectorization_StateService_Storage_AccountName The app configuration key for the FoundationaLLM:Vectorization:StateService:Storage:AccountName setting. Value description: The name of the Azure Blob Storage account used by the Vectorization State service. public const string FoundationaLLM_Vectorization_StateService_Storage_AccountName = \"FoundationaLLM:Vectorization:StateService:Storage:AccountName\" Field Value string FoundationaLLM_Vectorization_StateService_Storage_AuthenticationType The app configuration key for the FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType setting. Value description: The type of authentication used to connect to the Azure Blob Storage account used by the Vectorization State service. Can be one of: AzureIdentity, AccountKey, or ConnectionString. public const string FoundationaLLM_Vectorization_StateService_Storage_AuthenticationType = \"FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType\" Field Value string FoundationaLLM_Vectorization_Worker The app configuration key for the FoundationaLLM:Vectorization:Worker setting. Value description: The processing configuration used by the Vectorization Worker service. public const string FoundationaLLM_Vectorization_Worker = \"FoundationaLLM:Vectorization:Worker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationDependencyInjectionKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationDependencyInjectionKeys.html",
    "title": "Class AuthorizationDependencyInjectionKeys | FoundationaLLM",
    "summary": "Class AuthorizationDependencyInjectionKeys Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all keys used for named dependency injection. public static class AuthorizationDependencyInjectionKeys Inheritance object AuthorizationDependencyInjectionKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_ResourceProviders_Authorization Dependency injection key used by the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_ResourceProviders_Authorization = \"FoundationaLLM:ResourceProviders:Authorization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationKeyVaultSecretNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.AuthorizationKeyVaultSecretNames.html",
    "title": "Class AuthorizationKeyVaultSecretNames | FoundationaLLM",
    "summary": "Class AuthorizationKeyVaultSecretNames Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all Azure Key vault secret names referred by the Azure App Configuration keys. public static class AuthorizationKeyVaultSecretNames Inheritance object AuthorizationKeyVaultSecretNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AuthorizationAPI_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Authorization API. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_AppInsightsConnectionString = \"foundationallm-authorizationapi-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_ClientId The name of the Azure Key Vault secret holding the unique identifier of the Entra ID app registration used by the Authorization API to authenticate. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_ClientId = \"foundationallm-authorizationapi-entra-clientid\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_Instance The name of the Azure Key Vault secret holding the URL of the Entra ID instance used for authentication. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_Instance = \"foundationallm-authorizationapi-entra-instance\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_TenantId The name of the Azure Key Vault secret holding the unique identifier of the Entra ID tenant used for authentication. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_Entra_TenantId = \"foundationallm-authorizationapi-entra-tenantid\" Field Value string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_InstanceIds The name of the Azure Key Vault secret holding the comma-separated list of FoundationaLLM instance ids that are serviced by the Authorization API. public const string FoundationaLLM_APIEndpoints_AuthorizationAPI_Configuration_InstanceIds = \"foundationallm-authorizationapi-instanceids\" Field Value string FoundationaLLM_ResourceProviders_Authorization_Storage_AccountName The name of the Azure Key Vault secret providing the name of the Azure Blob Storage account used by the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_ResourceProviders_Authorization_Storage_AccountName = \"foundationallm-authorizationapi-storage-accountname\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.DependencyInjectionKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.DependencyInjectionKeys.html",
    "title": "Class DependencyInjectionKeys | FoundationaLLM",
    "summary": "Class DependencyInjectionKeys Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all keys used for named dependency injection. public static class DependencyInjectionKeys Inheritance object DependencyInjectionKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration Dependency injection key used to inject the implementation of IIndexingService based on Azure Cosmos DB NoSQL. public const string FoundationaLLM_APIEndpoints_AzureCosmosDBNoSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzureCosmosDBNoSQLVectorStore:Configuration\" Field Value string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration Dependency injection key used to inject the implementation of IIndexingService based on Azure PostgreSQL. public const string FoundationaLLM_APIEndpoints_AzurePostgreSQLVectorStore_Configuration = \"FoundationaLLM:APIEndpoints:AzurePostgreSQLVectorStore:Configuration\" Field Value string FoundationaLLM_Quota Dependency injection key used by the FoundationaLLM quota management service. public const string FoundationaLLM_Quota = \"FoundationaLLM:Quota\" Field Value string FoundationaLLM_ResourceProviders_AIModel Dependency injection key used by the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_ResourceProviders_AIModel = \"FoundationaLLM:ResourceProviders:AIModel\" Field Value string FoundationaLLM_ResourceProviders_Agent Dependency injection key used by the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_ResourceProviders_Agent = \"FoundationaLLM:ResourceProviders:Agent\" Field Value string FoundationaLLM_ResourceProviders_Attachment Dependency injection key used by the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_ResourceProviders_Attachment = \"FoundationaLLM:ResourceProviders:Attachment\" Field Value string FoundationaLLM_ResourceProviders_AzureAI Dependency injection key used by the FoundationaLLM.AzureAI resource provider. public const string FoundationaLLM_ResourceProviders_AzureAI = \"FoundationaLLM:ResourceProviders:AzureAI\" Field Value string FoundationaLLM_ResourceProviders_Configuration Dependency injection key used by the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_ResourceProviders_Configuration = \"FoundationaLLM:ResourceProviders:Configuration\" Field Value string FoundationaLLM_ResourceProviders_DataPipeline Dependency injection key used by the FoundationaLLM.DataPipeline resource provider. public const string FoundationaLLM_ResourceProviders_DataPipeline = \"FoundationaLLM:ResourceProviders:DataPipeline\" Field Value string FoundationaLLM_ResourceProviders_DataPipeline_Storage Dependency injection key used to inject storage settings for the FoundationaLLM.DataPipeline resource provider. public const string FoundationaLLM_ResourceProviders_DataPipeline_Storage = \"FoundationaLLM:ResourceProviders:DataPipeline:Storage\" Field Value string FoundationaLLM_ResourceProviders_DataSource Dependency injection key used by the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_ResourceProviders_DataSource = \"FoundationaLLM:ResourceProviders:DataSource\" Field Value string FoundationaLLM_ResourceProviders_Plugin Dependency injection key used by the FoundationaLLM.Plugin resource provider. public const string FoundationaLLM_ResourceProviders_Plugin = \"FoundationaLLM:ResourceProviders:Plugin\" Field Value string FoundationaLLM_ResourceProviders_Plugin_Storage Dependency injection key used to inject storage settings for the FoundationaLLM.Plugin resource provider. public const string FoundationaLLM_ResourceProviders_Plugin_Storage = \"FoundationaLLM:ResourceProviders:Plugin:Storage\" Field Value string FoundationaLLM_ResourceProviders_Prompt Dependency injection key used by the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_ResourceProviders_Prompt = \"FoundationaLLM:ResourceProviders:Prompt\" Field Value string FoundationaLLM_ResourceProviders_Vector Dependency injection key used by the FoundationaLLM.Vector resource provider. public const string FoundationaLLM_ResourceProviders_Vector = \"FoundationaLLM:ResourceProviders:Vector\" Field Value string FoundationaLLM_ResourceProviders_Vector_Storage Dependency injection key used to inject storage settings for the FoundationaLLM.Vector resource provider. public const string FoundationaLLM_ResourceProviders_Vector_Storage = \"FoundationaLLM:ResourceProviders:Vector:Storage\" Field Value string FoundationaLLM_ResourceProviders_Vectorization Dependency injection key used by the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization = \"FoundationaLLM:ResourceProviders:Vectorization\" Field Value string FoundationaLLM_ResourceProviders_Vectorization_Storage Dependency injection key used to inject storage settings for the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_ResourceProviders_Vectorization_Storage = \"FoundationaLLM:ResourceProviders:Vectorization:Storage\" Field Value string FoundationaLLM_Vectorization_Queues Dependency injection key used to inject the IConfiguration section for vectorization queues. public const string FoundationaLLM_Vectorization_Queues = \"FoundationaLLM:Vectorization:Queues\" Field Value string FoundationaLLM_Vectorization_StateService_Storage Dependency injection key used to inject storage settings for the Vectorization state service. public const string FoundationaLLM_Vectorization_StateService_Storage = \"FoundationaLLM:Vectorization:StateService:Storage\" Field Value string FoundationaLLM_Vectorization_Steps Dependency injection key used to inject the IConfiguration section for vectorization steps. public const string FoundationaLLM_Vectorization_Steps = \"FoundationaLLM:Vectorization:Steps\" Field Value string FoundationaLLM_Vectorization_TextEmbedding_Gateway Dependency injection key used to inject the ITextEmbeddingService implementation that uses the FoundationaLLM Gateway for embedding. public const string FoundationaLLM_Vectorization_TextEmbedding_Gateway = \"FoundationaLLM:Vectorization:TextEmbedding:Gateway\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentTypes.html",
    "title": "Class EnvironmentTypes | FoundationaLLM",
    "summary": "Class EnvironmentTypes Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Constants defining the types of FoundationaLLM environments public static class EnvironmentTypes Inheritance object EnvironmentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields E2ETest An environment used to run end-to-end integration tests. public const string E2ETest = \"E2ETest\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentVariables.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.EnvironmentVariables.html",
    "title": "Class EnvironmentVariables | FoundationaLLM",
    "summary": "Class EnvironmentVariables Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Contains constants for environment variables used by the application. public static class EnvironmentVariables Inheritance object EnvironmentVariables Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ACA_Container_App_Replica_Name The name of the Azure Container Apps (AKS) replica. public const string ACA_Container_App_Replica_Name = \"CONTAINER_APP_REPLICA_NAME\" Field Value string Remarks This environment variable is available only in the Azure Container Apps environment. AKS_Pod_Name The name of the Azure Kubernetes Service (AKS) pod. public const string AKS_Pod_Name = \"POD_NAME\" Field Value string Remarks This environment variable is available only in the Azure Kubernetes Service environment. AzureClientId The client id of the user assigned managed identity. public const string AzureClientId = \"AZURE_CLIENT_ID\" Field Value string FoundationaLLM_AppConfig_ConnectionString The key for the FoundationaLLM:AppConfig:ConnectionString environment variable. This allows the caller to connect to the Azure App Configuration service. public const string FoundationaLLM_AppConfig_ConnectionString = \"FoundationaLLM_AppConfig_ConnectionString\" Field Value string FoundationaLLM_AuthorizationAPI_KeyVaultURI They key for the FoundationaLLM:Configuration:KeyVaultURI environment variable. public const string FoundationaLLM_AuthorizationAPI_KeyVaultURI = \"FoundationaLLM_AuthorizationAPI_KeyVaultURI\" Field Value string FoundationaLLM_Environment Indicates whether the application is running in an end-to-end test environment. The string value should be either \"true\" or \"false\". public const string FoundationaLLM_Environment = \"FOUNDATIONALLM_ENVIRONMENT\" Field Value string FoundationaLLM_Version The build version of the container. This is also used for the app version used to validate the minimum version of the app required to use certain configuration entries. public const string FoundationaLLM_Version = \"FOUNDATIONALLM_VERSION\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.KeyVaultSecretNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.KeyVaultSecretNames.html",
    "title": "Class KeyVaultSecretNames | FoundationaLLM",
    "summary": "Class KeyVaultSecretNames Namespace FoundationaLLM.Common.Constants.Configuration Assembly FoundationaLLM.Common.dll Defines all Azure Key vault secret names referred by the Azure App Configuration keys. public static class KeyVaultSecretNames Inheritance object KeyVaultSecretNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Azure Content Safety service. public const string FoundationaLLM_APIEndpoints_AzureContentSafety_Essentials_APIKey = \"foundationallm-apiendpoints-azurecontentsafety-apikey\" Field Value string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Azure Event Grid service. public const string FoundationaLLM_APIEndpoints_AzureEventGrid_Essentials_APIKey = \"foundationallm-apiendpoints-azureeventgrid-apikey\" Field Value string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Azure OpenAI service. public const string FoundationaLLM_APIEndpoints_AzureOpenAI_Essentials_APIKey = \"foundationallm-apiendpoints-azureopenai-apikey\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_APIKey = \"foundationallm-apiendpoints-contextapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Context API. public const string FoundationaLLM_APIEndpoints_ContextAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core API. public const string FoundationaLLM_APIEndpoints_CoreAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_APIKey = \"foundationallm-apiendpoints-coreworker-apikey\" Field Value string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Core Worker service. public const string FoundationaLLM_APIEndpoints_CoreWorker_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_APIKey = \"foundationallm-apiendpoints-datapipelineapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Data Pipeline API. public const string FoundationaLLM_APIEndpoints_DataPipelineAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_APIKey = \"foundationallm-apiendpoints-datapipelinebackendworker-apikey\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Data Pipeline Backend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineBackendWorker_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_APIKey = \"foundationallm-apiendpoints-datapipelinefrontendworker-apikey\" Field Value string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Data Pipeline Frontend Worker service. public const string FoundationaLLM_APIEndpoints_DataPipelineFrontendWorker_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatekeeperapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper API. public const string FoundationaLLM_APIEndpoints_GatekeeperAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatekeeperintegrationapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gatekeeper Integration API. public const string FoundationaLLM_APIEndpoints_GatekeeperIntegrationAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatewayapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway API. public const string FoundationaLLM_APIEndpoints_GatewayAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_APIKey = \"foundationallm-apiendpoints-gatewayadapterapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Gateway Adapter API. public const string FoundationaLLM_APIEndpoints_GatewayAdapterAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_APIKey = \"foundationallm-apiendpoints-langchainapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the LangChain API. public const string FoundationaLLM_APIEndpoints_LangChainAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Management API. public const string FoundationaLLM_APIEndpoints_ManagementAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_APIKey = \"foundationallm-apiendpoints-orchestrationapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Orchestration API. public const string FoundationaLLM_APIEndpoints_OrchestrationAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_APIKey = \"foundationallm-apiendpoints-semantickernelapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Semantic Kernel API. public const string FoundationaLLM_APIEndpoints_SemanticKernelAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_APIKey = \"foundationallm-apiendpoints-stateapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the State API. public const string FoundationaLLM_APIEndpoints_StateAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_APIKey = \"foundationallm-apiendpoints-vectorizationapi-apikey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization API. public const string FoundationaLLM_APIEndpoints_VectorizationAPI_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey The name of the Azure Key Vault secret holding the API key for the Vectorization Worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_APIKey = \"foundationallm-apiendpoints-vectorizationworker-apikey\" Field Value string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString The name of the Azure Key Vault secret holding the connection string for the App Insights service used by the Vectorization worker service. public const string FoundationaLLM_APIEndpoints_VectorizationWorker_Essentials_AppInsightsConnectionString = \"foundationallm-appinsights-connectionstring\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Configuration Classes APIEndpointProviders Language Model provider constants. AppConfigurationKeyFilters Defines all configuration section filters used to select subsets of configuration settings. AppConfigurationKeySections Defines all configuration section names used to map configuration values to settings classes. AppConfigurationKeys Defines all App Configuration key names used by FoundationaLLM. AuthorizationDependencyInjectionKeys Defines all keys used for named dependency injection. AuthorizationKeyVaultSecretNames Defines all Azure Key vault secret names referred by the Azure App Configuration keys. DependencyInjectionKeys Defines all keys used for named dependency injection. EnvironmentTypes Constants defining the types of FoundationaLLM environments EnvironmentVariables Contains constants for environment variables used by the application. KeyVaultSecretNames Defines all Azure Key vault secret names referred by the Azure App Configuration keys."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Context.CodeSessionLanguages.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Context.CodeSessionLanguages.html",
    "title": "Class CodeSessionLanguages | FoundationaLLM",
    "summary": "Class CodeSessionLanguages Namespace FoundationaLLM.Common.Constants.Context Assembly FoundationaLLM.Common.dll Provides constants for the code session programming languages. public static class CodeSessionLanguages Inheritance object CodeSessionLanguages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All code session programming languages. public static readonly ImmutableArray<string> All Field Value ImmutableArray<string> CSharp The C# programming language. public const string CSharp = \"CSharp\" Field Value string Python The Python programming language. public const string Python = \"Python\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextFileRecordMetadataPropertyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextFileRecordMetadataPropertyNames.html",
    "title": "Class ContextFileRecordMetadataPropertyNames | FoundationaLLM",
    "summary": "Class ContextFileRecordMetadataPropertyNames Namespace FoundationaLLM.Common.Constants.Context Assembly FoundationaLLM.Common.dll Provides the names of the metadata properties for context file records. public static class ContextFileRecordMetadataPropertyNames Inheritance object ContextFileRecordMetadataPropertyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CodeSessionFilePath The original file path in the code session file store. public const string CodeSessionFilePath = \"code_session_file_path\" Field Value string CodeSessionFileUploadRecordId The identifier of the associated code session file upload record. public const string CodeSessionFileUploadRecordId = \"code_session_file_upload_record_id\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextProviderNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextProviderNames.html",
    "title": "Class ContextProviderNames | FoundationaLLM",
    "summary": "Class ContextProviderNames Namespace FoundationaLLM.Common.Constants.Context Assembly FoundationaLLM.Common.dll Provides the names of the FoundationaLLM context providers. public static class ContextProviderNames Inheritance object ContextProviderNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_ContextAPI The FoundationaLLM Context API context provider. public const string FoundationaLLM_ContextAPI = \"FoundationaLLM.ContextAPI\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextRecordOrigins.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextRecordOrigins.html",
    "title": "Class ContextRecordOrigins | FoundationaLLM",
    "summary": "Class ContextRecordOrigins Namespace FoundationaLLM.Common.Constants.Context Assembly FoundationaLLM.Common.dll Provides the names of the context record origins. public static class ContextRecordOrigins Inheritance object ContextRecordOrigins Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CodeSession The context record origin for code sessions public const string CodeSession = \"code-session\" Field Value string UserUpload The context record origin for user uploads. public const string UserUpload = \"user-upload\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextRecordTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Context.ContextRecordTypeNames.html",
    "title": "Class ContextRecordTypeNames | FoundationaLLM",
    "summary": "Class ContextRecordTypeNames Namespace FoundationaLLM.Common.Constants.Context Assembly FoundationaLLM.Common.dll Provides the names of the context record types. public static class ContextRecordTypeNames Inheritance object ContextRecordTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CodeSessionFileUploadRecord The context code session file upload record type. public const string CodeSessionFileUploadRecord = \"code-session-file-upload-record\" Field Value string CodeSessionRecord The context code session record type. public const string CodeSessionRecord = \"code-session-record\" Field Value string FileRecord The context file record type. public const string FileRecord = \"file-record\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Context.FileProcessingTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Context.FileProcessingTypes.html",
    "title": "Class FileProcessingTypes | FoundationaLLM",
    "summary": "Class FileProcessingTypes Namespace FoundationaLLM.Common.Constants.Context Assembly FoundationaLLM.Common.dll Provides constants for the types of file processing. public static class FileProcessingTypes Inheritance object FileProcessingTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All file processing types. public static readonly ImmutableArray<string> All Field Value ImmutableArray<string> CompletionRequestContext The file's content must be used in the completion request context (it's content should be directly embedded into the completion request). public const string CompletionRequestContext = \"completion_request_context\" Field Value string ConversationDataPipeline The file must be processed by a data pipeline in the context of a conversation. public const string ConversationDataPipeline = \"conversation_data_pipeline\" Field Value string None The file requires no processing. public const string None = \"none\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Context.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Context.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Context | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Context Classes CodeSessionLanguages Provides constants for the code session programming languages. ContextFileRecordMetadataPropertyNames Provides the names of the metadata properties for context file records. ContextProviderNames Provides the names of the FoundationaLLM context providers. ContextRecordOrigins Provides the names of the context record origins. ContextRecordTypeNames Provides the names of the context record types. FileProcessingTypes Provides constants for the types of file processing."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.CorsPolicyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.CorsPolicyNames.html",
    "title": "Class CorsPolicyNames | FoundationaLLM",
    "summary": "Class CorsPolicyNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Names for CORS policies. public static class CorsPolicyNames Inheritance object CorsPolicyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowAllOrigins All origins are allowed. public const string AllowAllOrigins = \"AllowAllOrigins\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.DataPipelineRunProcessors.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.DataPipelineRunProcessors.html",
    "title": "Class DataPipelineRunProcessors | FoundationaLLM",
    "summary": "Class DataPipelineRunProcessors Namespace FoundationaLLM.Common.Constants.DataPipelines Assembly FoundationaLLM.Common.dll Constants for data pipeline run processors. public static class DataPipelineRunProcessors Inheritance object DataPipelineRunProcessors Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All Contains all the data pipeline run processors. public static readonly ImmutableList<string> All Field Value ImmutableList<string> Backend The Data Pipeline Backend Worker service. public const string Backend = \"DataPipelineBackendWorker\" Field Value string Frontend The Data Pipeline Frontend Worker service. public const string Frontend = \"DataPipelineFrontendWorker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.DataPipelineTriggerNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.DataPipelineTriggerNames.html",
    "title": "Class DataPipelineTriggerNames | FoundationaLLM",
    "summary": "Class DataPipelineTriggerNames Namespace FoundationaLLM.Common.Constants.DataPipelines Assembly FoundationaLLM.Common.dll Constants for well-known data pipeline trigger names. public static class DataPipelineTriggerNames Inheritance object DataPipelineTriggerNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultManualTrigger The default manual trigger name. public const string DefaultManualTrigger = \"Default Manual Trigger\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.DataPipelineTriggerParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.DataPipelineTriggerParameterNames.html",
    "title": "Class DataPipelineTriggerParameterNames | FoundationaLLM",
    "summary": "Class DataPipelineTriggerParameterNames Namespace FoundationaLLM.Common.Constants.DataPipelines Assembly FoundationaLLM.Common.dll Constants for well-known data pipeline trigger parameter names. public static class DataPipelineTriggerParameterNames Inheritance object DataPipelineTriggerParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataSourceContextFileContextFileObjectId The context file object identifier for the ContextFile data source. public const string DataSourceContextFileContextFileObjectId = \"DataSource.ContextFile.ContextFileObjectId\" Field Value string StageIndexVectorDatabaseObjectId The vector store template object identifier for the indexing stage. public const string StageIndexVectorDatabaseObjectId = \"Stage.Index.VectorDatabaseObjectId\" Field Value string StageIndexVectorStoreId The vector store identifier for the indexing stage. public const string StageIndexVectorStoreId = \"Stage.Index.VectorStoreId\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.DataPipelines.html",
    "title": "Namespace FoundationaLLM.Common.Constants.DataPipelines | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.DataPipelines Classes DataPipelineRunProcessors Constants for data pipeline run processors. DataPipelineTriggerNames Constants for well-known data pipeline trigger names. DataPipelineTriggerParameterNames Constants for well-known data pipeline trigger parameter names."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.DataSource.DataSourceConfigurationReferenceKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.DataSource.DataSourceConfigurationReferenceKeys.html",
    "title": "Class DataSourceConfigurationReferenceKeys | FoundationaLLM",
    "summary": "Class DataSourceConfigurationReferenceKeys Namespace FoundationaLLM.Common.Constants.DataSource Assembly FoundationaLLM.Common.dll Defines the keys for data source configuration references. public static class DataSourceConfigurationReferenceKeys Inheritance object DataSourceConfigurationReferenceKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CertificateName The name of the X.509 certificate used for authentication. public const string CertificateName = \"CertificateName\" Field Value string ClientId The client identifier of the application registration. public const string ClientId = \"ClientId\" Field Value string KeyVaultUrl The URL of the Azure Key Vault where the X.509 certificate is stored. public const string KeyVaultUrl = \"KeyVaultURL\" Field Value string TenantId The Entra ID tenant identifier where the application registration is located. public const string TenantId = \"TenantId\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.DataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.DataSource.html",
    "title": "Namespace FoundationaLLM.Common.Constants.DataSource | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.DataSource Classes DataSourceConfigurationReferenceKeys Defines the keys for data source configuration references."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Events.EventGridTopics.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Events.EventGridTopics.html",
    "title": "Class EventGridTopics | FoundationaLLM",
    "summary": "Class EventGridTopics Namespace FoundationaLLM.Common.Constants.Events Assembly FoundationaLLM.Common.dll Azure Event Grid topic names. public static class EventGridTopics Inheritance object EventGridTopics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_API_Statistics The name of the API statistics Azure Event Grid topic. public const string FoundationaLLM_API_Statistics = \"api-statistics\" Field Value string FoundationaLLM_Resource_Providers The name of the resource providers Azure Event Grid topic. public const string FoundationaLLM_Resource_Providers = \"resource-providers\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Events.EventTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Events.EventTypes.html",
    "title": "Class EventTypes | FoundationaLLM",
    "summary": "Class EventTypes Namespace FoundationaLLM.Common.Constants.Events Assembly FoundationaLLM.Common.dll Provide event type constants. public static class EventTypes Inheritance object EventTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FoundationaLLM_Quota_MetricUpdate The FoundationaLLM quots metric update event type. public const string FoundationaLLM_Quota_MetricUpdate = \"FoundationaLLM.Quota.MetricUpdate\" Field Value string FoundationaLLM_ResourceProvider_AppConfig_UpdateKeyCommand The FoundationaLLM.Configuration update key command event type. public const string FoundationaLLM_ResourceProvider_AppConfig_UpdateKeyCommand = \"FoundationaLLM.ResourceProvider.AppConfig.UpdateKeyCommand\" Field Value string FoundationaLLM_ResourceProvider_Cache_ResetCommand The resource provider cache reset command event type. public const string FoundationaLLM_ResourceProvider_Cache_ResetCommand = \"FoundationaLLM.ResourceProvider.Cache.ResetCommand\" Field Value string FoundationaLLM_ResourceProvider_State_ExportCommand The resource provider state export command event type. public const string FoundationaLLM_ResourceProvider_State_ExportCommand = \"FoundationaLLM.ResourceProvider.State.ExportCommand\" Field Value string Properties All All event types. public static List<string> All { get; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Events.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Events | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Events Classes EventGridTopics Azure Event Grid topic names. EventTypes Provide event type constants."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.FileExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.FileExtensions.html",
    "title": "Class FileExtensions | FoundationaLLM",
    "summary": "Class FileExtensions Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used to identify file extension. public static class FileExtensions Inheritance object FileExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AllowedFileExtensions Allowed file extensions for vectorization. public static readonly ImmutableArray<string> AllowedFileExtensions Field Value ImmutableArray<string> Excel File extension for Microsoft Office Excel files. public const string Excel = \".xlsx\" Field Value string JSON File extension for JSON files. public const string JSON = \".json\" Field Value string Markdown File extension for Markdown files. public const string Markdown = \".md\" Field Value string Mp3 File extension for mp3 files. public const string Mp3 = \".mp3\" Field Value string PDF File extension for PDF files. public const string PDF = \".pdf\" Field Value string PowerPoint File extension for Microsoft Office PowerPoint files. public const string PowerPoint = \".pptx\" Field Value string Text File extension for text files. public const string Text = \".txt\" Field Value string Wav File extension for wav files. public const string Wav = \".wav\" Field Value string Word File extension for Microsoft Office Word files. public const string Word = \".docx\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.GatekeeperOptionNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.GatekeeperOptionNames.html",
    "title": "Class GatekeeperOptionNames | FoundationaLLM",
    "summary": "Class GatekeeperOptionNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains the names of the Agent Base Gatekeeper Options. public static class GatekeeperOptionNames Inheritance object GatekeeperOptionNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureContentSafety The name of the Azure Content Safety option. public const string AzureContentSafety = \"AzureContentSafety\" Field Value string AzureContentSafetyPromptShield The name of the Azure Content Safety Prompt Shield option. public const string AzureContentSafetyPromptShield = \"AzureContentSafetyPromptShield\" Field Value string EnkryptGuardrails The name of the Enkrypt Guardrails option. public const string EnkryptGuardrails = \"EnkryptGuardrails\" Field Value string LakeraGuard The name of the Lakera Guard option. public const string LakeraGuard = \"LakeraGuard\" Field Value string MicrosoftPresidio The name of the Microsoft Presidio option. public const string MicrosoftPresidio = \"MicrosoftPresidio\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Gateway.TextOperationModelParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Gateway.TextOperationModelParameterNames.html",
    "title": "Class TextOperationModelParameterNames | FoundationaLLM",
    "summary": "Class TextOperationModelParameterNames Namespace FoundationaLLM.Common.Constants.Gateway Assembly FoundationaLLM.Common.dll Defines the model parameter names used in text operations executed by the FoundationaLLM Gateway API. public static class TextOperationModelParameterNames Inheritance object TextOperationModelParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EmbeddingDimensions The name of the property that holds the embedding dimensions. public const string EmbeddingDimensions = \"embedding_dimensions\" Field Value string MaxOutputTokenCount The name of the model parameter that holds the maximum output token count. public const string MaxOutputTokenCount = \"max_output_token_count\" Field Value string Temperature The name of the temperature completion model parameter. public const string Temperature = \"temperature\" Field Value string TopP The name of the ToP completion model parameter. public const string TopP = \"top_p\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Gateway.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Gateway.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Gateway | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Gateway Classes TextOperationModelParameterNames Defines the model parameter names used in text operations executed by the FoundationaLLM Gateway API."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpClientFactoryServiceKeyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpClientFactoryServiceKeyNames.html",
    "title": "Class HttpClientFactoryServiceKeyNames | FoundationaLLM",
    "summary": "Class HttpClientFactoryServiceKeyNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used for the key names of the dictionary generated by IHttpClientFactoryService implementations. public static class HttpClientFactoryServiceKeyNames Inheritance object HttpClientFactoryServiceKeyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKey The dictionary key identifying the API key of an HTTP client. public const string APIKey = \"APIKey\" Field Value string AuthenticationType The dictionary key identifying the authentication type of an HTTP client. public const string AuthenticationType = \"AuthenticationType\" Field Value string AzureEventGridTopicName The name of the Azure Event Grid topic. public const string AzureEventGridTopicName = \"AzureEventGridTopicName\" Field Value string AzureEventGridTopicSubscriptionName The name of the Azure Event Grid topic subscription. public const string AzureEventGridTopicSubscriptionName = \"AzureEventGridTopicSubscriptionName\" Field Value string Endpoint The dictionary key identifying the endpoint of an HTTP client. public const string Endpoint = \"Endpoint\" Field Value string TimeoutSeconds The dictionary key identifying the timeout in seconds associated with an HTTP client. public const string TimeoutSeconds = \"TimeoutSeconds\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpClientNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpClientNames.html",
    "title": "Class HttpClientNames | FoundationaLLM",
    "summary": "Class HttpClientNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Name constants used to configure and retrieve API endpoint configurations. public static class HttpClientNames Inheritance object HttpClientNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentHubAPI Named client with matching configuration for the Agent Hub API. public const string AgentHubAPI = \"AgentHubAPI\" Field Value string All All HTTP client names. public static readonly string[] All Field Value string[] AllDownstream All HTTP client names used in IDownstreamAPIService implementations. public static readonly string[] AllDownstream Field Value string[] AuthorizationAPI Named client with matching configuration for the Authorization API. public const string AuthorizationAPI = \"AuthorizationAPI\" Field Value string AzureContentSafety Named client with matching configuration for the Azure Content Safety service. public const string AzureContentSafety = \"AzureContentSafety\" Field Value string AzureEventGrid Named client with matching configuration for the Azure Event Grid service. public const string AzureEventGrid = \"AzureEventGrid\" Field Value string ContextAPI Named client with matching configuration for the Context API. public const string ContextAPI = \"ContextAPI\" Field Value string CoreAPI Named client with matching configuration for the Core API. public const string CoreAPI = \"CoreAPI\" Field Value string DataPipelineAPI Named client with matching configuration for the Data Pipeline API. public const string DataPipelineAPI = \"DataPipelineAPI\" Field Value string DataPipelineBackendWorker Named client with matching configuration for the Data Pipeline Backend Worker. public const string DataPipelineBackendWorker = \"DataPipelineBackendWorker\" Field Value string DataPipelineFrontendWorker Named client with matching configuration for the Data Pipeline Frontend Worker. public const string DataPipelineFrontendWorker = \"DataPipelineFrontendWorker\" Field Value string DataSourceHubAPI Named client with matching configuration for the DataSource Hub API. public const string DataSourceHubAPI = \"DataSourceHubAPI\" Field Value string EnkryptGuardrails Named client with matching configuration for the Enkrypt Guardrails service. public const string EnkryptGuardrails = \"EnkryptGuardrails\" Field Value string GatekeeperAPI Named client with matching configuration for the Gatekeeper API. public const string GatekeeperAPI = \"GatekeeperAPI\" Field Value string GatekeeperIntegrationAPI Named client with matching configuration for the Gatekeeper Integration API. public const string GatekeeperIntegrationAPI = \"GatekeeperIntegrationAPI\" Field Value string GatewayAPI Named client with matching configuration for the Gateway API. public const string GatewayAPI = \"GatewayAPI\" Field Value string GatewayAdapterAPI Named client with matching configuration for the Gateway Adapter API. public const string GatewayAdapterAPI = \"GatewayAdapterAPI\" Field Value string LakeraGuard Named client with matching configuration for the Lakera Guard service. public const string LakeraGuard = \"LakeraGuard\" Field Value string LangChainAPI Named client with matching configuration for the LangChain API. public const string LangChainAPI = \"LangChainAPI\" Field Value string ManagementAPI Named client with matching configuration for the Management API. public const string ManagementAPI = \"ManagementAPI\" Field Value string OneDriveWorkSchoolAPI Named client with matching configuration for the OneDriveWorkSchool API. public const string OneDriveWorkSchoolAPI = \"OneDriveWorkSchoolAPI\" Field Value string OrchestrationAPI Named client with matching configuration for the Orchestration API. public const string OrchestrationAPI = \"OrchestrationAPI\" Field Value string PromptHubAPI Named client with matching configuration for the Prompt Hub API. public const string PromptHubAPI = \"PromptHubAPI\" Field Value string SemanticKernelAPI Named client with matching configuration for the Semantic Kernel API. public const string SemanticKernelAPI = \"SemanticKernelAPI\" Field Value string StateAPI Named client with matching configuration for the State API. public const string StateAPI = \"StateAPI\" Field Value string VectorizationAPI Named client with matching configuration for the Vectorization API. public const string VectorizationAPI = \"VectorizationAPI\" Field Value string VectorizationWorker Named client with matching configuration for the Vectorization Worker. public const string VectorizationWorker = \"VectorizationWorker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpFormDataKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpFormDataKeys.html",
    "title": "Class HttpFormDataKeys | FoundationaLLM",
    "summary": "Class HttpFormDataKeys Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common HTTP form data keys used throughout the FoundationaLLM infrastructure. public static class HttpFormDataKeys Inheritance object HttpFormDataKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields File The key used to identify a file in form data. public const string File = \"file\" Field Value string Resource The key used to identify a serialized FoundationaLLM resource in form data. public const string Resource = \"resource\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.HttpHeaders.html",
    "title": "Class HttpHeaders | FoundationaLLM",
    "summary": "Class HttpHeaders Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common HTTP headers used throughout the FoundationaLLM infrastructure. public static class HttpHeaders Inheritance object HttpHeaders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIKey API key header used by APIs to authenticate requests. public const string APIKey = \"X-API-KEY\" Field Value string AgentAccessToken Agent access token header used by APIs to implement API key authentication for FoundationaLLM agents. public const string AgentAccessToken = \"X-AGENT-ACCESS-TOKEN\" Field Value string UserIdentity User identity header used by APIs to pass user identity information. public const string UserIdentity = \"X-USER-IDENTITY\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Instance.SecurityGroupRetrievalStrategies.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Instance.SecurityGroupRetrievalStrategies.html",
    "title": "Class SecurityGroupRetrievalStrategies | FoundationaLLM",
    "summary": "Class SecurityGroupRetrievalStrategies Namespace FoundationaLLM.Common.Constants.Instance Assembly FoundationaLLM.Common.dll Security group retrieval strategies for the FoundationaLLM instance. public static class SecurityGroupRetrievalStrategies Inheritance object SecurityGroupRetrievalStrategies Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AccessToken Access token groups claim. public const string AccessToken = \"AccessToken\" Field Value string IdentityManagementService Identity management service. public const string IdentityManagementService = \"IdentityManagementService\" Field Value string None None. public const string None = \"None\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Instance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Instance.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Instance | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Instance Classes SecurityGroupRetrievalStrategies Security group retrieval strategies for the FoundationaLLM instance."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.LLMOrchestrationServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.LLMOrchestrationServiceNames.html",
    "title": "Class LLMOrchestrationServiceNames | FoundationaLLM",
    "summary": "Class LLMOrchestrationServiceNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Constants for the LLM Orchestration Service Names. public static class LLMOrchestrationServiceNames Inheritance object LLMOrchestrationServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureAIDirect Handles completion requests using real-time scoring endpoint deployed in Azure AI Studio. public const string AzureAIDirect = \"AzureAIDirect\" Field Value string AzureOpenAIDirect Handles completion requests using Azure OpenAI endpoints. public const string AzureOpenAIDirect = \"AzureOpenAIDirect\" Field Value string LangChain Handles completion requests using LangChain. public const string LangChain = \"LangChain\" Field Value string SemanticKernel Handles completion requests using Semantic Kernel. public const string SemanticKernel = \"SemanticKernel\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.OpenAIAgentCapabilityParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.OpenAIAgentCapabilityParameterNames.html",
    "title": "Class OpenAIAgentCapabilityParameterNames | FoundationaLLM",
    "summary": "Class OpenAIAgentCapabilityParameterNames Namespace FoundationaLLM.Common.Constants.OpenAI Assembly FoundationaLLM.Common.dll Provides the names of the parameters that can be used to create OpenAI agent capabilities. public static class OpenAIAgentCapabilityParameterNames Inheritance object OpenAIAgentCapabilityParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The constants are used by the callers of the GatewayServiceClient implementations. Fields AddOpenAIFileToCodeInterpreter Indicates the need to add an existing OpenAI assistant file to an OpenAI assistant code interpreter tool. public const string AddOpenAIFileToCodeInterpreter = \"OpenAI.File.AddToCodeInterpreter\" Field Value string AddOpenAIFileToVectorStore Indicates the need to add an existing OpenAI assistant file to an OpenAI assistant vector store. public const string AddOpenAIFileToVectorStore = \"OpenAI.File.AddToVectorStore\" Field Value string AgentFileObjectId The object identifier of the FoundationaLLM agent file resource. public const string AgentFileObjectId = \"FoundationaLLM.Agent.File.ObjectId\" Field Value string AttachmentObjectId The object identifier of the FoundationaLLM attachment resource. public const string AttachmentObjectId = \"FoundationaLLM.Attachment.ObjectId\" Field Value string CreateOpenAIAssistant Indicates the need to create a new OpenAI assistant. public const string CreateOpenAIAssistant = \"OpenAI.Assistants.Assistant.Create\" Field Value string CreateOpenAIAssistantThread Indicates the need to create a new OpenAI assistant thread. public const string CreateOpenAIAssistantThread = \"OpenAI.Assistants.Thread.Create\" Field Value string CreateOpenAIAssistantVectorStore Indicates the need to create a vector store for an existing OpenAI assistant. public const string CreateOpenAIAssistantVectorStore = \"OpenAI.Assistants.Assistant.VectorStore.Create\" Field Value string CreateOpenAIFile Indicates the need to create a new OpenAI assistant file. public const string CreateOpenAIFile = \"OpenAI.File.Create\" Field Value string OpenAIAssistantId Provides the identifier of an existing OpenAI assistant. public const string OpenAIAssistantId = \"OpenAI.Assistants.Assistant.Id\" Field Value string OpenAIAssistantPrompt Provides the prompt used by the OpenAI assistant. public const string OpenAIAssistantPrompt = \"OpenAI.Assistants.Assistant.Prompt\" Field Value string OpenAIAssistantThreadId Provides the identifier of an existing OpenAI assistant thread. public const string OpenAIAssistantThreadId = \"OpenAI.Assistants.Thread.Id\" Field Value string OpenAIEndpoint Provides the Azure OpenAI endpoint used to manage Open AI assistants. public const string OpenAIEndpoint = \"OpenAI.Endpoint\" Field Value string OpenAIFileActionOnCodeInterpreterSuccess Indicates whether the Open AI assistant file addition or file removal for the code interpreter completed successfully. public const string OpenAIFileActionOnCodeInterpreterSuccess = \"OpenAI.File.FileActionOnCodeInterpreterSuccess\" Field Value string OpenAIFileActionOnVectorStoreSuccess Indicates whether the Open AI assistant file vectorization or file removal process completed successfully. public const string OpenAIFileActionOnVectorStoreSuccess = \"OpenAI.File.FileActionOnVectorStoreSuccess\" Field Value string OpenAIFileId Provides the identifier of an existing OpenAI assistant file. public const string OpenAIFileId = \"OpenAI.Files.Id\" Field Value string OpenAIModelDeploymentName Provides the model deployment name used by the OpenAI assistant. public const string OpenAIModelDeploymentName = \"OpenAI.ModelDeploymentName\" Field Value string OpenAIVectorStoreId Provides the identifier of an existing OpenAI assistant vector store. public const string OpenAIVectorStoreId = \"OpenAI.VectorStore.Id\" Field Value string RemoveOpenAIFileFromCodeInterpreter Indicates the need to remove an existing OpenAI assistant file from an OpenAI assistant code interpreter tool. public const string RemoveOpenAIFileFromCodeInterpreter = \"OpenAI.File.RemoveFromCodeInterpreter\" Field Value string RemoveOpenAIFileFromVectorStore Indicates the need to remove an existing OpenAI assistant file from an OpenAI assistant vector store. public const string RemoveOpenAIFileFromVectorStore = \"OpenAI.File.RemoveFromVectorStore\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.OpenAI.html",
    "title": "Namespace FoundationaLLM.Common.Constants.OpenAI | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.OpenAI Classes OpenAIAgentCapabilityParameterNames Provides the names of the parameters that can be used to create OpenAI agent capabilities."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.LongRunningOperationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.LongRunningOperationTypes.html",
    "title": "Class LongRunningOperationTypes | FoundationaLLM",
    "summary": "Class LongRunningOperationTypes Namespace FoundationaLLM.Common.Constants.Orchestration Assembly FoundationaLLM.Common.dll The types of long-running operations. public static class LongRunningOperationTypes Inheritance object LongRunningOperationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LongRunningOperation The document type for a long-running operation. public const string LongRunningOperation = \"LongRunningOperation\" Field Value string LongRunningOperationLogEntry The document type for a long-running operation log entry. public const string LongRunningOperationLogEntry = \"LongRunningOperationLogEntry\" Field Value string LongRunningOperationResult The document type for a long-running operation result. public const string LongRunningOperationResult = \"LongRunningOperationResult\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.MessageContentItemTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.MessageContentItemTypes.html",
    "title": "Class MessageContentItemTypes | FoundationaLLM",
    "summary": "Class MessageContentItemTypes Namespace FoundationaLLM.Common.Constants.Orchestration Assembly FoundationaLLM.Common.dll Contains constants for the types of message content items. public static class MessageContentItemTypes Inheritance object MessageContentItemTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields FilePath File path content. public const string FilePath = \"file_path\" Field Value string HTML HTML file content. public const string HTML = \"html\" Field Value string ImageFile Image file content. public const string ImageFile = \"image_file\" Field Value string Text Text content. public const string Text = \"text\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Orchestration.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Orchestration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Orchestration Classes LongRunningOperationTypes The types of long-running operations. MessageContentItemTypes Contains constants for the types of message content items."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Participants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Participants.html",
    "title": "Enum Participants | FoundationaLLM",
    "summary": "Enum Participants Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Specifies the participants, such as a user and an assistant. public enum Participants Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Agent = 1 Represents an assistant type. User = 0 Represents a user type."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginCategoryNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginCategoryNames.html",
    "title": "Class PluginCategoryNames | FoundationaLLM",
    "summary": "Class PluginCategoryNames Namespace FoundationaLLM.Common.Constants.Plugins Assembly FoundationaLLM.Common.dll Defines the categories of plugins. public static class PluginCategoryNames Inheritance object PluginCategoryNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ContentTextExtraction FoundationaLLM Content Text Extraction plugin category. public const string ContentTextExtraction = \"Content Text Extraction\" Field Value string ContentTextPartitioning FoundationaLLM Content Text Partitioning plugin category. public const string ContentTextPartitioning = \"Content Text Partitioning\" Field Value string DataPipelineStage FoundationaLLM Data Pipeline Stage plugin category. public const string DataPipelineStage = \"Data Pipeline Stage\" Field Value string DataSource FoundationaLLM Data Source plugin category. public const string DataSource = \"Data Source\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginDependencySelectionTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginDependencySelectionTypes.html",
    "title": "Enum PluginDependencySelectionTypes | FoundationaLLM",
    "summary": "Enum PluginDependencySelectionTypes Namespace FoundationaLLM.Common.Constants.Plugins Assembly FoundationaLLM.Common.dll Provides the constant values for plugin dependency selection types. public enum PluginDependencySelectionTypes Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Multiple = 1 One or more dependencies must be selected. Single = 0 Exactly one dependency must be selected."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginPackagePlatform.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginPackagePlatform.html",
    "title": "Enum PluginPackagePlatform | FoundationaLLM",
    "summary": "Enum PluginPackagePlatform Namespace FoundationaLLM.Common.Constants.Plugins Assembly FoundationaLLM.Common.dll Defines the platforms supported by plugin packages. public enum PluginPackagePlatform Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Dotnet = 0 The .NET platform. Python = 1 The Python platform."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginParameterTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Plugins.PluginParameterTypes.html",
    "title": "Class PluginParameterTypes | FoundationaLLM",
    "summary": "Class PluginParameterTypes Namespace FoundationaLLM.Common.Constants.Plugins Assembly FoundationaLLM.Common.dll Provides the constant values for plugin parameter types. public static class PluginParameterTypes Inheritance object PluginParameterTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Array Represents a parameter of type string array. public const string Array = \"array\" Field Value string Bool Represents a parameter of type boolean. public const string Bool = \"bool\" Field Value string DateTime Represents a parameter of type datetime. public const string DateTime = \"datetime\" Field Value string Float Represents a parameter of type float. public const string Float = \"float\" Field Value string Int Represents a parameter of type numeric. public const string Int = \"int\" Field Value string ResourceObjectId Represents a parameter of type FoundationaLLM resource object identifier. public const string ResourceObjectId = \"resource-object-id\" Field Value string String Represents a parameter of type string. public const string String = \"string\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Plugins.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Plugins | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Plugins Classes PluginCategoryNames Defines the categories of plugins. PluginParameterTypes Provides the constant values for plugin parameter types. Enums PluginDependencySelectionTypes Provides the constant values for plugin dependency selection types. PluginPackagePlatform Defines the platforms supported by plugin packages."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.PrincipalTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.PrincipalTypes.html",
    "title": "Class PrincipalTypes | FoundationaLLM",
    "summary": "Class PrincipalTypes Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll The types of security principals. public static class PrincipalTypes Inheritance object PrincipalTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Group The group security principal type. public const string Group = \"Group\" Field Value string ServicePrincipal The service principal security principal type. public const string ServicePrincipal = \"ServicePrincipal\" Field Value string User The user security principal type. public const string User = \"User\" Field Value string Methods IsValidPrincipalType(string) Determines if the specified principal type is valid. public static bool IsValidPrincipalType(string principalType) Parameters principalType string The name of the principal type to validate. Returns bool True if the specified principal type is valid."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Quota.QuotaMetricPartitionType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Quota.QuotaMetricPartitionType.html",
    "title": "Enum QuotaMetricPartitionType | FoundationaLLM",
    "summary": "Enum QuotaMetricPartitionType Namespace FoundationaLLM.Common.Constants.Quota Assembly FoundationaLLM.Common.dll Represents the type of partitioning applied to the metric based on which a quota is enforced. public enum QuotaMetricPartitionType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields None = 0 No partitioning. UserIdentifier = 1 Partitioning based on the user identifier. UserPrincipalName = 2 Partitioning based on the user principal name."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Quota.QuotaType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Quota.QuotaType.html",
    "title": "Enum QuotaType | FoundationaLLM",
    "summary": "Enum QuotaType Namespace FoundationaLLM.Common.Constants.Quota Assembly FoundationaLLM.Common.dll Represents the type of quota. public enum QuotaType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AgentRequestRateLimit = 1 Represents a quota that enforces a rate limit on agent requests. RawRequestRateLimit = 0 Represents a quota that enforces a rate limit on raw API requests."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Quota.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Quota.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Quota | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Quota Enums QuotaMetricPartitionType Represents the type of partitioning applied to the metric based on which a quota is enforced. QuotaType Represents the type of quota."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceProviderMetadata.html",
    "title": "Class AIModelResourceProviderMetadata | FoundationaLLM",
    "summary": "Class AIModelResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.AIModel resource provider. public static class AIModelResourceProviderMetadata Inheritance object AIModelResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelResourceTypeNames.html",
    "title": "Class AIModelResourceTypeNames | FoundationaLLM",
    "summary": "Class AIModelResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.AIModel resource provider. public static class AIModelResourceTypeNames Inheritance object AIModelResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AIModels AIModels. public const string AIModels = \"aiModels\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AIModelTypes.html",
    "title": "Class AIModelTypes | FoundationaLLM",
    "summary": "Class AIModelTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll AI Model type contants. public static class AIModelTypes Inheritance object AIModelTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Basic Basic AIModel type without practical functionality. Used as base for all other model types. public const string Basic = \"basic\" Field Value string Completion Completion model type public const string Completion = \"completion\" Field Value string Embedding Embedding model type public const string Embedding = \"embedding\" Field Value string ImageGeneration Image generation model type public const string ImageGeneration = \"image-generation\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceProviderMetadata.html",
    "title": "Class AgentResourceProviderMetadata | FoundationaLLM",
    "summary": "Class AgentResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Agent resource provider. public static class AgentResourceProviderMetadata Inheritance object AgentResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AgentResourceTypeNames.html",
    "title": "Class AgentResourceTypeNames | FoundationaLLM",
    "summary": "Class AgentResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Agent resource provider. public class AgentResourceTypeNames Inheritance object AgentResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AgentAccessTokens Agent access tokens. public const string AgentAccessTokens = \"agentAccessTokens\" Field Value string AgentFileToolAssociations Agent file tool associations. public const string AgentFileToolAssociations = \"agentFileToolAssociations\" Field Value string AgentFiles Agent files. public const string AgentFiles = \"agentFiles\" Field Value string Agents Agents. public const string Agents = \"agents\" Field Value string Tools Tools. public const string Tools = \"tools\" Field Value string Workflows Workflows. public const string Workflows = \"workflows\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceProviderMetadata.html",
    "title": "Class AttachmentResourceProviderMetadata | FoundationaLLM",
    "summary": "Class AttachmentResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Attachment resource provider. public static class AttachmentResourceProviderMetadata Inheritance object AttachmentResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentResourceTypeNames.html",
    "title": "Class AttachmentResourceTypeNames | FoundationaLLM",
    "summary": "Class AttachmentResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Attachment resource provider. public static class AttachmentResourceTypeNames Inheritance object AttachmentResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Attachments Attachments. public const string Attachments = \"attachments\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AttachmentTypes.html",
    "title": "Class AttachmentTypes | FoundationaLLM",
    "summary": "Class AttachmentTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Names of the different attachment types. public static class AttachmentTypes Inheritance object AttachmentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields File The attachment is a file. public const string File = \"file\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceProviderMetadata.html",
    "title": "Class AuthorizationResourceProviderMetadata | FoundationaLLM",
    "summary": "Class AuthorizationResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Authorization resource provider. public class AuthorizationResourceProviderMetadata Inheritance object AuthorizationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AuthorizationResourceTypeNames.html",
    "title": "Class AuthorizationResourceTypeNames | FoundationaLLM",
    "summary": "Class AuthorizationResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Authorization resource provider. public static class AuthorizationResourceTypeNames Inheritance object AuthorizationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RoleAssignments Role assignments. public const string RoleAssignments = \"roleAssignments\" Field Value string RoleDefinitions Role definitions. public const string RoleDefinitions = \"roleDefinitions\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAIResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAIResourceProviderMetadata.html",
    "title": "Class AzureAIResourceProviderMetadata | FoundationaLLM",
    "summary": "Class AzureAIResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.AzureAI resource provider. public static class AzureAIResourceProviderMetadata Inheritance object AzureAIResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAIResourceProviderUpsertParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAIResourceProviderUpsertParameterNames.html",
    "title": "Class AzureAIResourceProviderUpsertParameterNames | FoundationaLLM",
    "summary": "Class AzureAIResourceProviderUpsertParameterNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the parameters used in the FoundationaLLM.AzureAI resource provider upsert operations. public class AzureAIResourceProviderUpsertParameterNames Inheritance object AzureAIResourceProviderUpsertParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AgentObjectId The FoundationaLLM object identifier of the agent. public const string AgentObjectId = \"agent-object-id\" Field Value string AttachmentObjectId The FoundationaLLM identifier of the attachment. public const string AttachmentObjectId = \"attachment-object-id\" Field Value string AzureAIAgentId The identifier of the Azure AI Agent Service agent. public const string AzureAIAgentId = \"azureai-agent-id\" Field Value string ConversationId The FoundationaLLM conversation identifier. public const string ConversationId = \"conversation-id\" Field Value string MustCreateAzureAIAgentFile Indicates whether the attachment identified by AttachmentObjectId must be added to the Azure AI Agent Service file store. public const string MustCreateAzureAIAgentFile = \"must-create-azureai-agent-file\" Field Value string MustCreateAzureAIAgentThread Indicates whether the agent thread associated with the ConversationId must be created. public const string MustCreateAzureAIAgentThread = \"must-create-azureai-agent-thread\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAIResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAIResourceTypeNames.html",
    "title": "Class AzureAIResourceTypeNames | FoundationaLLM",
    "summary": "Class AzureAIResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.AzureAI resource provider. public class AzureAIResourceTypeNames Inheritance object AzureAIResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AgentConversationMappings Azure AI Agent Service to FoundationaLLM conversation mappings. public const string AgentConversationMappings = \"agentConversationMappings\" Field Value string AgentFileMappings Azure AI Agent Service to FoundationaLLM file mappings. public const string AgentFileMappings = \"agentFileMappings\" Field Value string Projects Azure AI Projects. public const string Projects = \"projects\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAITypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureAITypes.html",
    "title": "Class AzureAITypes | FoundationaLLM",
    "summary": "Class AzureAITypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Defines the resource types for Azure AI service resources. public static class AzureAITypes Inheritance object AzureAITypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentConversationMapping Defines a mapping between Azure AI Agent and FoundationaLLM conversation-related resources. public const string AgentConversationMapping = \"AzureAIAgentConversationMapping\" Field Value string AgentFileMapping Defines a mapping between Azure AI Agent and FoundationaLLM file-related resources. public const string AgentFileMapping = \"AzureAIAgentFileMapping\" Field Value string Project The Azure AI Foundry project type. public const string Project = \"azure-ai-project\" Field Value string Remarks Defined lowercase and hyphenated to be consistent with other storage persisted resources."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceProviderMetadata.html",
    "title": "Class AzureOpenAIResourceProviderMetadata | FoundationaLLM",
    "summary": "Class AzureOpenAIResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.AzureOpenAI resource provider. public static class AzureOpenAIResourceProviderMetadata Inheritance object AzureOpenAIResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceProviderUpsertParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceProviderUpsertParameterNames.html",
    "title": "Class AzureOpenAIResourceProviderUpsertParameterNames | FoundationaLLM",
    "summary": "Class AzureOpenAIResourceProviderUpsertParameterNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides the parameter names for the FoundationaLLM.AzureOpenAI resource provider upsert operations. public class AzureOpenAIResourceProviderUpsertParameterNames Inheritance object AzureOpenAIResourceProviderUpsertParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AgentObjectId The FoundationaLLM object identifier of the agent. public const string AgentObjectId = \"agent-object-id\" Field Value string AttachmentObjectId The FoundationaLLM identifier of the attachment. public const string AttachmentObjectId = \"attachment-object-id\" Field Value string ConversationId The FoundationaLLM conversation identifier. public const string ConversationId = \"conversation-id\" Field Value string MustCreateOpenAIAssistantThread Indicates whether the assistant thread associated with the ConversationId must be created. public const string MustCreateOpenAIAssistantThread = \"must-create-openai-assistant-thread\" Field Value string MustCreateOpenAIFile Indicates whether the attachment identified by AttachmentObjectId must be added to the assistant file store. public const string MustCreateOpenAIFile = \"must-create-openai-file\" Field Value string OpenAIAssistantId The identifier of the OpenAI assistant. public const string OpenAIAssistantId = \"openai-assistant-id\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAIResourceTypeNames.html",
    "title": "Class AzureOpenAIResourceTypeNames | FoundationaLLM",
    "summary": "Class AzureOpenAIResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.AzureOpenAI resource provider. public class AzureOpenAIResourceTypeNames Inheritance object AzureOpenAIResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields ConversationMappings Azure OpenAI to FoundationaLLM conversation mappings. public const string ConversationMappings = \"conversationMappings\" Field Value string FileMappings Azure OpenAI to FoundationaLLM file mappings. public const string FileMappings = \"fileMappings\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAITypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.AzureOpenAITypes.html",
    "title": "Class AzureOpenAITypes | FoundationaLLM",
    "summary": "Class AzureOpenAITypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants for the types of resources managed by the FoundationaLLM.AzureOpenAI resource provider. public static class AzureOpenAITypes Inheritance object AzureOpenAITypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ConversationMapping Defines a mapping between Azure OpenAI and FoundationaLLM conversation-related resources. public const string ConversationMapping = \"AzureOpenAIConversationMapping\" Field Value string FileMapping Defines a mapping between Azure OpenAI and FoundationaLLM file-related resources. public const string FileMapping = \"AzureOpenAIFileMapping\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceProviderMetadata.html",
    "title": "Class ConfigurationResourceProviderMetadata | FoundationaLLM",
    "summary": "Class ConfigurationResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Configuration resource provider. public static class ConfigurationResourceProviderMetadata Inheritance object ConfigurationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationResourceTypeNames.html",
    "title": "Class ConfigurationResourceTypeNames | FoundationaLLM",
    "summary": "Class ConfigurationResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Configuration resource provider. public static class ConfigurationResourceTypeNames Inheritance object ConfigurationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields APIEndpointConfigurations API Endpoint key values. public const string APIEndpointConfigurations = \"apiEndpointConfigurations\" Field Value string AppConfigurations Azure App Configuration key values. public const string AppConfigurations = \"appConfigurations\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConfigurationTypes.html",
    "title": "Class ConfigurationTypes | FoundationaLLM",
    "summary": "Class ConfigurationTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll String constants for the types of configurations. public class ConfigurationTypes Inheritance object ConfigurationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields APIEndpointConfiguration Api endpoint resource. public const string APIEndpointConfiguration = \"api-endpoint\" Field Value string AppConfigurationKeyValue Azure App Configuration key value. public const string AppConfigurationKeyValue = \"appconfiguration-key-value\" Field Value string AppConfigurationKeyVaultReference Azure App Configuration key vault reference. public const string AppConfigurationKeyVaultReference = \"appconfiguration-key-vault-reference\" Field Value string Basic Basic configuration without practical functionality. Used as base for all other configurations. public const string Basic = \"basic\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ContextResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ContextResourceProviderMetadata.html",
    "title": "Class ContextResourceProviderMetadata | FoundationaLLM",
    "summary": "Class ContextResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Context resource provider. public static class ContextResourceProviderMetadata Inheritance object ContextResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ContextResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ContextResourceTypeNames.html",
    "title": "Class ContextResourceTypeNames | FoundationaLLM",
    "summary": "Class ContextResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Knowledge resource provider. public static class ContextResourceTypeNames Inheritance object ContextResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KnowledgeSources Knowledge sources. public const string KnowledgeSources = \"knowledgeSources\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationResourceProviderGetParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationResourceProviderGetParameterNames.html",
    "title": "Class ConversationResourceProviderGetParameterNames | FoundationaLLM",
    "summary": "Class ConversationResourceProviderGetParameterNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides the parameter names for the FoundationaLLM.Conversation resource provider get operations. public static class ConversationResourceProviderGetParameterNames Inheritance object ConversationResourceProviderGetParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ConversationType The name of the parameter that specifies the conversation type. public const string ConversationType = \"conversation-type\" Field Value string Remarks The value of the parameter must be one of the values defined in ConversationTypes."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationResourceProviderMetadata.html",
    "title": "Class ConversationResourceProviderMetadata | FoundationaLLM",
    "summary": "Class ConversationResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Conversation resource provider. public static class ConversationResourceProviderMetadata Inheritance object ConversationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationResourceTypeNames.html",
    "title": "Class ConversationResourceTypeNames | FoundationaLLM",
    "summary": "Class ConversationResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Conversation resource provider. public class ConversationResourceTypeNames Inheritance object ConversationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Conversations OpenAI assistant user contexts. public const string Conversations = \"conversations\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ConversationTypes.html",
    "title": "Class ConversationTypes | FoundationaLLM",
    "summary": "Class ConversationTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides the types of conversations. public static class ConversationTypes Inheritance object ConversationTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields KioskSession Conversation type for a Kiosk conversation. public const string KioskSession = \"KioskSession\" Field Value string Session Conversation type for a regular conversation. public const string Session = \"Session\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataPipelineResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataPipelineResourceProviderMetadata.html",
    "title": "Class DataPipelineResourceProviderMetadata | FoundationaLLM",
    "summary": "Class DataPipelineResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.DataPipeline resource provider. public static class DataPipelineResourceProviderMetadata Inheritance object DataPipelineResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataPipelineResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataPipelineResourceTypeNames.html",
    "title": "Class DataPipelineResourceTypeNames | FoundationaLLM",
    "summary": "Class DataPipelineResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.DataPipeline resource provider. public static class DataPipelineResourceTypeNames Inheritance object DataPipelineResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataPipelineRuns Data pipeline runs. public const string DataPipelineRuns = \"dataPipelineRuns\" Field Value string DataPipelineSnapshots Data pipeline snapshots. public const string DataPipelineSnapshots = \"dataPipelineSnapshots\" Field Value string DataPipelines Data pipelines. public const string DataPipelines = \"dataPipelines\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataPipelineTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataPipelineTypes.html",
    "title": "Class DataPipelineTypes | FoundationaLLM",
    "summary": "Class DataPipelineTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Data Pipeline type contants. public static class DataPipelineTypes Inheritance object DataPipelineTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataPipeline Data Pipeline type. public const string DataPipeline = \"data-pipeline\" Field Value string DataPipelineContentItem Data Pipeline content item type. public const string DataPipelineContentItem = \"data-pipeline-content-item\" Field Value string DataPipelineRun Data Pipeline run type. public const string DataPipelineRun = \"data-pipeline-run\" Field Value string DataPipelineRunWorkItem Data Pipeline run work item type. public const string DataPipelineRunWorkItem = \"data-pipeline-run-work-item\" Field Value string DataPipelineSnapshot Data Pipeline snapshot type. public const string DataPipelineSnapshot = \"data-pipeline-snapshot\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceProviderMetadata.html",
    "title": "Class DataSourceResourceProviderMetadata | FoundationaLLM",
    "summary": "Class DataSourceResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.DataSource resource provider. public static class DataSourceResourceProviderMetadata Inheritance object DataSourceResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceResourceTypeNames.html",
    "title": "Class DataSourceResourceTypeNames | FoundationaLLM",
    "summary": "Class DataSourceResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.DataSource resource provider. public static class DataSourceResourceTypeNames Inheritance object DataSourceResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DataSources Data sources. public const string DataSources = \"dataSources\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.DataSourceTypes.html",
    "title": "Class DataSourceTypes | FoundationaLLM",
    "summary": "Class DataSourceTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll String constants for the types of data sources. public static class DataSourceTypes Inheritance object DataSourceTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureDataLake Azure Data Lake data source. public const string AzureDataLake = \"azure-data-lake\" Field Value string AzureSQLDatabase Azure SQL Database data source. public const string AzureSQLDatabase = \"azure-sql-database\" Field Value string Basic Basic data source without practical functionality. Used as base for all other data sources. public const string Basic = \"basic\" Field Value string OneLake Fabric OneLake data source. public const string OneLake = \"onelake\" Field Value string SharePointOnlineSite SharePoint Online Site data source. public const string SharePointOnlineSite = \"sharepoint-online-site\" Field Value string WebSite Web Site data source. public const string WebSite = \"web-site\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PluginResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PluginResourceProviderMetadata.html",
    "title": "Class PluginResourceProviderMetadata | FoundationaLLM",
    "summary": "Class PluginResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Plugin resource provider. public static class PluginResourceProviderMetadata Inheritance object PluginResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PluginResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PluginResourceTypeNames.html",
    "title": "Class PluginResourceTypeNames | FoundationaLLM",
    "summary": "Class PluginResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Plugin resource provider. public static class PluginResourceTypeNames Inheritance object PluginResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields PluginPackages Plugin packages. public const string PluginPackages = \"pluginPackages\" Field Value string Plugins Plugins. public const string Plugins = \"plugins\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PluginTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PluginTypes.html",
    "title": "Class PluginTypes | FoundationaLLM",
    "summary": "Class PluginTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Plugin type contants. public static class PluginTypes Inheritance object PluginTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Plugin Plugin type. public const string Plugin = \"plugin\" Field Value string PluginPackage Plugin package type. public const string PluginPackage = \"plugin-package\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceProviderMetadata.html",
    "title": "Class PromptResourceProviderMetadata | FoundationaLLM",
    "summary": "Class PromptResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Prompt resource provider. public static class PromptResourceProviderMetadata Inheritance object PromptResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptResourceTypeNames.html",
    "title": "Class PromptResourceTypeNames | FoundationaLLM",
    "summary": "Class PromptResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Prompt resource provider. public class PromptResourceTypeNames Inheritance object PromptResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Prompts Prompts. public const string Prompts = \"prompts\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.PromptTypes.html",
    "title": "Class PromptTypes | FoundationaLLM",
    "summary": "Class PromptTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants for the types of prompts. public static class PromptTypes Inheritance object PromptTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Basic Basic agent without practical functionality. Used as base for all the other agents. public const string Basic = \"basic\" Field Value string Multipart Multipart prompt composed of a prefix and a suffix. public const string Multipart = \"multipart\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceObjectIdPropertyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceObjectIdPropertyNames.html",
    "title": "Class ResourceObjectIdPropertyNames | FoundationaLLM",
    "summary": "Class ResourceObjectIdPropertyNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the resource property names. public static class ResourceObjectIdPropertyNames Inheritance object ResourceObjectIdPropertyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ModelParameters Model parameters. public const string ModelParameters = \"model_parameters\" Field Value string ObjectRole Object role. public const string ObjectRole = \"object_role\" Field Value string TextEmbeddingModelName Text embedding model name. public const string TextEmbeddingModelName = \"text_embedding_model_name\" Field Value string TextEmbeddingModelParameters Text embedding model parameters. public const string TextEmbeddingModelParameters = \"text_embedding_model_parameters\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceObjectIdPropertyValues.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceObjectIdPropertyValues.html",
    "title": "Class ResourceObjectIdPropertyValues | FoundationaLLM",
    "summary": "Class ResourceObjectIdPropertyValues Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the resource property values. public static class ResourceObjectIdPropertyValues Inheritance object ResourceObjectIdPropertyValues Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AIProject AI project. public const string AIProject = \"ai_project\" Field Value string FileUploadDataPipeline The data pipeline used to upload files. public const string FileUploadDataPipeline = \"file_upload_data_pipeline\" Field Value string FilesPrompt Files prompt. public const string FilesPrompt = \"files_prompt\" Field Value string FinalPrompt Final prompt. public const string FinalPrompt = \"final_prompt\" Field Value string MainIndexingProfile Main indexing profile. public const string MainIndexingProfile = \"main_indexing_profile\" Field Value string MainModel Main model. public const string MainModel = \"main_model\" Field Value string MainPrompt Main prompt. public const string MainPrompt = \"main_prompt\" Field Value string RouterPrompt Router prompt. public const string RouterPrompt = \"router_prompt\" Field Value string ToolAssociation Tool association. public const string ToolAssociation = \"tool_association\" Field Value string VectorDatabase The vector store container used to store individual vector stores. public const string VectorDatabase = \"vector_database\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourcePropertyNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourcePropertyNames.html",
    "title": "Class ResourcePropertyNames | FoundationaLLM",
    "summary": "Class ResourcePropertyNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Common property names for resources. public class ResourcePropertyNames Inheritance object ResourcePropertyNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields DefaultResource Key in the property bag for indicating whether the resource is the default for this resource type. public const string DefaultResource = \"default_resource\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderActions.html",
    "title": "Class ResourceProviderActions | FoundationaLLM",
    "summary": "Class ResourceProviderActions Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll The names of the actions implemented by most of the FoundationaLLM resource providers. public static class ResourceProviderActions Inheritance object ResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activate Activate a resource. public const string Activate = \"activate\" Field Value string CheckName Check the validity of a resource name. public const string CheckName = \"checkname\" Field Value string Deactivate Deactivate a resource. public const string Deactivate = \"deactivate\" Field Value string Filter Filter resources. public const string Filter = \"filter\" Field Value string LoadFileContent Load the content of a file. public const string LoadFileContent = \"load-file-content\" Field Value string LoadPluginPackage Load a plugin package. public const string LoadPluginPackage = \"load-plugin-package\" Field Value string Purge Purges a soft-deleted resource. public const string Purge = \"purge\" Field Value string Query Submit a query to a resource. public const string Query = \"query\" Field Value string RenderGraph Submit a request to render a knowledge graph. public const string RenderGraph = \"render-graph\" Field Value string SetDefault Set the resource as the default. public const string SetDefault = \"set-default\" Field Value string Trigger Trigger the execution of a resource. public const string Trigger = \"trigger\" Field Value string TriggerCommand Trigger a resource command. public const string TriggerCommand = \"trigger-command\" Field Value string Validate Validate resources. public const string Validate = \"validate\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderFormPayloadKeys.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderFormPayloadKeys.html",
    "title": "Class ResourceProviderFormPayloadKeys | FoundationaLLM",
    "summary": "Class ResourceProviderFormPayloadKeys Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the keys of the resource provider form payload. public static class ResourceProviderFormPayloadKeys Inheritance object ResourceProviderFormPayloadKeys Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentName Agent name. public const string AgentName = \"agentName\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderMetadata.html",
    "title": "Class ResourceProviderMetadata | FoundationaLLM",
    "summary": "Class ResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata that applies to all resource providers. public class ResourceProviderMetadata Inheritance object ResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AllAllowedResourceTypes Provides a combined dictionary with all the resource type descriptiors of all resource types. public static readonly Dictionary<string, ResourceTypeDescriptor> AllAllowedResourceTypes Field Value Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes Provides the list of all the resource provider metadata definitions. public static readonly ImmutableList<Dictionary<string, ResourceTypeDescriptor>> AllowedResourceTypes Field Value ImmutableList<Dictionary<string, ResourceTypeDescriptor>>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.ResourceProviderNames.html",
    "title": "Class ResourceProviderNames | FoundationaLLM",
    "summary": "Class ResourceProviderNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the resource provider names. public static class ResourceProviderNames Inheritance object ResourceProviderNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All Contains all the resource provider names. public static readonly ImmutableList<string> All Field Value ImmutableList<string> FoundationaLLM_AIModel The name of the FoundationaLLM.AIModel resource provider. public const string FoundationaLLM_AIModel = \"FoundationaLLM.AIModel\" Field Value string FoundationaLLM_Agent The name of the FoundationaLLM.Agent resource provider. public const string FoundationaLLM_Agent = \"FoundationaLLM.Agent\" Field Value string FoundationaLLM_Attachment The name of the FoundationaLLM.Attachment resource provider. public const string FoundationaLLM_Attachment = \"FoundationaLLM.Attachment\" Field Value string FoundationaLLM_Authorization The name of the FoundationaLLM.Authorization resource provider. public const string FoundationaLLM_Authorization = \"FoundationaLLM.Authorization\" Field Value string FoundationaLLM_AzureAI The name of the FoundationaLLM.AzureAI resource provider. public const string FoundationaLLM_AzureAI = \"FoundationaLLM.AzureAI\" Field Value string FoundationaLLM_AzureOpenAI The name of the FoundationaLLM.AzureOpenAI resource provider. public const string FoundationaLLM_AzureOpenAI = \"FoundationaLLM.AzureOpenAI\" Field Value string FoundationaLLM_Configuration The name of the FoundationaLLM.Configuration resource provider. public const string FoundationaLLM_Configuration = \"FoundationaLLM.Configuration\" Field Value string FoundationaLLM_Context The name of the FoundationaLLM.Context resource provider. public const string FoundationaLLM_Context = \"FoundationaLLM.Context\" Field Value string FoundationaLLM_Conversation The name of the FoundationaLLM.Conversation resource provider. public const string FoundationaLLM_Conversation = \"FoundationaLLM.Conversation\" Field Value string FoundationaLLM_DataPipeline The name of the FoundationaLLM.DataPipeline resource provider. public const string FoundationaLLM_DataPipeline = \"FoundationaLLM.DataPipeline\" Field Value string FoundationaLLM_DataSource The name of the FoundationaLLM.DataSource resource provider. public const string FoundationaLLM_DataSource = \"FoundationaLLM.DataSource\" Field Value string FoundationaLLM_Plugin The name of the FoundationaLLM.Plugin resource provider. public const string FoundationaLLM_Plugin = \"FoundationaLLM.Plugin\" Field Value string FoundationaLLM_Prompt The name of the FoundationaLLM.Prompt resource provider. public const string FoundationaLLM_Prompt = \"FoundationaLLM.Prompt\" Field Value string FoundationaLLM_Vector The name of the FoundationaLLM.Vector resource provider. public const string FoundationaLLM_Vector = \"FoundationaLLM.Vector\" Field Value string FoundationaLLM_Vectorization The name of the FoundationaLLM.Vectorization resource provider. public const string FoundationaLLM_Vectorization = \"FoundationaLLM.Vectorization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.SharedResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.SharedResourceProviderMetadata.html",
    "title": "Class SharedResourceProviderMetadata | FoundationaLLM",
    "summary": "Class SharedResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata shared by all resource providers. public static class SharedResourceProviderMetadata Inheritance object SharedResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by all resource providers. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.SharedResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.SharedResourceTypeNames.html",
    "title": "Class SharedResourceTypeNames | FoundationaLLM",
    "summary": "Class SharedResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types that can be managed by any resource provider. public static class SharedResourceTypeNames Inheritance object SharedResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Management Management actions. public const string Management = \"management\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorResourceProviderMetadata.html",
    "title": "Class VectorResourceProviderMetadata | FoundationaLLM",
    "summary": "Class VectorResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Vectorization resource provider. public static class VectorResourceProviderMetadata Inheritance object VectorResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorResourceTypeNames.html",
    "title": "Class VectorResourceTypeNames | FoundationaLLM",
    "summary": "Class VectorResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Vector resource provider. public static class VectorResourceTypeNames Inheritance object VectorResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields VectorDatabases Vector databases. public const string VectorDatabases = \"vectorDatabases\" Field Value string VectorStores Vector stores. public const string VectorStores = \"vectorStores\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorTypes.html",
    "title": "Class VectorTypes | FoundationaLLM",
    "summary": "Class VectorTypes Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Vector type constants. public static class VectorTypes Inheritance object VectorTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields VectorDatabase Vector database type. public const string VectorDatabase = \"vector-database\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderActions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderActions.html",
    "title": "Class VectorizationResourceProviderActions | FoundationaLLM",
    "summary": "Class VectorizationResourceProviderActions Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll The names of the actions implemented by the Agent resource provider. public static class VectorizationResourceProviderActions Inheritance object VectorizationResourceProviderActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Activate Activate a vectorization pipeline. public const string Activate = \"activate\" Field Value string Deactivate Deactivate a vectorization pipeline. public const string Deactivate = \"deactivate\" Field Value string Process Process a vectorization request. public const string Process = \"process\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceProviderMetadata.html",
    "title": "Class VectorizationResourceProviderMetadata | FoundationaLLM",
    "summary": "Class VectorizationResourceProviderMetadata Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Provides metadata for the FoundationaLLM.Vectorization resource provider. public static class VectorizationResourceProviderMetadata Inheritance object VectorizationResourceProviderMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public static Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor>"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceTypeNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationResourceTypeNames.html",
    "title": "Class VectorizationResourceTypeNames | FoundationaLLM",
    "summary": "Class VectorizationResourceTypeNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the resource types managed by the FoundationaLLM.Vectorization resource provider. public static class VectorizationResourceTypeNames Inheritance object VectorizationResourceTypeNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields IndexingProfiles Indexing profiles. public const string IndexingProfiles = \"indexingProfiles\" Field Value string TextEmbeddingProfiles Text embedding profiles. public const string TextEmbeddingProfiles = \"textEmbeddingProfiles\" Field Value string TextPartitioningProfiles Text partitioning profiles. public const string TextPartitioningProfiles = \"textPartitioningProfiles\" Field Value string VectorizationPipelineExecutions Vectorization pipeline executions. public const string VectorizationPipelineExecutions = \"vectorizationPipelineExecutions\" Field Value string VectorizationPipelines Vectorization pipelines. public const string VectorizationPipelines = \"vectorizationPipelines\" Field Value string VectorizationRequests Vectorization requests. public const string VectorizationRequests = \"vectorizationRequests\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationSettingsNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.VectorizationSettingsNames.html",
    "title": "Class VectorizationSettingsNames | FoundationaLLM",
    "summary": "Class VectorizationSettingsNames Namespace FoundationaLLM.Common.Constants.ResourceProviders Assembly FoundationaLLM.Common.dll Contains constants of the names of the settings contained within vectorization profiles. public class VectorizationSettingsNames Inheritance object VectorizationSettingsNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields EmbeddingProfileModelName The settings name/key of the embedding model for an embedding profile. public const string EmbeddingProfileModelName = \"model_name\" Field Value string IndexingProfileApiEndpointConfigurationObjectId The settings/key name of the api endpoint configuration object id for an indexing profile. public const string IndexingProfileApiEndpointConfigurationObjectId = \"api_endpoint_configuration_object_id\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Constants.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.ResourceProviders Classes AIModelResourceProviderMetadata Provides metadata for the FoundationaLLM.AIModel resource provider. AIModelResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.AIModel resource provider. AIModelTypes AI Model type contants. AgentResourceProviderMetadata Provides metadata for the FoundationaLLM.Agent resource provider. AgentResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Agent resource provider. AttachmentResourceProviderMetadata Provides metadata for the FoundationaLLM.Attachment resource provider. AttachmentResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Attachment resource provider. AttachmentTypes Names of the different attachment types. AuthorizationResourceProviderMetadata Provides metadata for the FoundationaLLM.Authorization resource provider. AuthorizationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Authorization resource provider. AzureAIResourceProviderMetadata Provides metadata for the FoundationaLLM.AzureAI resource provider. AzureAIResourceProviderUpsertParameterNames Contains constants of the names of the parameters used in the FoundationaLLM.AzureAI resource provider upsert operations. AzureAIResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.AzureAI resource provider. AzureAITypes Defines the resource types for Azure AI service resources. AzureOpenAIResourceProviderMetadata Provides metadata for the FoundationaLLM.AzureOpenAI resource provider. AzureOpenAIResourceProviderUpsertParameterNames Provides the parameter names for the FoundationaLLM.AzureOpenAI resource provider upsert operations. AzureOpenAIResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.AzureOpenAI resource provider. AzureOpenAITypes Contains constants for the types of resources managed by the FoundationaLLM.AzureOpenAI resource provider. ConfigurationResourceProviderMetadata Provides metadata for the FoundationaLLM.Configuration resource provider. ConfigurationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Configuration resource provider. ConfigurationTypes String constants for the types of configurations. ContextResourceProviderMetadata Provides metadata for the FoundationaLLM.Context resource provider. ContextResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Knowledge resource provider. ConversationResourceProviderGetParameterNames Provides the parameter names for the FoundationaLLM.Conversation resource provider get operations. ConversationResourceProviderMetadata Provides metadata for the FoundationaLLM.Conversation resource provider. ConversationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Conversation resource provider. ConversationTypes Provides the types of conversations. DataPipelineResourceProviderMetadata Provides metadata for the FoundationaLLM.DataPipeline resource provider. DataPipelineResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.DataPipeline resource provider. DataPipelineTypes Data Pipeline type contants. DataSourceResourceProviderMetadata Provides metadata for the FoundationaLLM.DataSource resource provider. DataSourceResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.DataSource resource provider. DataSourceTypes String constants for the types of data sources. PluginResourceProviderMetadata Provides metadata for the FoundationaLLM.Plugin resource provider. PluginResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Plugin resource provider. PluginTypes Plugin type contants. PromptResourceProviderMetadata Provides metadata for the FoundationaLLM.Prompt resource provider. PromptResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Prompt resource provider. PromptTypes Contains constants for the types of prompts. ResourceObjectIdPropertyNames Contains constants of the resource property names. ResourceObjectIdPropertyValues Contains constants of the resource property values. ResourcePropertyNames Common property names for resources. ResourceProviderActions The names of the actions implemented by most of the FoundationaLLM resource providers. ResourceProviderFormPayloadKeys Contains constants of the keys of the resource provider form payload. ResourceProviderMetadata Provides metadata that applies to all resource providers. ResourceProviderNames Contains constants of the resource provider names. SharedResourceProviderMetadata Provides metadata shared by all resource providers. SharedResourceTypeNames Contains constants of the names of the resource types that can be managed by any resource provider. VectorResourceProviderMetadata Provides metadata for the FoundationaLLM.Vectorization resource provider. VectorResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Vector resource provider. VectorTypes Vector type constants. VectorizationResourceProviderActions The names of the actions implemented by the Agent resource provider. VectorizationResourceProviderMetadata Provides metadata for the FoundationaLLM.Vectorization resource provider. VectorizationResourceTypeNames Contains constants of the names of the resource types managed by the FoundationaLLM.Vectorization resource provider. VectorizationSettingsNames Contains constants of the names of the settings contained within vectorization profiles."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ServiceNames.html",
    "title": "Class ServiceNames | FoundationaLLM",
    "summary": "Class ServiceNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains the names of the FoundationaLLM services. public static class ServiceNames Inheritance object ServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentHubAPI The name of the Agent Hub API service. public const string AgentHubAPI = \"AgentHubAPI\" Field Value string AuthorizationAPI The name of the Authorization API service. public const string AuthorizationAPI = \"AuthorizationAPI\" Field Value string ContextAPI The name of the Context API service. public const string ContextAPI = \"ContextAPI\" Field Value string CoreAPI The name of the Core API service. public const string CoreAPI = \"CoreAPI\" Field Value string CoreWorker The name of the Core Worker service. public const string CoreWorker = \"CoreWorker\" Field Value string DataPipelineAPI The name of the Data Pipeline API service. public const string DataPipelineAPI = \"DataPipelineAPI\" Field Value string DataPipelineBackendWorker The name of the Data Pipeline Backend Worker service. public const string DataPipelineBackendWorker = \"DataPipelineBackendWorker\" Field Value string DataPipelineFrontendWorker The name of the Data Pipeline Frontend Worker service. public const string DataPipelineFrontendWorker = \"DataPipelineFrontendWorker\" Field Value string DataSourceHubAPI The name of the Data Source Hub API service. public const string DataSourceHubAPI = \"DataSourceHubAPI\" Field Value string GatekeeperAPI The name of the Gatekeeper API service. public const string GatekeeperAPI = \"GatekeeperAPI\" Field Value string GatekeeperIntegrationAPI The name of the Gatekeeper Integration API service. public const string GatekeeperIntegrationAPI = \"GatekeeperIntegrationAPI\" Field Value string GatewayAPI The name of the Gateway API service. public const string GatewayAPI = \"GatewayAPI\" Field Value string GatewayAdapterAPI The name of the Gateway Adapter API service. public const string GatewayAdapterAPI = \"GatewayAdapterAPI\" Field Value string LangChainAPI The name of the Lang Chain API service. public const string LangChainAPI = \"LangChainAPI\" Field Value string ManagementAPI The name of the Management API service. public const string ManagementAPI = \"ManagementAPI\" Field Value string OrchestrationAPI The name of the Orchestration API service. public const string OrchestrationAPI = \"OrchestrationAPI\" Field Value string PromptHubAPI The name of the Prompt Hub API service. public const string PromptHubAPI = \"PromptHubAPI\" Field Value string SemanticKernelAPI The name of the Semantic Kernel API service. public const string SemanticKernelAPI = \"SemanticKernelAPI\" Field Value string StateAPI The name of the State API service. public const string StateAPI = \"StateAPI\" Field Value string VectorizationAPI The name of the Vectorization API service. public const string VectorizationAPI = \"VectorizationAPI\" Field Value string VectorizationWorker The name of the Vectorization Worker service. public const string VectorizationWorker = \"VectorizationWorker\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.ServiceStatuses.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.ServiceStatuses.html",
    "title": "Class ServiceStatuses | FoundationaLLM",
    "summary": "Class ServiceStatuses Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Service status constants. public static class ServiceStatuses Inheritance object ServiceStatuses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Error The service is in an error state. public const string Error = \"Error\" Field Value string Initializing The service is in an initializing state. public const string Initializing = \"Initializing\" Field Value string PartiallyAvailable The service is partially available. This is usually caused by one or more subordinate services being in a warning or error state. public const string PartiallyAvailable = \"Partially_Available\" Field Value string Ready The service is operational and ready to accept requests. public const string Ready = \"Ready\" Field Value string Warning The service is in a warning state. public const string Warning = \"Warning\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.StorageNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.StorageNames.html",
    "title": "Class StorageNames | FoundationaLLM",
    "summary": "Class StorageNames Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Contains constants for storage names used by the application. public static class StorageNames Inheritance object StorageNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields OneLake_Storage_Account The name of the account when using Microsoft Fabric storage. ref: https://learn.microsoft.com/en-us/fabric/onelake/onelake-access-api#uri-syntax public const string OneLake_Storage_Account = \"onelake\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Swagger.html",
    "title": "Class Swagger | FoundationaLLM",
    "summary": "Class Swagger Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Common Swagger strings used throughout the FoundationaLLM infrastructure. public static class Swagger Inheritance object Swagger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SecurityDefinitionName The OpenAPI security definition name. public const string SecurityDefinitionName = \"ApiKey\" Field Value string SecuritySchemeDescription The OpenAPI security scheme description. public const string SecuritySchemeDescription = \"API Key auth\" Field Value string SecuritySchemeName The OpenAPI security scheme name. public const string SecuritySchemeName = \"ApiKeyScheme\" Field Value string SecuritySchemeReferenceId The OpenAPI security scheme reference identifier. public const string SecuritySchemeReferenceId = \"ApiKey\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Telemetry.TelemetryActivityNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Telemetry.TelemetryActivityNames.html",
    "title": "Class TelemetryActivityNames | FoundationaLLM",
    "summary": "Class TelemetryActivityNames Namespace FoundationaLLM.Common.Constants.Telemetry Assembly FoundationaLLM.Common.dll Defines constants for all telemetry activity names. public static class TelemetryActivityNames Inheritance object TelemetryActivityNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CoreAPI_AsyncCompletions_StartCompletionOperation The telemetry activity name for the CoreAPI AsyncCompletions_StartCompletionOperation action. public const string CoreAPI_AsyncCompletions_StartCompletionOperation = \"AsyncCompletions_StartCompletionOperation\" Field Value string CoreAPI_Completions_GetCompletion The telemetry activity name for the CoreAPI Completions_GetCompletion action. public const string CoreAPI_Completions_GetCompletion = \"Completions_GetCompletion\" Field Value string CoreAPI_Files_Download The telemetry activity name for the CoreAPI Files_Downlaod action. public const string CoreAPI_Files_Download = \"Files_Download\" Field Value string CoreAPI_Files_Upload The telemetry activity name for the CoreAPI Files_Upload action. public const string CoreAPI_Files_Upload = \"Files_Upload\" Field Value string OrchestrationAPI_AgentOrchestration_UserPromptRewrite_LLM The telemetry activity name for the user prompt rewrite LLM invocation action in the Orchestration API. public const string OrchestrationAPI_AgentOrchestration_UserPromptRewrite_LLM = \"UserPromptRewrite_LLM\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Telemetry.TelemetryActivityTagNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Telemetry.TelemetryActivityTagNames.html",
    "title": "Class TelemetryActivityTagNames | FoundationaLLM",
    "summary": "Class TelemetryActivityTagNames Namespace FoundationaLLM.Common.Constants.Telemetry Assembly FoundationaLLM.Common.dll Provides the names of the tags used in telemetry activities. public static class TelemetryActivityTagNames Inheritance object TelemetryActivityTagNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentName The FoundationaLLM agent name. public const string AgentName = \"FoundationaLLM-AgentName\" Field Value string ConversationId The FoundationaLLM conversation identifier tag. public const string ConversationId = \"FoundationaLLM-ConversationId\" Field Value string FileId The FoundationaLLM file id. public const string FileId = \"FoundationaLLM-FileId\" Field Value string FileProvider The FoundationaLLM file provider. public const string FileProvider = \"FoundationaLLM-FileProvider\" Field Value string InstanceId The FoundationaLLM instance identifier tag. public const string InstanceId = \"FoundationaLLM-InstanceId\" Field Value string OperationId The FoundationaLLM operation identifier tag. public const string OperationId = \"FoundationaLLM-OperationId\" Field Value string UPN The FoundationaLLM user principal name tag. public const string UPN = \"FoundationaLLM-UPN\" Field Value string UserId The FoundationaLLM user identifier tag. public const string UserId = \"FoundationaLLM-UserId\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Telemetry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Telemetry.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Telemetry | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Telemetry Classes TelemetryActivityNames Defines constants for all telemetry activity names. TelemetryActivityTagNames Provides the names of the tags used in telemetry activities."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Templates.TemplateVariables.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Templates.TemplateVariables.html",
    "title": "Class TemplateVariables | FoundationaLLM",
    "summary": "Class TemplateVariables Namespace FoundationaLLM.Common.Constants.Templates Assembly FoundationaLLM.Common.dll Provides template variables that can be used in templates. public static class TemplateVariables Inheritance object TemplateVariables Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AttachedFiles Token for the list of attached files. public const string AttachedFiles = \"attached_files\" Field Value string ConversationFiles Token for the list of conversation files. public const string ConversationFiles = \"conversation_files\" Field Value string CurrentDateTimeUTC Token for current date in UTC format. public const string CurrentDateTimeUTC = \"current_datetime_utc\" Field Value string FilesPrompt Token for a workflow files prompt. public const string FilesPrompt = \"files_prompt\" Field Value string RouterPrompt Token for a workflow router prompt. public const string RouterPrompt = \"router_prompt\" Field Value string ToolList Token for the tool list. public const string ToolList = \"tool_list\" Field Value string ToolRouterPrompts Token for the tool router prompt. public const string ToolRouterPrompts = \"tool_router_prompts\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.Templates.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.Templates.html",
    "title": "Namespace FoundationaLLM.Common.Constants.Templates | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants.Templates Classes TemplateVariables Provides template variables that can be used in templates."
  },
  "api/dotnet/FoundationaLLM.Common.Constants.UserProfileFlags.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.UserProfileFlags.html",
    "title": "Class UserProfileFlags | FoundationaLLM",
    "summary": "Class UserProfileFlags Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Named user profile flags. public static class UserProfileFlags Inheritance object UserProfileFlags Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All All user profile flags. public static readonly string[] All Field Value string[] OneDriveWorkSchoolEnabled Flag that allows the user to grant or revoke consent to connect to their OneDrive for work or school account. public const string OneDriveWorkSchoolEnabled = \"oneDriveWorkSchoolEnabled\" Field Value string PersistOrchestrationCompletionRequests Indicates whether completion requests created by the Orchestration API should be persisted or not. public const string PersistOrchestrationCompletionRequests = \"persistOrchestrationCompletionRequests\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.VectorizationSteps.html",
    "title": "Class VectorizationSteps | FoundationaLLM",
    "summary": "Class VectorizationSteps Namespace FoundationaLLM.Common.Constants Assembly FoundationaLLM.Common.dll Core FoundationaLLM vectorization step names. public class VectorizationSteps Inheritance object VectorizationSteps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Embed Embed text chunks into a latent vector space. public const string Embed = \"embed\" Field Value string Extract Extract the text from the content of the document. public const string Extract = \"extract\" Field Value string Index Persist vector embeddings into a vector index. public const string Index = \"index\" Field Value string Partition Partition the text into multiple chunks. public const string Partition = \"partition\" Field Value string Methods ValidateStepName(string) Validates a given vectorization step name. public static bool ValidateStepName(string stepName) Parameters stepName string The vectorization step name to be validated. Returns bool Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.Common.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Constants.html",
    "title": "Namespace FoundationaLLM.Common.Constants | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Constants Namespaces FoundationaLLM.Common.Constants.Agents FoundationaLLM.Common.Constants.Authentication FoundationaLLM.Common.Constants.Authorization FoundationaLLM.Common.Constants.AzureAI FoundationaLLM.Common.Constants.Configuration FoundationaLLM.Common.Constants.Context FoundationaLLM.Common.Constants.DataPipelines FoundationaLLM.Common.Constants.DataSource FoundationaLLM.Common.Constants.Events FoundationaLLM.Common.Constants.Gateway FoundationaLLM.Common.Constants.Instance FoundationaLLM.Common.Constants.OpenAI FoundationaLLM.Common.Constants.Orchestration FoundationaLLM.Common.Constants.Plugins FoundationaLLM.Common.Constants.Quota FoundationaLLM.Common.Constants.ResourceProviders FoundationaLLM.Common.Constants.Telemetry FoundationaLLM.Common.Constants.Templates Classes AuthorizationClaims Claims that are used in the authorization process. AzureCosmosDBContainers Core FoundationaLLM Cosmos DB container names. CorsPolicyNames Names for CORS policies. FileExtensions Name constants used to identify file extension. GatekeeperOptionNames Contains the names of the Agent Base Gatekeeper Options. HttpClientFactoryServiceKeyNames Name constants used for the key names of the dictionary generated by IHttpClientFactoryService implementations. HttpClientNames Name constants used to configure and retrieve API endpoint configurations. HttpFormDataKeys Common HTTP form data keys used throughout the FoundationaLLM infrastructure. HttpHeaders Common HTTP headers used throughout the FoundationaLLM infrastructure. LLMOrchestrationServiceNames Constants for the LLM Orchestration Service Names. PrincipalTypes The types of security principals. ServiceNames Contains the names of the FoundationaLLM services. ServiceStatuses Service status constants. StorageNames Contains constants for storage names used by the application. Swagger Common Swagger strings used throughout the FoundationaLLM infrastructure. UserProfileFlags Named user profile flags. VectorizationSteps Core FoundationaLLM vectorization step names. Enums Participants Specifies the participants, such as a user and an assistant."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.AuthorizationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.AuthorizationException.html",
    "title": "Class AuthorizationException | FoundationaLLM",
    "summary": "Class AuthorizationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by FoundationaLLM.Authoriztion resource provider. public class AuthorizationException : Exception, ISerializable Inheritance object Exception AuthorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationException() Initializes a new instance of the AuthorizationException class with a default message. public AuthorizationException() AuthorizationException(string?) Initializes a new instance of the AuthorizationException class with its message set to message. public AuthorizationException(string? message) Parameters message string A string that describes the error. AuthorizationException(string?, Exception?) Initializes a new instance of the AuthorizationException class with its message set to message. public AuthorizationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValidationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValidationException.html",
    "title": "Class ConfigurationValidationException | FoundationaLLM",
    "summary": "Class ConfigurationValidationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an exception that occurs when configuration validation fails. public class ConfigurationValidationException : Exception, ISerializable Inheritance object Exception ConfigurationValidationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the ConfigurationValidationException class. Constructors ConfigurationValidationException(IEnumerable<string?>?, IEnumerable<string?>?, IEnumerable<string?>?) Represents an exception that occurs when configuration validation fails. public ConfigurationValidationException(IEnumerable<string?>? missingConfigurations, IEnumerable<string?>? missingKeyVaultSecrets, IEnumerable<string?>? missingEnvironmentVariables) Parameters missingConfigurations IEnumerable<string> Provide a list of missing or empty app configurations. missingKeyVaultSecrets IEnumerable<string> Provide a list of missing or empty Key Vault secrets. missingEnvironmentVariables IEnumerable<string> Provide a list of missing environment variables. Remarks Initializes a new instance of the ConfigurationValidationException class. Properties MissingConfigurations The list of keys for missing or empty configurations. public IEnumerable<string?>? MissingConfigurations { get; } Property Value IEnumerable<string> MissingEnvironmentVariables The list of missing environment variables. public IEnumerable<string?>? MissingEnvironmentVariables { get; } Property Value IEnumerable<string> MissingKeyVaultSecrets The list of missing or empty Key Vault secrets. public IEnumerable<string?>? MissingKeyVaultSecrets { get; } Property Value IEnumerable<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValueException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ConfigurationValueException.html",
    "title": "Class ConfigurationValueException | FoundationaLLM",
    "summary": "Class ConfigurationValueException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with a configuration value. public class ConfigurationValueException : Exception, ISerializable Inheritance object Exception ConfigurationValueException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationValueException() Initializes a new instance of the ConfigurationValueException class with a default message. public ConfigurationValueException() ConfigurationValueException(string?) Initializes a new instance of the ConfigurationValueException class with its message set to message. public ConfigurationValueException(string? message) Parameters message string A string that describes the error. ConfigurationValueException(string?, Exception?) Initializes a new instance of the ConfigurationValueException class with its message set to message. public ConfigurationValueException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ContentException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ContentException.html",
    "title": "Class ContentException | FoundationaLLM",
    "summary": "Class ContentException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class ContentException : Exception, ISerializable Inheritance object Exception ContentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentException() Initializes a new instance of the ContentException class with a default message. public ContentException() ContentException(string?) Initializes a new instance of the ContentException class with its message set to message. public ContentException(string? message) Parameters message string A string that describes the error. ContentException(string?, Exception?) Initializes a new instance of the ContentException class with its message set to message. public ContentException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ContentIdentifierException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ContentIdentifierException.html",
    "title": "Class ContentIdentifierException | FoundationaLLM",
    "summary": "Class ContentIdentifierException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with a configuration value. public class ContentIdentifierException : Exception, ISerializable Inheritance object Exception ContentIdentifierException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentIdentifierException() Initializes a new instance of the ContentIdentifierException class with a default message. public ContentIdentifierException() ContentIdentifierException(string?) Initializes a new instance of the ContentIdentifierException class with its message set to message. public ContentIdentifierException(string? message) Parameters message string A string that describes the error. ContentIdentifierException(string?, Exception?) Initializes a new instance of the ContentIdentifierException class with its message set to message. public ContentIdentifierException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.CoreServiceException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.CoreServiceException.html",
    "title": "Class CoreServiceException | FoundationaLLM",
    "summary": "Class CoreServiceException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class CoreServiceException : Exception, ISerializable Inheritance object Exception CoreServiceException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreServiceException() Initializes a new instance of the CoreServiceException class with a default message. public CoreServiceException() CoreServiceException(string?) Initializes a new instance of the CoreServiceException class with its message set to message. public CoreServiceException(string? message) Parameters message string A string that describes the error. CoreServiceException(string?, Exception?) Initializes a new instance of the CoreServiceException class with its message set to message. public CoreServiceException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.DataPipelineException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.DataPipelineException.html",
    "title": "Class DataPipelineException | FoundationaLLM",
    "summary": "Class DataPipelineException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the eventing system. public class DataPipelineException : Exception, ISerializable Inheritance object Exception DataPipelineException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineException() Initializes a new instance of the DataPipelineException class with a default message. public DataPipelineException() DataPipelineException(string?) Initializes a new instance of the DataPipelineException class with its message set to message. public DataPipelineException(string? message) Parameters message string A string that describes the error. DataPipelineException(string?, Exception?) Initializes a new instance of the DataPipelineException class with its message set to message. public DataPipelineException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.EventException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.EventException.html",
    "title": "Class EventException | FoundationaLLM",
    "summary": "Class EventException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the eventing system. public class EventException : Exception, ISerializable Inheritance object Exception EventException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventException() Initializes a new instance of the EventException class with a default message. public EventException() EventException(string?) Initializes a new instance of the EventException class with its message set to message. public EventException(string? message) Parameters message string A string that describes the error. EventException(string?, Exception?) Initializes a new instance of the EventException class with its message set to message. public EventException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.GatewayException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.GatewayException.html",
    "title": "Class GatewayException | FoundationaLLM",
    "summary": "Class GatewayException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the FoundationaLLM Gateway. public class GatewayException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException GatewayException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayException() Initializes a new instance of the GatewayException class with a default message. public GatewayException() GatewayException(string?, Exception?, int) Initializes a new instance of the GatewayException class with its message set to message. public GatewayException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. GatewayException(string?, int) Initializes a new instance of the GatewayException class with its message set to message. public GatewayException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.HttpStatusCodeException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.HttpStatusCodeException.html",
    "title": "Class HttpStatusCodeException | FoundationaLLM",
    "summary": "Class HttpStatusCodeException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an exception that maps to a HTTP status code. public class HttpStatusCodeException : Exception, ISerializable Inheritance object Exception HttpStatusCodeException Implements ISerializable Derived GatewayException ResourceProviderException ContextServiceException DataPipelineServiceException SemanticKernelException StateException Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors HttpStatusCodeException() Initializes a new instance of the HttpStatusCodeException class with a default message. public HttpStatusCodeException() HttpStatusCodeException(string?, Exception?, int) Initializes a new instance of the HttpStatusCodeException class with its message set to message. public HttpStatusCodeException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. HttpStatusCodeException(string?, int) Initializes a new instance of the HttpStatusCodeException class with its message set to message. public HttpStatusCodeException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception. Properties StatusCode Provides the HTTP status code associated with the exception. public int StatusCode { get; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.OrchestrationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.OrchestrationException.html",
    "title": "Class OrchestrationException | FoundationaLLM",
    "summary": "Class OrchestrationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class OrchestrationException : Exception, ISerializable Inheritance object Exception OrchestrationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationException() Initializes a new instance of the OrchestrationException class with a default message. public OrchestrationException() OrchestrationException(string?) Initializes a new instance of the OrchestrationException class with its message set to message. public OrchestrationException(string? message) Parameters message string A string that describes the error. OrchestrationException(string?, Exception?) Initializes a new instance of the OrchestrationException class with its message set to message. public OrchestrationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.PluginException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.PluginException.html",
    "title": "Class PluginException | FoundationaLLM",
    "summary": "Class PluginException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error originating in a plugin. public class PluginException : Exception, ISerializable Inheritance object Exception PluginException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PluginException() Initializes a new instance of the PluginException class with a default message. public PluginException() PluginException(string?) Initializes a new instance of the PluginException class with its message set to message. public PluginException(string? message) Parameters message string A string that describes the error. PluginException(string?, Exception?) Initializes a new instance of the PluginException class with its message set to message. public PluginException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.QuotaException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.QuotaException.html",
    "title": "Class QuotaException | FoundationaLLM",
    "summary": "Class QuotaException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the FoundationaLLM quota management service. public class QuotaException : Exception, ISerializable Inheritance object Exception QuotaException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors QuotaException() Initializes a new instance of the QuotaException class with a default message. public QuotaException() QuotaException(string?) Initializes a new instance of the QuotaException class with its message set to message. public QuotaException(string? message) Parameters message string A string that describes the error. QuotaException(string?, Exception?) Initializes a new instance of the QuotaException class with its message set to message. public QuotaException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.ResourceProviderException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.ResourceProviderException.html",
    "title": "Class ResourceProviderException | FoundationaLLM",
    "summary": "Class ResourceProviderException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by a resource provider. public class ResourceProviderException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException ResourceProviderException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderException() Initializes a new instance of the ResourceProviderException class with a default message. public ResourceProviderException() ResourceProviderException(string?, Exception?, int) Initializes a new instance of the ResourceProviderException class with its message set to message. public ResourceProviderException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. ResourceProviderException(string?, int) Initializes a new instance of the ResourceProviderException class with its message set to message. public ResourceProviderException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.SemanticCacheException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.SemanticCacheException.html",
    "title": "Class SemanticCacheException | FoundationaLLM",
    "summary": "Class SemanticCacheException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by the semantic cache. public class SemanticCacheException : Exception, ISerializable Inheritance object Exception SemanticCacheException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticCacheException() Initializes a new instance of the SemanticCacheException class with a default message. public SemanticCacheException() SemanticCacheException(string?) Initializes a new instance of the SemanticCacheException class with its message set to message. public SemanticCacheException(string? message) Parameters message string A string that describes the error. SemanticCacheException(string?, Exception?) Initializes a new instance of the SemanticCacheException class with its message set to message. public SemanticCacheException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.StorageException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.StorageException.html",
    "title": "Class StorageException | FoundationaLLM",
    "summary": "Class StorageException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error with accessing content. public class StorageException : Exception, ISerializable Inheritance object Exception StorageException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageException() Initializes a new instance of the StorageException class with a default message. public StorageException() StorageException(string?) Initializes a new instance of the StorageException class with its message set to message. public StorageException(string? message) Parameters message string A string that describes the error. StorageException(string?, Exception?) Initializes a new instance of the StorageException class with its message set to message. public StorageException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.TextProcessingException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.TextProcessingException.html",
    "title": "Class TextProcessingException | FoundationaLLM",
    "summary": "Class TextProcessingException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error in the tokenization process. public class TextProcessingException : Exception, ISerializable Inheritance object Exception TextProcessingException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextProcessingException() Initializes a new instance of the TextProcessingException class with a default message. public TextProcessingException() TextProcessingException(string?) Initializes a new instance of the TextProcessingException class with its message set to message. public TextProcessingException(string? message) Parameters message string A string that describes the error. TextProcessingException(string?, Exception?) Initializes a new instance of the TextProcessingException class with its message set to message. public TextProcessingException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.UserPromptRewriteException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.UserPromptRewriteException.html",
    "title": "Class UserPromptRewriteException | FoundationaLLM",
    "summary": "Class UserPromptRewriteException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents an error generated by user prompt rewrite service. public class UserPromptRewriteException : Exception, ISerializable Inheritance object Exception UserPromptRewriteException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserPromptRewriteException() Initializes a new instance of the UserPromptRewriteException class with a default message. public UserPromptRewriteException() UserPromptRewriteException(string?) Initializes a new instance of the UserPromptRewriteException class with its message set to message. public UserPromptRewriteException(string? message) Parameters message string A string that describes the error. UserPromptRewriteException(string?, Exception?) Initializes a new instance of the UserPromptRewriteException class with its message set to message. public UserPromptRewriteException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.VectorizationException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.VectorizationException.html",
    "title": "Class VectorizationException | FoundationaLLM",
    "summary": "Class VectorizationException Namespace FoundationaLLM.Common.Exceptions Assembly FoundationaLLM.Common.dll Represents errors that occur during the vectorization process. public class VectorizationException : Exception, ISerializable Inheritance object Exception VectorizationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationException() Initializes a new instance of the VectorizationException class with a default message. public VectorizationException() VectorizationException(string?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message) Parameters message string A string that describes the error. VectorizationException(string?, Exception?) Initializes a new instance of the VectorizationException class with its message set to message. public VectorizationException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Exceptions.html",
    "title": "Namespace FoundationaLLM.Common.Exceptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Exceptions Classes AuthorizationException Represents an error generated by FoundationaLLM.Authoriztion resource provider. ConfigurationValidationException Represents an exception that occurs when configuration validation fails. ConfigurationValueException Represents an error with a configuration value. ContentException Represents an error with accessing content. ContentIdentifierException Represents an error with a configuration value. CoreServiceException Represents an error with accessing content. DataPipelineException Represents an error generated by the eventing system. EventException Represents an error generated by the eventing system. GatewayException Represents an error generated by the FoundationaLLM Gateway. HttpStatusCodeException Represents an exception that maps to a HTTP status code. OrchestrationException Represents an error with accessing content. PluginException Represents an error originating in a plugin. QuotaException Represents an error generated by the FoundationaLLM quota management service. ResourceProviderException Represents an error generated by a resource provider. SemanticCacheException Represents an error generated by the semantic cache. StorageException Represents an error with accessing content. TextProcessingException Represents an error in the tokenization process. UserPromptRewriteException Represents an error generated by user prompt rewrite service. VectorizationException Represents errors that occur during the vectorization process."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.BlobStorageExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.BlobStorageExtensions.html",
    "title": "Class BlobStorageExtensions | FoundationaLLM",
    "summary": "Class BlobStorageExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends Azure Blob Storage classes with helper methods. public static class BlobStorageExtensions Inheritance object BlobStorageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AcquireAsyncWithWait(BlobLeaseClient, TimeSpan, int, int, CancellationToken) Attempts to acquire a lease on a blob item using a retry pattern. public static Task<BlobLease?> AcquireAsyncWithWait(this BlobLeaseClient blobLeaseClient, TimeSpan duration, int maxRetryCount = 5, int retryWaitSeconds = 5, CancellationToken cancellationToken = default) Parameters blobLeaseClient BlobLeaseClient The BlobLeaseClient client used to acquire the lease. duration TimeSpan The TimeSpan specifying the intended duration of the lease. maxRetryCount int The maximum number of attempts to acquire the lease. retryWaitSeconds int The number of seconds to wait between subsequent attempts to acquire the lease. cancellationToken CancellationToken The CancellationToken that signals the cancellation of the procedure. Returns Task<BlobLease> The BlobLease acquired or null if the acquire operation was not completed."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.DictionaryExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | FoundationaLLM",
    "summary": "Class DictionaryExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Provides extension methods for Dictionary<TKey, TValue>. public static class DictionaryExtensions Inheritance object DictionaryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FilterKeys(Dictionary<string, object>, string) Filters the keys of a dictionary based on a specified namespace. public static Dictionary<string, object> FilterKeys(this Dictionary<string, object> source, string keyNamespace) Parameters source Dictionary<string, object> The dictionary to be filtered. keyNamespace string The namespace of the keys to be returned in the resulting dictionary. Returns Dictionary<string, object> A new dictionary that contains the keys (and their values) which start with the provided namespace string. ToObject<T>(Dictionary<string, object>, Dictionary<string, object>?) Converts a dictionary to an object of type T with optional overrides. public static T ToObject<T>(this Dictionary<string, object> source, Dictionary<string, object>? overrides = null) where T : new() Parameters source Dictionary<string, object> The source properties for the returned object. overrides Dictionary<string, object> Optional overrides to apply to the returned object parameters. Returns T Type Parameters T The type of the object to which you want to convert from a source dictionary."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.GuidExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.GuidExtensions.html",
    "title": "Class GuidExtensions | FoundationaLLM",
    "summary": "Class GuidExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the Guid interface with helper methods. public static class GuidExtensions Inheritance object GuidExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToBase64String(Guid) Converts a Guid to a base64 string. public static string ToBase64String(this Guid guid) Parameters guid Guid The GUID value to be converted. Returns string"
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.HttpClientExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.HttpClientExtensions.html",
    "title": "Class HttpClientExtensions | FoundationaLLM",
    "summary": "Class HttpClientExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Adds extension methods to the HttpClient class. public static class HttpClientExtensions Inheritance object HttpClientExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetBearerToken(HttpClient, string) Sets the bearer token for the HttpClient if the passed in token is not null or empty. public static void SetBearerToken(this HttpClient httpClient, string token) Parameters httpClient HttpClient The HttpClient to extend. token string An auth token."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.JsonElementExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.JsonElementExtensions.html",
    "title": "Class JsonElementExtensions | FoundationaLLM",
    "summary": "Class JsonElementExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Provides extension methods for JsonElement. public static class JsonElementExtensions Inheritance object JsonElementExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToObject(JsonElement) Converts the JSON element to the underlying object type. public static object? ToObject(this JsonElement jsonElement) Parameters jsonElement JsonElement The JSON element to convert. Returns object The underlying object type. Exceptions NotSupportedException"
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.PipelineResponseExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.PipelineResponseExtensions.html",
    "title": "Class PipelineResponseExtensions | FoundationaLLM",
    "summary": "Class PipelineResponseExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll public static class PipelineResponseExtensions Inheritance object PipelineResponseExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LogRateLimitHeaders(PipelineResponse, int, ILogger, LogLevel) Logs the rate limit headers from the response at the specified log level. public static void LogRateLimitHeaders(this PipelineResponse response, int operationId, ILogger logger, LogLevel logLevel = LogLevel.Debug) Parameters response PipelineResponse The System.ClientModel.Primitives.PipelineResponse whose headers are being logged. operationId int The operation identifier associated with the response, used for logging. logger ILogger The logger used for logging. logLevel LogLevel The log level at which to log the rate limit headers. Defaults to Debug."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.StringExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | FoundationaLLM",
    "summary": "Class StringExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the string interface with helper methods. public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NormalizeUserPrincipalName(string) Converts a UPN (User Principal Name) to a string that is better suited to be used as an identifier. public static string NormalizeUserPrincipalName(this string upn) Parameters upn string The original UPN (User Principal Name). Returns string A string containing the normalized UPN (User Principal Name)."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.SwaggerGenOptionsExtensions.html",
    "title": "Class SwaggerGenOptionsExtensions | FoundationaLLM",
    "summary": "Class SwaggerGenOptionsExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs. public static class SwaggerGenOptionsExtensions Inheritance object SwaggerGenOptionsExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAPIKeyAuth(SwaggerGenOptions) Extension method that configures API Key auth for the APIs that use it. public static void AddAPIKeyAuth(this SwaggerGenOptions options) Parameters options SwaggerGenOptions The base options."
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.UrlExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.UrlExtensions.html",
    "title": "Class UrlExtensions | FoundationaLLM",
    "summary": "Class UrlExtensions Namespace FoundationaLLM.Common.Extensions Assembly FoundationaLLM.Common.dll Extends string with helper methods. public static class UrlExtensions Inheritance object UrlExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromKnownNeutralUrl(string) Translates a URL into its neutral form. public static string FromKnownNeutralUrl(this string url) Parameters url string Returns string"
  },
  "api/dotnet/FoundationaLLM.Common.Extensions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Extensions.html",
    "title": "Namespace FoundationaLLM.Common.Extensions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Extensions Classes BlobStorageExtensions Extends Azure Blob Storage classes with helper methods. DictionaryExtensions Provides extension methods for Dictionary<TKey, TValue>. GuidExtensions Extends the Guid interface with helper methods. HttpClientExtensions Adds extension methods to the HttpClient class. JsonElementExtensions Provides extension methods for JsonElement. PipelineResponseExtensions StringExtensions Extends the string interface with helper methods. SwaggerGenOptionsExtensions Extends the SwaggerGenOptions with common options used by the FoundationaLLM APIs. UrlExtensions Extends string with helper methods."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAPIKeyValidationService.html",
    "title": "Interface IAPIKeyValidationService | FoundationaLLM",
    "summary": "Interface IAPIKeyValidationService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Common interface for X-API-Key header validation. public interface IAPIKeyValidationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods IsValid(string) Checks if an API key is valid or not. bool IsValid(string apiKey) Parameters apiKey string The API key to be checked. Returns bool A boolean representing the validity of the API key parameter."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationServiceClient.html",
    "title": "Interface IAuthorizationServiceClient | FoundationaLLM",
    "summary": "Interface IAuthorizationServiceClient Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines methods exposed by the Authorization service. public interface IAuthorizationServiceClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateRoleAssignment(string, RoleAssignmentCreateRequest, UnifiedUserIdentity) Creates a new role assignment. Task<RoleAssignmentOperationResult> CreateRoleAssignment(string instanceId, RoleAssignmentCreateRequest roleAssignmentRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignmentRequest RoleAssignmentCreateRequest The RoleAssignmentCreateRequest containing the details of the role assignment to be created. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentOperationResult> A RoleAssignmentOperationResult containing information about the result of the operation. DeleteRoleAssignment(string, string, UnifiedUserIdentity) Deletes a role assignment. Task<RoleAssignmentOperationResult> DeleteRoleAssignment(string instanceId, string roleAssignment, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. roleAssignment string The role assignment object identifier. userIdentity UnifiedUserIdentity The user identity. Returns Task<RoleAssignmentOperationResult> A RoleAssignmentOperationResult containing information about the result of the operation. DeleteSecretKey(string, string, string) Deletes a specified secret key. Task DeleteSecretKey(string instanceId, string contextId, string secretKeyId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to delete. secretKeyId string The unique identifier of the secret key being deleted. Returns Task GetRoleAssignments(string, RoleAssignmentQueryParameters, UnifiedUserIdentity) Returns a list of role assignments. Task<List<RoleAssignment>> GetRoleAssignments(string instanceId, RoleAssignmentQueryParameters queryParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. queryParameters RoleAssignmentQueryParameters The RoleAssignmentQueryParameters providing the inputs for filtering the role assignments. userIdentity UnifiedUserIdentity The user identity. Returns Task<List<RoleAssignment>> The list of all role assignments for the specified instance. GetSecretKeys(string, string) Gets a list of SecretKey items that are associated with the specified instance and context. Task<List<SecretKey>> GetSecretKeys(string instanceId, string contextId) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context for which the secret keys are retrieved. Returns Task<List<SecretKey>> A list of SecretKey items. Remarks Each consumer of secret keys should have a unique context identifier. For example, FoundationaLLM resource providers could use the resource object identifier as the context identifier. ProcessAuthorizationRequest(string, string, string?, List<string>, bool, bool, bool, UnifiedUserIdentity) Processes an action authorization request. Task<ActionAuthorizationResult> ProcessAuthorizationRequest(string instanceId, string action, string? roleName, List<string> resourcePaths, bool expandResourceTypePaths, bool includeRoles, bool includeActions, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. action string The action identifier. roleName string An optional role name to check for assignment. resourcePaths List<string> The resource paths. expandResourceTypePaths bool A value indicating whether to expand resource type paths that are not authorized. includeRoles bool A value indicating whether to include roles in the response. includeActions bool A value indicating whether to include authorizable actions in the response. userIdentity UnifiedUserIdentity The user identity. Returns Task<ActionAuthorizationResult> An ActionAuthorizationResult containing the result of the processing. Remarks If the action specified by action is not authorized for a resource type path, and expandResourceTypePaths is set to true, the response will include any authorized resource paths matching the resource type path. If includeRoles is set to true, for each authrorized resource path, the response will include the roles assigned directly or indirectly to the resource path. If action is set to true, for each authorized resource path, the response will include the autorizable actions assigned directly or indirectly to the resource path. UpsertSecretKey(string, SecretKey) Creates a new or updates an existing SecretKey item. Task<string?> UpsertSecretKey(string instanceId, SecretKey secretKey) Parameters instanceId string The FoundationaLLM instance identifier. secretKey SecretKey The SecretKey item containing the properties of the secret key being created or updated. Returns Task<string> If the secret bey is being created, it returns the secret value of the key. Otherwise, returns null. ValidateSecretKey(string, string, string) Validates a secret key value. Task<SecretKeyValidationResult> ValidateSecretKey(string instanceId, string contextId, string secretKeyValue) Parameters instanceId string The FoundationaLLM instance identifier. contextId string The identifier of the context containing the secret key to validate. secretKeyValue string The secret value of the key. Returns Task<SecretKeyValidationResult> A SecretKeyValidationResult item with the results of the validation. Remarks Each valid secret key has an associated virtual identity that is returned in the VirtualIdentity property. It is the responsibility of the caller to use the virtual identity to authorize the request."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationServiceClientCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAuthorizationServiceClientCacheService.html",
    "title": "Interface IAuthorizationServiceClientCacheService | FoundationaLLM",
    "summary": "Interface IAuthorizationServiceClientCacheService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides the caching services used by the FoundationaLLM authorization service client. public interface IAuthorizationServiceClientCacheService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods SetValue(ActionAuthorizationRequest, ActionAuthorizationResult) Sets an ActionAuthorizationResult in the cache. void SetValue(ActionAuthorizationRequest authorizationRequest, ActionAuthorizationResult authorizationResult) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest key used to set the authorization result in the cache. authorizationResult ActionAuthorizationResult The ActionAuthorizationResult to be set. TryGetValue(ActionAuthorizationRequest, out ActionAuthorizationResult?) Attempts to retrieve an ActionAuthorizationResult from the cache. bool TryGetValue(ActionAuthorizationRequest authorizationRequest, out ActionAuthorizationResult? authorizationResult) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest key used to identify the authorization result in the cache. authorizationResult ActionAuthorizationResult The ActionAuthorizationResult to be retrieved. Returns bool true if the value was found in the cache, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureAISearchService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureAISearchService.html",
    "title": "Interface IAzureAISearchService | FoundationaLLM",
    "summary": "Interface IAzureAISearchService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for Azure AI Search Service. public interface IAzureAISearchService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateIndexIfNotExists(string, IEnumerable<SearchField>, VectorSearch?) Creates an index in the Azure AI Search service if it does not already exist. Task CreateIndexIfNotExists(string indexName, IEnumerable<SearchField> indexFields, VectorSearch? indexConfiguration = null) Parameters indexName string The name of the index to create. indexFields IEnumerable<SearchField> The list of fields for the newly created index. indexConfiguration VectorSearch The optionsl vectorization configuration for the newly created index. Returns Task DeleteDocuments(string, string, string) Deletes documents from the specified index in the Azure AI Search service based on a filter. Task<int> DeleteDocuments(string indexName, string keyFieldName, string filter) Parameters indexName string The name of the index from which the documents should be deleted. keyFieldName string The name of the key field for the index. filter string The filter used to identify the documents to be deleted. Returns Task<int> The number of documents that were deleted. SearchDocuments(string, IEnumerable<string>, string, string, ReadOnlyMemory<float>, string, float, int, bool) Searches for documents in the specified index that match the given filter and are similar to the provided user prompt embedding. Task<IEnumerable<SearchDocument>> SearchDocuments(string indexName, IEnumerable<string> select, string filter, string userPrompt, ReadOnlyMemory<float> userPromptEmbedding, string embeddingPropertyName, float similarityThreshold, int topN, bool useSemanticRanking) Parameters indexName string The name of the index to search within. select IEnumerable<string> A list of fields to select in the search results. If null or empty, all fields will be selected. filter string A filter expression to narrow down the search results. userPrompt string The original user prompt. userPromptEmbedding ReadOnlyMemory<float> A read-only memory segment representing the embedding of the user prompt. embeddingPropertyName string The name of the index property that contains embeddings. similarityThreshold float The minimum similarity score required for a document to be included in the results. Must be a value between 0 and 1. topN int The maximum number of documents to return. Must be a positive integer. useSemanticRanking bool A flag that indicates whether semantic ranking should be used or not. Returns Task<IEnumerable<SearchDocument>> An enumerable collection of SearchDocument objects that match the filter and meet the similarity threshold, ordered by relevance. The collection will be empty if no matching documents are found. UploadDocuments(string, List<string>, List<object[]>) Uploads documents to the specified index in the Azure AI Search service. Task UploadDocuments(string indexName, List<string> fieldNames, List<object[]> fieldValues) Parameters indexName string The name of the index in which the documents should be uploaded. fieldNames List<string> The names of the fields of the documents. fieldValues List<object[]> The values of the fields of the documents. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureAIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureAIService.html",
    "title": "Interface IAzureAIService | FoundationaLLM",
    "summary": "Interface IAzureAIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for the Azure AI service. public interface IAzureAIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateDataSet(InputsMapping, string) Creates a new data set. Task<string> CreateDataSet(InputsMapping data, string blobName) Parameters data InputsMapping blobName string Returns Task<string> CreateDataSetVersion(string, string, int) Creates a data set version request. Task<DataVersionResponse> CreateDataSetVersion(string dataSetName, string dataSetPath, int version = 1) Parameters dataSetName string dataSetPath string version int Returns Task<DataVersionResponse> DownloadResults(Guid) Downloads the results of a job. Task<string> DownloadResults(Guid jobId) Parameters jobId Guid Returns Task<string> GetJobStatus(Guid) Retrieves the status of a job. Task<string> GetJobStatus(Guid jobId) Parameters jobId Guid Returns Task<string> GetResultsByIndex(Guid, int, int) Retrieves the results of a job by index. Task<string> GetResultsByIndex(Guid jobId, int startIndex = 0, int endIndex = 149) Parameters jobId Guid startIndex int endIndex int Returns Task<string> SubmitJob(string, string, int, string) Submits a job to the Azure AI service. Task<Guid> SubmitJob(string displayName, string dataSetName, int dataSetVersion, string metrics) Parameters displayName string dataSetName string dataSetVersion int metrics string Returns Task<Guid>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureCosmosDBService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureCosmosDBService.html",
    "title": "Interface IAzureCosmosDBService | FoundationaLLM",
    "summary": "Interface IAzureCosmosDBService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Contains methods for accessing Azure Cosmos DB for NoSQL. public interface IAzureCosmosDBService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateAgentFile(AgentFileReference, CancellationToken) Creates an agent file. Task CreateAgentFile(AgentFileReference agentFile, CancellationToken cancellationToken = default) Parameters agentFile AgentFileReference The agent file to be added. cancellationToken CancellationToken Cancellation token for async calls. Returns Task CreateAttachment(AttachmentReference, CancellationToken) Creates an attachment. Task CreateAttachment(AttachmentReference attachment, CancellationToken cancellationToken = default) Parameters attachment AttachmentReference The attachment to be added. cancellationToken CancellationToken Cancellation token for async calls. Returns Task CreateOrUpdateConversationAsync(Conversation, CancellationToken) Creates or updates a conversation. Task<Conversation> CreateOrUpdateConversationAsync(Conversation session, CancellationToken cancellationToken = default) Parameters session Conversation Conversation item to create or update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Conversation> Newly created or updated conversation item. CreateVectorSearchContainerAsync(string, string, string, int, CancellationToken) Creates a new container for vector search. Task CreateVectorSearchContainerAsync(string containerName, string partitionKeyPath, string vectorProperyPath, int vectorDimensions, CancellationToken cancellationToken = default) Parameters containerName string The name of the container to create. partitionKeyPath string The property path that contains the partition key. vectorProperyPath string The property path that contains the vectors. vectorDimensions int The length of each vector (the number of dimensions used for embedding). cancellationToken CancellationToken The cancellation token to signal the need to cancel the operation. Returns Task DeleteAgentFile(AgentFileReference, CancellationToken) Deletes an agent file. Task DeleteAgentFile(AgentFileReference agentFile, CancellationToken cancellationToken = default) Parameters agentFile AgentFileReference The agent file to be deleted. cancellationToken CancellationToken Cancellation token for async calls. Returns Task DeleteAttachment(AttachmentReference, CancellationToken) Deletes an attachment. Task DeleteAttachment(AttachmentReference attachment, CancellationToken cancellationToken = default) Parameters attachment AttachmentReference The attachment to be deleted. cancellationToken CancellationToken Cancellation token for async calls. Returns Task DeleteConversationAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. Task DeleteConversationAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task FilterAttachments(string, ResourceFilter, CancellationToken) Gets list of filtered attachments. Task<List<AttachmentReference>> FilterAttachments(string upn, ResourceFilter resourceFilter, CancellationToken cancellationToken = default) Parameters upn string The user's UPN. resourceFilter ResourceFilter The resource filter. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<AttachmentReference>> A list of filtered attachments. GetAgentFile(string, string, string, CancellationToken) Gets an agent file. Task<AgentFileReference?> GetAgentFile(string instanceId, string agentName, string id, CancellationToken cancellationToken = default) Parameters instanceId string The instance unique identifier agentName string The agent name. id string The agent file id. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<AgentFileReference> An agent file. GetAgentFiles(string, string, CancellationToken) Gets a list of agent files. Task<List<AgentFileReference>> GetAgentFiles(string instanceId, string agentName, CancellationToken cancellationToken = default) Parameters instanceId string The instance unique identifier agentName string The agent name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<AgentFileReference>> A list of agent files. GetAttachment(string, string, CancellationToken) Gets an attachment. Task<AttachmentReference?> GetAttachment(string upn, string id, CancellationToken cancellationToken = default) Parameters upn string The user's UPN. id string The attachment id. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<AttachmentReference> An attachment. GetAttachments(string, CancellationToken) Gets a list of attachments for the signed in user. Task<List<AttachmentReference>> GetAttachments(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the attachments for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<AttachmentReference>> A list of attachments for the signed in user. GetCompletionPromptAsync(string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPromptAsync(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetCompletionResponseAsync(string, ReadOnlyMemory<float>, decimal) Gets the completion response for a given user prompt embedding using vector search and a minimum threshold for similarity. Task<CompletionResponse?> GetCompletionResponseAsync(string containerName, ReadOnlyMemory<float> userPromptEmbedding, decimal minimumSimilarityScore) Parameters containerName string The name of the container holding the vector index. userPromptEmbedding ReadOnlyMemory<float> The reference embedding used for the vector search. minimumSimilarityScore decimal The threshold used for the similarity score. Returns Task<CompletionResponse> A CompletionResponse that matches the search criteria. If no item in the vector index matches the criteria, returns . GetConversationAsync(string, CancellationToken) Performs a point read to retrieve a single conversation item. Task<Conversation?> GetConversationAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Conversation> The conversation item. Returns null if the conversation does not exist. GetConversationsAsync(string, string, CancellationToken) Gets a list of all current conversations. Task<List<Conversation>> GetConversationsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The conversation type to return. upn string The user principal name used for retrieving conversations for the signed-in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Conversation>> List of distinct conversation items. GetItemAsync<T>(string, string, string, CancellationToken) Gets a single item by its identifier and partition key. Task<T?> GetItemAsync<T>(string containerName, string id, string partitionKey, CancellationToken cancellationToken = default) Parameters containerName string The name of the container storing the item. id string The identifier of the item. partitionKey string The partition key of the item. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The retrieved object of type T. Type Parameters T The type of the item to retrieve. GetLongRunningOperationContextAsync(string, CancellationToken) Get the context for a long running operation. Task<LongRunningOperationContext> GetLongRunningOperationContextAsync(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The identifier of the long running operation. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<LongRunningOperationContext> A LongRunningOperationContext object providing the context for the long running operation. GetMessageAsync(string, string, CancellationToken) Gets a single conversation message by its identifier. Task<Message> GetMessageAsync(string id, string sessionId, CancellationToken cancellationToken = default) Parameters id string The identifier of the message. sessionId string The identifier of the conversation. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> A Message object containing the message. GetSessionMessagesAsync(string, string, int?, CancellationToken) Gets a list of all current chat messages for a specified session identifier. Messages are always sorted by TimeStamp in ascending order. Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, int? max = null, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. max int? If provided, limits the number of messages. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. PatchConversationPropertiesAsync(string, string, Dictionary<string, object?>, CancellationToken) Updates conversation properties through a patch operation. Task<Conversation> PatchConversationPropertiesAsync(string id, string upn, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters id string The conversation id. upn string The user principal name used for policy enforcement. propertyValues Dictionary<string, object> The dictionary containing property names and updated values. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Conversation> Updated conversation item. PatchItemPropertiesAsync<T>(string, string, string, string, Dictionary<string, object?>, CancellationToken) Patches an item in the specified container. Task<T> PatchItemPropertiesAsync<T>(string containerName, string partitionKey, string id, string upn, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters containerName string The name of the container storing the item. partitionKey string The partition key of the item. id string The item ID. upn string The user principal name used for matching the UPN of the item. propertyValues Dictionary<string, object> Dictionary of the property names and values to patch. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The patched object of type . Type Parameters T The type of the item to patch. PatchMultipleSessionsItemsInTransactionAsync(string, List<IPatchOperationItem>, CancellationToken) Updates a subset of the properties of one or more items of a specified type from the Sessions collection. Task<Dictionary<string, object>> PatchMultipleSessionsItemsInTransactionAsync(string partitionKey, List<IPatchOperationItem> patchOperations, CancellationToken cancellationToken = default) Parameters partitionKey string The partition key of the item(s) being updated. Batch operations must occur within the same partition key. patchOperations List<IPatchOperationItem> The patch operations to perform on each object, including the object's identifier, dictionary containing the property names and updated values, and the item type. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Dictionary<string, object>> PatchOperationsItemPropertiesAsync<T>(string, string, Dictionary<string, object?>, CancellationToken) Updates a subset of the properties of an item of a specified type from the Operations collection. Task<T> PatchOperationsItemPropertiesAsync<T>(string itemId, string partitionKey, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters itemId string The identifier of the item being updated. partitionKey string The partition key of the item being updated. propertyValues Dictionary<string, object> The dictionary containing property names and updated values. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> Type Parameters T The type of the item to update. PatchSessionsItemPropertiesAsync<T>(string, string, Dictionary<string, object?>, CancellationToken) Updates a subset of the properties of an item of a specified type from the Sessions collection. Task<T> PatchSessionsItemPropertiesAsync<T>(string itemId, string partitionKey, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters itemId string The identifier of the item being updated. partitionKey string The partition key of the item being updated. propertyValues Dictionary<string, object> The dictionary containing property names and updated values. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> Type Parameters T The type of the item to update. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpsertItemAsync<T>(string, string, T, CancellationToken) Creates or updates an item in the specified container. Task<T?> UpsertItemAsync<T>(string containerName, string partitionKey, T item, CancellationToken cancellationToken = default) Parameters containerName string The name of the container storing the item. partitionKey string The partition key of the item. item T The item to be created or updated. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The created or updated object of type T. Type Parameters T The type of the item to create or update. UpsertLongRunningOperationContextAsync(LongRunningOperationContext, CancellationToken) Inserts or updates a long running operation context. Task UpsertLongRunningOperationContextAsync(LongRunningOperationContext longRunningOperationContext, CancellationToken cancellationToken = default) Parameters longRunningOperationContext LongRunningOperationContext The LongRunningOperationContext object providing the context for the long running operation. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Conversation, CancellationToken) Create or update a user session from the passed in Session object. Task UpsertUserSessionAsync(Conversation session, CancellationToken cancellationToken = default) Parameters session Conversation The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureResourceManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IAzureResourceManagerService.html",
    "title": "Interface IAzureResourceManagerService | FoundationaLLM",
    "summary": "Interface IAzureResourceManagerService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public interface IAzureResourceManagerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateEventGridNamespaceTopicSubscription(string, string, string, List<string>, CancellationToken) Creates a new Azure Event Grid namespace topic subscription. Task<bool> CreateEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, List<string> includedEventTypes, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be created. topicSubscriptionName string The name of the subscription to be created. includedEventTypes List<string> The list of event types to include in the subscription as part of the filters configuration. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task<bool> True if the subscription was successfully created, false otherwise. DeleteEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Deletes an Azure Event Grid namespace topic subscription. Task DeleteEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be deleted. topicSubscriptionName string The name of the subscription to be deleted. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task GetOpenAIAccountProperties(string) Retrieves the properties of an Azure OpenAI account. Task<AzureOpenAIAccount> GetOpenAIAccountProperties(string openAIAccountResourceId) Parameters openAIAccountResourceId string The Azure resource identifier of the Azure OpenAI account. Returns Task<AzureOpenAIAccount> An AzureOpenAIAccount object with the properties of the account, including model deployments."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheControlAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheControlAPIService.html",
    "title": "Interface ICacheControlAPIService | FoundationaLLM",
    "summary": "Interface ICacheControlAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Contains base functionality for calling the underlying API service. public interface ICacheControlAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods RefreshCache(string) Refreshes the named cache. Task<APICacheRefreshResult> RefreshCache(string name) Parameters name string The name of the cache item to refresh. Returns Task<APICacheRefreshResult> RefreshConfigurationCache() Refreshes the configuration cache. Task<APICacheRefreshResult> RefreshConfigurationCache() Returns Task<APICacheRefreshResult>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ICacheService.html",
    "title": "Interface ICacheService | FoundationaLLM",
    "summary": "Interface ICacheService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Caches objects. public interface ICacheService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetItemsCount(string) Gets the number of items in the cache that belong to a specified category. int GetItemsCount(string categoryName) Parameters categoryName string The name of the category. Returns int Get<T>(CacheKey) Gets an object from the cache. T? Get<T>(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Returns T The object identified by the key. Type Parameters T The type of object retrieved from the cache. Get<T>(CacheKey, Func<Task<T>>, bool, TimeSpan?) Gets an object from the cache. If the object is not found in the cache, will attempt to retrieve it using a specified retriever. Task<T?> Get<T>(CacheKey key, Func<Task<T>> valueRetriever, bool allowNull, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. valueRetriever Func<Task<T>> The retriever used to get the value to populate the cache. allowNull bool Indicates whether null values returned by the value retriever should be cached or not. expirationTime TimeSpan? The TimeSpan time to live. Returns Task<T> The object identified by the key. Type Parameters T The type of object retrieved from the cache. Remove(CacheKey) Removes an object from the cache. void Remove(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. RemoveByCategory(CacheKey) Removes all objects belonging to a category from the cache. void RemoveByCategory(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Set<T>(CacheKey, T?, TimeSpan?) Adds an object to the cache. void Set<T>(CacheKey key, T? value, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. value T The object to be added to the cache. expirationTime TimeSpan? The TimeSpan time to live. Type Parameters T The type of object retrieved from the cache."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IContextServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IContextServiceClient.html",
    "title": "Interface IContextServiceClient | FoundationaLLM",
    "summary": "Interface IContextServiceClient Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides methods to call the FoundationaLLM Context API service. public interface IContextServiceClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateCodeSession(string, string, string, string, string, string) Calls the Context API service to create a code session. Task<ContextServiceResponse<CreateCodeSessionResponse>> CreateCodeSession(string instanceId, string agentName, string conversationId, string context, string endpointProvider, string language) Parameters instanceId string The FoundationaLLM instance identifier. agentName string The name of the agent. conversationId string The conversation identifier. context string The context within the conversation in which the code session must be created (e.g., an agent tool name). endpointProvider string The name of the code session endpoint provider. language string The programming language of the code session. Returns Task<ContextServiceResponse<CreateCodeSessionResponse>> A ContextServiceResponse<T> instance where T is of type CreateCodeSessionResponse. CreateFile(string, string, string, string, Stream) Calls the Context API service to create a file. Task<ContextServiceResponse<ContextFileRecord>> CreateFile(string instanceId, string conversationId, string fileName, string fileContentType, Stream fileContent) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The conversation identifier. fileName string The name of the file to be created. fileContentType string The content type of the file to be created. fileContent Stream The binary content of the file. Returns Task<ContextServiceResponse<ContextFileRecord>> A ContextServiceResponse<T> instance where T is of type ContextFileRecord. GetFileContent(string, string) Calls the Context API service to get the content of a file. Task<ContextServiceResponse<ContextFileContent>> GetFileContent(string instanceId, string fileId) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The unique identifier of the file. Returns Task<ContextServiceResponse<ContextFileContent>> A ContextServiceResponse<T> instance where T is of type ContextFileContent. GetFileRecord(string, string) Calls the Context API service to get a file record. Task<ContextServiceResponse<ContextFileRecord>> GetFileRecord(string instanceId, string fileId) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The unique identifier of the file. Returns Task<ContextServiceResponse<ContextFileRecord>> A ContextServiceResponse<T> instance where T is of type ContextFileRecord. GetKnowledgeSources(string, IEnumerable<string>?) Call the Context API to retrieve the list of knowledge sources. Task<IEnumerable<KnowledgeSource>> GetKnowledgeSources(string instanceId, IEnumerable<string>? knowledgeSourceNames = null) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceNames IEnumerable<string> An optional list of specific knowledge sources to retrieve. Returns Task<IEnumerable<KnowledgeSource>> The list of knowledge sources. QueryKnowledgeSource(string, string, ContextKnowledgeSourceQueryRequest) Calls the Context API to query a knowledge source. Task<ContextKnowledgeSourceQueryResponse> QueryKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest queryRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request object containing query parameters and options. Returns Task<ContextKnowledgeSourceQueryResponse> A response containing the result of the query execution. RenderKnowledgeSourceGraph(string, string, ContextKnowledgeSourceQueryRequest?) Retrieves the knowledge source's knowledge graph in a format suitable for visualization or further processing. Task<ContextKnowledgeSourceRenderGraphResponse> RenderKnowledgeSourceGraph(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest? queryRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request containing the details of the query. Returns Task<ContextKnowledgeSourceRenderGraphResponse> UpdateKnowledgeSource(string, string, ContextKnowledgeSourceUpdateRequest) Calls the Context API service to update a knowledge source with the specified knowledge graph and vector database/store details. Task<ContextServiceResponse> UpdateKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceUpdateRequest updateRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. updateRequest ContextKnowledgeSourceUpdateRequest The update request containing the knowledge graph and vector database/store details. Returns Task<ContextServiceResponse> A response indicating the success of the operation and an optional error message."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IDataPipelineStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IDataPipelineStateService.html",
    "title": "Interface IDataPipelineStateService | FoundationaLLM",
    "summary": "Interface IDataPipelineStateService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines the interface for the Data Pipeline State Service. public interface IDataPipelineStateService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetActiveDataPipelineRuns() Gets a list of active data pipeline runs. Task<List<DataPipelineRun>> GetActiveDataPipelineRuns() Returns Task<List<DataPipelineRun>> The list of active data pipeline runs. GetDataPipelineContentItem(DataPipelineRunWorkItem) Gets a data pipeline content item associated with a data pipeline run work item. Task<DataPipelineContentItem> GetDataPipelineContentItem(DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline work item that references the content item. Returns Task<DataPipelineContentItem> The content item referenced by the work item. GetDataPipelineRun(string) Gets a data pipeline run by its identifier. Task<DataPipelineRun?> GetDataPipelineRun(string runId) Parameters runId string The data pipeline run identifier. Returns Task<DataPipelineRun> The requested data pipeline run object. GetDataPipelineRunArtifactsPath(DataPipelineDefinition, DataPipelineRun) Gets the path to the artifacts directory for a data pipeline run. string GetDataPipelineRunArtifactsPath(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run. Returns string The path of the artifacts directory. GetDataPipelineRunStageWorkItems(string, string) Gets the list of data pipeline run work items associated with a specified stage of a run. Task<List<DataPipelineRunWorkItem>> GetDataPipelineRunStageWorkItems(string runId, string stage) Parameters runId string The data pipeline run identifier. stage string The stage of the data pipeline run. Returns Task<List<DataPipelineRunWorkItem>> The list of data pipeline run work items associated with the specified stage of the run. GetDataPipelineRunWorkItem(string, string) Gets a data pipeline run work item by its identifier. Task<DataPipelineRunWorkItem?> GetDataPipelineRunWorkItem(string workItemId, string runId) Parameters workItemId string The data pipeline run work item identifier. runId string The data pipeline run identifier. Returns Task<DataPipelineRunWorkItem> The requests data pipeline run work item object. GetDataPipelineRuns(DataPipelineRunFilter) Gets a list of data pipeline runs filtered by the provided filter criteria. Task<List<DataPipelineRun>> GetDataPipelineRuns(DataPipelineRunFilter dataPipelineRunFilter) Parameters dataPipelineRunFilter DataPipelineRunFilter The filter criteria used to filter data pipeline runs. Returns Task<List<DataPipelineRun>> The list of requests data pipeline runs. InitializeDataPipelineRunState(DataPipelineDefinition, DataPipelineRun, List<DataPipelineContentItem>) Initializes the state of a data pipeline run. Task<bool> InitializeDataPipelineRunState(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, List<DataPipelineContentItem> contentItems) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition used to initialize the run state. dataPipelineRun DataPipelineRun The details of the data pipeline run. contentItems List<DataPipelineContentItem> The list of content items to be processed by the data pipeline run. Returns Task<bool> true if the initialization is successful. LoadDataPipelineRunParts<T>(DataPipelineDefinition, DataPipelineRun, string) Loads the parts associated with a data pipeline run. Task<IEnumerable<T>> LoadDataPipelineRunParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, string filePath) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run . filePath string The name of the file that contains the data pipeline run parts. Returns Task<IEnumerable<T>> A list with the parts associated with the data pipeline run. Type Parameters T The type of the data pipeline run part to be loaded. Remarks The filePath parameter must contain a path that is relative to the path of the data pipeline run artifacts directory. LoadDataPipelineRunWorkItemArtifacts(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, string) Loads the artifacts associated with a data pipeline run work item. Task<List<DataPipelineStateArtifact>> LoadDataPipelineRunWorkItemArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, string artifactsNameFilter) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. artifactsNameFilter string The name pattern used to identify a subset of the artifacts. Returns Task<List<DataPipelineStateArtifact>> A list with the binary contents of the artifacts. LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, string) Loads the content item parts associated with a data pipeline run work item. Task<IEnumerable<T>> LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, string fileName) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. fileName string The name of the file that contains the content item parts. Returns Task<IEnumerable<T>> A list with the content item parts associated with the data pipeline run work item. Type Parameters T The type of the content item parts to be loaded. LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition, DataPipelineRun, string, string) Loads the content item parts associated with a data pipeline run work item. Task<IEnumerable<T>> LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, string contentItemCanonicalId, string fileName) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. contentItemCanonicalId string The content item canonical identifier. fileName string The name of the file that contains the content item parts. Returns Task<IEnumerable<T>> A list with the content item parts associated with the data pipeline run work item. Type Parameters T The type of the content item parts to be loaded. PersistDataPipelineRunWorkItems(List<DataPipelineRunWorkItem>) Persists a list of data pipeline run work items. Task<bool> PersistDataPipelineRunWorkItems(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> The list of data pipeline work items to be persisted. Returns Task<bool> true if the items are successfully persisted. SaveDataPipelineRunArtifacts(DataPipelineDefinition, DataPipelineRun, List<DataPipelineStateArtifact>) Saves the artifacts associated with a data pipeline run. Task SaveDataPipelineRunArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, List<DataPipelineStateArtifact> artifacts) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run. artifacts List<DataPipelineStateArtifact> The list of artifacts to be saved. Returns Task SaveDataPipelineRunParts<T>(DataPipelineDefinition, DataPipelineRun, IEnumerable<T>, string) Saves the parts associated with a data pipeline run. Task SaveDataPipelineRunParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, IEnumerable<T> dataPipelineRunParts, string filePath) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run. dataPipelineRunParts IEnumerable<T> The list of data pipeline run parts. filePath string The path of the file that contains the data pipeline run parts. Returns Task Type Parameters T The type of the data pipeline part to be saved. Remarks The filePath parameter must contain a path that is relative to the path of the data pipeline run artifacts directory. SaveDataPipelineRunWorkItemArtifacts(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, List<DataPipelineStateArtifact>) Saves the artifacts associated with a data pipeline run work item. Task SaveDataPipelineRunWorkItemArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, List<DataPipelineStateArtifact> artifacts) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. artifacts List<DataPipelineStateArtifact> The list with the binary contents of the artifacts. Returns Task SaveDataPipelineRunWorkItemParts<T>(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, IEnumerable<T>, string) Saves the content item parts associated with a data pipeline run work item. Task SaveDataPipelineRunWorkItemParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, IEnumerable<T> contentItemParts, string fileName) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. contentItemParts IEnumerable<T> The list with the content item parts. fileName string The name of the file that contains the content item parts. Returns Task Type Parameters T The type of the content item parts to be saved. StartDataPipelineRunWorkItemProcessing(Func<DataPipelineRunWorkItem, Task>) Starts processing data pipeline run work items. Task<bool> StartDataPipelineRunWorkItemProcessing(Func<DataPipelineRunWorkItem, Task> processWorkItem) Parameters processWorkItem Func<DataPipelineRunWorkItem, Task> The asynchronous delegate that is invoked for each data pipeline run work item. Returns Task<bool> true if the processing is successfully started. StopDataPipelineRunWorkItemProcessing() Stops processing data pipeline run work items. Task StopDataPipelineRunWorkItemProcessing() Returns Task TryLoadDataPipelineRunArtifacts(DataPipelineDefinition, DataPipelineRun, string) Tries to load the artifacts associated with a data pipeline run. Task<(bool Success, List<DataPipelineStateArtifact> Artifacts)> TryLoadDataPipelineRunArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, string artifactsNameFilter) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. artifactsNameFilter string The name pattern used to identify the artifacts to load. Returns Task<(bool Success, List<DataPipelineStateArtifact> Artifacts)> A boolean indicating whether the operation was successful or not and the list with the details of the artifacts if the operation is successful. UpdateDataPipelineRunStatus(DataPipelineRun) Updates the status of a data pipeline run. Task<bool> UpdateDataPipelineRunStatus(DataPipelineRun dataPipelineRun) Parameters dataPipelineRun DataPipelineRun The data pipeline run whose status is to be updated. Returns Task<bool> true if the status update is successful. UpdateDataPipelineRunWorkItem(DataPipelineRunWorkItem) Updates a data pipeline run work item. Task<bool> UpdateDataPipelineRunWorkItem(DataPipelineRunWorkItem workItem) Parameters workItem DataPipelineRunWorkItem The data pipeline run work item to be updated. Returns Task<bool> true if the data pipeline run work item is successfully updated. UpdateDataPipelineRunWorkItemsStatus(List<DataPipelineRunWorkItem>) Updates the status of data pipeline run work items. Task<bool> UpdateDataPipelineRunWorkItemsStatus(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> The list of data pipeline work items whose status must be updated. Returns Task<bool> true if the items statuses are successfully updated."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IDownstreamAPIService.html",
    "title": "Interface IDownstreamAPIService | FoundationaLLM",
    "summary": "Interface IDownstreamAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Interface for calling a downstream API. public interface IDownstreamAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIName The name of the downstream API. string APIName { get; } Property Value string Methods GetCompletion(string, CompletionRequest) Gets a completion from the downstream API. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IEventService.html",
    "title": "Interface IEventService | FoundationaLLM",
    "summary": "Interface IEventService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with an eventing engine. public interface IEventService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InitializationTask Gets the TaskCompletionSource<TResult> (TResult of type bool) that signals the completion of the initialization task. Task<bool> InitializationTask { get; } Property Value Task<bool> Remarks The result of the task indicates whether initialization completed successfully or not. ServiceInstanceName The name of the service instance. string ServiceInstanceName { get; } Property Value string Methods ExecuteAsync(CancellationToken) Executes the event service until cancellation is signaled. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SendEvent(string, CloudEvent) Sends an event to the event service. Task SendEvent(string topicName, CloudEvent cloudEvent) Parameters topicName string The name of the topic where the event should be sent. cloudEvent CloudEvent The CloudEvent object containing the details of the event. Returns Task StartAsync(CancellationToken) Starts the event service, allowing it to initialize. Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the event service, allowing it to cleanup. Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SubscribeToEventTypeEvent(string, EventTypeEventDelegate) Adds an event set event delgate to the list of event handlers for a specified event set namespace. void SubscribeToEventTypeEvent(string eventType, EventTypeEventDelegate eventHandler) Parameters eventType string The event type to subscribe to. eventHandler EventTypeEventDelegate The function to be invoked during event handling. UnsubscribeFromEventTypeEvent(string, EventTypeEventDelegate) Removes an event set event delegate from the list of event handlers for a specified event set namespace. void UnsubscribeFromEventTypeEvent(string eventType, EventTypeEventDelegate eventHandler) Parameters eventType string The event type to subscribe to. eventHandler EventTypeEventDelegate The function to be invoked during event handling."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IHttpClientFactoryService.html",
    "title": "Interface IHttpClientFactoryService | FoundationaLLM",
    "summary": "Interface IHttpClientFactoryService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. public interface IHttpClientFactoryService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateClient(APIEndpointConfiguration, UnifiedUserIdentity?) Creates a HttpClient instance based on the endpoint configuration. Task<HttpClient> CreateClient(APIEndpointConfiguration endpointConfiguration, UnifiedUserIdentity? userIdentity) Parameters endpointConfiguration APIEndpointConfiguration The APIEndpointConfiguration resource used to create the client. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClient(string, UnifiedUserIdentity) Creates a HttpClient instance based on the client name. The client name must be registered in the IHttpClientFactory configuration. Task<HttpClient> CreateClient(string clientName, UnifiedUserIdentity userIdentity) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClientForStatus(string, UnifiedUserIdentity) Creates a HttpClient instance based on the client name and sets the base address to the status endpoint. The client name must be registered in the IHttpClientFactory configuration. Task<HttpClient> CreateClientForStatus(string clientName, UnifiedUserIdentity userIdentity) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. Exceptions Exception When if the service base address is null or the status endpoint is null or empty. CreateClient<T>(string, UnifiedUserIdentity, Func<Dictionary<string, object>, T>, Dictionary<string, object>?) Creates a T client instance based on the client name and a client builder delegate. Task<T> CreateClient<T>(string clientName, UnifiedUserIdentity userIdentity, Func<Dictionary<string, object>, T> clientBuilder, Dictionary<string, object>? clientBuilderParameters = null) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. clientBuilder Func<Dictionary<string, object>, T> A delegate that creates the T client instance based on a dictionary of values. The keys available in the dictionary are defined in HttpClientFactoryServiceKeyNames. clientBuilderParameters Dictionary<string, object> A dictionary of parameters to pass to the client builder delegate. Returns Task<T> A T client instance. Type Parameters T The type of the client to create. CreateUnregisteredClient(TimeSpan?) Creates a new unregistered HttpClient instance with a timeout. HttpClient CreateUnregisteredClient(TimeSpan? timeout = null) Parameters timeout TimeSpan? The timeout for the HttpClient. If not specified, the default timeout in seconds is applied. For an infinite waiting period, use InfiniteTimeSpan Returns HttpClient An HttpClient instance."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IHubAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IHubAPIService.html",
    "title": "Interface IHubAPIService | FoundationaLLM",
    "summary": "Interface IHubAPIService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Calls endpoints available on all hub API services. public interface IHubAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Status() Gets the status of the Hub API service. Task<string> Status() Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IIdentityManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IIdentityManagementService.html",
    "title": "Interface IIdentityManagementService | FoundationaLLM",
    "summary": "Interface IIdentityManagementService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides identity management services. public interface IIdentityManagementService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetGroupsForPrincipal(string) Retrieves the group identifiers list of the groups where the specified user principal is a member. Task<List<string>> GetGroupsForPrincipal(string userIdentifier) Parameters userIdentifier string The user identifier for which group membership is retrieved. Can be either an object id or a user principal name (UPN). Returns Task<List<string>> GetObjectsByIds(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. Task<List<ObjectQueryResult>> GetObjectsByIds(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<List<ObjectQueryResult>> GetServicePrincipalById(string) Retrieves a security principal by its identifier. Task<ObjectQueryResult> GetServicePrincipalById(string servicePrincipalId) Parameters servicePrincipalId string The service principal identifier used to retrieve a single service principal. Returns Task<ObjectQueryResult> GetServicePrincipals(ObjectQueryParameters) Retrieves a list of service principals with filtering and paging options. Task<PagedResponse<ObjectQueryResult>> GetServicePrincipals(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving service principals. Returns Task<PagedResponse<ObjectQueryResult>> GetUserById(string) Retrieves a user account by its identifier. Task<ObjectQueryResult> GetUserById(string userId) Parameters userId string The user identifier used to retrieve a single user account. Returns Task<ObjectQueryResult> GetUserGroupById(string) Retrieves a group account by its identifier. Task<ObjectQueryResult> GetUserGroupById(string groupId) Parameters groupId string The group account identifier used to retrieve a single group account. Returns Task<ObjectQueryResult> GetUserGroups(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. Task<PagedResponse<ObjectQueryResult>> GetUserGroups(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving group accounts. Returns Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving users. Returns Task<PagedResponse<ObjectQueryResult>>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IIndexingService.html",
    "title": "Interface IIndexingService | FoundationaLLM",
    "summary": "Interface IIndexingService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides indexing capabilities for embedding vectors. public interface IIndexingService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IManagementProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IManagementProviderService.html",
    "title": "Interface IManagementProviderService | FoundationaLLM",
    "summary": "Interface IManagementProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides core services required by the Management API. public interface IManagementProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HandleDeleteAsync(string, UnifiedUserIdentity) Handles a HTTP DELETE request for a specified resource path. Task HandleDeleteAsync(string resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions?) Handles a HTTP GET request for a specified resource path. Task<object> HandleGetAsync(string resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> The serialized form of the result of handling the request. HandlePostAsync(string, string?, ResourceProviderFormFile?, UnifiedUserIdentity) Handles a HTTP POST request for a specified resource path. Task<object> HandlePostAsync(string resourcePath, string? requestPayload, ResourceProviderFormFile? formFile, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. requestPayload string The optional request payload. formFile ResourceProviderFormFile The optional file attached to the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IOrchestrationContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IOrchestrationContext.html",
    "title": "Interface IOrchestrationContext | FoundationaLLM",
    "summary": "Interface IOrchestrationContext Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Stores context information for the current HTTP request. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. public interface IOrchestrationContext Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity InstanceId The unique identifier of the current FoundationaLLM deployment instance. string? InstanceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IQuotaService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IQuotaService.html",
    "title": "Interface IQuotaService | FoundationaLLM",
    "summary": "Interface IQuotaService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines methods exposed by the FoundationaLLM Quota service. public interface IQuotaService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Enabled Indicates whether the quota service is enabled. bool Enabled { get; } Property Value bool InitializationTask Gets the TaskCompletionSource<TResult> (TResult of type bool) that signals the completion of the initialization task. Task<bool> InitializationTask { get; } Property Value Task<bool> Remarks The result of the task indicates whether initialization completed successfully or not. Methods EvaluateCompletionRequestForQuota(string, string, UnifiedUserIdentity?, CompletionRequest) Evaluates a completion request to determine if it exceeds any quotas. QuotaMetricPartitionState EvaluateCompletionRequestForQuota(string apiName, string controllerName, UnifiedUserIdentity? userIdentity, CompletionRequest completionRequest) Parameters apiName string The name of the API handling the request. controllerName string The name of the ASP.NET controller handling the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity associated with the request. completionRequest CompletionRequest The CompletionRequest providing the completion request details. Returns QuotaMetricPartitionState EvaluateRawRequestForQuota(string, string?, UnifiedUserIdentity?) Evaluates an HTTP API request to determine if it exceeds any quotas. QuotaMetricPartitionState EvaluateRawRequestForQuota(string apiName, string? controllerName, UnifiedUserIdentity? userIdentity) Parameters apiName string The name of the API handling the request. controllerName string The name of the ASP.NET controller handling the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity associated with the request. Returns QuotaMetricPartitionState An QuotaMetricPartitionState object that indicates if any quotas where exceeded and provides details in case of a quota breach."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderClient.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderClient.html",
    "title": "Interface IResourceProviderClient | FoundationaLLM",
    "summary": "Interface IResourceProviderClient Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines the interface for a data pipeline resource provider client. public interface IResourceProviderClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceProviders Sets the resource providers collection. IEnumerable<IResourceProviderService> ResourceProviders { set; } Property Value IEnumerable<IResourceProviderService> Remarks This property must be exposed by services that cannot be injected with the resource providers. These are background services that both provide and consume services to and from the resource providers."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderResourceCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderResourceCacheService.html",
    "title": "Interface IResourceProviderResourceCacheService | FoundationaLLM",
    "summary": "Interface IResourceProviderResourceCacheService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides the resource caching services used by FoundationaLLM resource providers. public interface IResourceProviderResourceCacheService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Reset() Resets the cache. void Reset() SetValue<T>(ResourceReference, T) Sets a resource value identified by a resource reference in the cache. void SetValue<T>(ResourceReference resourceReference, T resourceValue) where T : ResourceBase Parameters resourceReference ResourceReference The ResourceReference used as a key in the cache. resourceValue T The resource value to be set. Type Parameters T The type of resource value to be set. TryGetValue<T>(ResourceReference, out T?) Tries to get a resource value identified by a resource reference from the cache. bool TryGetValue<T>(ResourceReference resourceReference, out T? resourceValue) where T : ResourceBase Parameters resourceReference ResourceReference The ResourceReference used as a key in the cache. resourceValue T The resource value to be retrieved. Returns bool true is the resource value was found in the cache, false otherwise. Type Parameters T The type of resource value to be retrieved."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceProviderService.html",
    "title": "Interface IResourceProviderService | FoundationaLLM",
    "summary": "Interface IResourceProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides the core services implemented by all resource providers. public interface IResourceProviderService : IManagementProviderService Inherited Members IManagementProviderService.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) IManagementProviderService.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) IManagementProviderService.HandleDeleteAsync(string, UnifiedUserIdentity) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor> InitializationTask The task that is executed when the resource provider is initialized. Task InitializationTask { get; } Property Value Task Remarks This task enables the consumers of the resource provider to wait for the initialization to be completed. IsInitialized Indicates whether the resource provider is initialized or not. bool IsInitialized { get; } Property Value bool Name The name of the resource provider. string Name { get; } Property Value string StorageAccountName The name of the storage account used by the resource provider. string StorageAccountName { get; } Property Value string StorageContainerName The name of the storage account container used by the resource provider. string StorageContainerName { get; } Property Value string Methods DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) Deletes logically a resource based on its logical path. Task DeleteResourceAsync<T>(string instanceId, string resourceName, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The name of the resource being logically deleted. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task Type Parameters T The type of the resource. ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) Executes an action on a resource. Task<TResult> ExecuteResourceActionAsync<T, TAction, TResult>(string instanceId, string resourceName, string actionName, TAction actionPayload, UnifiedUserIdentity userIdentity) where T : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The name of the resource on which the action is executed. actionName string The name of the action being executed. actionPayload TAction The payload of the action providing details about it. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> Type Parameters T The type of the resource. TAction The type of the action payload providing details about the action to be executed. TResult The type of the result returned. ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) Executes an action on a main resource and it subordinate resource. Task<TResult> ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string instanceId, string mainResourceName, string resourceName, string actionName, TAction actionPayload, UnifiedUserIdentity userIdentity) where TMain : ResourceBase where TSubordinate : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters instanceId string The FoundationaLLM instance identifier. mainResourceName string The name of the main resource on which the action is executed. resourceName string The name of the subordinate resource on which the action is executed. actionName string The name of the action being executed. actionPayload TAction The payload of the action providing details about it. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> Type Parameters TMain The type of the main resource. TSubordinate The type of the subordinate resource. TAction The type of the action payload providing details about the action to be executed. TResult The type of the result returned. GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions?) Gets a resource based on its logical path. Task<T> GetResourceAsync<T>(string resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath string The logical path of the resource. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions?) Gets a resource based on its name. Task<T> GetResourceAsync<T>(string instanceId, string resourceName, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The logical path of the resource. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions?) Gets resources of a specific type. Task<List<ResourceProviderGetResult<T>>> GetResourcesAsync<T>(string instanceId, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<List<ResourceProviderGetResult<T>>> A list of ResourceProviderGetResult<T> containing the loaded resources. Type Parameters T The type of resource to return. Initialize() Initializes the resource provider. Task Initialize() Returns Task ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) Checks if a resource exists. Task<(bool Exists, bool Deleted)> ResourceExistsAsync<T>(string instanceId, string resourceName, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The resource name being checked. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(bool Exists, bool Deleted)> A tuple indicating whether the resource exists or not and whether it is logically deleted or not. Type Parameters T The type of the resource. Remarks If a resource was logically deleted but not purged, this method will return True, indicating the existence of the resource. UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object?>, UnifiedUserIdentity) Updates a subset of the properties of a resource. Task<TResult> UpdateResourcePropertiesAsync<T, TResult>(string instanceId, string resourceName, Dictionary<string, object?> propertyValues, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The name of the resource being updated. propertyValues Dictionary<string, object> The dictionary with propery names and values to update. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> Type Parameters T The type of the resource. TResult The type of the result returned. UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) Creates or updates a resource based on its logical path. Task<TResult> UpsertResourceAsync<T, TResult>(string instanceId, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters instanceId string The FoundationaLLM instance identifier. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> The object id of the resource. Type Parameters T The type of the resource. TResult The type of the result returned WaitForInitialization() Waits for the resource provider service to be initialized. Task WaitForInitialization() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceValidatorFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IResourceValidatorFactory.html",
    "title": "Interface IResourceValidatorFactory | FoundationaLLM",
    "summary": "Interface IResourceValidatorFactory Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides methods for getting validators. public interface IResourceValidatorFactory Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetValidator(Type) Gets a validator for the Type parameter, providing a non-generic option to resolve validators at runtime. object? GetValidator(Type type) Parameters type Type The type of object being validated. Returns object GetValidator<T>() Gets a validator for the specified type. IValidator<T>? GetValidator<T>() where T : class Returns IValidator<T> Type Parameters T The type of object being validated."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IRunnableResource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IRunnableResource.html",
    "title": "Interface IRunnableResource | FoundationaLLM",
    "summary": "Interface IRunnableResource Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines the properties and methods for a runnable FoundationaLLM resource. public interface IRunnableResource Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Completed Gets or sets the flag that indicates whether the resource run is completed. bool Completed { get; set; } Property Value bool Successful Gets or sets the flag that indicates whether the resource run was successful. bool Successful { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IStorageService.html",
    "title": "Interface IStorageService | FoundationaLLM",
    "summary": "Interface IStorageService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides services to interact with a storage. public interface IStorageService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceName The optional instance name of the storage service. string? InstanceName { get; set; } Property Value string StorageAccountName The name of the storage account. string? StorageAccountName { get; } Property Value string StorageContainerName The name of the storage container. string? StorageContainerName { get; } Property Value string Methods CopyFileAsync(string, string, string, CancellationToken) Copies a file from one location to another within the specified storage container. Task CopyFileAsync(string containerName, string sourceFilePath, string destinationFilePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. sourceFilePath string The path of the file to copy. destinationFilePath string The path of the destination. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task DeleteFileAsync(string, string, CancellationToken) Deletes a file from storage. Task DeleteFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to delete. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> GetFilePathsAsync(string, string?, bool, CancellationToken) Retrieves a list file paths in the specific directory. Task<List<string>> GetFilePathsAsync(string containerName, string? directoryPath = null, bool recursive = true, CancellationToken cancellationToken = default) Parameters containerName string Name of the container, file system or Workspace name. directoryPath string Directory to list file contents recursive bool Recurse through child folders cancellationToken CancellationToken Determines if a request should be cancelled. Returns Task<List<string>> List of individual file paths located in the container. GetMatchingFilePathsAsync(string, string, CancellationToken) Retrieves a list of file paths that match a specific pattern. Task<List<string>> GetMatchingFilePathsAsync(string containerName, string filePathPattern, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. filePathPattern string The file name pattern to match. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<List<string>> ReadFile(string, string) Reads the binary content of a specified file from the storage. BinaryData ReadFile(string containerName, string filePath) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. Returns BinaryData The binary content of the file. ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. UpdateJSONFileAsync<T>(string, string, Func<T, T>, CancellationToken) Updates a specified JSON file in the storage. Task UpdateJSONFileAsync<T>(string containerName, string filePath, Func<T, T> objectTransformer, CancellationToken cancellationToken) where T : class Parameters containerName string The name of the container where the file is located. filePath string The path of the file to update. objectTransformer Func<T, T> A function that updates the object persisted in the JSON file. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task Type Parameters T The type of the object persisted in the JSON file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITemplatingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITemplatingService.html",
    "title": "Interface ITemplatingService | FoundationaLLM",
    "summary": "Interface ITemplatingService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Defines the interface for a templating engine. public interface ITemplatingService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Transform(string, Dictionary<string, string>?) Transforms the input string by replacing tokens with the corresponding values. string Transform(string s, Dictionary<string, string>? tokenAndValues = null) Parameters s string The input string to be transformed. tokenAndValues Dictionary<string, string> Optional dictionary of well-known tokens and the values that should take its place. Returns string The transformed string where all the valid tokens have been replaced."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITextEmbeddingService.html",
    "title": "Interface ITextEmbeddingService | FoundationaLLM",
    "summary": "Interface ITextEmbeddingService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides text embedding capabilities. public interface ITextEmbeddingService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetEmbeddingsAsync(IList<TextChunk>, string, int, bool) Initializes the text embedding operation. Depending on the implementation, this can be an atomic operation or a long-running one. Task<TextOperationResult> GetEmbeddingsAsync(IList<TextChunk> textChunks, string deploymentName, int embeddingDimensions, bool prioritized) Parameters textChunks IList<TextChunk> The list of text chunks which need to be embedded. deploymentName string The name of the model deployment to use for embedding. embeddingDimensions int The number of dimensions for the embedding model. prioritized bool Indicates whether the request should be prioritized. Returns Task<TextOperationResult> A TextOperationResult object containing the result of the text embedding operation. GetEmbeddingsAsync(string) Retrieves the result of a long-running text embedding operation. Task<TextOperationResult> GetEmbeddingsAsync(string operationId) Parameters operationId string The unique identifier of the long-running operation. Returns Task<TextOperationResult> A TextOperationResult object containing the result of the text embedding operation."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITextSplitterService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITextSplitterService.html",
    "title": "Interface ITextSplitterService | FoundationaLLM",
    "summary": "Interface ITextSplitterService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Represents a text splitter. public interface ITextSplitterService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods SplitPlainText(string) Splits plain text into multiple chunks. List<TextChunk> SplitPlainText(string text) Parameters text string The plain text to split. Returns List<TextChunk> A list of TextChunk items containing the text chunks and their sizes in tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.ITokenizerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.ITokenizerService.html",
    "title": "Interface ITokenizerService | FoundationaLLM",
    "summary": "Interface ITokenizerService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Represents a text tokenizer. public interface ITokenizerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CountTokens(string, string?) Count the number of tokens in a given text. long CountTokens(string text, string? encoderName = null) Parameters text string The text to evaluate. encoderName string The name of the encoder used for tokenization. Returns long The number of tokens in the text. Decode(int[], string?) Decode an array of integer token ids. string Decode(int[] tokens, string? encoderName = null) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string?) Encode a string with a set of allowed special tokens that are not broken apart. List<int> Encode(string text, string? encoderName = null) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IUserClaimsProviderService.html",
    "title": "Interface IUserClaimsProviderService | FoundationaLLM",
    "summary": "Interface IUserClaimsProviderService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object. public interface IUserClaimsProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetSecurityGroupIds(ClaimsPrincipal?) Returns a list of security group identifiers from the provided ClaimsPrincipal. List<string>? GetSecurityGroupIds(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns List<string> GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity IsServicePrincipal(ClaimsPrincipal) Inidicates whether the specified principal is a service principal or not. bool IsServicePrincipal(ClaimsPrincipal userPrincipal) Parameters userPrincipal ClaimsPrincipal The ClaimsPrincipal object providing details about the security principal. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.IUserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.IUserProfileService.html",
    "title": "Interface IUserProfileService | FoundationaLLM",
    "summary": "Interface IUserProfileService Namespace FoundationaLLM.Common.Interfaces Assembly FoundationaLLM.Common.dll Provides methods for working with user profiles. public interface IUserProfileService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetUserProfileAsync(string) Returns the user profile of the signed in user. Task<UserProfile?> GetUserProfileAsync(string instanceId) Parameters instanceId string The instance ID. Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string, string) Returns the user profile of the specified user. Task<UserProfile?> GetUserProfileForUserAsync(string instanceId, string upn) Parameters instanceId string The instance ID. upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(string, UserProfile) Inserts or updates a user profile. Task UpsertUserProfileAsync(string instanceId, UserProfile userProfile) Parameters instanceId string The instance ID. userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IContentTextExtractionPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IContentTextExtractionPlugin.html",
    "title": "Interface IContentTextExtractionPlugin | FoundationaLLM",
    "summary": "Interface IContentTextExtractionPlugin Namespace FoundationaLLM.Common.Interfaces.Plugins Assembly FoundationaLLM.Common.dll Defines the interface for a content text extraction plugin. public interface IContentTextExtractionPlugin Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExtractText(BinaryData) Extracts text from the provided raw content. Task<PluginResult<string>> ExtractText(BinaryData rawContent) Parameters rawContent BinaryData The binary content to extract text from. Returns Task<PluginResult<string>> A PluginResult<T> object with the extracted text."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IContentTextPartitioningPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IContentTextPartitioningPlugin.html",
    "title": "Interface IContentTextPartitioningPlugin | FoundationaLLM",
    "summary": "Interface IContentTextPartitioningPlugin Namespace FoundationaLLM.Common.Interfaces.Plugins Assembly FoundationaLLM.Common.dll Defines the interface for a content text partitioning plugin. public interface IContentTextPartitioningPlugin Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods PartitionText(string, string) Partitions the provided text into chunks. Task<PluginResult<List<DataPipelineContentItemContentPart>>> PartitionText(string contentItemCanonicalId, string text) Parameters contentItemCanonicalId string The canonical identifier of the content item. text string The text to be partitioned. Returns Task<PluginResult<List<DataPipelineContentItemContentPart>>> A list of text chunks."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IDataPipelineStagePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IDataPipelineStagePlugin.html",
    "title": "Interface IDataPipelineStagePlugin | FoundationaLLM",
    "summary": "Interface IDataPipelineStagePlugin Namespace FoundationaLLM.Common.Interfaces.Plugins Assembly FoundationaLLM.Common.dll Defines the interface for a data pipeline stage plugin. public interface IDataPipelineStagePlugin Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetStageWorkItems(List<string>, string, string, string) Gets the list of data pipeline work items based on the provided content items canonical identifiers. Task<List<DataPipelineRunWorkItem>> GetStageWorkItems(List<string> contentItemsCanonicalIds, string dataPipelineRunId, string dataPipelineStageName, string previousDataPipelineStageName) Parameters contentItemsCanonicalIds List<string> The list of icontent items canonical identifiers. dataPipelineRunId string The unique identifier of the data pipeline run. dataPipelineStageName string The name of the data pipeline stage. previousDataPipelineStageName string The name of the previous data pipeline stage. Returns Task<List<DataPipelineRunWorkItem>> A list of data pipeline work items. GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) Gets the list of data pipeline work items based on the provided content items. Task<List<DataPipelineRunWorkItem>> GetStartingStageWorkItems(List<DataPipelineContentItem> contentItems, string dataPipelineRunId, string dataPipelineStageName) Parameters contentItems List<DataPipelineContentItem> The list of content items. dataPipelineRunId string The unique identifier of the data pipeline run. dataPipelineStageName string The name of the data pipeline stage. Returns Task<List<DataPipelineRunWorkItem>> A list of data pipeline work items. ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IDataSourcePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IDataSourcePlugin.html",
    "title": "Interface IDataSourcePlugin | FoundationaLLM",
    "summary": "Interface IDataSourcePlugin Namespace FoundationaLLM.Common.Interfaces.Plugins Assembly FoundationaLLM.Common.dll Defines the interface for a data source plugin. public interface IDataSourcePlugin Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetContentItemRawContent(ContentIdentifier) Gets the raw content of a content item. Task<PluginResult<ContentItemRawContent>> GetContentItemRawContent(ContentIdentifier contentItemIdentifier) Parameters contentItemIdentifier ContentIdentifier The identifier of the content item. Returns Task<PluginResult<ContentItemRawContent>> A PluginResult<T> object with the conten item's raw content. GetContentItems() Gets the list of content items from the data source. Task<List<DataPipelineContentItem>> GetContentItems() Returns Task<List<DataPipelineContentItem>>"
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IPluginPackageManager.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IPluginPackageManager.html",
    "title": "Interface IPluginPackageManager | FoundationaLLM",
    "summary": "Interface IPluginPackageManager Namespace FoundationaLLM.Common.Interfaces.Plugins Assembly FoundationaLLM.Common.dll Provides methods to manage plugins in FoundationaLLM plugin packages. public interface IPluginPackageManager Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetContentTextExtractionPlugin(string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a content text extraction plugin by its name. IContentTextExtractionPlugin GetContentTextExtractionPlugin(string pluginName, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the content text extraction plugin. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IContentTextExtractionPlugin The IContentTextExtractionPlugin interface implemented by the content text extraction plugin. Exceptions NotImplementedException GetContentTextPartitioningPlugin(string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a content text partitioning plugin by its name. IContentTextPartitioningPlugin GetContentTextPartitioningPlugin(string pluginName, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the content text partitioning plugin. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IContentTextPartitioningPlugin The IContentTextExtractionPlugin interface implemented by the content text partitioning plugin. Exceptions NotImplementedException GetDataPipelineStagePlugin(string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a data pipeline stage plugin by its name. IDataPipelineStagePlugin GetDataPipelineStagePlugin(string pluginName, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the data pipeline stage plugin. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IDataPipelineStagePlugin The IDataPipelineStagePlugin interface implemented by the data pipeline stage plugin. Exceptions NotImplementedException GetDataSourcePlugin(string, string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a data source plugin by its name. IDataSourcePlugin GetDataSourcePlugin(string pluginName, string dataSourceObjectId, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the data source plugin. dataSourceObjectId string The FoundationaLLM object identifier of the data source. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IDataSourcePlugin The IDataSourcePlugin interface implemented by the data source plugin. Exceptions NotImplementedException GetMetadata(string) Gets the plugin package configuration with the plugin configurations of to the plugins in the package. PluginPackageMetadata GetMetadata(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns PluginPackageMetadata An object of type PluginPackageMetadata. RegisterService(string, object) Registers an internal service in the plugin package. void RegisterService(string serviceName, object service) Parameters serviceName string The name of the service. service object The service to be registered. TryGetService(string, out object?) Tries to get a service that is registered internally in the plugin package. bool TryGetService(string serviceName, out object? service) Parameters serviceName string The name of the service to be retrieved. service object When the method returns, contains the requested service if it was found; otherwise, null. Returns bool true if the service was successfully retrieved."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IPluginPackageManagerResolver.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IPluginPackageManagerResolver.html",
    "title": "Interface IPluginPackageManagerResolver | FoundationaLLM",
    "summary": "Interface IPluginPackageManagerResolver Namespace FoundationaLLM.Common.Interfaces.Plugins Assembly FoundationaLLM.Common.dll Defines a mechanism to resolve and retrieve a plugin package manager for a specified plugin object. public interface IPluginPackageManagerResolver Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Implementations of this interface are responsible for providing the appropriate plugin package manager based on the given plugin object identifier. Methods GetPluginPackageManager(PluginDefinition, UnifiedUserIdentity) Retrieves an instance of the plugin package manager for the specified plugin definition and user identity. Task<IPluginPackageManager> GetPluginPackageManager(PluginDefinition pluginDefinition, UnifiedUserIdentity userIdentity) Parameters pluginDefinition PluginDefinition The definition of the plugin for which the package manager is requested. userIdentity UnifiedUserIdentity The identity of the user requesting the plugin package manager. Returns Task<IPluginPackageManager> GetPluginPackageManager(string, UnifiedUserIdentity) Asynchronously retrieves the plugin package manager associated with the specified plugin object identifier. Task<IPluginPackageManager> GetPluginPackageManager(string pluginObjectId, UnifiedUserIdentity userIdentity) Parameters pluginObjectId string The unique identifier of the plugin object for which the package manager is requested. userIdentity UnifiedUserIdentity The identity of the user requesting the package manager. Returns Task<IPluginPackageManager> A task that represents the asynchronous operation. The task result contains the IPluginPackageManager associated with the specified plugin object identifier."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IPluginService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.IPluginService.html",
    "title": "Interface IPluginService | FoundationaLLM",
    "summary": "Interface IPluginService Namespace FoundationaLLM.Common.Interfaces.Plugins Assembly FoundationaLLM.Common.dll Defines the contract for a plugin service. public interface IPluginService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetDataPipelineStagePlugin(string, string, Dictionary<string, object>, UnifiedUserIdentity) Retrieves the data pipeline stage plugin based on the specified plugin object identifier. Task<IDataPipelineStagePlugin> GetDataPipelineStagePlugin(string instanceId, string pluginObjectId, Dictionary<string, object> pluginParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. pluginObjectId string The plugin object identifier. pluginParameters Dictionary<string, object> The dictionary containing the names and values of the plugin parameters. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<IDataPipelineStagePlugin> The data pipeline stage plugin. GetDataSourcePlugin(string, string, Dictionary<string, object>, string, UnifiedUserIdentity) Retrieves the data source plugin based on the specified plugin object identifier. Task<IDataSourcePlugin> GetDataSourcePlugin(string instanceId, string pluginObjectId, Dictionary<string, object> pluginParameters, string dataSourceObjectId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. pluginObjectId string The plugin object identifier. pluginParameters Dictionary<string, object> The dictionary containing the names and values of the plugin parameters. dataSourceObjectId string The FoundationaLLM object identifier of the data source. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<IDataSourcePlugin> The data source plugin. GetPluginPackageManager(string, string, UnifiedUserIdentity) Retrieves the data source plugin based on the specified plugin object identifier. Task<IPluginPackageManager> GetPluginPackageManager(string instanceId, string pluginObjectId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. pluginObjectId string The plugin object identifier. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<IPluginPackageManager> The plugin package manager instance that manages the plugin."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.Plugins.html",
    "title": "Namespace FoundationaLLM.Common.Interfaces.Plugins | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Interfaces.Plugins Interfaces IContentTextExtractionPlugin Defines the interface for a content text extraction plugin. IContentTextPartitioningPlugin Defines the interface for a content text partitioning plugin. IDataPipelineStagePlugin Defines the interface for a data pipeline stage plugin. IDataSourcePlugin Defines the interface for a data source plugin. IPluginPackageManager Provides methods to manage plugins in FoundationaLLM plugin packages. IPluginPackageManagerResolver Defines a mechanism to resolve and retrieve a plugin package manager for a specified plugin object. IPluginService Defines the contract for a plugin service."
  },
  "api/dotnet/FoundationaLLM.Common.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Interfaces.html",
    "title": "Namespace FoundationaLLM.Common.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Interfaces Namespaces FoundationaLLM.Common.Interfaces.Plugins Interfaces IAPIKeyValidationService Common interface for X-API-Key header validation. IAuthorizationServiceClient Defines methods exposed by the Authorization service. IAuthorizationServiceClientCacheService Provides the caching services used by the FoundationaLLM authorization service client. IAzureAISearchService Interface for Azure AI Search Service. IAzureAIService Interface for the Azure AI service. IAzureCosmosDBService Contains methods for accessing Azure Cosmos DB for NoSQL. IAzureResourceManagerService Provides services to interact with the Azure Resource Manager (ARM) infrastructure. ICacheControlAPIService Contains base functionality for calling the underlying API service. ICacheService Caches objects. IContextServiceClient Provides methods to call the FoundationaLLM Context API service. IDataPipelineStateService Defines the interface for the Data Pipeline State Service. IDownstreamAPIService Interface for calling a downstream API. IEventService Provides services to interact with an eventing engine. IHttpClientFactoryService Service that provides a common interface for creating HttpClient instances from IHttpClientFactory. and ensures that all necessary headers are added to the request. IHubAPIService Calls endpoints available on all hub API services. IIdentityManagementService Provides identity management services. IIndexingService Provides indexing capabilities for embedding vectors. IManagementProviderService Provides core services required by the Management API. IOrchestrationContext Stores context information for the current HTTP request. The CurrentUserIdentity stores a UnifiedUserIdentity object resolved from one or more services. IQuotaService Defines methods exposed by the FoundationaLLM Quota service. IResourceProviderClient Defines the interface for a data pipeline resource provider client. IResourceProviderResourceCacheService Provides the resource caching services used by FoundationaLLM resource providers. IResourceProviderService Provides the core services implemented by all resource providers. IResourceValidatorFactory Provides methods for getting validators. IRunnableResource Defines the properties and methods for a runnable FoundationaLLM resource. IStorageService Provides services to interact with a storage. ITemplatingService Defines the interface for a templating engine. ITextEmbeddingService Provides text embedding capabilities. ITextSplitterService Represents a text splitter. ITokenizerService Represents a text tokenizer. IUserClaimsProviderService Provides a common interface for retrieving and resolving user claims to a UnifiedUserIdentity object. IUserProfileService Provides methods for working with user profiles."
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.CallContextMiddleware.html",
    "title": "Class CallContextMiddleware | FoundationaLLM",
    "summary": "Class CallContextMiddleware Namespace FoundationaLLM.Common.Middleware Assembly FoundationaLLM.Common.dll Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method. public class CallContextMiddleware Inheritance object CallContextMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CallContextMiddleware(RequestDelegate) Initializes a new instance of the CallContextMiddleware class. public CallContextMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, IUserClaimsProviderService, IIdentityManagementService, IOrchestrationContext, IOptions<InstanceSettings>) Executes the middleware. public Task InvokeAsync(HttpContext context, IUserClaimsProviderService claimsProviderService, IIdentityManagementService identityManagementService, IOrchestrationContext callContext, IOptions<InstanceSettings> instanceSettings) Parameters context HttpContext The current HTTP request context. claimsProviderService IUserClaimsProviderService Resolves user claims to a UnifiedUserIdentity object. identityManagementService IIdentityManagementService Provides group membership services for user principals. callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. instanceSettings IOptions<InstanceSettings> Contains the FoundationaLLM instance configuration settings. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.QuotaMiddleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.QuotaMiddleware.html",
    "title": "Class QuotaMiddleware | FoundationaLLM",
    "summary": "Class QuotaMiddleware Namespace FoundationaLLM.Common.Middleware Assembly FoundationaLLM.Common.dll Middleware that enforces API request quotas. public class QuotaMiddleware Inheritance object QuotaMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors QuotaMiddleware(RequestDelegate) Initializes a new instance of the CallContextMiddleware class. public QuotaMiddleware(RequestDelegate next) Parameters next RequestDelegate Methods InvokeAsync(HttpContext, IOrchestrationContext, IQuotaService, IOptions<InstanceSettings>) Executes the middleware. public Task InvokeAsync(HttpContext context, IOrchestrationContext callContext, IQuotaService quotaService, IOptions<InstanceSettings> instanceSettings) Parameters context HttpContext The current HTTP request context. callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. quotaService IQuotaService Provides services for managing quotas. instanceSettings IOptions<InstanceSettings> Contains the FoundationaLLM instance configuration settings. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Middleware.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Middleware.html",
    "title": "Namespace FoundationaLLM.Common.Middleware | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Middleware Classes CallContextMiddleware Middleware that stores context information for the current HTTP request. This middleware should be registered in the application's Startup.Configure method. QuotaMiddleware Middleware that enforces API request quotas."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryParameters.html",
    "title": "Class ObjectQueryParameters | FoundationaLLM",
    "summary": "Class ObjectQueryParameters Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll Parameters for querying user and group accounts. public class ObjectQueryParameters Inheritance object ObjectQueryParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Ids The IDs of the account objects to query. [JsonPropertyName(\"ids\")] public required string[] Ids { get; set; } Property Value string[] Name Account name. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string PageNumber The current page number. [JsonPropertyName(\"page_number\")] public int? PageNumber { get; set; } Property Value int? PageSize The number of items to return in each page. [JsonPropertyName(\"page_size\")] public int? PageSize { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.ObjectQueryResult.html",
    "title": "Class ObjectQueryResult | FoundationaLLM",
    "summary": "Class ObjectQueryResult Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll The result of an object query. public class ObjectQueryResult Inheritance object ObjectQueryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DisplayName The display name of the object. [JsonPropertyName(\"display_name\")] public string? DisplayName { get; set; } Property Value string Email User account email address. [JsonPropertyName(\"email\")] public string? Email { get; set; } Property Value string Id The unique identifier of the object. [JsonPropertyName(\"id\")] public string? Id { get; set; } Property Value string ObjectType The type of the object. [JsonPropertyName(\"object_type\")] public string? ObjectType { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.UnifiedUserIdentity.html",
    "title": "Class UnifiedUserIdentity | FoundationaLLM",
    "summary": "Class UnifiedUserIdentity Namespace FoundationaLLM.Common.Models.Authentication Assembly FoundationaLLM.Common.dll Represents strongly-typed user identity information, regardless of the identity provider. public class UnifiedUserIdentity Inheritance object UnifiedUserIdentity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssociatedWithAccessToken Indicates whether the identity is associated with an agent access token. [JsonPropertyName(\"associated_with_access_token\")] public bool AssociatedWithAccessToken { get; set; } Property Value bool GroupIds The list of the identifiers of the groups to which the user belongs. [JsonPropertyName(\"group_ids\")] public List<string> GroupIds { get; set; } Property Value List<string> Name The user's display name. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string UPN The User Principal Name (UPN) of the user. [JsonPropertyName(\"upn\")] public string? UPN { get; set; } Property Value string UserId The unique identifier of the user. [JsonPropertyName(\"user_id\")] public string? UserId { get; set; } Property Value string Username The username of the user used to authenticate. [JsonPropertyName(\"user_name\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Authentication | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Authentication Classes ObjectQueryParameters Parameters for querying user and group accounts. ObjectQueryResult The result of an object query. UnifiedUserIdentity Represents strongly-typed user identity information, regardless of the identity provider."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationRequest.html",
    "title": "Class ActionAuthorizationRequest | FoundationaLLM",
    "summary": "Class ActionAuthorizationRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a request to authorize an action. public class ActionAuthorizationRequest Inheritance object ActionAuthorizationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Action The authorizable action for which authorization is requested. [JsonPropertyName(\"action\")] public required string Action { get; set; } Property Value string ExpandResourceTypePaths Gets or sets a value indicating whether to expand resource type paths that are not authorized. [JsonPropertyName(\"expand_resource_type_paths\")] public required bool ExpandResourceTypePaths { get; set; } Property Value bool Remarks If the action specified by Action is not authorized for a resource type path, and this property is set to true, the response will include any authorized resource paths matching the resource type path. IncludeActions Gets or sets a value indicating whether to include authorizable actions in the response. [JsonPropertyName(\"include_actions\")] public required bool IncludeActions { get; set; } Property Value bool Remarks If this property is set to true, for each authorized resource path, the response will include the authorizable actions assigned directly or indirectly to the resource path. IncludeRoles Gets or sets a value indicating whether to include roles in the response. [JsonPropertyName(\"include_roles\")] public required bool IncludeRoles { get; set; } Property Value bool Remarks If this property is set to true, for each authrorized resource path, the response will include the roles assigned directly or indirectly to the resource path. ResourcePaths The list of resources for which authorization is requested. [JsonPropertyName(\"resources\")] public required List<string> ResourcePaths { get; set; } Property Value List<string> RoleName Gets or sets the optional role name to check for assignment. [JsonPropertyName(\"role_name\")] public string? RoleName { get; set; } Property Value string UserContext The UserAuthorizationContext containing the authorization context for the user. [JsonPropertyName(\"user_context\")] public required UserAuthorizationContext UserContext { get; set; } Property Value UserAuthorizationContext"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ActionAuthorizationResult.html",
    "title": "Class ActionAuthorizationResult | FoundationaLLM",
    "summary": "Class ActionAuthorizationResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of an action authorization request. public class ActionAuthorizationResult Inheritance object ActionAuthorizationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AuthorizationResults Gets or sets the dictionary containing ResourcePathAuthorizationResult objects representing the authorization result for each resource path. [JsonPropertyName(\"authorization_results\")] public required Dictionary<string, ResourcePathAuthorizationResult> AuthorizationResults { get; set; } Property Value Dictionary<string, ResourcePathAuthorizationResult> InvalidResourcePaths Gets or sets a list of invalid resource paths, for which authorization could not be completed. [JsonPropertyName(\"invalid_resources\")] public List<string>? InvalidResourcePaths { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.AuthorizableAction.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.AuthorizableAction.html",
    "title": "Class AuthorizableAction | FoundationaLLM",
    "summary": "Class AuthorizableAction Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. public record AuthorizableAction : IEquatable<AuthorizableAction> Inheritance object AuthorizableAction Implements IEquatable<AuthorizableAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizableAction(string, string, string) Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. public AuthorizableAction(string Name, string Description, string Category) Parameters Name string The name of the authorizable action. Description string The description of the authorizable action. Category string The category of the authorizable action. Properties Category The category of the authorizable action. public string Category { get; init; } Property Value string Description The description of the authorizable action. public string Description { get; init; } Property Value string Name The name of the authorizable action. public string Name { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.AuthorizableActions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.AuthorizableActions.html",
    "title": "Class AuthorizableActions | FoundationaLLM",
    "summary": "Class AuthorizableActions Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Defines all authorizable actions managed by the FoundationaLLM.Authorization resource provider. public static class AuthorizableActions Inheritance object AuthorizableActions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Actions public static readonly ReadOnlyDictionary<string, AuthorizableAction> Actions Field Value ReadOnlyDictionary<string, AuthorizableAction> Methods GetMatchingActions(string) Selects all actions whose names match the specified action pattern. public static List<string> GetMatchingActions(string actionPattern) Parameters actionPattern string The action pattern used for selection. Returns List<string> The list of matching action names."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ClientSecretKey.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ClientSecretKey.html",
    "title": "Class ClientSecretKey | FoundationaLLM",
    "summary": "Class ClientSecretKey Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a key to be shared to or received from the client. This key can be validated by recomputing the hash using the ClientSecret + Salt as input. public class ClientSecretKey Inheritance object ClientSecretKey Derived AgentClientSecretKey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ClientSecret The client secret portion of this key. This is information only supposed to be held in memory for a short period of time and delivered to the customer as quickly as possible. public required string ClientSecret { get; set; } Property Value string ClientSecretString The string representation of the client secret key. public string ClientSecretString { get; } Property Value string ContextId The context identifier this key is associated with. public required string ContextId { get; set; } Property Value string Remarks The context identifier is relative to the FoundationaLLM instance identifier. Id The unique identifier of this secret key. public required string Id { get; set; } Property Value string InstanceId The FoundationaLLM instance identifier this key is associated with. public required string InstanceId { get; set; } Property Value string Methods TryParse(string, out ClientSecretKey?) Tries to parse a ClientSecretKey instance from the given string. public static bool TryParse(string clientSecretString, out ClientSecretKey? clientSecretKey) Parameters clientSecretString string The string representation to be parsed. clientSecretKey ClientSecretKey The ClientSecretKey that was parsed. Returns bool true if the input string was successfully parsed, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.PersistedSecretKey.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.PersistedSecretKey.html",
    "title": "Class PersistedSecretKey | FoundationaLLM",
    "summary": "Class PersistedSecretKey Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a persisted secret key. public class PersistedSecretKey : SecretKey Inheritance object SecretKey PersistedSecretKey Inherited Members SecretKey.Id SecretKey.InstanceId SecretKey.ContextId SecretKey.Description SecretKey.Active SecretKey.ExpirationDate object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Hash Gets or sets the hash of the secret key. [JsonIgnore] public string? Hash { get; set; } Property Value string Remarks The hash is computed by applying the hashing algorithm to the secret key and the salt. HashKeyVaultSecretName Gets the name of the key vault secret that stores the hash. [JsonIgnore] public string HashKeyVaultSecretName { get; } Property Value string Salt Gets or sets the salt used in the computation of the hash. [JsonIgnore] public string? Salt { get; set; } Property Value string Remarks The salt is a random value that is used to protect against dictionary attacks. It is generated once and stored with the secret key in a Base58 encoded format. SaltKeyVaultSecretName Gets the name of the key vault secret that stores the salt. [JsonIgnore] public string SaltKeyVaultSecretName { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyAssignment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyAssignment.html",
    "title": "Class PolicyAssignment | FoundationaLLM",
    "summary": "Class PolicyAssignment Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a PBAC policy assignment. public class PolicyAssignment : AssignmentBase Inheritance object ResourceName ResourceBase AssignmentBase PolicyAssignment Inherited Members AssignmentBase.PrincipalId AssignmentBase.PrincipalType AssignmentBase.Scope AssignmentBase.ScopeResourcePath ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PolicyDefinition The PolicyDefinition referenced by the PolicyDefinitionId property. [JsonIgnore] public PolicyDefinition? PolicyDefinition { get; set; } Property Value PolicyDefinition PolicyDefinitionId The unique identifier of the policy definition. [JsonPropertyName(\"policy_definition_id\")] public required string PolicyDefinitionId { get; set; } Property Value string Methods Enrich(List<string>) Enriches the policy assignment with additional information. public void Enrich(List<string> allowedInstanceIds) Parameters allowedInstanceIds List<string> The list of FoundationaLLM instance identifiers used as context for the enrichment. Remarks This method is called when the policy assignments are loaded into memory. Besides the actual enrichment, it also ensures that the Scope property is set correctly."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyDefinition.html",
    "title": "Class PolicyDefinition | FoundationaLLM",
    "summary": "Class PolicyDefinition Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Defines a security policy used in FoundationaLLM PBAC public class PolicyDefinition : ResourceBase Inheritance object ResourceName ResourceBase PolicyDefinition Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssignableScopes The list of scopes at which the role can be assigned. [JsonPropertyName(\"assignable_scopes\")] [JsonPropertyOrder(1)] public List<string> AssignableScopes { get; set; } Property Value List<string> Deleted Indicates whether the resource has been logically deleted. [JsonIgnore] public override bool Deleted { get; set; } Property Value bool MatchingStrategy Gets or sets the PolicyMatchingStrategy value defining how the policy should be matched. [JsonPropertyName(\"matching_strategy\")] [JsonPropertyOrder(2)] public required PolicyMatchingStrategy MatchingStrategy { get; set; } Property Value PolicyMatchingStrategy"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyDefinitions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyDefinitions.html",
    "title": "Class PolicyDefinitions | FoundationaLLM",
    "summary": "Class PolicyDefinitions Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents all policy definitions used in PBAC. public static class PolicyDefinitions Inheritance object PolicyDefinitions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All public static readonly ReadOnlyDictionary<string, PolicyDefinition> All Field Value ReadOnlyDictionary<string, PolicyDefinition>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyMatchingStrategy.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.PolicyMatchingStrategy.html",
    "title": "Class PolicyMatchingStrategy | FoundationaLLM",
    "summary": "Class PolicyMatchingStrategy Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a policy matching strategy. public class PolicyMatchingStrategy Inheritance object PolicyMatchingStrategy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties UserIdentityProperties Gets or sets the list of user identity properties that are used to enforce the policy. [JsonPropertyName(\"user_identity_properties\")] public List<string> UserIdentityProperties { get; set; } Property Value List<string> Remarks The specified user identity properties values must be matched by values of properties in the resources. It is up to the policy enforcement point to determine how to match the values (including which resource properties to use when matching)."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.ResourcePathAuthorizationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.ResourcePathAuthorizationResult.html",
    "title": "Class ResourcePathAuthorizationResult | FoundationaLLM",
    "summary": "Class ResourcePathAuthorizationResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of a resource path authorization request. public class ResourcePathAuthorizationResult Inheritance object ResourcePathAuthorizationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions Gets or sets the list of authorizable actions assigned to the resource path. [JsonPropertyName(\"actions\")] public List<string> Actions { get; set; } Property Value List<string> Authorized Gets or sets a value indicating whether the resource path is authorized. [JsonPropertyName(\"authorized\")] public bool Authorized { get; set; } Property Value bool HasRequiredRole Gets or sets a value indicating whether the user has the required role specified in the authorization request. [JsonPropertyName(\"has_required_role\")] public bool HasRequiredRole { get; set; } Property Value bool PolicyDefinitionIds Gets or sets the list of policy definition IDs that are associated with the resource path. [JsonPropertyName(\"policy_definition_ids\")] public List<string> PolicyDefinitionIds { get; set; } Property Value List<string> ResourceName Gets or sets the name of the resource that was authorized. [JsonPropertyName(\"resource_name\")] public string? ResourceName { get; set; } Property Value string ResourcePath Gets or sets the resource path that was authorized. [JsonPropertyName(\"resource_path\")] public required string ResourcePath { get; set; } Property Value string Roles Gets or sets the list of roles that authorize the action for the resource path. [JsonPropertyName(\"roles\")] public List<string> Roles { get; set; } Property Value List<string> Remarks The list contains the display names of the roles (e.g., Reader, Contributor, Owner, etc.). SubordinateResourcePathsAuthorizationResults Gets or sets the dictionary of ResourcePathAuthorizationResult objects representing authorization results for subordinate resource paths. They keys of the dictionary are the resource names. [JsonPropertyName(\"subordinate_resource_paths_authorization_results\")] public Dictionary<string, ResourcePathAuthorizationResult> SubordinateResourcePathsAuthorizationResults { get; set; } Property Value Dictionary<string, ResourcePathAuthorizationResult> Remarks This dictionary will only contain values if the resource path in ResourcePath is a resource type path and ExpandResourceTypePaths was set to true on the request that generated this result."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentCreateRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentCreateRequest.html",
    "title": "Class RoleAssignmentCreateRequest | FoundationaLLM",
    "summary": "Class RoleAssignmentCreateRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a request to create a new role assignment. public class RoleAssignmentCreateRequest Inheritance object RoleAssignmentCreateRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CreatedBy The entity who created the role assignment request. [JsonPropertyName(\"created_by\")] [JsonPropertyOrder(502)] public string? CreatedBy { get; set; } Property Value string Description The description of the resource. [JsonPropertyName(\"description\")] [JsonPropertyOrder(-2)] public string? Description { get; set; } Property Value string Name The name of the resource. [JsonPropertyName(\"name\")] [JsonPropertyOrder(-5)] public required string Name { get; set; } Property Value string ObjectId The unique identifier of the resource. [JsonPropertyName(\"object_id\")] public string? ObjectId { get; set; } Property Value string PrincipalId The unique identifier of the security principal to which the role is assigned. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string PrincipalType The type of the security principal to which the role is assigned. Can be User, Group, or ServicePrincipal. [JsonPropertyName(\"principal_type\")] public required string PrincipalType { get; set; } Property Value string RoleDefinitionId The unique identifier of the role definition. [JsonPropertyName(\"role_definition_id\")] public required string RoleDefinitionId { get; set; } Property Value string Scope The scope at which the role is assigned. [JsonPropertyName(\"scope\")] public required string Scope { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentDeleteRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentDeleteRequest.html",
    "title": "Class RoleAssignmentDeleteRequest | FoundationaLLM",
    "summary": "Class RoleAssignmentDeleteRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a request to delete an existing role assignment. public class RoleAssignmentDeleteRequest Inheritance object RoleAssignmentDeleteRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the resource. [JsonPropertyName(\"name\")] [JsonPropertyOrder(-5)] public required string Name { get; set; } Property Value string ObjectId The unique identifier of the resource. [JsonPropertyName(\"object_id\")] public required string ObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentOperationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentOperationResult.html",
    "title": "Class RoleAssignmentOperationResult | FoundationaLLM",
    "summary": "Class RoleAssignmentOperationResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of a role assignment operation. public class RoleAssignmentOperationResult Inheritance object RoleAssignmentOperationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResultReason The reason for the result of the role assignment operation. [JsonPropertyName(\"result_reason\")] public string? ResultReason { get; set; } Property Value string Success Indicates whether the role assignment operation was successful or not. [JsonPropertyName(\"success\")] public required bool Success { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentQueryParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentQueryParameters.html",
    "title": "Class RoleAssignmentQueryParameters | FoundationaLLM",
    "summary": "Class RoleAssignmentQueryParameters Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Parameters for querying role assignments. public class RoleAssignmentQueryParameters Inheritance object RoleAssignmentQueryParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Scope The role assignment scope (resource object id). [JsonPropertyName(\"scope\")] public string? Scope { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsRequest.html",
    "title": "Class RoleAssignmentsWithActionsRequest | FoundationaLLM",
    "summary": "Class RoleAssignmentsWithActionsRequest Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a request to fetch the roles and allowed actions for a resource scope. public class RoleAssignmentsWithActionsRequest Inheritance object RoleAssignmentsWithActionsRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PrincipalId The id of the security principal requesting authorization. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string Scopes The scope of the request. [JsonPropertyName(\"scopes\")] public required List<string> Scopes { get; set; } Property Value List<string> SecurityGroupIds The list of security group ids to which the principal belongs. [JsonPropertyName(\"security_group_ids\")] public List<string> SecurityGroupIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleAssignmentsWithActionsResult.html",
    "title": "Class RoleAssignmentsWithActionsResult | FoundationaLLM",
    "summary": "Class RoleAssignmentsWithActionsResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents the result of a GET roles with actions request. public class RoleAssignmentsWithActionsResult Inheritance object RoleAssignmentsWithActionsResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions List of authorized actions on the resource. [JsonPropertyName(\"actions\")] public required List<string> Actions { get; set; } Property Value List<string> Roles List of roles on the resource. [JsonPropertyName(\"roles\")] public required List<string> Roles { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleDefinitions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.RoleDefinitions.html",
    "title": "Class RoleDefinitions | FoundationaLLM",
    "summary": "Class RoleDefinitions Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents all role definitions used in RBAC. public static class RoleDefinitions Inheritance object RoleDefinitions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields All public static readonly ReadOnlyDictionary<string, RoleDefinition> All Field Value ReadOnlyDictionary<string, RoleDefinition>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.SecretKey.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.SecretKey.html",
    "title": "Class SecretKey | FoundationaLLM",
    "summary": "Class SecretKey Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents a secret key. public class SecretKey Inheritance object SecretKey Derived PersistedSecretKey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Active Gets or sets the flag indicating whether the secret key is active or not. [JsonPropertyName(\"active\")] public required bool Active { get; set; } Property Value bool ContextId Gets or sets the context identifier of the secret key. [JsonPropertyName(\"context_id\")] public required string ContextId { get; set; } Property Value string Description Gets or sets the description of the secret key. [JsonPropertyName(\"description\")] public required string Description { get; set; } Property Value string ExpirationDate Gets or sets the expiration date of the secret key. [JsonPropertyName(\"expiration_date\")] public required DateTimeOffset ExpirationDate { get; set; } Property Value DateTimeOffset Id Gets or sets the unique identifier of the secret key. [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string InstanceId Gets or sets the FoundationaLLM instance identifier. [JsonPropertyName(\"instance_id\")] public required string InstanceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.SecretKeyValidationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.SecretKeyValidationResult.html",
    "title": "Class SecretKeyValidationResult | FoundationaLLM",
    "summary": "Class SecretKeyValidationResult Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Provides the result of a secret key validation. public class SecretKeyValidationResult Inheritance object SecretKeyValidationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Valid Gets or sets the flag indicating whether the secret key is valid. [JsonPropertyName(\"valid\")] public required bool Valid { get; set; } Property Value bool VirtualIdentity Gets or sets the UnifiedUserIdentity virtual identity associated with the secret key. [JsonPropertyName(\"virtual_identity\")] public UnifiedUserIdentity? VirtualIdentity { get; set; } Property Value UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.UserAuthorizationContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.UserAuthorizationContext.html",
    "title": "Class UserAuthorizationContext | FoundationaLLM",
    "summary": "Class UserAuthorizationContext Namespace FoundationaLLM.Common.Models.Authorization Assembly FoundationaLLM.Common.dll Represents authorization context for a user. public class UserAuthorizationContext Inheritance object UserAuthorizationContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SecurityGroupIds The list of security group identifiers to which the user belongs. [JsonPropertyName(\"security_group_ids\")] public required List<string> SecurityGroupIds { get; set; } Property Value List<string> SecurityPrincipalId The unique identifier of the user. [JsonPropertyName(\"security_principal_id\")] public required string SecurityPrincipalId { get; set; } Property Value string UserPrincipalName The user principal name (UPN). [JsonPropertyName(\"user_principal_name\")] public required string UserPrincipalName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Authorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.Authorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Authorization Classes ActionAuthorizationRequest Represents a request to authorize an action. ActionAuthorizationResult Represents the result of an action authorization request. AuthorizableAction Defines the properties of an authorizable action managed by the FoundationaLLM.Authorization resource provider. AuthorizableActions Defines all authorizable actions managed by the FoundationaLLM.Authorization resource provider. ClientSecretKey Represents a key to be shared to or received from the client. This key can be validated by recomputing the hash using the ClientSecret + Salt as input. PersistedSecretKey Represents a persisted secret key. PolicyAssignment Represents a PBAC policy assignment. PolicyDefinition Defines a security policy used in FoundationaLLM PBAC PolicyDefinitions Represents all policy definitions used in PBAC. PolicyMatchingStrategy Represents a policy matching strategy. ResourcePathAuthorizationResult Represents the result of a resource path authorization request. RoleAssignmentCreateRequest Represents a request to create a new role assignment. RoleAssignmentDeleteRequest Represents a request to delete an existing role assignment. RoleAssignmentOperationResult Represents the result of a role assignment operation. RoleAssignmentQueryParameters Parameters for querying role assignments. RoleAssignmentsWithActionsRequest Represents a request to fetch the roles and allowed actions for a resource scope. RoleAssignmentsWithActionsResult Represents the result of a GET roles with actions request. RoleDefinitions Represents all role definitions used in RBAC. SecretKey Represents a secret key. SecretKeyValidationResult Provides the result of a secret key validation. UserAuthorizationContext Represents authorization context for a user."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccount.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccount.html",
    "title": "Class AzureOpenAIAccount | FoundationaLLM",
    "summary": "Class AzureOpenAIAccount Namespace FoundationaLLM.Common.Models.Azure Assembly FoundationaLLM.Common.dll Provides information about an Azure OpenAI account. public class AzureOpenAIAccount Inheritance object AzureOpenAIAccount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deployments The list of AzureOpenAIAccountDeployment objects providing information about the deployments in the account. public List<AzureOpenAIAccountDeployment> Deployments { get; set; } Property Value List<AzureOpenAIAccountDeployment> Endpoint The endpoint of the Azure OpenAI account. public required string Endpoint { get; set; } Property Value string Name The name of the Azure OpenAI account. public required string Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccountDeployment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.AzureOpenAIAccountDeployment.html",
    "title": "Class AzureOpenAIAccountDeployment | FoundationaLLM",
    "summary": "Class AzureOpenAIAccountDeployment Namespace FoundationaLLM.Common.Models.Azure Assembly FoundationaLLM.Common.dll Provides information about a model deployment in an Azure OpenAI account. public class AzureOpenAIAccountDeployment Inheritance object AzureOpenAIAccountDeployment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountEndpoint The endpoint of the account in which the model is deployed. public required string AccountEndpoint { get; set; } Property Value string CanDoCompletions Indicates whether the model in the deployment can perform completions. public bool CanDoCompletions { get; } Property Value bool CanDoEmbeddings Indicates whether the model in the deployment can perform embeddings. public bool CanDoEmbeddings { get; } Property Value bool Capabilities The capabilities of the model in the deployment. public IReadOnlyDictionary<string, string>? Capabilities { get; set; } Property Value IReadOnlyDictionary<string, string> EmbeddingsMaxInputs The maximum number of inputs that can be sent to the model for embeddings. public int EmbeddingsMaxInputs { get; } Property Value int ModelName The name of the model in the deployment. public required string ModelName { get; set; } Property Value string ModelVersion The version of the model in the deployment. public required string ModelVersion { get; set; } Property Value string Name The name of the deployment. public required string Name { get; set; } Property Value string RequestRateLimit The limit placed on requests sent to the model. public int RequestRateLimit { get; set; } Property Value int RequestRateRenewalPeriod The period (in seconds) to which RequestRateLimit applies. public int RequestRateRenewalPeriod { get; set; } Property Value int TokenRateLimit The limit placed on tokens sent to the model. public int TokenRateLimit { get; set; } Property Value int TokenRateRenewalPeriod The period (in seconds) to which TokenRateLimit applies. public int TokenRateRenewalPeriod { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.CosmosDB.IPatchOperationItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.CosmosDB.IPatchOperationItem.html",
    "title": "Interface IPatchOperationItem | FoundationaLLM",
    "summary": "Interface IPatchOperationItem Namespace FoundationaLLM.Common.Models.Azure.CosmosDB Assembly FoundationaLLM.Common.dll Represents an item that can be updated by a patch operation. public interface IPatchOperationItem Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ItemId The identifier of the item being updated. string ItemId { get; } Property Value string ItemType Specifies the item type to aid with casting within the batch operation. Type ItemType { get; } Property Value Type PropertyValues The dictionary containing property names and updated values. Dictionary<string, object?> PropertyValues { get; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.CosmosDB.PatchOperationItem-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.CosmosDB.PatchOperationItem-1.html",
    "title": "Class PatchOperationItem<T> | FoundationaLLM",
    "summary": "Class PatchOperationItem<T> Namespace FoundationaLLM.Common.Models.Azure.CosmosDB Assembly FoundationaLLM.Common.dll Contains the contents of an Azure Cosmos DB patch operation item. public class PatchOperationItem<T> : IPatchOperationItem Type Parameters T The type of the item being updated by the patch operation. Inheritance object PatchOperationItem<T> Implements IPatchOperationItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ItemId The identifier of the item being updated. public required string ItemId { get; set; } Property Value string ItemType Specifies the item type to aid with casting within the batch operation. public Type ItemType { get; } Property Value Type PropertyValues The dictionary containing property names and updated values. public required Dictionary<string, object?> PropertyValues { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.CosmosDB.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.CosmosDB.html",
    "title": "Namespace FoundationaLLM.Common.Models.Azure.CosmosDB | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Azure.CosmosDB Classes PatchOperationItem<T> Contains the contents of an Azure Cosmos DB patch operation item. Interfaces IPatchOperationItem Represents an item that can be updated by a patch operation."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Azure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Azure.html",
    "title": "Namespace FoundationaLLM.Common.Models.Azure | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Azure Namespaces FoundationaLLM.Common.Models.Azure.CosmosDB Classes AzureOpenAIAccount Provides information about an Azure OpenAI account. AzureOpenAIAccountDeployment Provides information about a model deployment in an Azure OpenAI account."
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.AzureAIJobRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.AzureAIJobRequest.html",
    "title": "Class AzureAIJobRequest | FoundationaLLM",
    "summary": "Class AzureAIJobRequest Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll Azure AI Evaluation Job Request public class AzureAIJobRequest Inheritance object AzureAIJobRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BatchDataInput Uri to the data to test. [JsonPropertyName(\"batchDataInput\")] public BatchDataInput? BatchDataInput { get; set; } Property Value BatchDataInput Connections All model connection information for the various tests. [JsonPropertyName(\"connections\")] public GptConnections? Connections { get; set; } Property Value GptConnections FlowDefinitionResourceId The target flow to run against. [JsonPropertyName(\"flowDefinitionResourceId\")] public string? FlowDefinitionResourceId { get; set; } Property Value string InputsMapping How each of the input fields map to the testing fields. [JsonPropertyName(\"inputsMapping\")] public InputsMapping? InputsMapping { get; set; } Property Value InputsMapping Properties Any extra properties to pass to the job. [JsonPropertyName(\"properties\")] public Dictionary<string, string>? Properties { get; set; } Property Value Dictionary<string, string> RunDisplayNameGenerationType The generation type name. [JsonPropertyName(\"runDisplayNameGenerationType\")] public string? RunDisplayNameGenerationType { get; set; } Property Value string RunExperimentName A name for the job, can be the run Name. [JsonPropertyName(\"runExpermimentName\")] public string? RunExperimentName { get; set; } Property Value string RunId The user generated job id. [JsonPropertyName(\"runId\")] public string? RunId { get; set; } Property Value string RuntimeName The target run time for Azure AI studio. [JsonPropertyName(\"runtimeName\")] public string? RuntimeName { get; set; } Property Value string SessionSetupMode The setup mode, typically \"SystemWait\". [JsonPropertyName(\"sessionSetupMode\")] public string? SessionSetupMode { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.BatchDataInput.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.BatchDataInput.html",
    "title": "Class BatchDataInput | FoundationaLLM",
    "summary": "Class BatchDataInput Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll Batch data input class. public class BatchDataInput Inheritance object BatchDataInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataUri The uri to the data set. [JsonPropertyName(\"dataUri\")] public string DataUri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.CreatedBy.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.CreatedBy.html",
    "title": "Class CreatedBy | FoundationaLLM",
    "summary": "Class CreatedBy Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class CreatedBy Inheritance object CreatedBy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Upn [JsonPropertyName(\"upn\")] public string Upn { get; set; } Property Value string UserAltSecId [JsonPropertyName(\"userAltSecId\")] public object UserAltSecId { get; set; } Property Value object UserIdp [JsonPropertyName(\"userIdp\")] public object UserIdp { get; set; } Property Value object UserIss [JsonPropertyName(\"userIss\")] public string UserIss { get; set; } Property Value string UserName [JsonPropertyName(\"userName\")] public string UserName { get; set; } Property Value string UserObjectId [JsonPropertyName(\"userObjectId\")] public string UserObjectId { get; set; } Property Value string UserPuId [JsonPropertyName(\"userPuId\")] public string UserPuId { get; set; } Property Value string UserTenantId [JsonPropertyName(\"userTenantId\")] public string UserTenantId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersion.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersion.html",
    "title": "Class DataVersion | FoundationaLLM",
    "summary": "Class DataVersion Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class DataVersion Inheritance object DataVersion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssetId [JsonPropertyName(\"assetId\")] public string AssetId { get; set; } Property Value string DataContainerName [JsonPropertyName(\"dataContainerName\")] public string DataContainerName { get; set; } Property Value string DataType [JsonPropertyName(\"dataType\")] public string DataType { get; set; } Property Value string DataUri [JsonPropertyName(\"dataUri\")] public string DataUri { get; set; } Property Value string InitialAssetId [JsonPropertyName(\"initialAssetId\")] public string InitialAssetId { get; set; } Property Value string IsRegistered [JsonPropertyName(\"isRegistered\")] public bool IsRegistered { get; set; } Property Value bool MutableProps [JsonPropertyName(\"mutableProps\")] public MutableProps MutableProps { get; set; } Property Value MutableProps OriginAssetId [JsonPropertyName(\"originAssetId\")] public object OriginAssetId { get; set; } Property Value object Properties [JsonPropertyName(\"properties\")] public object Properties { get; set; } Property Value object ReferencedDataUris [JsonPropertyName(\"referencedDataUris\")] public object ReferencedDataUris { get; set; } Property Value object RunId [JsonPropertyName(\"runId\")] public object RunId { get; set; } Property Value object VersionId [JsonPropertyName(\"versionId\")] public string VersionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DataVersionResponse.html",
    "title": "Class DataVersionResponse | FoundationaLLM",
    "summary": "Class DataVersionResponse Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class DataVersionResponse Inheritance object DataVersionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataVersion [JsonPropertyName(\"dataVersion\")] public DataVersion DataVersion { get; set; } Property Value DataVersion EntityMetadata [JsonPropertyName(\"entityMetadata\")] public EntityMetadata EntityMetadata { get; set; } Property Value EntityMetadata IsV2 [JsonPropertyName(\"isV2\")] public bool IsV2 { get; set; } Property Value bool LegacyDataflow [JsonPropertyName(\"legacyDataflow\")] public object LegacyDataflow { get; set; } Property Value object LegacyDataflowType [JsonPropertyName(\"legacyDataflowType\")] public object LegacyDataflowType { get; set; } Property Value object LegacyDatasetId [JsonPropertyName(\"legacyDatasetId\")] public string LegacyDatasetId { get; set; } Property Value string LegacyDatasetType [JsonPropertyName(\"legacyDatasetType\")] public object LegacyDatasetType { get; set; } Property Value object LegacySavedDatasetId [JsonPropertyName(\"legacySavedDatasetId\")] public object LegacySavedDatasetId { get; set; } Property Value object PutAssetLROResponseDto [JsonPropertyName(\"putAssetLROResponseDto\")] public object PutAssetLROResponseDto { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DatasetVersionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.DatasetVersionRequest.html",
    "title": "Class DatasetVersionRequest | FoundationaLLM",
    "summary": "Class DatasetVersionRequest Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll A data set version request. public class DatasetVersionRequest Inheritance object DatasetVersionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataContainerName The container to save the data to. [JsonPropertyName(\"dataContainerName\")] public string DataContainerName { get; set; } Property Value string DataType The data type of the data. [JsonPropertyName(\"dataType\")] public string DataType { get; set; } Property Value string DataUri The uri to the data set. [JsonPropertyName(\"dataUri\")] public string DataUri { get; set; } Property Value string IsRegistered Using registered data. [JsonPropertyName(\"isRegistered\")] public bool IsRegistered { get; set; } Property Value bool MutableProps Any mutable properties to pass to the data [JsonPropertyName(\"mutableProps\")] public Dictionary<string, string>? MutableProps { get; set; } Property Value Dictionary<string, string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.EntityMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.EntityMetadata.html",
    "title": "Class EntityMetadata | FoundationaLLM",
    "summary": "Class EntityMetadata Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class EntityMetadata Inheritance object EntityMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CreatedBy [JsonPropertyName(\"createdBy\")] public CreatedBy CreatedBy { get; set; } Property Value CreatedBy CreatedTime [JsonPropertyName(\"createdTime\")] public DateTime CreatedTime { get; set; } Property Value DateTime Etag [JsonPropertyName(\"etag\")] public string Etag { get; set; } Property Value string ModifiedBy [JsonPropertyName(\"modifiedBy\")] public object ModifiedBy { get; set; } Property Value object ModifiedTime [JsonPropertyName(\"modifiedTime\")] public DateTime ModifiedTime { get; set; } Property Value DateTime"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnection.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnection.html",
    "title": "Class GptConnection | FoundationaLLM",
    "summary": "Class GptConnection Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll A connection to an Azure AI Service model. public class GptConnection Inheritance object GptConnection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Connection Name of the Azure AI studio connection. [JsonPropertyName(\"connection\")] public string? Connection { get; set; } Property Value string DeploymentName Name of the deployment to use. [JsonPropertyName(\"deployment_name\")] public string? DeploymentName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.GptConnections.html",
    "title": "Class GptConnections | FoundationaLLM",
    "summary": "Class GptConnections Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll The GPT connections for the Azure AI Service. public class GptConnections Inheritance object GptConnections Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties GptCoherence The GPT Coherence connection [JsonPropertyName(\"gpt_coherence\")] public GptConnection? GptCoherence { get; set; } Property Value GptConnection GptFluency The uri to the data set. [JsonPropertyName(\"gpt_fluency\")] public GptConnection? GptFluency { get; set; } Property Value GptConnection GptGroundedness The uri to the data set. [JsonPropertyName(\"gpt_groundedness\")] public GptConnection? GptGroundedness { get; set; } Property Value GptConnection GptRelevance The uri to the data set. [JsonPropertyName(\"gpt_relevance\")] public GptConnection? GptRelevance { get; set; } Property Value GptConnection GptSimilarity The uri to the data set. [JsonPropertyName(\"gpt_similarity\")] public GptConnection? GptSimilarity { get; set; } Property Value GptConnection"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.InputsMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.InputsMapping.html",
    "title": "Class InputsMapping | FoundationaLLM",
    "summary": "Class InputsMapping Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll How each of the input fields map to the testing fields. public class InputsMapping Inheritance object InputsMapping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Answer Name of the input field for the answer [JsonPropertyName(\"answer\")] public string? Answer { get; set; } Property Value string Context Name of the input field for the context [JsonPropertyName(\"context\")] public string? Context { get; set; } Property Value string GroundTruth Name of the input field for the ground truth. [JsonPropertyName(\"ground_truth\")] public string? GroundTruth { get; set; } Property Value string Metrics Name of the input field for the metrics to run. [JsonPropertyName(\"metrics\")] public string? Metrics { get; set; } Property Value string Question Name of the input field for the question [JsonPropertyName(\"question\")] public string? Question { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.MutableProps.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.MutableProps.html",
    "title": "Class MutableProps | FoundationaLLM",
    "summary": "Class MutableProps Namespace FoundationaLLM.Common.Models.AzureAIService Assembly FoundationaLLM.Common.dll public class MutableProps Inheritance object MutableProps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AutoDeleteSetting [JsonPropertyName(\"autoDeleteSetting\")] public object AutoDeleteSetting { get; set; } Property Value object DataExpiryTime [JsonPropertyName(\"dataExpiryTime\")] public object DataExpiryTime { get; set; } Property Value object Description [JsonPropertyName(\"description\")] public object Description { get; set; } Property Value object IsArchived [JsonPropertyName(\"isArchived\")] public bool IsArchived { get; set; } Property Value bool Stage [JsonPropertyName(\"stage\")] public string Stage { get; set; } Property Value string Tags [JsonPropertyName(\"tags\")] public object Tags { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.AzureAIService.html",
    "title": "Namespace FoundationaLLM.Common.Models.AzureAIService | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.AzureAIService Classes AzureAIJobRequest Azure AI Evaluation Job Request BatchDataInput Batch data input class. CreatedBy DataVersion DataVersionResponse DatasetVersionRequest A data set version request. EntityMetadata GptConnection A connection to an Azure AI Service model. GptConnections The GPT connections for the Azure AI Service. InputsMapping How each of the input fields map to the testing fields. MutableProps"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.APICacheRefreshResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.APICacheRefreshResult.html",
    "title": "Class APICacheRefreshResult | FoundationaLLM",
    "summary": "Class APICacheRefreshResult Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll Contains the result of a cache refresh operation. public class APICacheRefreshResult Inheritance object APICacheRefreshResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Detail Details of the cache refresh operation from the called API. public string? Detail { get; set; } Property Value string Success Indicates whether the cache refresh operation was successful. public bool Success { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheItem.html",
    "title": "Class CacheItem | FoundationaLLM",
    "summary": "Class CacheItem Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll The cached object. public class CacheItem Inheritance object CacheItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ExpirationTimeUtc The UTC expiration time of the object being cached. public DateTime? ExpirationTimeUtc { get; set; } Property Value DateTime? IsExpired Indicates whether the cached object expired or not. public bool IsExpired { get; } Property Value bool Value The value of the object being cached. public required object? Value { get; set; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheKey.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheKey.html",
    "title": "Class CacheKey | FoundationaLLM",
    "summary": "Class CacheKey Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll Composite caching key. public class CacheKey Inheritance object CacheKey Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CacheKey(string, string) Composite caching key. public CacheKey(string name, string category) Parameters name string The name of the object identified by the cache key. category string The category of the object identified by the cache key. Fields Category The category of the object from the cache. public string Category Field Value string Name The name of the object from the cache. public string Name Field Value string Methods Equals(object?) Determines whether the specified object is equal to the current object. public override bool Equals(object? obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.CacheSettings.html",
    "title": "Class CacheSettings | FoundationaLLM",
    "summary": "Class CacheSettings Namespace FoundationaLLM.Common.Models.Cache Assembly FoundationaLLM.Common.dll Provides a standard set of settings for caching. public record CacheSettings : IEquatable<CacheSettings> Inheritance object CacheSettings Implements IEquatable<CacheSettings> Derived AuthorizationServiceClientSettings ResourceProviderCacheSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AbsoluteCacheExpirationSeconds Absolute cache expiration in seconds. public double? AbsoluteCacheExpirationSeconds { get; set; } Property Value double? CacheExpirationScanFrequencySeconds Gets or sets the minimum length of time between successive scans for expired items in seconds. public double? CacheExpirationScanFrequencySeconds { get; set; } Property Value double? CacheSizeLimit The maximum number of items that can be stored in the cache. public long? CacheSizeLimit { get; set; } Property Value long? EnableCache Gets or sets a value indicating whether caching is enabled or not. public bool EnableCache { get; set; } Property Value bool SlidingCacheExpirationSeconds public double? SlidingCacheExpirationSeconds { get; set; } Property Value double?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Cache.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Cache.html",
    "title": "Namespace FoundationaLLM.Common.Models.Cache | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Cache Classes APICacheRefreshResult Contains the result of a cache refresh operation. CacheItem The cached object. CacheKey Composite caching key. CacheSettings Provides a standard set of settings for caching."
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionCodeExecuteRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionCodeExecuteRequest.html",
    "title": "Class CodeSessionCodeExecuteRequest | FoundationaLLM",
    "summary": "Class CodeSessionCodeExecuteRequest Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides the request to execute code in a code session. public class CodeSessionCodeExecuteRequest Inheritance object CodeSessionCodeExecuteRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CodeToExecute Gets or sets the code to execute. [JsonPropertyName(\"code_to_execute\")] public required string CodeToExecute { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionCodeExecuteResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionCodeExecuteResponse.html",
    "title": "Class CodeSessionCodeExecuteResponse | FoundationaLLM",
    "summary": "Class CodeSessionCodeExecuteResponse Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides the result of executing code in a code session. public class CodeSessionCodeExecuteResponse Inheritance object CodeSessionCodeExecuteResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ExecutionResult Gets or sets the result produced by the code that was executed. [JsonPropertyName(\"execution_result\")] public required string ExecutionResult { get; set; } Property Value string StandardError Gets or sets the standard error from the code execution. [JsonPropertyName(\"error_output\")] public required string StandardError { get; set; } Property Value string StandardOutput Gets or sets the standard output from the code execution. [JsonPropertyName(\"standard_output\")] public required string StandardOutput { get; set; } Property Value string Status Gets or sets the status of the code execution. [JsonPropertyName(\"status\")] public required string Status { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileDownloadRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileDownloadRequest.html",
    "title": "Class CodeSessionFileDownloadRequest | FoundationaLLM",
    "summary": "Class CodeSessionFileDownloadRequest Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Represents a request to download newly created files from a code session. public class CodeSessionFileDownloadRequest Inheritance object CodeSessionFileDownloadRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties OperationId Gets or sets the file upload operation identifier. [JsonPropertyName(\"operation_id\")] public required string OperationId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileDownloadRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileDownloadRequestValidator.html",
    "title": "Class CodeSessionFileDownloadRequestValidator | FoundationaLLM",
    "summary": "Class CodeSessionFileDownloadRequestValidator Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides validation for the CodeSessionFileDownloadRequest model. public class CodeSessionFileDownloadRequestValidator : AbstractValidator<CodeSessionFileDownloadRequest>, IValidator<CodeSessionFileDownloadRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CodeSessionFileDownloadRequest> CodeSessionFileDownloadRequestValidator Implements IValidator<CodeSessionFileDownloadRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CodeSessionFileDownloadRequest>.Validate(CodeSessionFileDownloadRequest) AbstractValidator<CodeSessionFileDownloadRequest>.ValidateAsync(CodeSessionFileDownloadRequest, CancellationToken) AbstractValidator<CodeSessionFileDownloadRequest>.Validate(ValidationContext<CodeSessionFileDownloadRequest>) AbstractValidator<CodeSessionFileDownloadRequest>.ValidateAsync(ValidationContext<CodeSessionFileDownloadRequest>, CancellationToken) AbstractValidator<CodeSessionFileDownloadRequest>.CreateDescriptor() AbstractValidator<CodeSessionFileDownloadRequest>.RuleFor<TProperty>(Expression<Func<CodeSessionFileDownloadRequest, TProperty>>) AbstractValidator<CodeSessionFileDownloadRequest>.Transform<TProperty, TTransformed>(Expression<Func<CodeSessionFileDownloadRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CodeSessionFileDownloadRequest>.Transform<TProperty, TTransformed>(Expression<Func<CodeSessionFileDownloadRequest, TProperty>>, Func<CodeSessionFileDownloadRequest, TProperty, TTransformed>) AbstractValidator<CodeSessionFileDownloadRequest>.RuleForEach<TElement>(Expression<Func<CodeSessionFileDownloadRequest, IEnumerable<TElement>>>) AbstractValidator<CodeSessionFileDownloadRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CodeSessionFileDownloadRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CodeSessionFileDownloadRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CodeSessionFileDownloadRequest, IEnumerable<TElement>>>, Func<CodeSessionFileDownloadRequest, TElement, TTransformed>) AbstractValidator<CodeSessionFileDownloadRequest>.RuleSet(string, Action) AbstractValidator<CodeSessionFileDownloadRequest>.When(Func<CodeSessionFileDownloadRequest, bool>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.When(Func<CodeSessionFileDownloadRequest, ValidationContext<CodeSessionFileDownloadRequest>, bool>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.Unless(Func<CodeSessionFileDownloadRequest, bool>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.Unless(Func<CodeSessionFileDownloadRequest, ValidationContext<CodeSessionFileDownloadRequest>, bool>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.WhenAsync(Func<CodeSessionFileDownloadRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.WhenAsync(Func<CodeSessionFileDownloadRequest, ValidationContext<CodeSessionFileDownloadRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.UnlessAsync(Func<CodeSessionFileDownloadRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.UnlessAsync(Func<CodeSessionFileDownloadRequest, ValidationContext<CodeSessionFileDownloadRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileDownloadRequest>.Include(IValidator<CodeSessionFileDownloadRequest>) AbstractValidator<CodeSessionFileDownloadRequest>.Include<TValidator>(Func<CodeSessionFileDownloadRequest, TValidator>) AbstractValidator<CodeSessionFileDownloadRequest>.GetEnumerator() AbstractValidator<CodeSessionFileDownloadRequest>.EnsureInstanceNotNull(object) AbstractValidator<CodeSessionFileDownloadRequest>.PreValidate(ValidationContext<CodeSessionFileDownloadRequest>, ValidationResult) AbstractValidator<CodeSessionFileDownloadRequest>.RaiseValidationException(ValidationContext<CodeSessionFileDownloadRequest>, ValidationResult) AbstractValidator<CodeSessionFileDownloadRequest>.OnRuleAdded(IValidationRule<CodeSessionFileDownloadRequest>) AbstractValidator<CodeSessionFileDownloadRequest>.CascadeMode AbstractValidator<CodeSessionFileDownloadRequest>.ClassLevelCascadeMode AbstractValidator<CodeSessionFileDownloadRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CodeSessionFileDownloadRequestValidator() Configures the validation rules for the CodeSessionFileDownloadRequest model. public CodeSessionFileDownloadRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileDownloadResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileDownloadResponse.html",
    "title": "Class CodeSessionFileDownloadResponse | FoundationaLLM",
    "summary": "Class CodeSessionFileDownloadResponse Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides the result of downloading files from a code session. public class CodeSessionFileDownloadResponse Inheritance object CodeSessionFileDownloadResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Errors Gets or sets the list of file paths that could not be downloaded from the code session. [JsonPropertyName(\"errors\")] public List<string> Errors { get; set; } Property Value List<string> FileRecords Gets or sets the dictionary containing the file identifiers and associated file records for each file that was successfully downloaded. [JsonPropertyName(\"file_records\")] public Dictionary<string, ContextFileRecord> FileRecords { get; set; } Property Value Dictionary<string, ContextFileRecord>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileUploadRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileUploadRequest.html",
    "title": "Class CodeSessionFileUploadRequest | FoundationaLLM",
    "summary": "Class CodeSessionFileUploadRequest Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Represents a request to upload files to a code session. public class CodeSessionFileUploadRequest Inheritance object CodeSessionFileUploadRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileNames Gets or sets the list of file names to upload. [JsonPropertyName(\"file_names\")] public required List<string> FileNames { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileUploadRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileUploadRequestValidator.html",
    "title": "Class CodeSessionFileUploadRequestValidator | FoundationaLLM",
    "summary": "Class CodeSessionFileUploadRequestValidator Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides validation for the CodeSessionFileUploadRequest model. public class CodeSessionFileUploadRequestValidator : AbstractValidator<CodeSessionFileUploadRequest>, IValidator<CodeSessionFileUploadRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CodeSessionFileUploadRequest> CodeSessionFileUploadRequestValidator Implements IValidator<CodeSessionFileUploadRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CodeSessionFileUploadRequest>.Validate(CodeSessionFileUploadRequest) AbstractValidator<CodeSessionFileUploadRequest>.ValidateAsync(CodeSessionFileUploadRequest, CancellationToken) AbstractValidator<CodeSessionFileUploadRequest>.Validate(ValidationContext<CodeSessionFileUploadRequest>) AbstractValidator<CodeSessionFileUploadRequest>.ValidateAsync(ValidationContext<CodeSessionFileUploadRequest>, CancellationToken) AbstractValidator<CodeSessionFileUploadRequest>.CreateDescriptor() AbstractValidator<CodeSessionFileUploadRequest>.RuleFor<TProperty>(Expression<Func<CodeSessionFileUploadRequest, TProperty>>) AbstractValidator<CodeSessionFileUploadRequest>.Transform<TProperty, TTransformed>(Expression<Func<CodeSessionFileUploadRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CodeSessionFileUploadRequest>.Transform<TProperty, TTransformed>(Expression<Func<CodeSessionFileUploadRequest, TProperty>>, Func<CodeSessionFileUploadRequest, TProperty, TTransformed>) AbstractValidator<CodeSessionFileUploadRequest>.RuleForEach<TElement>(Expression<Func<CodeSessionFileUploadRequest, IEnumerable<TElement>>>) AbstractValidator<CodeSessionFileUploadRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CodeSessionFileUploadRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CodeSessionFileUploadRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CodeSessionFileUploadRequest, IEnumerable<TElement>>>, Func<CodeSessionFileUploadRequest, TElement, TTransformed>) AbstractValidator<CodeSessionFileUploadRequest>.RuleSet(string, Action) AbstractValidator<CodeSessionFileUploadRequest>.When(Func<CodeSessionFileUploadRequest, bool>, Action) AbstractValidator<CodeSessionFileUploadRequest>.When(Func<CodeSessionFileUploadRequest, ValidationContext<CodeSessionFileUploadRequest>, bool>, Action) AbstractValidator<CodeSessionFileUploadRequest>.Unless(Func<CodeSessionFileUploadRequest, bool>, Action) AbstractValidator<CodeSessionFileUploadRequest>.Unless(Func<CodeSessionFileUploadRequest, ValidationContext<CodeSessionFileUploadRequest>, bool>, Action) AbstractValidator<CodeSessionFileUploadRequest>.WhenAsync(Func<CodeSessionFileUploadRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileUploadRequest>.WhenAsync(Func<CodeSessionFileUploadRequest, ValidationContext<CodeSessionFileUploadRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileUploadRequest>.UnlessAsync(Func<CodeSessionFileUploadRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileUploadRequest>.UnlessAsync(Func<CodeSessionFileUploadRequest, ValidationContext<CodeSessionFileUploadRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CodeSessionFileUploadRequest>.Include(IValidator<CodeSessionFileUploadRequest>) AbstractValidator<CodeSessionFileUploadRequest>.Include<TValidator>(Func<CodeSessionFileUploadRequest, TValidator>) AbstractValidator<CodeSessionFileUploadRequest>.GetEnumerator() AbstractValidator<CodeSessionFileUploadRequest>.EnsureInstanceNotNull(object) AbstractValidator<CodeSessionFileUploadRequest>.PreValidate(ValidationContext<CodeSessionFileUploadRequest>, ValidationResult) AbstractValidator<CodeSessionFileUploadRequest>.RaiseValidationException(ValidationContext<CodeSessionFileUploadRequest>, ValidationResult) AbstractValidator<CodeSessionFileUploadRequest>.OnRuleAdded(IValidationRule<CodeSessionFileUploadRequest>) AbstractValidator<CodeSessionFileUploadRequest>.CascadeMode AbstractValidator<CodeSessionFileUploadRequest>.ClassLevelCascadeMode AbstractValidator<CodeSessionFileUploadRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CodeSessionFileUploadRequestValidator() Configures the validation rules for the CodeSessionFileUploadRequest model. public CodeSessionFileUploadRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileUploadResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CodeSessionFileUploadResponse.html",
    "title": "Class CodeSessionFileUploadResponse | FoundationaLLM",
    "summary": "Class CodeSessionFileUploadResponse Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides the result of uploading files to a code session. public class CodeSessionFileUploadResponse Inheritance object CodeSessionFileUploadResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllFilesUploaded Gets or sets a value indicating whether all files were uploaded successfully. [JsonPropertyName(\"all_files_uploaded\")] public bool AllFilesUploaded { get; set; } Property Value bool FileUploadSuccess Gets or sets the dictionary containing the success status of each file upload operation. [JsonPropertyName(\"file_upload_success\")] public Dictionary<string, bool> FileUploadSuccess { get; set; } Property Value Dictionary<string, bool> OperationId Gets or sets the unique identifier of the file upload operation [JsonPropertyName(\"operation_id\")] public required string OperationId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CreateCodeSessionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CreateCodeSessionRequest.html",
    "title": "Class CreateCodeSessionRequest | FoundationaLLM",
    "summary": "Class CreateCodeSessionRequest Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Represents a request to create a code session. public class CreateCodeSessionRequest Inheritance object CreateCodeSessionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName Gets or sets the name of the agent for which the code session is created. [JsonPropertyName(\"agent_name\")] public required string AgentName { get; set; } Property Value string Context Gets or sets the context in which the code session is created. [JsonPropertyName(\"context\")] public required string Context { get; set; } Property Value string ConversationId Gets or sets the unique identifier of the conversation. [JsonPropertyName(\"conversation_id\")] public required string ConversationId { get; set; } Property Value string EndpointProvider Gets or sets the name of the code session provider. [JsonPropertyName(\"endpoint_provider\")] public required string EndpointProvider { get; set; } Property Value string Language Gets or sets the language of the code session. [JsonPropertyName(\"language\")] public required string Language { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CreateCodeSessionRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CreateCodeSessionRequestValidator.html",
    "title": "Class CreateCodeSessionRequestValidator | FoundationaLLM",
    "summary": "Class CreateCodeSessionRequestValidator Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides validation for the CreateCodeSessionRequest model. public class CreateCodeSessionRequestValidator : AbstractValidator<CreateCodeSessionRequest>, IValidator<CreateCodeSessionRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<CreateCodeSessionRequest> CreateCodeSessionRequestValidator Implements IValidator<CreateCodeSessionRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<CreateCodeSessionRequest>.Validate(CreateCodeSessionRequest) AbstractValidator<CreateCodeSessionRequest>.ValidateAsync(CreateCodeSessionRequest, CancellationToken) AbstractValidator<CreateCodeSessionRequest>.Validate(ValidationContext<CreateCodeSessionRequest>) AbstractValidator<CreateCodeSessionRequest>.ValidateAsync(ValidationContext<CreateCodeSessionRequest>, CancellationToken) AbstractValidator<CreateCodeSessionRequest>.CreateDescriptor() AbstractValidator<CreateCodeSessionRequest>.RuleFor<TProperty>(Expression<Func<CreateCodeSessionRequest, TProperty>>) AbstractValidator<CreateCodeSessionRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateCodeSessionRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<CreateCodeSessionRequest>.Transform<TProperty, TTransformed>(Expression<Func<CreateCodeSessionRequest, TProperty>>, Func<CreateCodeSessionRequest, TProperty, TTransformed>) AbstractValidator<CreateCodeSessionRequest>.RuleForEach<TElement>(Expression<Func<CreateCodeSessionRequest, IEnumerable<TElement>>>) AbstractValidator<CreateCodeSessionRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCodeSessionRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<CreateCodeSessionRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<CreateCodeSessionRequest, IEnumerable<TElement>>>, Func<CreateCodeSessionRequest, TElement, TTransformed>) AbstractValidator<CreateCodeSessionRequest>.RuleSet(string, Action) AbstractValidator<CreateCodeSessionRequest>.When(Func<CreateCodeSessionRequest, bool>, Action) AbstractValidator<CreateCodeSessionRequest>.When(Func<CreateCodeSessionRequest, ValidationContext<CreateCodeSessionRequest>, bool>, Action) AbstractValidator<CreateCodeSessionRequest>.Unless(Func<CreateCodeSessionRequest, bool>, Action) AbstractValidator<CreateCodeSessionRequest>.Unless(Func<CreateCodeSessionRequest, ValidationContext<CreateCodeSessionRequest>, bool>, Action) AbstractValidator<CreateCodeSessionRequest>.WhenAsync(Func<CreateCodeSessionRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCodeSessionRequest>.WhenAsync(Func<CreateCodeSessionRequest, ValidationContext<CreateCodeSessionRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCodeSessionRequest>.UnlessAsync(Func<CreateCodeSessionRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCodeSessionRequest>.UnlessAsync(Func<CreateCodeSessionRequest, ValidationContext<CreateCodeSessionRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<CreateCodeSessionRequest>.Include(IValidator<CreateCodeSessionRequest>) AbstractValidator<CreateCodeSessionRequest>.Include<TValidator>(Func<CreateCodeSessionRequest, TValidator>) AbstractValidator<CreateCodeSessionRequest>.GetEnumerator() AbstractValidator<CreateCodeSessionRequest>.EnsureInstanceNotNull(object) AbstractValidator<CreateCodeSessionRequest>.PreValidate(ValidationContext<CreateCodeSessionRequest>, ValidationResult) AbstractValidator<CreateCodeSessionRequest>.RaiseValidationException(ValidationContext<CreateCodeSessionRequest>, ValidationResult) AbstractValidator<CreateCodeSessionRequest>.OnRuleAdded(IValidationRule<CreateCodeSessionRequest>) AbstractValidator<CreateCodeSessionRequest>.CascadeMode AbstractValidator<CreateCodeSessionRequest>.ClassLevelCascadeMode AbstractValidator<CreateCodeSessionRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CreateCodeSessionRequestValidator() Configures the validation rules for the CreateCodeSessionRequest model. public CreateCodeSessionRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CreateCodeSessionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.CreateCodeSessionResponse.html",
    "title": "Class CreateCodeSessionResponse | FoundationaLLM",
    "summary": "Class CreateCodeSessionResponse Namespace FoundationaLLM.Common.Models.CodeExecution Assembly FoundationaLLM.Common.dll Provides the result of creating a code execution session. public class CreateCodeSessionResponse Inheritance object CreateCodeSessionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Endpoint The endpoint used to execute the code. [JsonPropertyName(\"endpoint\")] public required string Endpoint { get; set; } Property Value string SessionId The unique identifier for the code execution session. [JsonPropertyName(\"session_id\")] public required string SessionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.CodeExecution.html",
    "title": "Namespace FoundationaLLM.Common.Models.CodeExecution | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.CodeExecution Classes CodeSessionCodeExecuteRequest Provides the request to execute code in a code session. CodeSessionCodeExecuteResponse Provides the result of executing code in a code session. CodeSessionFileDownloadRequest Represents a request to download newly created files from a code session. CodeSessionFileDownloadRequestValidator Provides validation for the CodeSessionFileDownloadRequest model. CodeSessionFileDownloadResponse Provides the result of downloading files from a code session. CodeSessionFileUploadRequest Represents a request to upload files to a code session. CodeSessionFileUploadRequestValidator Provides validation for the CodeSessionFileUploadRequest model. CodeSessionFileUploadResponse Provides the result of uploading files to a code session. CreateCodeSessionRequest Represents a request to create a code session. CreateCodeSessionRequestValidator Provides validation for the CreateCodeSessionRequest model. CreateCodeSessionResponse Provides the result of creating a code execution session."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Collections.PagedResponse-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Collections.PagedResponse-1.html",
    "title": "Class PagedResponse<T> | FoundationaLLM",
    "summary": "Class PagedResponse<T> Namespace FoundationaLLM.Common.Models.Collections Assembly FoundationaLLM.Common.dll Represents a paged response that includes a list of items and a flag indicating if there are more items to retrieve. public class PagedResponse<T> Type Parameters T The type of items to return. Inheritance object PagedResponse<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties HasNextPage Indicates if there are more items to retrieve. [JsonPropertyName(\"has_next_page\")] public bool HasNextPage { get; set; } Property Value bool Items The list of items to return. [JsonPropertyName(\"items\")] public IEnumerable<T>? Items { get; set; } Property Value IEnumerable<T> TotalItems The total number of items available. This is the total count, not necessarily the number of items returned in the response. Please note that certain APIs only return a count on the first page of results. [JsonPropertyName(\"total_items\")] public long? TotalItems { get; set; } Property Value long?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Collections.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Collections.html",
    "title": "Namespace FoundationaLLM.Common.Models.Collections | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Collections Classes PagedResponse<T> Represents a paged response that includes a list of items and a flag indicating if there are more items to retrieve."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.APIClientSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.APIClientSettings.html",
    "title": "Class APIClientSettings | FoundationaLLM",
    "summary": "Class APIClientSettings Namespace FoundationaLLM.Common.Models.Configuration.API Assembly FoundationaLLM.Common.dll Standard settings for an API client. public record APIClientSettings : IEquatable<APIClientSettings> Inheritance object APIClientSettings Implements IEquatable<APIClientSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Timeout Specifies the timeout for the downstream API HTTP client. If this value is null, the default timeout is used. For an infinite waiting period, use InfiniteTimeSpan public TimeSpan? Timeout { get; set; } Property Value TimeSpan?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.API.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.API Classes APIClientSettings Standard settings for an API client."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEntry.html",
    "title": "Class AppConfigurationEntry | FoundationaLLM",
    "summary": "Class AppConfigurationEntry Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll Represents a single entry in the app configuration catalog. public class AppConfigurationEntry Inheritance object AppConfigurationEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AppConfigurationEntry(string, string?, string?, string?, string?, string?, object?, bool) Represents a single entry in the app configuration catalog. public AppConfigurationEntry(string key, string? minimumVersion, string? keyVaultSecretName = null, string? description = null, string? defaultValue = null, string? contentType = null, object? sampleObject = null, bool canBeEmpty = false) Parameters key string minimumVersion string keyVaultSecretName string description string defaultValue string contentType string sampleObject object canBeEmpty bool Properties CanBeEmpty If true, the configuration entry must exist but can be empty. public bool CanBeEmpty { get; } Property Value bool ContentType The content type of the configuration entry. public string? ContentType { get; } Property Value string DefaultValue The default value for the configuration entry. public string? DefaultValue { get; } Property Value string Description A description of the configuration entry. public string? Description { get; } Property Value string Key The App Configuration key. public string Key { get; } Property Value string KeyVaultSecretName The name of the Key Vault secret that contains the value for this configuration entry. public string? KeyVaultSecretName { get; } Property Value string MinimumVersion The minimum version of the app that is required to use this configuration entry. public string? MinimumVersion { get; } Property Value string SampleObject A sample object that represents the configuration entry. public object? SampleObject { get; } Property Value object"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEventData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationEventData.html",
    "title": "Class AppConfigurationEventData | FoundationaLLM",
    "summary": "Class AppConfigurationEventData Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll The data associated with an Azure App Configuration Event Grid event. public class AppConfigurationEventData Inheritance object AppConfigurationEventData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Key The app configuration key name. [JsonPropertyName(\"key\")] public required string Key { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationKeyVaultUri.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.AppConfigurationKeyVaultUri.html",
    "title": "Class AppConfigurationKeyVaultUri | FoundationaLLM",
    "summary": "Class AppConfigurationKeyVaultUri Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Assembly FoundationaLLM.Common.dll Provides details about an Azure Key Vault secret. public class AppConfigurationKeyVaultUri Inheritance object AppConfigurationKeyVaultUri Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Uri The URI identifying the Azure Key Vault secret. [JsonPropertyName(\"uri\")] public string? Uri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AppConfiguration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.AppConfiguration Classes AppConfigurationEntry Represents a single entry in the app configuration catalog. AppConfigurationEventData The data associated with an Azure App Configuration Event Grid event. AppConfigurationKeyVaultUri Provides details about an Azure Key Vault secret."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.EntraSettings.html",
    "title": "Class EntraSettings | FoundationaLLM",
    "summary": "Class EntraSettings Namespace FoundationaLLM.Common.Models.Configuration.Authentication Assembly FoundationaLLM.Common.dll Represents settings specific to Entra. public class EntraSettings Inheritance object EntraSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Scopes The scopes associated with the Entra settings. public string? Scopes { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authentication.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Authentication Classes EntraSettings Represents settings specific to Entra."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authorization.AuthorizationServiceClientSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authorization.AuthorizationServiceClientSettings.html",
    "title": "Class AuthorizationServiceClientSettings | FoundationaLLM",
    "summary": "Class AuthorizationServiceClientSettings Namespace FoundationaLLM.Common.Models.Configuration.Authorization Assembly FoundationaLLM.Common.dll Authorization service client settings public record AuthorizationServiceClientSettings : CacheSettings, IEquatable<CacheSettings>, IEquatable<AuthorizationServiceClientSettings> Inheritance object CacheSettings AuthorizationServiceClientSettings Implements IEquatable<CacheSettings> IEquatable<AuthorizationServiceClientSettings> Inherited Members CacheSettings.EnableCache CacheSettings.AbsoluteCacheExpirationSeconds CacheSettings.SlidingCacheExpirationSeconds CacheSettings.CacheSizeLimit CacheSettings.CacheExpirationScanFrequencySeconds object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIScope Provides the API scope of the Authorization service. public required string APIScope { get; set; } Property Value string APIUrl Provides the API URL of the Authorization service. public required string APIUrl { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Authorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Authorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Authorization Classes AuthorizationServiceClientSettings Authorization service client settings"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.AzureAISettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.AzureAISettings.html",
    "title": "Class AzureAISettings | FoundationaLLM",
    "summary": "Class AzureAISettings Namespace FoundationaLLM.Common.Models.Configuration.AzureAI Assembly FoundationaLLM.Common.dll Settings for submitting jobs to Azure AI Studio public class AzureAISettings Inheritance object AzureAISettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIEndpointConfigurationName The name of the API endpoint configuration object that provides the properties of the API endpoint used to connect to the service. public required string APIEndpointConfigurationName { get; init; } Property Value string BlobStorageServiceSettings The storage backing the Azure AI Studio deployment. public BlobStorageServiceSettings? BlobStorageServiceSettings { get; set; } Property Value BlobStorageServiceSettings ContainerName Container where Azure AI Studio stores the data sets. public string? ContainerName { get; init; } Property Value string Deployment Azure AI Studio GPT model deployment name. public string? Deployment { get; init; } Property Value string FlowDefinitionResourceId The Flow Definition Resource ID of the Azure AI Studio. public string? FlowDefinitionResourceId { get; init; } Property Value string Metrics Metrics to run on the Azure AI Studio. public string? Metrics { get; init; } Property Value string ProjectName Project Name of the Azure AI Studio deployment. public string? ProjectName { get; init; } Property Value string Region Region of the Azure AI Studio deployment. public string? Region { get; init; } Property Value string ResourceGroup Resource Group of the Azure AI Studio deployment. public string? ResourceGroup { get; init; } Property Value string SubscriptionId Subscription ID associated with the Azure AI Studio deployment. public string? SubscriptionId { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.AzureAI.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.AzureAI | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.AzureAI Classes AzureAISettings Settings for submitting jobs to Azure AI Studio"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.ClientBrandingConfiguration.html",
    "title": "Class ClientBrandingConfiguration | FoundationaLLM",
    "summary": "Class ClientBrandingConfiguration Namespace FoundationaLLM.Common.Models.Configuration.Branding Assembly FoundationaLLM.Common.dll Provides configuration for client branding. public class ClientBrandingConfiguration Inheritance object ClientBrandingConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccentColor The accent color of the client in hex format. public string? AccentColor { get; set; } Property Value string AccentTextColor The accent text color of the client in hex format. public string? AccentTextColor { get; set; } Property Value string AgentIconUrl The agent icon that displays next to the agent select list and agent responses. Can be an absolute URL, relative path, or base64string value. public string? AgentIconUrl { get; set; } Property Value string BackgroundColor The background color of the client in hex format. public string? BackgroundColor { get; set; } Property Value string CompanyName The display name of the client. public string? CompanyName { get; set; } Property Value string FavIconUrl The URL of the client's favicon. Can be an absolute URL, relative path, or base64string value. public string? FavIconUrl { get; set; } Property Value string FooterText The footer text displayed in the client. public string? FooterText { get; set; } Property Value string KioskMode Flag indicating whether we use kiosk mode or not. public bool KioskMode { get; set; } Property Value bool LogoText The text to display next to the logo in the nav pane. Leave blank to not display any text. public string? LogoText { get; set; } Property Value string LogoUrl The URL of the client's logo. Can be an absolute URL or a relative URL. public string? LogoUrl { get; set; } Property Value string PageTitle The page title of the client. public string? PageTitle { get; set; } Property Value string PrimaryButtonBackgroundColor The background color of the client's primary button in hex format. public string? PrimaryButtonBackgroundColor { get; set; } Property Value string PrimaryButtonTextColor The text color of the client's primary button in hex format. public string? PrimaryButtonTextColor { get; set; } Property Value string PrimaryColor The primary color of the client in hex format. public string? PrimaryColor { get; set; } Property Value string PrimaryTextColor The text color that overlays the PrimaryColor of the client in hex format. public string? PrimaryTextColor { get; set; } Property Value string SecondaryButtonBackgroundColor The background color of the client's secondary button in hex format. public string? SecondaryButtonBackgroundColor { get; set; } Property Value string SecondaryButtonTextColor The text color of the client's secondary button in hex format. public string? SecondaryButtonTextColor { get; set; } Property Value string SecondaryColor The secondary color of the client in hex format. public string? SecondaryColor { get; set; } Property Value string SecondaryTextColor The text color that overlays the SecondaryColor of the client in hex format. public string? SecondaryTextColor { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Branding.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Branding | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Branding Classes ClientBrandingConfiguration Provides configuration for client branding."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.AzureCosmosDBSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.AzureCosmosDBSettings.html",
    "title": "Class AzureCosmosDBSettings | FoundationaLLM",
    "summary": "Class AzureCosmosDBSettings Namespace FoundationaLLM.Common.Models.Configuration.CosmosDB Assembly FoundationaLLM.Common.dll Stores the Azure Cosmos DB settings from the app configuration. public record AzureCosmosDBSettings : IEquatable<AzureCosmosDBSettings> Inheritance object AzureCosmosDBSettings Implements IEquatable<AzureCosmosDBSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ChangeFeedLeaseContainer The name of the Azure Cosmos DB container used for change feed leases. public required string ChangeFeedLeaseContainer { get; set; } Property Value string Containers Comma-separated list of Azure Cosmos DB container names. public required string Containers { get; set; } Property Value string Database The name of the Azure Cosmos DB database. public required string Database { get; set; } Property Value string EnableTracing Specifies whether to enable Azure Cosmos DB tracing. Disabling tracing reduces the number of logs generated by the Azure Cosmos DB SDK. public bool EnableTracing { get; set; } Property Value bool Endpoint The Azure Cosmos DB endpoint URL. public required string Endpoint { get; set; } Property Value string MonitoredContainers Comma-separated list of Azure Cosmos DB container names to monitor for changes. public required string MonitoredContainers { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.CosmosDB.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.CosmosDB | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.CosmosDB Classes AzureCosmosDBSettings Stores the Azure Cosmos DB settings from the app configuration."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.DependencyInjectionContainerSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.DependencyInjectionContainerSettings.html",
    "title": "Class DependencyInjectionContainerSettings | FoundationaLLM",
    "summary": "Class DependencyInjectionContainerSettings Namespace FoundationaLLM.Common.Models.Configuration.Environment Assembly FoundationaLLM.Common.dll Represents the settings for the dependency injection container. public class DependencyInjectionContainerSettings Inheritance object DependencyInjectionContainerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id Gets or sets the identifier for the container. public int Id { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.EnvironmentVariableEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.EnvironmentVariableEntry.html",
    "title": "Class EnvironmentVariableEntry | FoundationaLLM",
    "summary": "Class EnvironmentVariableEntry Namespace FoundationaLLM.Common.Models.Configuration.Environment Assembly FoundationaLLM.Common.dll Represents a single entry in the environment variable catalog. public class EnvironmentVariableEntry Inheritance object EnvironmentVariableEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EnvironmentVariableEntry(string, string, string?) Represents a single entry in the environment variable catalog. public EnvironmentVariableEntry(string name, string description, string? defaultValue = null) Parameters name string description string defaultValue string Properties DefaultValue The default value of the environment variable, if any. public string? DefaultValue { get; } Property Value string Description A description of the environment variable. public string Description { get; } Property Value string Name The name of the environment variable. public string Name { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Environment.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Environment | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Environment Classes DependencyInjectionContainerSettings Represents the settings for the dependency injection container. EnvironmentVariableEntry Represents a single entry in the environment variable catalog."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceProfile.html",
    "title": "Class AzureEventGridEventServiceProfile | FoundationaLLM",
    "summary": "Class AzureEventGridEventServiceProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling in the AzureEventGridEventService event service. public class AzureEventGridEventServiceProfile Inheritance object AzureEventGridEventServiceProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventProcessingCycleSeconds The time interval in seconds between successive event processing cycles. public int EventProcessingCycleSeconds { get; set; } Property Value int Topics The list of EventGridTopicProfile topic profiles used to configure event handling for an Azure Event Grid namespace topic. public List<EventGridTopicProfile> Topics { get; set; } Property Value List<EventGridTopicProfile>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.AzureEventGridEventServiceSettings.html",
    "title": "Class AzureEventGridEventServiceSettings | FoundationaLLM",
    "summary": "Class AzureEventGridEventServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll Provides configuration settings to intialize the AzureEventGridEventService service. public class AzureEventGridEventServiceSettings Inheritance object AzureEventGridEventServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NamespaceId The Azure resource identifier for the Azure Event Grid namespace. public required string NamespaceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridTopicProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.EventGridTopicProfile.html",
    "title": "Class EventGridTopicProfile | FoundationaLLM",
    "summary": "Class EventGridTopicProfile Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll The profile used to configure event handling for an Azure Event Grid namespace topic. public class EventGridTopicProfile Inheritance object EventGridTopicProfile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the Azure Event Grid namespace topic. public required string Name { get; set; } Property Value string SubscriptionAvailable Indicates whether the subscription is available for use or not. [JsonIgnore] public bool SubscriptionAvailable { get; set; } Property Value bool SubscriptionName The topic subscription name. [JsonIgnore] public string? SubscriptionName { get; set; } Property Value string SubscriptionPrefix The prefix used for the topic subscription name. public required string SubscriptionPrefix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.LocalEventServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.LocalEventServiceSettings.html",
    "title": "Class LocalEventServiceSettings | FoundationaLLM",
    "summary": "Class LocalEventServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Events Assembly FoundationaLLM.Common.dll Provides configuration settings to initialize the LocalEventService service. public class LocalEventServiceSettings Inheritance object LocalEventServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventProcessingCycleSeconds The time interval in seconds between successive event processing cycles. public int EventProcessingCycleSeconds { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Events.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Events | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Events Classes AzureEventGridEventServiceProfile The profile used to configure event handling in the AzureEventGridEventService event service. AzureEventGridEventServiceSettings Provides configuration settings to intialize the AzureEventGridEventService service. EventGridTopicProfile The profile used to configure event handling for an Azure Event Grid namespace topic. LocalEventServiceSettings Provides configuration settings to initialize the LocalEventService service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.InstanceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.InstanceSettings.html",
    "title": "Class InstanceSettings | FoundationaLLM",
    "summary": "Class InstanceSettings Namespace FoundationaLLM.Common.Models.Configuration.Instance Assembly FoundationaLLM.Common.dll Provides configuration settings for the current FoundationaLLM deployment instance. public class InstanceSettings Inheritance object InstanceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The unique identifier of the current FoundationaLLM deployment instance. Format is a GUID. public required string Id { get; set; } Property Value string IdentitySubstitutionSecurityPrincipalId The object identifier of the security principal who is allowed to substitute its identity with a value provided in the X-USER-IDENTITY header. public string? IdentitySubstitutionSecurityPrincipalId { get; set; } Property Value string IdentitySubstitutionUserPrincipalNamePattern The Regex pattern used to validate the values allowed as User Principal Name (UPN) substitutes in the X-USER-IDENTITY header. public string? IdentitySubstitutionUserPrincipalNamePattern { get; set; } Property Value string SecurityGroupRetrievalStrategy The security group retrieval strategy of the FoundationaLLM instance. public string? SecurityGroupRetrievalStrategy { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Instance.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Instance | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Instance Classes InstanceSettings Provides configuration settings for the current FoundationaLLM deployment instance."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.KeyVaultSecretEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.KeyVaultSecretEntry.html",
    "title": "Class KeyVaultSecretEntry | FoundationaLLM",
    "summary": "Class KeyVaultSecretEntry Namespace FoundationaLLM.Common.Models.Configuration.KeyVault Assembly FoundationaLLM.Common.dll Represents a single entry in the Key Vault catalog. public class KeyVaultSecretEntry Inheritance object KeyVaultSecretEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KeyVaultSecretEntry(string, string?, string?) Represents a single entry in the Key Vault catalog. public KeyVaultSecretEntry(string secretName, string? minimumVersion, string? description = null) Parameters secretName string minimumVersion string description string Properties Description A description of the Key Vault secret. public string? Description { get; set; } Property Value string MinimumVersion The minimum version of the app that is required to use this Key Vault secret. public string? MinimumVersion { get; } Property Value string SecretName The name of the secret in the Key Vault. public string SecretName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.KeyVault.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.KeyVault | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.KeyVault Classes KeyVaultSecretEntry Represents a single entry in the Key Vault catalog."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.ResourceProviders.ResourceProviderCacheSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.ResourceProviders.ResourceProviderCacheSettings.html",
    "title": "Class ResourceProviderCacheSettings | FoundationaLLM",
    "summary": "Class ResourceProviderCacheSettings Namespace FoundationaLLM.Common.Models.Configuration.ResourceProviders Assembly FoundationaLLM.Common.dll Provides settings for the resource provider cache. public record ResourceProviderCacheSettings : CacheSettings, IEquatable<CacheSettings>, IEquatable<ResourceProviderCacheSettings> Inheritance object CacheSettings ResourceProviderCacheSettings Implements IEquatable<CacheSettings> IEquatable<ResourceProviderCacheSettings> Inherited Members CacheSettings.EnableCache CacheSettings.AbsoluteCacheExpirationSeconds CacheSettings.SlidingCacheExpirationSeconds CacheSettings.CacheSizeLimit CacheSettings.CacheExpirationScanFrequencySeconds object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.ResourceProviders Classes ResourceProviderCacheSettings Provides settings for the resource provider cache."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageServiceSettings.html",
    "title": "Class BlobStorageServiceSettings | FoundationaLLM",
    "summary": "Class BlobStorageServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Provides configuration settings to initialize a blob storage service. public record BlobStorageServiceSettings : IEquatable<BlobStorageServiceSettings> Inheritance object BlobStorageServiceSettings Implements IEquatable<BlobStorageServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountKey The account key used for authentication. This value should be set only if AuthenticationType has a value of AccountKey. public string? AccountKey { get; set; } Property Value string AccountName The name of the blob storage account. public string? AccountName { get; set; } Property Value string AuthenticationType A AuthenticationTypes value indicating the type of authentication used. [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes ConnectionString The connection string used for authentication. This value should be set only if AuthenticationType has a value of ConnectionString. public string? ConnectionString { get; set; } Property Value string ContainerName The name of the container within the blob storage account. public string? ContainerName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.BlobStorageSettings.html",
    "title": "Class BlobStorageSettings | FoundationaLLM",
    "summary": "Class BlobStorageSettings Namespace FoundationaLLM.Common.Models.Configuration.Storage Assembly FoundationaLLM.Common.dll Provides configuration options for a Blob Storage service. public record BlobStorageSettings : IEquatable<BlobStorageSettings> Inheritance object BlobStorageSettings Implements IEquatable<BlobStorageSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BlobStorageConnection The connection string for the blob storage. public required string BlobStorageConnection { get; set; } Property Value string BlobStorageContainer The name of the blob storage container. public required string BlobStorageContainer { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Storage.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Storage | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Storage Classes BlobStorageServiceSettings Provides configuration settings to initialize a blob storage service. BlobStorageSettings Provides configuration options for a Blob Storage service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.TokenTextSplitterServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.TokenTextSplitterServiceSettings.html",
    "title": "Class TokenTextSplitterServiceSettings | FoundationaLLM",
    "summary": "Class TokenTextSplitterServiceSettings Namespace FoundationaLLM.Common.Models.Configuration.Text Assembly FoundationaLLM.Common.dll Provides configuration settings that control token-based text splitting. public record TokenTextSplitterServiceSettings : IEquatable<TokenTextSplitterServiceSettings> Inheritance object TokenTextSplitterServiceSettings Implements IEquatable<TokenTextSplitterServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TokenTextSplitterServiceSettings(string, string, int, int) Provides configuration settings that control token-based text splitting. public TokenTextSplitterServiceSettings(string Tokenizer, string TokenizerEncoder, int ChunkSizeTokens, int OverlapSizeTokens) Parameters Tokenizer string The tokenizer used to split the test into tokens. TokenizerEncoder string The name of the encoder used for tokenization. ChunkSizeTokens int The target size in tokens for the resulting text chunks. OverlapSizeTokens int Teh target size in tokens for the overlapping parts of the adjacent text chunks. Properties ChunkSizeTokens The target size in tokens for the resulting text chunks. public int ChunkSizeTokens { get; init; } Property Value int OverlapSizeTokens Teh target size in tokens for the overlapping parts of the adjacent text chunks. public int OverlapSizeTokens { get; init; } Property Value int Tokenizer The tokenizer used to split the test into tokens. public string Tokenizer { get; init; } Property Value string TokenizerEncoder The name of the encoder used for tokenization. public string TokenizerEncoder { get; init; } Property Value string Methods FromDictionary(Dictionary<string, string>) Creates and instance of the class based on a dictionary. public static TokenTextSplitterServiceSettings FromDictionary(Dictionary<string, string> settings) Parameters settings Dictionary<string, string> The dictionary containing the settings. Returns TokenTextSplitterServiceSettings A TokenTextSplitterServiceSettings instance initialized with the values from the dictionary."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Text.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Text | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Text Classes TokenTextSplitterServiceSettings Provides configuration settings that control token-based text splitting."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.UserProfile.html",
    "title": "Class UserProfile | FoundationaLLM",
    "summary": "Class UserProfile Namespace FoundationaLLM.Common.Models.Configuration.Users Assembly FoundationaLLM.Common.dll The user profile object persisted in long-term storage. public record UserProfile : IEquatable<UserProfile> Inheritance object UserProfile Implements IEquatable<UserProfile> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfile(string) The user profile object persisted in long-term storage. public UserProfile(string UPN) Parameters UPN string The user's account user principal name. Properties Flags A dictionary of UserProfileFlags. public Dictionary<string, bool> Flags { get; set; } Property Value Dictionary<string, bool> Id The unique identifier. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Type The document type. [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string UPN The user principal name. [JsonPropertyName(\"upn\")] public string UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.Users.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration.Users | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration.Users Classes UserProfile The user profile object persisted in long-term storage."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Configuration Namespaces FoundationaLLM.Common.Models.Configuration.API FoundationaLLM.Common.Models.Configuration.AppConfiguration FoundationaLLM.Common.Models.Configuration.Authentication FoundationaLLM.Common.Models.Configuration.Authorization FoundationaLLM.Common.Models.Configuration.AzureAI FoundationaLLM.Common.Models.Configuration.Branding FoundationaLLM.Common.Models.Configuration.CosmosDB FoundationaLLM.Common.Models.Configuration.Environment FoundationaLLM.Common.Models.Configuration.Events FoundationaLLM.Common.Models.Configuration.Instance FoundationaLLM.Common.Models.Configuration.KeyVault FoundationaLLM.Common.Models.Configuration.ResourceProviders FoundationaLLM.Common.Models.Configuration.Storage FoundationaLLM.Common.Models.Configuration.Text FoundationaLLM.Common.Models.Configuration.Users"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextCodeSessionFileUploadRecord.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextCodeSessionFileUploadRecord.html",
    "title": "Class ContextCodeSessionFileUploadRecord | FoundationaLLM",
    "summary": "Class ContextCodeSessionFileUploadRecord Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents a file record. public class ContextCodeSessionFileUploadRecord : ContextRecord Inheritance object ContextRecord ContextCodeSessionFileUploadRecord Inherited Members ContextRecord.Id ContextRecord.InstanceId ContextRecord.UPN ContextRecord.Origin ContextRecord.CreatedAt ContextRecord.CreatedBy ContextRecord.UpdatedAt ContextRecord.UpdatedBy ContextRecord.Deleted ContextRecord.Metadata object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextCodeSessionFileUploadRecord() Initializes a new instance of the ContextCodeSessionFileUploadRecord class. public ContextCodeSessionFileUploadRecord() ContextCodeSessionFileUploadRecord(string, string, Dictionary<string, bool>, UnifiedUserIdentity) Initializes a new instance of the ContextCodeSessionFileUploadRecord class. public ContextCodeSessionFileUploadRecord(string instanceId, string codeSessionId, Dictionary<string, bool> fileUploadSuccess, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. codeSessionId string The code session unique identifier. fileUploadSuccess Dictionary<string, bool> The dictionary with the file upload success status for each file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Properties CodeSessionId Gets or sets the code session identifier [JsonPropertyName(\"code_session_id\")] [JsonPropertyOrder(0)] public string CodeSessionId { get; set; } Property Value string FileUploadSuccess Gets or sets the dictionary with the file upload success status for each file. [JsonPropertyName(\"file_upload_success\")] [JsonPropertyOrder(1)] public Dictionary<string, bool> FileUploadSuccess { get; set; } Property Value Dictionary<string, bool> Type Gets or sets the type of the context record. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-99)] public override string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextCodeSessionRecord.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextCodeSessionRecord.html",
    "title": "Class ContextCodeSessionRecord | FoundationaLLM",
    "summary": "Class ContextCodeSessionRecord Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents a file record. public class ContextCodeSessionRecord : ContextRecord Inheritance object ContextRecord ContextCodeSessionRecord Inherited Members ContextRecord.Id ContextRecord.InstanceId ContextRecord.UPN ContextRecord.Origin ContextRecord.CreatedAt ContextRecord.CreatedBy ContextRecord.UpdatedAt ContextRecord.UpdatedBy ContextRecord.Deleted ContextRecord.Metadata object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextCodeSessionRecord() Initializes a new instance of the ContextCodeSessionRecord class. public ContextCodeSessionRecord() ContextCodeSessionRecord(string, string, string, string, string, string, UnifiedUserIdentity) Initializes a new instance of the ContextCodeSessionRecord class. public ContextCodeSessionRecord(string instanceId, string conversationId, string codeSessionId, string endpointProvider, string endpoint, string language, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The conversation identifier. codeSessionId string The code session unique identifier. endpointProvider string The code session provider. endpoint string The code session provider endpoint. language string The code session programming language. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Properties ConversationId Gets or sets the conversation identifier. [JsonPropertyName(\"conversation_id\")] [JsonPropertyOrder(0)] public string ConversationId { get; set; } Property Value string Endpoint Gets or sets the code session endpoint. [JsonPropertyName(\"endpoint\")] [JsonPropertyOrder(2)] public string Endpoint { get; set; } Property Value string EndpointProvider Gets or sets the code session provider name. [JsonPropertyName(\"endpoint_provider\")] [JsonPropertyOrder(1)] public string EndpointProvider { get; set; } Property Value string Language Gets or sets the code session programming language. [JsonPropertyName(\"language\")] [JsonPropertyOrder(3)] public string Language { get; set; } Property Value string Type Gets or sets the type of the context record. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-99)] public override string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextFileContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextFileContent.html",
    "title": "Class ContextFileContent | FoundationaLLM",
    "summary": "Class ContextFileContent Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents the content of a file. public class ContextFileContent Inheritance object ContextFileContent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType Gets or sets the content type of the file. [JsonPropertyName(\"content_type\")] public required string ContentType { get; set; } Property Value string FileContent Gets or sets the stream containing the binary file content. [JsonPropertyName(\"file_content\")] public Stream? FileContent { get; set; } Property Value Stream FileName Gets or sets the name of the file. [JsonPropertyName(\"file_name\")] public required string FileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextFileRecord.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextFileRecord.html",
    "title": "Class ContextFileRecord | FoundationaLLM",
    "summary": "Class ContextFileRecord Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents a file record. public class ContextFileRecord : ContextRecord Inheritance object ContextRecord ContextFileRecord Inherited Members ContextRecord.Id ContextRecord.InstanceId ContextRecord.UPN ContextRecord.Origin ContextRecord.CreatedAt ContextRecord.CreatedBy ContextRecord.UpdatedAt ContextRecord.UpdatedBy ContextRecord.Deleted ContextRecord.Metadata object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextFileRecord() Initializes a new instance of the ContextFileRecord class. public ContextFileRecord() ContextFileRecord(string, string, string, string, string, long, string, UnifiedUserIdentity, Dictionary<string, string>?) Initializes a new instance of the ContextFileRecord class. public ContextFileRecord(string instanceId, string origin, string conversationId, string fileName, string contentType, long fileSizeBytes, string fileProcessingType, UnifiedUserIdentity userIdentity, Dictionary<string, string>? metadata = null) Parameters instanceId string The FoundationaLLM instance identifier. origin string The origin of the record. conversationId string The conversation identifier. fileName string The original name of the file. contentType string The content type of the file. fileSizeBytes long The size of the file in bytes. fileProcessingType string The type of processing that is required for the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. metadata Dictionary<string, string> Optional metadata dictionary associated with the context file record. Properties ContentType Gets or sets the content type. [JsonPropertyName(\"content_type\")] [JsonPropertyOrder(3)] public string ContentType { get; set; } Property Value string ConversationId Gets or sets the conversation identifier. [JsonPropertyName(\"conversation_id\")] [JsonPropertyOrder(0)] public string ConversationId { get; set; } Property Value string FileName Gets or sets the file name. [JsonPropertyName(\"file_name\")] [JsonPropertyOrder(2)] public string FileName { get; set; } Property Value string FileObjectId Gets or sets the FoundationaLLM object identifier of the file [JsonPropertyName(\"file_object_id\")] [JsonPropertyOrder(1)] public string FileObjectId { get; set; } Property Value string FilePath Gets or sets the file path on the storage account. [JsonPropertyName(\"file_path\")] [JsonPropertyOrder(4)] public string FilePath { get; set; } Property Value string FileProcessingType Gets or sets a value indicating the type of processing that is required for the file. [JsonPropertyName(\"file_processing_type\")] [JsonPropertyOrder(6)] public string FileProcessingType { get; set; } Property Value string FileSizeBytes Gets or sets the file size in bytes. [JsonPropertyName(\"file_size_bytes\")] [JsonPropertyOrder(5)] public long FileSizeBytes { get; set; } Property Value long Type Gets or sets the type of the context record. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-99)] public override string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextRecord.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextRecord.html",
    "title": "Class ContextRecord | FoundationaLLM",
    "summary": "Class ContextRecord Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents a file record. public abstract class ContextRecord Inheritance object ContextRecord Derived ContextCodeSessionFileUploadRecord ContextCodeSessionRecord ContextFileRecord Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextRecord() Initializes a new instance of the ContextRecord class. public ContextRecord() ContextRecord(string, string, string, UnifiedUserIdentity, Dictionary<string, string>?) Initializes a new instance of the ContextRecord class. public ContextRecord(string id, string instanceId, string origin, UnifiedUserIdentity userIdentity, Dictionary<string, string>? metadata = null) Parameters id string The identifier of the context record. instanceId string The FoundationaLLM instance identifier. origin string The origin of the context record. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. metadata Dictionary<string, string> Optional metadata dictionary associated with the context record. Properties CreatedAt Gets or sets the time of the record creation. [JsonPropertyName(\"created_at\")] [JsonPropertyOrder(100)] public DateTimeOffset CreatedAt { get; set; } Property Value DateTimeOffset CreatedBy Gets or sets the user that created the record. [JsonPropertyName(\"created_by\")] [JsonPropertyOrder(101)] public string CreatedBy { get; set; } Property Value string Deleted Gets or sets the flag that indicates if the record was deleted. [JsonPropertyName(\"deleted\")] [JsonPropertyOrder(104)] public bool Deleted { get; set; } Property Value bool Id Gets or sets the Cosmos DB identifier. [JsonPropertyName(\"id\")] [JsonPropertyOrder(-100)] public string Id { get; set; } Property Value string InstanceId Gets or sets the FoundationaLLM instance identifier. [JsonPropertyName(\"instance_id\")] [JsonPropertyOrder(-98)] public string InstanceId { get; set; } Property Value string Metadata Gets or sets the metadata associated with the context record. [JsonPropertyName(\"metadata\")] [JsonPropertyOrder(105)] public Dictionary<string, string> Metadata { get; set; } Property Value Dictionary<string, string> Origin Gets or sets the origin of the context record. [JsonPropertyName(\"origin\")] [JsonPropertyOrder(-96)] public string Origin { get; set; } Property Value string Type Gets or sets the type of the context record. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-99)] public abstract string Type { get; set; } Property Value string UPN Gets or sets the user prinicpal name of the user that owns the record. [JsonPropertyName(\"upn\")] [JsonPropertyOrder(-97)] public string UPN { get; set; } Property Value string UpdatedAt Gets or sets the time of the record update. [JsonPropertyName(\"updated_at\")] [JsonPropertyOrder(102)] public DateTimeOffset? UpdatedAt { get; set; } Property Value DateTimeOffset? UpdatedBy Gets or sets the user that updated the record. [JsonPropertyName(\"updated_by\")] [JsonPropertyOrder(103)] public string? UpdatedBy { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextServiceResponse-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextServiceResponse-1.html",
    "title": "Class ContextServiceResponse<T> | FoundationaLLM",
    "summary": "Class ContextServiceResponse<T> Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents a response from the FoundationaLLM Context API. public class ContextServiceResponse<T> : ContextServiceResponse where T : class Type Parameters T The type of the expected result. Inheritance object ContextServiceResponse ContextServiceResponse<T> Inherited Members ContextServiceResponse.Success ContextServiceResponse.ErrorMessage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Result Gets or sets the result of the operation. [JsonPropertyName(\"result\")] public T? Result { get; set; } Property Value T"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextServiceResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextServiceResponse.html",
    "title": "Class ContextServiceResponse | FoundationaLLM",
    "summary": "Class ContextServiceResponse Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents a response from the FoundationaLLM Context API. public class ContextServiceResponse Inheritance object ContextServiceResponse Derived ContextServiceResponse<T> ContextKnowledgeSourceQueryResponse ContextKnowledgeSourceRenderGraphResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ErrorMessage Gets or sets the error message if the operation was not successful. [JsonPropertyName(\"error_message\")] public string? ErrorMessage { get; set; } Property Value string Success Gets or sets a value indicating whether the operation was successful. [JsonPropertyName(\"success\")] public required bool Success { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.ContextTextChunk.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.ContextTextChunk.html",
    "title": "Class ContextTextChunk | FoundationaLLM",
    "summary": "Class ContextTextChunk Namespace FoundationaLLM.Common.Models.Context Assembly FoundationaLLM.Common.dll Represents a text chunk used to build context. public class ContextTextChunk Inheritance object ContextTextChunk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content Gets or sets the text content of the text chunk. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Metadata Gets or sets the metadata associated with the text chunk. [JsonPropertyName(\"metadata\")] public Dictionary<string, object> Metadata { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeGraphQuery.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeGraphQuery.html",
    "title": "Class ContextKnowledgeGraphQuery | FoundationaLLM",
    "summary": "Class ContextKnowledgeGraphQuery Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Represents a request to query a knowledge graph. public class ContextKnowledgeGraphQuery Inheritance object ContextKnowledgeGraphQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllEntitiesMaxCount Gets or sets the maximum number of entities returned in the response. [JsonPropertyName(\"all_entities_max_count\")] public int AllEntitiesMaxCount { get; set; } Property Value int Remarks This includes both entities that were mapped directly and entities that were retrieved by navigating relationships. MappedEntitiesMaxCount Gets or sets the maximum number of mapped entities included in the query result. [JsonPropertyName(\"mapped_entities_max_count\")] public int MappedEntitiesMaxCount { get; set; } Property Value int Remarks These are entities directly mapped based on the similarity between their summary description an the user prompt. MappedEntitiesSimilarityThreshold Gets or sets the minimum threshold used to match entities based on the similarity between their summary description and the user prompt. [JsonPropertyName(\"mapped_entities_similarity_threshold\")] public float MappedEntitiesSimilarityThreshold { get; set; } Property Value float RelationshipsMaxDepth Gets or sets the maximum depth allowed when navigating relationships. [JsonPropertyName(\"relationships_max_depth\")] public int RelationshipsMaxDepth { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeGraphResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeGraphResponse.html",
    "title": "Class ContextKnowledgeGraphResponse | FoundationaLLM",
    "summary": "Class ContextKnowledgeGraphResponse Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Represents the result of a knowledge graph query. public class ContextKnowledgeGraphResponse Inheritance object ContextKnowledgeGraphResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Entities Gets or sets the list of knowledge entities that most similar to the user prompt in the query. [JsonPropertyName(\"entities\")] public List<KnowledgeEntity> Entities { get; set; } Property Value List<KnowledgeEntity> RelatedEntities Gets or sets the list of knowledge entities that are related to the ones in Entities and are most similar to the user prompt in the query. [JsonPropertyName(\"related_entities\")] public List<KnowledgeEntity> RelatedEntities { get; set; } Property Value List<KnowledgeEntity> Relationships Gets or sets the list of knowledge relationsips that exist between entities in Entities and entities in RelatedEntities. [JsonPropertyName(\"relationships\")] public List<KnowledgeRelationship> Relationships { get; set; } Property Value List<KnowledgeRelationship>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceListRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceListRequest.html",
    "title": "Class ContextKnowledgeSourceListRequest | FoundationaLLM",
    "summary": "Class ContextKnowledgeSourceListRequest Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Represents a request to list knowledge sources. public class ContextKnowledgeSourceListRequest Inheritance object ContextKnowledgeSourceListRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KnowledgeSourceNames Gets or sets the optional list of knowledge source names to filter the results. [JsonPropertyName(\"knowledge_source_names\")] public List<string>? KnowledgeSourceNames { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceQueryRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceQueryRequest.html",
    "title": "Class ContextKnowledgeSourceQueryRequest | FoundationaLLM",
    "summary": "Class ContextKnowledgeSourceQueryRequest Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Represents a request to query a collection of text chunks. public class ContextKnowledgeSourceQueryRequest Inheritance object ContextKnowledgeSourceQueryRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KnowledgeGraphQuery Gets or sets the knowledge graph query parameters. [JsonPropertyName(\"knowledge_graph_query\")] public ContextKnowledgeGraphQuery? KnowledgeGraphQuery { get; set; } Property Value ContextKnowledgeGraphQuery MetadataFilter Gets or sets the metadata filter used to filter the text chunks. [JsonPropertyName(\"metadata_filter\")] public Dictionary<string, string>? MetadataFilter { get; set; } Property Value Dictionary<string, string> TextChunksMaxCount Gets or sets the maximum number of text chunks included in the query result. [JsonPropertyName(\"text_chunks_max_count\")] public int TextChunksMaxCount { get; set; } Property Value int TextChunksSimilarityThreshold Gets or sets the minimum similarity measure threshold used to identify relevant text chunks. [JsonPropertyName(\"text_chunks_similarity_threshold\")] public float TextChunksSimilarityThreshold { get; set; } Property Value float UseSemanticRanking Gets or sets a flag that indicates whether semantic ranking should be used or not. [JsonPropertyName(\"use_semantic_ranking\")] public bool UseSemanticRanking { get; set; } Property Value bool UserPrompt Gets or sets the user prompt used to query the knowledge graph. [JsonPropertyName(\"user_prompt\")] public string? UserPrompt { get; set; } Property Value string VectorStoreId Gets or sets the vector store identifier used to query the knowledge source. [JsonPropertyName(\"vector_store_id\")] public string? VectorStoreId { get; set; } Property Value string Remarks This value is used only when the knowledge source does not have static vector store identier set."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceQueryResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceQueryResponse.html",
    "title": "Class ContextKnowledgeSourceQueryResponse | FoundationaLLM",
    "summary": "Class ContextKnowledgeSourceQueryResponse Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Represents the result of a knowledge source query. public class ContextKnowledgeSourceQueryResponse : ContextServiceResponse Inheritance object ContextServiceResponse ContextKnowledgeSourceQueryResponse Inherited Members ContextServiceResponse.Success ContextServiceResponse.ErrorMessage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KnowledgeGraphResponse Gets or sets the response from the knowledge graph query. [JsonPropertyName(\"knowledge_graph_response\")] public ContextKnowledgeGraphResponse? KnowledgeGraphResponse { get; set; } Property Value ContextKnowledgeGraphResponse TextChunks Gets or sets the list of text chunks that are part of the result. [JsonPropertyName(\"text_chunks\")] public List<ContextTextChunk> TextChunks { get; set; } Property Value List<ContextTextChunk>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceRenderGraphResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceRenderGraphResponse.html",
    "title": "Class ContextKnowledgeSourceRenderGraphResponse | FoundationaLLM",
    "summary": "Class ContextKnowledgeSourceRenderGraphResponse Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Represents the response to the request to render a knowledge source's knowledge graph. public class ContextKnowledgeSourceRenderGraphResponse : ContextServiceResponse Inheritance object ContextServiceResponse ContextKnowledgeSourceRenderGraphResponse Inherited Members ContextServiceResponse.Success ContextServiceResponse.ErrorMessage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Edges Gets or sets the list of edges in the knowledge graph, where each edge is represented as a list of two node identifiers. [JsonPropertyName(\"edges\")] public List<List<string>> Edges { get; set; } Property Value List<List<string>> Nodes Gets or sets the list of nodes in the knowledge graph. [JsonPropertyName(\"nodes\")] public List<KnowledgeGraphRenderingNode> Nodes { get; set; } Property Value List<KnowledgeGraphRenderingNode>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceUpdateRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.ContextKnowledgeSourceUpdateRequest.html",
    "title": "Class ContextKnowledgeSourceUpdateRequest | FoundationaLLM",
    "summary": "Class ContextKnowledgeSourceUpdateRequest Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Represents a request to update a knowledge source in the FoundationaLLM Context API. public class ContextKnowledgeSourceUpdateRequest Inheritance object ContextKnowledgeSourceUpdateRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingDimensions Gets or sets the number of dimensions for the embeddings used in the knowledge source. [JsonPropertyName(\"embedding_dimensions\")] public required int EmbeddingDimensions { get; set; } Property Value int EmbeddingModel Gets or sets the embedding model used for the knowledge source. [JsonPropertyName(\"embedding_model\")] public required string EmbeddingModel { get; set; } Property Value string EntitiesSourceFilePath Gets or sets the path of the source file containing the entities for the knowledge graph. [JsonPropertyName(\"entities_source_file_path\")] public string? EntitiesSourceFilePath { get; set; } Property Value string RelationshipsSourceFilePath Gets or sets the path of the source file containing the relationships for the knowledge graph. [JsonPropertyName(\"relationships_source_file_path\")] public string? RelationshipsSourceFilePath { get; set; } Property Value string VectorDatabaseObjectId Gets or sets the object identifier of the vector database associated with the knowledge source. [JsonPropertyName(\"vector_database_object_id\")] public required string VectorDatabaseObjectId { get; set; } Property Value string VectorStoreId Gets or sets the object identifier of the vector store associated with the knowledge source. [JsonPropertyName(\"vector_store_id\")] public string? VectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.KnowledgeGraphRenderingNode.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.KnowledgeGraphRenderingNode.html",
    "title": "Class KnowledgeGraphRenderingNode | FoundationaLLM",
    "summary": "Class KnowledgeGraphRenderingNode Namespace FoundationaLLM.Common.Models.Context.Knowledge Assembly FoundationaLLM.Common.dll Provides a representation of a node in the knowledge graph rendering. public class KnowledgeGraphRenderingNode Inheritance object KnowledgeGraphRenderingNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Gets or sets the description of the node. [JsonPropertyName(\"description\")] public string? Description { get; set; } Property Value string Id Gets or sets the identifier of the node. [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string Label Gets or sets the label of the node. [JsonPropertyName(\"label\")] public required string Label { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.Knowledge.html",
    "title": "Namespace FoundationaLLM.Common.Models.Context.Knowledge | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Context.Knowledge Classes ContextKnowledgeGraphQuery Represents a request to query a knowledge graph. ContextKnowledgeGraphResponse Represents the result of a knowledge graph query. ContextKnowledgeSourceListRequest Represents a request to list knowledge sources. ContextKnowledgeSourceQueryRequest Represents a request to query a collection of text chunks. ContextKnowledgeSourceQueryResponse Represents the result of a knowledge source query. ContextKnowledgeSourceRenderGraphResponse Represents the response to the request to render a knowledge source's knowledge graph. ContextKnowledgeSourceUpdateRequest Represents a request to update a knowledge source in the FoundationaLLM Context API. KnowledgeGraphRenderingNode Provides a representation of a node in the knowledge graph rendering."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Context.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Context.html",
    "title": "Namespace FoundationaLLM.Common.Models.Context | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Context Namespaces FoundationaLLM.Common.Models.Context.Knowledge Classes ContextCodeSessionFileUploadRecord Represents a file record. ContextCodeSessionRecord Represents a file record. ContextFileContent Represents the content of a file. ContextFileRecord Represents a file record. ContextRecord Represents a file record. ContextServiceResponse Represents a response from the FoundationaLLM Context API. ContextServiceResponse<T> Represents a response from the FoundationaLLM Context API. ContextTextChunk Represents a text chunk used to build context."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.AgentGatekeeperOverrideOption.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.AgentGatekeeperOverrideOption.html",
    "title": "Enum AgentGatekeeperOverrideOption | FoundationaLLM",
    "summary": "Enum AgentGatekeeperOverrideOption Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll Gatekeeper override options expressed by an agent. public enum AgentGatekeeperOverrideOption Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields MustBypass = 1 The agent requires an explicit bypass of the Gatekeeper, regardless of the system option. MustCall = 2 The agent requires an explicit call to the Gatekeeper, regardless of the system option. UseSystemOption = 0 The agent deferrs to the system option."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.AttachmentDetail.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.AttachmentDetail.html",
    "title": "Class AttachmentDetail | FoundationaLLM",
    "summary": "Class AttachmentDetail Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll Represents an attachment in a chat message or session. public class AttachmentDetail Inheritance object AttachmentDetail Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The mime content type of the attachment. [JsonPropertyName(\"contentType\")] public string? ContentType { get; set; } Property Value string DisplayName The attachment file name. [JsonPropertyName(\"displayName\")] public string? DisplayName { get; set; } Property Value string ObjectId The unique identifier of the attachment resource. [JsonPropertyName(\"objectId\")] public string? ObjectId { get; set; } Property Value string Methods FromAttachmentFile(AttachmentFile) Creates an AttachmentDetail instance from an AttachmentFile instance. public static AttachmentDetail FromAttachmentFile(AttachmentFile attachmentFile) Parameters attachmentFile AttachmentFile The AttachmentFile used to initialize the instance. Returns AttachmentDetail The newly created AttachmentDetail instance. FromContextFileRecord(ContextFileRecord) Creates an AttachmentDetail instance from a ContextFileRecord instance. public static AttachmentDetail FromContextFileRecord(ContextFileRecord contextFileRecord) Parameters contextFileRecord ContextFileRecord The ContextFileRecord used to initialize the instance. Returns AttachmentDetail The newly created AttachmentDetail instance."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.ChatSessionProperties.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.ChatSessionProperties.html",
    "title": "Class ChatSessionProperties | FoundationaLLM",
    "summary": "Class ChatSessionProperties Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll The session properties object. public class ChatSessionProperties Inheritance object ChatSessionProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The session name. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.CompletionPrompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.CompletionPrompt.html",
    "title": "Class CompletionPrompt | FoundationaLLM",
    "summary": "Class CompletionPrompt Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll The completion prompt object. public class CompletionPrompt Inheritance object CompletionPrompt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentArtifacts The sources used in the creation of the completion response. public ContentArtifact[]? ContentArtifacts { get; set; } Property Value ContentArtifact[] Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string MessageId The messageId of the completion. public string MessageId { get; set; } Property Value string Prompt The completion prompt. public string Prompt { get; set; } Property Value string SessionId The sessionId associated with the completion. public string SessionId { get; set; } Property Value string Type The type of the completion. public string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.Conversation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.Conversation.html",
    "title": "Class Conversation | FoundationaLLM",
    "summary": "Class Conversation Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll The session object. public class Conversation : ResourceBase Inheritance object ResourceName ResourceBase Conversation Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deleted Deleted flag used for soft delete. public override bool Deleted { get; set; } Property Value bool Id The unique identifier. public string Id { get; set; } Property Value string Messages The list of messages associated with the session. [JsonIgnore] public List<Message> Messages { get; set; } Property Value List<Message> SessionId The Partition key. public required string SessionId { get; set; } Property Value string TokensUsed The number of tokens used in the session. public int TokensUsed { get; set; } Property Value int UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Methods AddMessage(Message) Adds a message to the list of messages associated with the session. public void AddMessage(Message message) Parameters message Message The message to be added. UpdateMessage(Message) Updates an existing message in the list of messages associated with the session. public void UpdateMessage(Message message) Parameters message Message The updated message."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.Message.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.Message.html",
    "title": "Class Message | FoundationaLLM",
    "summary": "Class Message Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll The message object. public record Message : IEquatable<Message> Inheritance object Message Implements IEquatable<Message> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AnalysisResults A list of results from the analysis. public List<AnalysisResult>? AnalysisResults { get; set; } Property Value List<AnalysisResult> AttachmentDetails Contains the details of the attachments. This is not stored in the database. [JsonIgnore] public List<AttachmentDetail>? AttachmentDetails { get; set; } Property Value List<AttachmentDetail> Attachments One or more attachments included with the orchestration request. The values should be the Object ID of the attachment(s). [JsonPropertyName(\"attachments\")] public List<string>? Attachments { get; init; } Property Value List<string> CompletionPromptId The identifier for the completion prompt associated with the message. public string? CompletionPromptId { get; set; } Property Value string Content The content of the message. [JsonPropertyName(\"content\")] public List<MessageContent>? Content { get; set; } Property Value List<MessageContent> ContentArtifacts The sources associated with the completion prompt. public ContentArtifact[]? ContentArtifacts { get; set; } Property Value ContentArtifact[] Deleted Deleted flag used for soft delete. public bool Deleted { get; set; } Property Value bool ExpectedCompletion Stores the expected completion for the message and used for evaluating the actual vs. expected agent completion. This should be stored in the agent response. public string? ExpectedCompletion { get; set; } Property Value string Id The unique identifier. public string Id { get; set; } Property Value string OperationId The optional identifier of the long-running operation. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string Remarks The operation id will be set only for messages that are part of a long-running operation. Rating The rating associated with the message, if any. public bool? Rating { get; set; } Property Value bool? RatingComments The comments associated with the rating. public string? RatingComments { get; set; } Property Value string Sender The sender of the message. public string Sender { get; set; } Property Value string SenderDisplayName The display name of the message sender. This could be the name of the signed in user or the name of the agent. public string? SenderDisplayName { get; set; } Property Value string SessionId The Partition key. public string SessionId { get; set; } Property Value string Status The status of the long-running operation. [JsonPropertyName(\"status\")] [JsonConverter(typeof(JsonStringEnumConverter))] public OperationStatus Status { get; set; } Property Value OperationStatus Text The text content of the message. public string Text { get; set; } Property Value string TextRewrite The optional rewrite of the text content of the message. public string? TextRewrite { get; set; } Property Value string TimeStamp The timestamp when the message was created. public DateTime TimeStamp { get; set; } Property Value DateTime Tokens The number of tokens associated with the message, if any. public int Tokens { get; set; } Property Value int Type The type of the message. public string Type { get; set; } Property Value string UPN The UPN of the user who created the chat session. public string UPN { get; set; } Property Value string Vector The vector associated with the message. public float[]? Vector { get; set; } Property Value float[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.MessageContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.MessageContent.html",
    "title": "Class MessageContent | FoundationaLLM",
    "summary": "Class MessageContent Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll Contains parts that compose the message content. public class MessageContent Inheritance object MessageContent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileName The file name related to the Value, if applicable. [JsonPropertyName(\"fileName\")] public string? FileName { get; set; } Property Value string Type The type of the message content. Could be text, image, etc. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string Value The value of the message content. [JsonPropertyName(\"value\")] public string? Value { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.MessageHistoryItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.MessageHistoryItem.html",
    "title": "Class MessageHistoryItem | FoundationaLLM",
    "summary": "Class MessageHistoryItem Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll Represents an item in the message history. public class MessageHistoryItem Inheritance object MessageHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MessageHistoryItem(string, string, string?) Represents an item in the message history. public MessageHistoryItem(string sender, string text, string? textRewrite) Parameters sender string The sender of the message (e.g., \"Agent\", \"User\") text string The message text. textRewrite string The rewritten message text. Properties Attachments Gets or sets the list of attachments for the message. [JsonPropertyName(\"attachments\")] public List<AttachmentDetail> Attachments { get; set; } Property Value List<AttachmentDetail> ContentArtifacts Gets or sets the list ContentArtifact objects. [JsonPropertyName(\"content_artifacts\")] public List<ContentArtifact>? ContentArtifacts { get; set; } Property Value List<ContentArtifact> Remarks Not all content artifacts are loaded. The content of the list depends on the content artifact types configured in the message history settings of the agent. Sender The sender of the message (e.g. \"Agent\", \"User\"). [JsonPropertyName(\"sender\")] public string Sender { get; set; } Property Value string Text The message text. [JsonPropertyName(\"text\")] public string Text { get; set; } Property Value string TextRewrite Gets or sets the rewritten text. [JsonPropertyName(\"text_rewrite\")] public string? TextRewrite { get; set; } Property Value string Remarks The rewritten text is filled in if the agent's text rewriting feature is enabled. If set, it contains an unambiguous version of the original text."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.MessageRatingRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.MessageRatingRequest.html",
    "title": "Class MessageRatingRequest | FoundationaLLM",
    "summary": "Class MessageRatingRequest Namespace FoundationaLLM.Common.Models.Conversation Assembly FoundationaLLM.Common.dll Contains the request for rating a message. public class MessageRatingRequest Inheritance object MessageRatingRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Comments Optional comments associated with the rating. [JsonPropertyName(\"comments\")] public string? Comments { get; set; } Property Value string Rating The rating to assign to the message. [JsonPropertyName(\"rating\")] public bool? Rating { get; set; } Property Value bool?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Conversation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Conversation.html",
    "title": "Namespace FoundationaLLM.Common.Models.Conversation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Conversation Classes AttachmentDetail Represents an attachment in a chat message or session. ChatSessionProperties The session properties object. CompletionPrompt The completion prompt object. Conversation The session object. Message The message object. MessageContent Contains parts that compose the message content. MessageHistoryItem Represents an item in the message history. MessageRatingRequest Contains the request for rating a message. Enums AgentGatekeeperOverrideOption Gatekeeper override options expressed by an agent."
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.ContentIdentifier.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.ContentIdentifier.html",
    "title": "Class ContentIdentifier | FoundationaLLM",
    "summary": "Class ContentIdentifier Namespace FoundationaLLM.Common.Models.DataPipelines Assembly FoundationaLLM.Common.dll Represents the identifier of a content item processed by data pipelines. public class ContentIdentifier Inheritance object ContentIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the content item. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public required string CanonicalId { get; set; } Property Value string Remarks Data pipeline state services use it to derive the location of the state in the underlying storage. FileName The file name part of the content identifier. [JsonIgnore] public string FileName { get; } Property Value string this[int] The indexer allowing to access the components of the multipart identifier using [] notation. [JsonIgnore] public string this[int i] { get; } Parameters i int The index of component being retrieved. Property Value string MultipartId The multipart unique identifier of the the content item (i.e. document). [JsonInclude] [JsonPropertyOrder(1)] [JsonPropertyName(\"multipart_id\")] public required List<string> MultipartId { get; set; } Property Value List<string> UniqueId The unique identifier of the content (i.e., document) being vectorized. The identifier is determined by concatenating the parts from MultipartId. [JsonIgnore] public string UniqueId { get; } Property Value string Methods ValidateMultipartId(int) Validates a multipart unique content identifier. public void ValidateMultipartId(int expectedPartsCount) Parameters expectedPartsCount int The expected number of parts in the multipart identifier. Exceptions ContentIdentifierException"
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItem.html",
    "title": "Class DataPipelineContentItem | FoundationaLLM",
    "summary": "Class DataPipelineContentItem Namespace FoundationaLLM.Common.Models.DataPipelines Assembly FoundationaLLM.Common.dll Represents a content item in a data pipeline. public class DataPipelineContentItem Inheritance object DataPipelineContentItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineContentItem() Initializes a new instance of the DataPipelineContentItem class. public DataPipelineContentItem() Properties ContentIdentifier Gets or sets the identifier of the content item. [JsonPropertyName(\"content_identifier\")] [JsonPropertyOrder(5)] public required ContentIdentifier ContentIdentifier { get; set; } Property Value ContentIdentifier DataSourceObjectId Gets or sets the FoundationaLLM object identifier of the data source that provides the content item. [JsonPropertyName(\"data_source_object_id\")] [JsonPropertyOrder(4)] public required string DataSourceObjectId { get; set; } Property Value string Id Gets or sets the unique identifier of the content item. [JsonPropertyName(\"id\")] [JsonPropertyOrder(1)] public required string Id { get; set; } Property Value string Metadata Gets or sets the additional metadata associated with the content item. [JsonPropertyName(\"metadata\")] [JsonPropertyOrder(6)] public Dictionary<string, object>? Metadata { get; set; } Property Value Dictionary<string, object> RunId Gets or sets the identifier of the data pipeline run that is processing the content item. [JsonPropertyName(\"run_id\")] [JsonPropertyOrder(3)] public string? RunId { get; set; } Property Value string Type Gets or sets the Cosmos DB item type. [JsonPropertyName(\"type\")] [JsonPropertyOrder(2)] public string Type { get; set; } Property Value string Remarks Must always be set to DataPipelineContentItem."
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItemContentPart.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItemContentPart.html",
    "title": "Class DataPipelineContentItemContentPart | FoundationaLLM",
    "summary": "Class DataPipelineContentItemContentPart Namespace FoundationaLLM.Common.Models.DataPipelines Assembly FoundationaLLM.Common.dll Represents a content part of a content item. public class DataPipelineContentItemContentPart : DataPipelineContentItemPartBase Inheritance object DataPipelineContentItemPartBase DataPipelineContentItemContentPart Inherited Members DataPipelineContentItemPartBase.ContentItemCanonicalId DataPipelineContentItemPartBase.Position DataPipelineContentItemPartBase.IndexEntryId DataPipelineContentItemPartBase.Metadata object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content Gets or sets the text content of the content item part. [JsonPropertyName(\"content\")] public string? Content { get; set; } Property Value string ContentSizeTokens Gets or sets the size of the content item part in tokens. [JsonPropertyName(\"content_size_tokens\")] public int ContentSizeTokens { get; set; } Property Value int Embedding Gets or sets the embedding of the content item part. [JsonPropertyName(\"embedding\")] public float[]? Embedding { get; set; } Property Value float[] Methods Create(string, int, string, int) Creates a new instance of DataPipelineContentItemContentPart with the specified parameters. public static DataPipelineContentItemContentPart Create(string contentItemCanonicalId, int position, string content, int contentSizeTokens) Parameters contentItemCanonicalId string The canonical identifier of the content item. position int The position of the part within the content item. content string The content of the content item part. contentSizeTokens int The size of the content item part in tokens. Returns DataPipelineContentItemContentPart"
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItemKnowledgePart.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItemKnowledgePart.html",
    "title": "Class DataPipelineContentItemKnowledgePart | FoundationaLLM",
    "summary": "Class DataPipelineContentItemKnowledgePart Namespace FoundationaLLM.Common.Models.DataPipelines Assembly FoundationaLLM.Common.dll Represents a knowledge part of a data pipeline content item. public class DataPipelineContentItemKnowledgePart : DataPipelineContentItemPartBase Inheritance object DataPipelineContentItemPartBase DataPipelineContentItemKnowledgePart Inherited Members DataPipelineContentItemPartBase.ContentItemCanonicalId DataPipelineContentItemPartBase.Position DataPipelineContentItemPartBase.IndexEntryId DataPipelineContentItemPartBase.Metadata object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EntitiesAndRelationships Gets or sets the entities and relationships extracted from the content item part. [JsonPropertyName(\"entities\")] public KnowledgeEntityRelationshipCollection<ExtractedKnowledgeEntity, ExtractedKnowledgeRelationship>? EntitiesAndRelationships { get; set; } Property Value KnowledgeEntityRelationshipCollection<ExtractedKnowledgeEntity, ExtractedKnowledgeRelationship> Methods FromContentItemPart(DataPipelineContentItemPartBase) Converts a content item part to a knowledge part. public static DataPipelineContentItemKnowledgePart FromContentItemPart(DataPipelineContentItemPartBase contentItemPart) Parameters contentItemPart DataPipelineContentItemPartBase The content item part to be converted. Returns DataPipelineContentItemKnowledgePart A new content item knowledge part."
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItemPartBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineContentItemPartBase.html",
    "title": "Class DataPipelineContentItemPartBase | FoundationaLLM",
    "summary": "Class DataPipelineContentItemPartBase Namespace FoundationaLLM.Common.Models.DataPipelines Assembly FoundationaLLM.Common.dll Represents the common properties of a content item part. public class DataPipelineContentItemPartBase Inheritance object DataPipelineContentItemPartBase Derived DataPipelineContentItemContentPart DataPipelineContentItemKnowledgePart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentItemCanonicalId Gets or sets the canonical identifier of the content item. [JsonPropertyName(\"content_item_canonical_id\")] public string? ContentItemCanonicalId { get; set; } Property Value string IndexEntryId Gets or sets the identifier of the index entry associated with this content item part. [JsonPropertyName(\"index_entry_id\")] public string? IndexEntryId { get; set; } Property Value string Metadata Gets or sets the metadata associated with the content item part. [JsonPropertyName(\"metadata\")] public string? Metadata { get; set; } Property Value string Position Gets or sets the position of the part within the content item. [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineRunWorkItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineRunWorkItem.html",
    "title": "Class DataPipelineRunWorkItem | FoundationaLLM",
    "summary": "Class DataPipelineRunWorkItem Namespace FoundationaLLM.Common.Models.DataPipelines Assembly FoundationaLLM.Common.dll Represents a work item in a data pipeline run. public class DataPipelineRunWorkItem Inheritance object DataPipelineRunWorkItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineRunWorkItem() Initializes a new instance of the DataPipelineRunWorkItem class. public DataPipelineRunWorkItem() Properties Completed Gets or sets the completion status of the work item. [JsonPropertyName(\"completed\")] [JsonPropertyOrder(7)] public bool Completed { get; set; } Property Value bool ContentItemCanonicalId Gets or sets the identifier of the data pipeline run input artifact that is referenced by the work item. [JsonPropertyName(\"content_item_canonical_id\")] [JsonPropertyOrder(6)] public required string ContentItemCanonicalId { get; set; } Property Value string Errors Gets or sets the error message if the work item failed. [JsonPropertyName(\"errors\")] [JsonPropertyOrder(9)] public List<string> Errors { get; set; } Property Value List<string> FailedProcessingAttempts Gets or sets the number of failed processing attempts for the work item. [JsonPropertyName(\"failed_processing_attempts\")] [JsonPropertyOrder(12)] public int FailedProcessingAttempts { get; set; } Property Value int Id Gets or sets the unique identifier of the work item. [JsonPropertyName(\"id\")] [JsonPropertyOrder(1)] public required string Id { get; set; } Property Value string PreviousStage Gets or sets the name of the data pipeline stage that preceeded the stage provided in the Stage property. [JsonPropertyName(\"previous_stage\")] [JsonPropertyOrder(4)] public string? PreviousStage { get; set; } Property Value string ProcessingAttempts Gets or sets the number of processing attempts for the work item. [JsonPropertyName(\"processing_attempts\")] [JsonPropertyOrder(11)] public int ProcessingAttempts { get; set; } Property Value int RunId Gets or sets the identifier of the data pipeline run that is processing the content item. [JsonPropertyName(\"run_id\")] [JsonPropertyOrder(3)] public required string RunId { get; set; } Property Value string Stage Gets or sets the name of the stage in the data pipeline run that is processing the work item. [JsonPropertyName(\"stage\")] [JsonPropertyOrder(5)] public required string Stage { get; set; } Property Value string Successful Gets or sets the success status of the work item. [JsonPropertyName(\"successful\")] [JsonPropertyOrder(8)] public bool Successful { get; set; } Property Value bool Type Gets or sets the Cosmos DB item type. [JsonPropertyName(\"type\")] [JsonPropertyOrder(2)] public string Type { get; set; } Property Value string Remarks Must always be set to DataPipelineRunWorkItem. Warnings Gets or sets the error message if the work item failed. [JsonPropertyName(\"warnings\")] [JsonPropertyOrder(10)] public List<string> Warnings { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineStateArtifact.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.DataPipelineStateArtifact.html",
    "title": "Class DataPipelineStateArtifact | FoundationaLLM",
    "summary": "Class DataPipelineStateArtifact Namespace FoundationaLLM.Common.Models.DataPipelines Assembly FoundationaLLM.Common.dll Represents the state of a data pipeline artifact. public class DataPipelineStateArtifact Inheritance object DataPipelineStateArtifact Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content Gets or sets the binary content of the artifact. public required BinaryData Content { get; set; } Property Value BinaryData ContentType Gets or sets the content type of the artifact. public string? ContentType { get; set; } Property Value string FileName Gets or sets the file name of the artifact. public required string FileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.DataPipelines.html",
    "title": "Namespace FoundationaLLM.Common.Models.DataPipelines | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.DataPipelines Classes ContentIdentifier Represents the identifier of a content item processed by data pipelines. DataPipelineContentItem Represents a content item in a data pipeline. DataPipelineContentItemContentPart Represents a content part of a content item. DataPipelineContentItemKnowledgePart Represents a knowledge part of a data pipeline content item. DataPipelineContentItemPartBase Represents the common properties of a content item part. DataPipelineRunWorkItem Represents a work item in a data pipeline run. DataPipelineStateArtifact Represents the state of a data pipeline artifact."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventTypeEventArgs.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventTypeEventArgs.html",
    "title": "Class EventTypeEventArgs | FoundationaLLM",
    "summary": "Class EventTypeEventArgs Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll Event arguments required for event type event delegates. public class EventTypeEventArgs : EventArgs Inheritance object EventArgs EventTypeEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventType The event type. public required string EventType { get; set; } Property Value string Events The list of subjects associated with the event. public required IList<CloudEvent> Events { get; set; } Property Value IList<CloudEvent>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.EventTypeEventDelegate.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.EventTypeEventDelegate.html",
    "title": "Delegate EventTypeEventDelegate | FoundationaLLM",
    "summary": "Delegate EventTypeEventDelegate Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll Multicast delegate used by the Azure Event Grid event service to provide support for subscribing to event types. public delegate void EventTypeEventDelegate(object sender, EventTypeEventArgs e) Parameters sender object The object raising the event. e EventTypeEventArgs The EventTypeEventArgs that contains the details about the events being raised. Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.ResourceProviderEventData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.ResourceProviderEventData.html",
    "title": "Class ResourceProviderEventData | FoundationaLLM",
    "summary": "Class ResourceProviderEventData Namespace FoundationaLLM.Common.Models.Events Assembly FoundationaLLM.Common.dll Represents the data for a resource provider event. public class ResourceProviderEventData Inheritance object ResourceProviderEventData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Data Gets or sets the data associated with the event. public object? Data { get; set; } Property Value object TargetServiceName Gets or sets the name of the service that is targeted by the event. public string? TargetServiceName { get; set; } Property Value string Timestamp Gets or sets the UTC timestamp of the event. public DateTimeOffset Timestamp { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Events.html",
    "title": "Namespace FoundationaLLM.Common.Models.Events | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Events Classes EventTypeEventArgs Event arguments required for event type event delegates. ResourceProviderEventData Represents the data for a resource provider event. Delegates EventTypeEventDelegate Multicast delegate used by the Azure Event Grid event service to provide support for subscribing to event types."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Gateway.AgentCapabilityRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Gateway.AgentCapabilityRequest.html",
    "title": "Class AgentCapabilityRequest | FoundationaLLM",
    "summary": "Class AgentCapabilityRequest Namespace FoundationaLLM.Common.Models.Gateway Assembly FoundationaLLM.Common.dll Provides the details required to create an agent capability. public class AgentCapabilityRequest Inheritance object AgentCapabilityRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CapabilityCategory The category of the capability. public required string CapabilityCategory { get; set; } Property Value string CapabilityName The name of the capability to be created. public required string CapabilityName { get; set; } Property Value string Parameters The dictionary of parameter values used to create the capability. public required Dictionary<string, object> Parameters { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Gateway.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Gateway.html",
    "title": "Namespace FoundationaLLM.Common.Models.Gateway | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Gateway Classes AgentCapabilityRequest Provides the details required to create an agent capability."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.ServiceStatusInfo.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.ServiceStatusInfo.html",
    "title": "Class ServiceStatusInfo | FoundationaLLM",
    "summary": "Class ServiceStatusInfo Namespace FoundationaLLM.Common.Models.Infrastructure Assembly FoundationaLLM.Common.dll Represents the status of a service. public class ServiceStatusInfo Inheritance object ServiceStatusInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InstanceId The instance ID of the service. [JsonPropertyName(\"instance_id\")] public string? InstanceId { get; set; } Property Value string InstanceName The instance of the service. [JsonPropertyName(\"instance_name\")] public string? InstanceName { get; set; } Property Value string Message The message associated with the status. [JsonPropertyName(\"message\")] public string? Message { get; set; } Property Value string Name The name of the service. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string Status The status of the service. [JsonPropertyName(\"status\")] public string? Status { get; set; } Property Value string SubordinateServices The status of all the subordinate services. [JsonPropertyName(\"subordinate_services\")] public List<ServiceStatusInfo>? SubordinateServices { get; set; } Property Value List<ServiceStatusInfo> Version The deployed FoundationaLLM version of the service. [JsonPropertyName(\"version\")] public string? Version { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Infrastructure.html",
    "title": "Namespace FoundationaLLM.Common.Models.Infrastructure | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Infrastructure Classes ServiceStatusInfo Represents the status of a service."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Knowledge.ExtractedKnowledgeEntity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Knowledge.ExtractedKnowledgeEntity.html",
    "title": "Class ExtractedKnowledgeEntity | FoundationaLLM",
    "summary": "Class ExtractedKnowledgeEntity Namespace FoundationaLLM.Common.Models.Knowledge Assembly FoundationaLLM.Common.dll Represents an extracted entity from a knowledge extraction process. public class ExtractedKnowledgeEntity Inheritance object ExtractedKnowledgeEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ExtractedKnowledgeEntity() Initializes a new instance of the ExtractedKnowledgeEntity class. public ExtractedKnowledgeEntity() Properties ChunkIds Gets or sets the list of chunk ids associated with the entity. [JsonPropertyName(\"chunk_ids\")] public List<string>? ChunkIds { get; set; } Property Value List<string> Description Gets or sets the description of the entity. [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value string Name Gets or sets the name of the entity. [JsonPropertyName(\"name\")] public string Name { get; set; } Property Value string Type Gets or sets the type of the entity. [JsonPropertyName(\"type\")] public string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Knowledge.ExtractedKnowledgeRelationship.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Knowledge.ExtractedKnowledgeRelationship.html",
    "title": "Class ExtractedKnowledgeRelationship | FoundationaLLM",
    "summary": "Class ExtractedKnowledgeRelationship Namespace FoundationaLLM.Common.Models.Knowledge Assembly FoundationaLLM.Common.dll Represents an extracted relationship from a knowledge extraction process. public class ExtractedKnowledgeRelationship Inheritance object ExtractedKnowledgeRelationship Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ExtractedKnowledgeRelationship() Initializes a new instance of the ExtractedKnowledgeRelationship class. public ExtractedKnowledgeRelationship() Properties Description Gets or sets the detailed description of the relationship. [JsonPropertyName(\"description\")] public string Description { get; set; } Property Value string ShortDescription Gets or sets the short description of the relationship. [JsonPropertyName(\"short_description\")] public string ShortDescription { get; set; } Property Value string Source Gets or sets the source entity of the relationship. [JsonPropertyName(\"source\")] public string Source { get; set; } Property Value string Strength Gets or sets the strength of the relationship. [JsonPropertyName(\"strength\")] public int Strength { get; set; } Property Value int Target Gets or sets the target entity of the relationship. [JsonPropertyName(\"target\")] public string Target { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Knowledge.KnowledgeEntity.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Knowledge.KnowledgeEntity.html",
    "title": "Class KnowledgeEntity | FoundationaLLM",
    "summary": "Class KnowledgeEntity Namespace FoundationaLLM.Common.Models.Knowledge Assembly FoundationaLLM.Common.dll Represents a knowledge entity used in a knowledge graph. public class KnowledgeEntity Inheritance object KnowledgeEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeEntity() Initializes a new instance of the KnowledgeEntity class. public KnowledgeEntity() Properties ChunkIds Gets or sets the list of text chunk identifiers associated with the entity. [JsonPropertyName(\"chunk_ids\")] [JsonPropertyOrder(4)] public List<string> ChunkIds { get; set; } Property Value List<string> Descriptions Gets or sets the list of descriptions associated with the entity. [JsonPropertyName(\"descriptions\")] [JsonPropertyOrder(3)] public List<string> Descriptions { get; set; } Property Value List<string> Name Gets or sets the name of the entity. [JsonPropertyName(\"name\")] [JsonPropertyOrder(2)] public string Name { get; set; } Property Value string Position Gets or sets the position of the entity in the list of entities. [JsonPropertyName(\"position\")] [JsonPropertyOrder(0)] public int Position { get; set; } Property Value int SummaryDescription Gets or sets the summary description of the entity, which provides a concise overview. [JsonPropertyName(\"summary_description\")] [JsonPropertyOrder(5)] public string? SummaryDescription { get; set; } Property Value string SummaryDescriptionEmbedding Gets or sets the embedding of the summary description. [JsonPropertyName(\"summary_description_embedding\")] [JsonPropertyOrder(6)] public float[]? SummaryDescriptionEmbedding { get; set; } Property Value float[] Type Gets or sets the type of the entity. [JsonPropertyName(\"type\")] [JsonPropertyOrder(1)] public string Type { get; set; } Property Value string UniqueId Gets the unique identifier for the object, composed of its type and name. [JsonIgnore] public string UniqueId { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Knowledge.KnowledgeEntityRelationshipCollection-2.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Knowledge.KnowledgeEntityRelationshipCollection-2.html",
    "title": "Class KnowledgeEntityRelationshipCollection<TEntity, TRelationship> | FoundationaLLM",
    "summary": "Class KnowledgeEntityRelationshipCollection<TEntity, TRelationship> Namespace FoundationaLLM.Common.Models.Knowledge Assembly FoundationaLLM.Common.dll Represents a subset of entities and relationship in a knowledge graph. public class KnowledgeEntityRelationshipCollection<TEntity, TRelationship> where TEntity : class, new() where TRelationship : class, new() Type Parameters TEntity TRelationship Inheritance object KnowledgeEntityRelationshipCollection<TEntity, TRelationship> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeEntityRelationshipCollection() Initializes a new instance of the KnowledgeEntityRelationshipCollection<TEntity, TRelationship> class. public KnowledgeEntityRelationshipCollection() Properties Entities Gets or sets the list of entities. [JsonPropertyName(\"entities\")] public List<TEntity> Entities { get; set; } Property Value List<TEntity> Relationships Gets or sets the list of relationships. [JsonPropertyName(\"relationships\")] public List<TRelationship> Relationships { get; set; } Property Value List<TRelationship>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Knowledge.KnowledgeRelationship.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Knowledge.KnowledgeRelationship.html",
    "title": "Class KnowledgeRelationship | FoundationaLLM",
    "summary": "Class KnowledgeRelationship Namespace FoundationaLLM.Common.Models.Knowledge Assembly FoundationaLLM.Common.dll Represents a relationship between two knowledge entities in a knowledge graph. public class KnowledgeRelationship Inheritance object KnowledgeRelationship Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeRelationship() Initializes a new instance of the KnowledgeRelationship class. public KnowledgeRelationship() Properties ChunkIds Gets or sets the list of chunk identifiers associated with the relationship. [JsonPropertyName(\"chunk_ids\")] [JsonPropertyOrder(7)] public List<string> ChunkIds { get; set; } Property Value List<string> Descriptions Gets or sets the list of detailed descriptions associated with the relationship. [JsonPropertyName(\"descriptions\")] [JsonPropertyOrder(6)] public List<string> Descriptions { get; set; } Property Value List<string> Position Gets or sets the position of the relationship in the list of relationships. [JsonPropertyName(\"position\")] [JsonPropertyOrder(0)] public int Position { get; set; } Property Value int ShortDescriptions Gets or sets the list of short descriptions associated with the relationship. [JsonPropertyName(\"short_descriptions\")] [JsonPropertyOrder(5)] public List<string> ShortDescriptions { get; set; } Property Value List<string> Source Gets or sets the source entity of the relationship. [JsonPropertyName(\"source\")] [JsonPropertyOrder(1)] public string Source { get; set; } Property Value string SourceType Gets or sets the type of the source entity. [JsonPropertyName(\"source_type\")] [JsonPropertyOrder(2)] public string SourceType { get; set; } Property Value string SourceUniqueId Gets the unique identifier for the source, combining the source type and source value. [JsonIgnore] public string SourceUniqueId { get; } Property Value string Strengths Gets or sets the list of strengths associated with the relationship. [JsonPropertyName(\"strengths\")] [JsonPropertyOrder(7)] public List<int> Strengths { get; set; } Property Value List<int> SummaryDescription Gets or sets the summary description of the relationship, which provides a concise overview. [JsonPropertyName(\"summary_description\")] [JsonPropertyOrder(8)] public string? SummaryDescription { get; set; } Property Value string SummaryDescriptionEmbedding Gets or sets the embedding of the summary description. [JsonPropertyName(\"summary_description_embedding\")] [JsonPropertyOrder(9)] public float[]? SummaryDescriptionEmbedding { get; set; } Property Value float[] Target Gets or sets the target entity of the relationship. [JsonPropertyName(\"target\")] [JsonPropertyOrder(3)] public string Target { get; set; } Property Value string TargetType Gets or sets the type of the target entity. [JsonPropertyName(\"target_type\")] [JsonPropertyOrder(4)] public string TargetType { get; set; } Property Value string TargetUniqueId Gets the unique identifier for the target, combining the target type and target value. [JsonIgnore] public string TargetUniqueId { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Knowledge.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Knowledge.html",
    "title": "Namespace FoundationaLLM.Common.Models.Knowledge | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Knowledge Classes ExtractedKnowledgeEntity Represents an extracted entity from a knowledge extraction process. ExtractedKnowledgeRelationship Represents an extracted relationship from a knowledge extraction process. KnowledgeEntity Represents a knowledge entity used in a knowledge graph. KnowledgeEntityRelationshipCollection<TEntity, TRelationship> Represents a subset of entities and relationship in a knowledge graph. KnowledgeRelationship Represents a relationship between two knowledge entities in a knowledge graph."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.EmbeddingModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.EmbeddingModel.html",
    "title": "Class EmbeddingModel | FoundationaLLM",
    "summary": "Class EmbeddingModel Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll public class EmbeddingModel Inheritance object EmbeddingModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ApiEndpoint The endpoint to use to access the language model. [JsonPropertyName(\"api_endpoint\")] public string? ApiEndpoint { get; set; } Property Value string ApiKey The API key of the language model endpoint to use to access the language model. [JsonPropertyName(\"api_key\")] public string? ApiKey { get; set; } Property Value string ApiVersion API version of the language model endpoint. [JsonPropertyName(\"api_version\")] public string? ApiVersion { get; set; } Property Value string ChunkSize The chunk size to use when creating vectors from the embedding model. [JsonPropertyName(\"chunk_size\")] public int ChunkSize { get; set; } Property Value int Deployment Name of the embedding model deployment. [JsonPropertyName(\"deployment\")] public string? Deployment { get; set; } Property Value string Model Name of the embedding model. [JsonPropertyName(\"model\")] public string? Model { get; set; } Property Value string Provider The provider of the emberdding model. [JsonPropertyName(\"provider\")] public string? Provider { get; set; } Property Value string Type The type of the embedding model. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.MetadataBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.MetadataBase.html",
    "title": "Class MetadataBase | FoundationaLLM",
    "summary": "Class MetadataBase Namespace FoundationaLLM.Common.Models.Metadata Assembly FoundationaLLM.Common.dll Metadata model base class. public class MetadataBase Inheritance object MetadataBase Derived DataSourceBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Description property. [JsonPropertyName(\"description\")] public string? Description { get; set; } Property Value string Name Name property. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string Type Type property. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Metadata.html",
    "title": "Namespace FoundationaLLM.Common.Models.Metadata | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Metadata Classes EmbeddingModel MetadataBase Metadata model base class."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.BlobStorageConfiguration.html",
    "title": "Class BlobStorageConfiguration | FoundationaLLM",
    "summary": "Class BlobStorageConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Blob storage configuration settings. public class BlobStorageConfiguration Inheritance object BlobStorageConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string ConnectionStringSecretName The connection string key vault secret name that is retrieved from key vault. [JsonPropertyName(\"connection_string_secret\")] public string? ConnectionStringSecretName { get; set; } Property Value string ContainerName The name of the container [JsonPropertyName(\"container\")] public string? ContainerName { get; set; } Property Value string Files The list of files to get [JsonPropertyName(\"files\")] public List<string>? Files { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.CXOConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.CXOConfiguration.html",
    "title": "Class CXOConfiguration | FoundationaLLM",
    "summary": "Class CXOConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Configuration for the CXO agent. public class CXOConfiguration : SearchServiceConfiguration Inheritance object SearchServiceConfiguration CXOConfiguration Inherited Members SearchServiceConfiguration.Endpoint SearchServiceConfiguration.KeySecret SearchServiceConfiguration.IndexName SearchServiceConfiguration.TopN SearchServiceConfiguration.EmbeddingFieldName SearchServiceConfiguration.TextFieldName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Company The name of the CXO's company. [JsonPropertyName(\"company\")] public required string Company { get; set; } Property Value string ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string RetrieverMode The vector database. [JsonPropertyName(\"retriever_mode\")] public required string RetrieverMode { get; set; } Property Value string Sources Search filter elements. [JsonPropertyName(\"sources\")] public string[]? Sources { get; set; } Property Value string[]"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SQLDatabaseConfiguration.html",
    "title": "Class SQLDatabaseConfiguration | FoundationaLLM",
    "summary": "Class SQLDatabaseConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll SQL Database configuration settings. public class SQLDatabaseConfiguration Inheritance object SQLDatabaseConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string DatabaseName The name of the database on the server. [JsonPropertyName(\"database_name\")] public string? DatabaseName { get; set; } Property Value string Dialect The SQL dialect [JsonPropertyName(\"dialect\")] public string? Dialect { get; set; } Property Value string ExcludeTables List of tables to allow access to in the database. [JsonPropertyName(\"exclude_tables\")] public List<string> ExcludeTables { get; set; } Property Value List<string> FewShotExampleCount The number of rows from each table to provide as examples to the language model. [JsonPropertyName(\"few_shot_example_count\")] public int FewShotExampleCount { get; set; } Property Value int Host The database server host name. [JsonPropertyName(\"host\")] public string? Host { get; set; } Property Value string IncludeTables List of tables to allow access to in the database. [JsonPropertyName(\"include_tables\")] public List<string> IncludeTables { get; set; } Property Value List<string> PasswordSecretSettingKeyName The name of the secret in Key Vault from where the password can be retrieved. [JsonPropertyName(\"password_secret_setting_key_name\")] public string? PasswordSecretSettingKeyName { get; set; } Property Value string Port The port number of the database on the host. [JsonPropertyName(\"port\")] public int Port { get; set; } Property Value int RowLevelSecurityEnabled Flag indicating whether row level security is enabled. [JsonPropertyName(\"row_level_security_enabled\")] public bool RowLevelSecurityEnabled { get; set; } Property Value bool Username The username for connecting to the database. [JsonPropertyName(\"username\")] public string? Username { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.SearchServiceConfiguration.html",
    "title": "Class SearchServiceConfiguration | FoundationaLLM",
    "summary": "Class SearchServiceConfiguration Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Assembly FoundationaLLM.Common.dll Search Service configuration settings. public class SearchServiceConfiguration Inheritance object SearchServiceConfiguration Derived CXOConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationType The type of configuration. This value should not be changed. [JsonPropertyName(\"configuration_type\")] public string ConfigurationType { get; } Property Value string EmbeddingFieldName (Optional) The name of the field to use for embedding in the Search Service. [JsonPropertyName(\"embedding_field_name\")] public string? EmbeddingFieldName { get; set; } Property Value string Endpoint The endpoint of the Search Service [JsonPropertyName(\"endpoint\")] public string? Endpoint { get; set; } Property Value string IndexName The name of the index in Azure AI Search [JsonPropertyName(\"index_name\")] public string? IndexName { get; set; } Property Value string KeySecret The name of key vault secret containing the access key [JsonPropertyName(\"key_secret\")] public string? KeySecret { get; set; } Property Value string TextFieldName (Optional) The name of the field to use for raw text in the Search Service. [JsonPropertyName(\"text_field_name\")] public string? TextFieldName { get; set; } Property Value string TopN (Optional) The number of rows to return from the index search [JsonPropertyName(\"top_n\")] public int? TopN { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations Classes BlobStorageConfiguration Blob storage configuration settings. CXOConfiguration Configuration for the CXO agent. SQLDatabaseConfiguration SQL Database configuration settings. SearchServiceConfiguration Search Service configuration settings."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.BlobStorageDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.BlobStorageDataSource.html",
    "title": "Class BlobStorageDataSource | FoundationaLLM",
    "summary": "Class BlobStorageDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Blob storage data source metadata model. public class BlobStorageDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase BlobStorageDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Blob storage configuration settings. [JsonPropertyName(\"configuration\")] public BlobStorageConfiguration? Configuration { get; set; } Property Value BlobStorageConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.CXODataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.CXODataSource.html",
    "title": "Class CXODataSource | FoundationaLLM",
    "summary": "Class CXODataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll CXO data source metadata model. public class CXODataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase CXODataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Search Service configuration settings. [JsonPropertyName(\"configuration\")] public CXOConfiguration? Configuration { get; set; } Property Value CXOConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.DataSourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.DataSourceBase.html",
    "title": "Class DataSourceBase | FoundationaLLM",
    "summary": "Class DataSourceBase Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Data Source base class. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"underlying_implementation\")] [JsonDerivedType(typeof(BlobStorageDataSource), \"blob-storage\")] [JsonDerivedType(typeof(CXODataSource), \"cxo\")] [JsonDerivedType(typeof(SearchServiceDataSource), \"search-service\")] [JsonDerivedType(typeof(SQLDatabaseDataSource), \"sql\")] public class DataSourceBase : MetadataBase Inheritance object MetadataBase DataSourceBase Derived BlobStorageDataSource CXODataSource SQLDatabaseDataSource SearchServiceDataSource Inherited Members MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataDescription Descriptor for the type of data in the data source. [JsonPropertyName(\"data_description\")] public string? DataDescription { get; set; } Property Value string Examples Survey data for a CSV file that contains survey results."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SQLDatabaseDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SQLDatabaseDataSource.html",
    "title": "Class SQLDatabaseDataSource | FoundationaLLM",
    "summary": "Class SQLDatabaseDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll SQL Database data source metadata model. public class SQLDatabaseDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SQLDatabaseDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration SQL Database configuration settings. [JsonPropertyName(\"configuration\")] public SQLDatabaseConfiguration? Configuration { get; set; } Property Value SQLDatabaseConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SearchServiceDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.SearchServiceDataSource.html",
    "title": "Class SearchServiceDataSource | FoundationaLLM",
    "summary": "Class SearchServiceDataSource Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Assembly FoundationaLLM.Common.dll Search service data source metadata model. public class SearchServiceDataSource : DataSourceBase Inheritance object MetadataBase DataSourceBase SearchServiceDataSource Inherited Members DataSourceBase.DataDescription MetadataBase.Name MetadataBase.Type MetadataBase.Description object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Configuration Search Service configuration settings. [JsonPropertyName(\"configuration\")] public SearchServiceConfiguration? Configuration { get; set; } Property Value SearchServiceConfiguration"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.DataSources.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSources | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Orchestration.DataSources Classes BlobStorageDataSource Blob storage data source metadata model. CXODataSource CXO data source metadata model. DataSourceBase Data Source base class. SQLDatabaseDataSource SQL Database data source metadata model. SearchServiceDataSource Search service data source metadata model."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AssistantCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AssistantCompletionMessage.html",
    "title": "Class AssistantCompletionMessage | FoundationaLLM",
    "summary": "Class AssistantCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Assistant input message for a direct orchestration request. public class AssistantCompletionMessage : CompletionMessage Inheritance object CompletionMessage AssistantCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AssistantCompletionMessage() Initializes a new instance of the AssistantCompletionMessage class. public AssistantCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionInputData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionInputData.html",
    "title": "Class AzureAICompletionInputData | FoundationaLLM",
    "summary": "Class AzureAICompletionInputData Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input data for a direct request to an Azure AI model. public class AzureAICompletionInputData Inheritance object AzureAICompletionInputData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InputString Object defining the required input role and content key value pairs. [JsonPropertyName(\"input_string\")] public CompletionMessage[]? InputString { get; set; } Property Value CompletionMessage[] Parameters Model configuration parameters. [JsonPropertyName(\"parameters\")] public AzureAICompletionParameters? Parameters { get; set; } Property Value AzureAICompletionParameters"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionParameters.html",
    "title": "Class AzureAICompletionParameters | FoundationaLLM",
    "summary": "Class AzureAICompletionParameters Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Supported model configuration parameters. public class AzureAICompletionParameters Inheritance object AzureAICompletionParameters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DoSample Whether or not to use sampling; use greedy decoding otherwise. [JsonPropertyName(\"do_sample\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? DoSample { get; set; } Property Value bool? IgnoreEOS Whether to ignore the EOS token and continue generating tokens after the EOS token is generated. Defaults to False. [JsonPropertyName(\"ignore_eos\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? IgnoreEOS { get; set; } Property Value bool? MaxNewTokens The maximum number of tokens to generate. [JsonPropertyName(\"max_new_tokens\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? MaxNewTokens { get; set; } Property Value int? ReturnFullText Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. [JsonPropertyName(\"return_full_text\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? ReturnFullText { get; set; } Property Value bool? Temperature Controls randomness in the model. Lower values will make the model more deterministic and higher values will make the model more random. [JsonPropertyName(\"temperature\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? Temperature { get; set; } Property Value float? TopK The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. [JsonPropertyName(\"top_k\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopK { get; set; } Property Value float? TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling, defaults to null. [JsonPropertyName(\"top_p\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopP { get; set; } Property Value float?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionRequest.html",
    "title": "Class AzureAICompletionRequest | FoundationaLLM",
    "summary": "Class AzureAICompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input for a direct Azure AI request. public class AzureAICompletionRequest Inheritance object AzureAICompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InputData Input data for a direct request to an Azure AI model. [JsonPropertyName(\"input_data\")] public AzureAICompletionInputData? InputData { get; set; } Property Value AzureAICompletionInputData"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureAICompletionResponse.html",
    "title": "Class AzureAICompletionResponse | FoundationaLLM",
    "summary": "Class AzureAICompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The response from the Azure AI orchestration service. public class AzureAICompletionResponse Inheritance object AzureAICompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Output The completion output from an Azure AI model. [JsonPropertyName(\"output\")] public string? Output { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionParameters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionParameters.html",
    "title": "Class AzureOpenAICompletionParameters | FoundationaLLM",
    "summary": "Class AzureOpenAICompletionParameters Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Supported model configuration parameters. public class AzureOpenAICompletionParameters Inheritance object AzureOpenAICompletionParameters Derived AzureOpenAICompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BestOf Generates best_of completions server-side and returns the \"best\" (the one with the lowest log probability per token). [JsonPropertyName(\"best_of\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? BestOf { get; set; } Property Value int? Echo Echo back the prompt in addition to the completion. This parameter cannot be used with gpt-35-turbo. [JsonPropertyName(\"echo\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? Echo { get; set; } Property Value bool? FrequencyPenalty Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. [JsonPropertyName(\"frequency_penalty\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? FrequencyPenalty { get; set; } Property Value float? LogProbs Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens. [JsonPropertyName(\"logprobs\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? LogProbs { get; set; } Property Value int? LogitBias Modify the likelihood of specified tokens appearing in the completion. [JsonPropertyName(\"logit_bias\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public LogitBias? LogitBias { get; set; } Property Value LogitBias MaxTokens The maximum number of tokens to generate. [JsonPropertyName(\"max_tokens\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? MaxTokens { get; set; } Property Value int? N How many completions to generate for each prompt. [JsonPropertyName(\"n\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? N { get; set; } Property Value int? PresencePenalty Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. [JsonPropertyName(\"presence_penalty\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? PresencePenalty { get; set; } Property Value float? Stop Up to four sequences where the API will stop generating further tokens. The returned text won't contain the stop sequence. For GPT-4 Turbo with Vision, up to two sequences are supported. [JsonPropertyName(\"stop\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string[]? Stop { get; set; } Property Value string[] Stream Whether to stream back partial progress. [JsonPropertyName(\"stream\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public bool? Stream { get; set; } Property Value bool? Suffix The suffix that comes after a completion of inserted text. [JsonPropertyName(\"suffix\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Suffix { get; set; } Property Value string Temperature Controls randomness in the model. Lower values will make the model more deterministic and higher values will make the model more random. [JsonPropertyName(\"temperature\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? Temperature { get; set; } Property Value float? TopP The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling, defaults to null. [JsonPropertyName(\"top_p\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public float? TopP { get; set; } Property Value float? User A unique identifier representing your end-user, which can help monitoring and detecting abuse. [JsonPropertyName(\"user\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? User { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionRequest.html",
    "title": "Class AzureOpenAICompletionRequest | FoundationaLLM",
    "summary": "Class AzureOpenAICompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Input for a direct Azure OpenAI request. public class AzureOpenAICompletionRequest : AzureOpenAICompletionParameters Inheritance object AzureOpenAICompletionParameters AzureOpenAICompletionRequest Inherited Members AzureOpenAICompletionParameters.MaxTokens AzureOpenAICompletionParameters.Temperature AzureOpenAICompletionParameters.TopP AzureOpenAICompletionParameters.LogitBias AzureOpenAICompletionParameters.User AzureOpenAICompletionParameters.N AzureOpenAICompletionParameters.Stream AzureOpenAICompletionParameters.LogProbs AzureOpenAICompletionParameters.Suffix AzureOpenAICompletionParameters.Echo AzureOpenAICompletionParameters.Stop AzureOpenAICompletionParameters.PresencePenalty AzureOpenAICompletionParameters.FrequencyPenalty AzureOpenAICompletionParameters.BestOf object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Messages Object defining the required input role and content key value pairs. [JsonPropertyName(\"messages\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionMessage[]? Messages { get; set; } Property Value CompletionMessage[] Prompt The prompt for which to generate completions. [JsonPropertyName(\"prompt\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Prompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponse.html",
    "title": "Class AzureOpenAICompletionResponse | FoundationaLLM",
    "summary": "Class AzureOpenAICompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The response from the Azure OpenAI orchestration service. public class AzureOpenAICompletionResponse Inheritance object AzureOpenAICompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Choices The completion response choices. [JsonPropertyName(\"choices\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public AzureOpenAICompletionResponseChoice[]? Choices { get; set; } Property Value AzureOpenAICompletionResponseChoice[] Created The completion response created timestamp. [JsonPropertyName(\"created\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? Created { get; set; } Property Value int? Id The completion response ID. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string Model The completion model used for the response. [JsonPropertyName(\"model\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Model { get; set; } Property Value string Object The completion response object. [JsonPropertyName(\"object\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Object { get; set; } Property Value string Usage Completion usage statistics. [JsonPropertyName(\"usage\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionUsage? Usage { get; set; } Property Value CompletionUsage"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponseChoice.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.AzureOpenAICompletionResponseChoice.html",
    "title": "Class AzureOpenAICompletionResponseChoice | FoundationaLLM",
    "summary": "Class AzureOpenAICompletionResponseChoice Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll The completion response choice. public class AzureOpenAICompletionResponseChoice Inheritance object AzureOpenAICompletionResponseChoice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FinishReason The finish reason for the completion response. [JsonPropertyName(\"finish_reason\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? FinishReason { get; set; } Property Value string Index The completion response index. [JsonPropertyName(\"index\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? Index { get; set; } Property Value int? LogProbs The log probabilities on the logprobs most likely tokens, as well the chosen tokens. [JsonPropertyName(\"logprobs\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public int? LogProbs { get; set; } Property Value int? Message Contains the completion response message if any. [JsonPropertyName(\"message\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public CompletionMessage? Message { get; set; } Property Value CompletionMessage Text The completion response text. [JsonPropertyName(\"text\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Text { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionMessage.html",
    "title": "Class CompletionMessage | FoundationaLLM",
    "summary": "Class CompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Object defining the completion role and content key value pairs. public class CompletionMessage Inheritance object CompletionMessage Derived AssistantCompletionMessage SystemCompletionMessage ToolCompletionMessage UserCompletionMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text either input into or output by the model. [JsonPropertyName(\"content\")] public string? Content { get; set; } Property Value string Role The role of the chat persona creating content. Value will be one of: \"user\", \"assistant\", \"tool\", or \"system\". [JsonPropertyName(\"role\")] public string? Role { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionUsage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.CompletionUsage.html",
    "title": "Class CompletionUsage | FoundationaLLM",
    "summary": "Class CompletionUsage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Contains the usage statistics for a completion. public class CompletionUsage Inheritance object CompletionUsage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletionTokens The number of tokens used for the completion. [JsonPropertyName(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int PromptTokens The number of tokens used for the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalTokens The total number of tokens used for the completion. [JsonPropertyName(\"total_tokens\")] public int TotalTokens { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.LogitBias.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.LogitBias.html",
    "title": "Class LogitBias | FoundationaLLM",
    "summary": "Class LogitBias Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect varies per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\": -100} to prevent the endoftext token from being generated. public class LogitBias Inheritance object LogitBias Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Bias The bias value to apply to the token. public float? Bias { get; set; } Property Value float? TokenId The token ID of which to modify the likelihood. public string? TokenId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.SystemCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.SystemCompletionMessage.html",
    "title": "Class SystemCompletionMessage | FoundationaLLM",
    "summary": "Class SystemCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll System input message for a direct orchestration request. public class SystemCompletionMessage : CompletionMessage Inheritance object CompletionMessage SystemCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SystemCompletionMessage() Initializes a new instance of the SystemCompletionMessage class. public SystemCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.ToolCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.ToolCompletionMessage.html",
    "title": "Class ToolCompletionMessage | FoundationaLLM",
    "summary": "Class ToolCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll Tool input message for a direct orchestration request. public class ToolCompletionMessage : CompletionMessage Inheritance object CompletionMessage ToolCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ToolCompletionMessage() Initializes a new instance of the ToolCompletionMessage class. public ToolCompletionMessage() Properties ToolCallId Tool call to which this message is responding. [JsonPropertyName(\"tool_call_id\")] public required string ToolCallId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.UserCompletionMessage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.UserCompletionMessage.html",
    "title": "Class UserCompletionMessage | FoundationaLLM",
    "summary": "Class UserCompletionMessage Namespace FoundationaLLM.Common.Models.Orchestration.Direct Assembly FoundationaLLM.Common.dll User input message for a direct orchestration request. public class UserCompletionMessage : CompletionMessage Inheritance object CompletionMessage UserCompletionMessage Inherited Members CompletionMessage.Role CompletionMessage.Content object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserCompletionMessage() Initializes a new instance of the UserCompletionMessage class. public UserCompletionMessage() Properties Name An optional name for the participant. Provides the model information to differentiate between participants of the same role. [JsonPropertyName(\"name\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Direct.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Direct | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Orchestration.Direct Classes AssistantCompletionMessage Assistant input message for a direct orchestration request. AzureAICompletionInputData Input data for a direct request to an Azure AI model. AzureAICompletionParameters Supported model configuration parameters. AzureAICompletionRequest Input for a direct Azure AI request. AzureAICompletionResponse The response from the Azure AI orchestration service. AzureOpenAICompletionParameters Supported model configuration parameters. AzureOpenAICompletionRequest Input for a direct Azure OpenAI request. AzureOpenAICompletionResponse The response from the Azure OpenAI orchestration service. AzureOpenAICompletionResponseChoice The completion response choice. CompletionMessage Object defining the completion role and content key value pairs. CompletionUsage Contains the usage statistics for a completion. LogitBias Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect varies per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\": -100} to prevent the endoftext token from being generated. SystemCompletionMessage System input message for a direct orchestration request. ToolCompletionMessage Tool input message for a direct orchestration request. UserCompletionMessage User input message for a direct orchestration request."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperation.html",
    "title": "Class LongRunningOperation | FoundationaLLM",
    "summary": "Class LongRunningOperation Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Represents the current state of a long-running operation. public class LongRunningOperation Inheritance object LongRunningOperation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The identifier of the long-running operation. [JsonPropertyName(\"id\")] public string? Id { get; } Property Value string LastUpdated The time stamp of the last update to the operation. [JsonPropertyName(\"last_updated\")] public DateTime? LastUpdated { get; set; } Property Value DateTime? OperationId The identifier of the long-running operation. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string PromptTokens The number of tokens in the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int Result The result of the operation. [JsonIgnore] [JsonPropertyName(\"result\")] public object? Result { get; set; } Property Value object Status The status of the long-running operation. [JsonPropertyName(\"status\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required OperationStatus Status { get; set; } Property Value OperationStatus StatusMessage The message describing the current state of the operation. [JsonPropertyName(\"status_message\")] public string? StatusMessage { get; set; } Property Value string TTL The time-to-live (TTL) for the log entry. [JsonPropertyName(\"ttl\")] public int TTL { get; set; } Property Value int Type The document type. [JsonPropertyName(\"type\")] public string Type { get; } Property Value string UPN Gets or sets the User Principal Name (UPN) of the user who triggered the long-running operation. [JsonPropertyName(\"upn\")] public string? UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperationContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperationContext.html",
    "title": "Class LongRunningOperationContext | FoundationaLLM",
    "summary": "Class LongRunningOperationContext Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Provides a context for long-running operations. public class LongRunningOperationContext Inheritance object LongRunningOperationContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentMessageId Gets or sets the identifier of the agent response message sent to the user during the long-running operation. [JsonProperty(\"agentMessageId\")] public required string AgentMessageId { get; set; } Property Value string AgentName Gets or sets the name of the agent that runs the long-running operation. [JsonProperty(\"agentName\")] public required string AgentName { get; set; } Property Value string AgentWorkflowMainAIModelAPIEndpoint The API endpoint URL of the main AI model used by the agent workflow. [JsonProperty(\"agentWorkflowMainAIModelAPIEndpoint\")] public string? AgentWorkflowMainAIModelAPIEndpoint { get; set; } Property Value string CompletionPromptId Gets or sets the identifier of the completion prompt used in the long-running operation. [JsonProperty(\"completionPromptId\")] public required string CompletionPromptId { get; set; } Property Value string GatekeeperOptions Gets or sets a list of Gatekeeper feature names used by the orchestration request. [JsonProperty(\"gatekeeperOptions\")] public string[] GatekeeperOptions { get; set; } Property Value string[] GatekeeperOverride Gets or sets the Gatekeeper override option. [JsonProperty(\"gatekeeperOverride\")] [JsonConverter(typeof(StringEnumConverter))] public AgentGatekeeperOverrideOption GatekeeperOverride { get; set; } Property Value AgentGatekeeperOverrideOption InstanceId Gets or sets the FoundationaLLM instance identifier. [JsonProperty(\"instanceId\")] public required string InstanceId { get; set; } Property Value string OperationId Gets or sets the identifier of the long-running operation. [JsonProperty(\"id\")] public required string OperationId { get; set; } Property Value string Orchestrator Gets or sets the name of the orchestrator used in the long-running operation. [JsonProperty(\"orchestrator\")] public string? Orchestrator { get; set; } Property Value string SemanticCacheSettings Gets or sets the settings for the semantic cache. [JsonProperty(\"semanticCacheSettings\")] public AgentSemanticCacheSettings? SemanticCacheSettings { get; set; } Property Value AgentSemanticCacheSettings SessionId Gets or sets the identifier of the session in which the long-running operation runs. [JsonProperty(\"sessionId\")] public required string SessionId { get; set; } Property Value string StartTime Gets or sets the start time of the long-running operation. [JsonProperty(\"startTime\")] public DateTime StartTime { get; set; } Property Value DateTime StatusUpdateIteration Gets or sets the iteration number of the long-running operation. [JsonProperty(\"statusUpdateIteration\")] public int StatusUpdateIteration { get; set; } Property Value int TTL Gets or sets the Time to Live (TTL) of the long-running operation. [JsonProperty(\"ttl\")] public int TTL { get; set; } Property Value int UPN Gets or sets the User Principal Name (UPN) of the user who triggered the long-running operation. [JsonProperty(\"upn\")] public required string UPN { get; set; } Property Value string UserMessageId Gets or sets the identifier of the user message that triggered the long-running operation. [JsonProperty(\"userMessageId\")] public required string UserMessageId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperationLogEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.LongRunningOperationLogEntry.html",
    "title": "Class LongRunningOperationLogEntry | FoundationaLLM",
    "summary": "Class LongRunningOperationLogEntry Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The point-in-time state of a long-running operation. public class LongRunningOperationLogEntry Inheritance object LongRunningOperationLogEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LongRunningOperationLogEntry() Initializes a new instance of the LongRunningOperationLogEntry class. public LongRunningOperationLogEntry() LongRunningOperationLogEntry(string, OperationStatus, string?, string?) Initializes a new instance of the LongRunningOperationLogEntry class with the specified values. public LongRunningOperationLogEntry(string operationId, OperationStatus status, string? statusMessage, string? upn) Parameters operationId string The identifier of the long-running operation. status OperationStatus The status of the long-running operation. statusMessage string The message describing the current state of the operation. upn string The user principal name (UPN) of the user who initiated the operation. Properties Id The identifier of the long-running operation log entry. [JsonPropertyName(\"id\")] public string Id { get; set; } Property Value string OperationId The identifier of the long-running operation. [JsonPropertyName(\"operation_id\")] public string OperationId { get; set; } Property Value string Status The status of the long-running operation. [JsonPropertyName(\"status\")] [JsonConverter(typeof(JsonStringEnumConverter))] public OperationStatus Status { get; set; } Property Value OperationStatus StatusMessage The message describing the current state of the operation. [JsonPropertyName(\"status_message\")] public string? StatusMessage { get; set; } Property Value string TTL The time-to-live (TTL) for the log entry. [JsonPropertyName(\"ttl\")] public int TTL { get; set; } Property Value int TimeStamp The time stamp of the log entry. [JsonPropertyName(\"time_stamp\")] public DateTime TimeStamp { get; set; } Property Value DateTime Type The document type. [JsonPropertyName(\"type\")] public string Type { get; } Property Value string UPN Gets or sets the User Principal Name (UPN) of the user who triggered the long-running operation. [JsonPropertyName(\"upn\")] public string? UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OperationStatus.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OperationStatus.html",
    "title": "Enum OperationStatus | FoundationaLLM",
    "summary": "Enum OperationStatus Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Represents the status of a long-running operation. public enum OperationStatus Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Completed = 2 Operation has been completed. Failed = 3 Operation has completed in a failed state InProgress = 1 Operation is in progress. Pending = 0 Operation is new and Pending processing."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.OrchestrationContext.html",
    "title": "Class OrchestrationContext | FoundationaLLM",
    "summary": "Class OrchestrationContext Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class OrchestrationContext : IOrchestrationContext Inheritance object OrchestrationContext Implements IOrchestrationContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CurrentUserIdentity The current UnifiedUserIdentity object resolved from one or more services. public UnifiedUserIdentity? CurrentUserIdentity { get; set; } Property Value UnifiedUserIdentity InstanceId The unique identifier of the current FoundationaLLM deployment instance. public string? InstanceId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.AttachmentProperties.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.AttachmentProperties.html",
    "title": "Class AttachmentProperties | FoundationaLLM",
    "summary": "Class AttachmentProperties Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll Provides a set of properties that are used to define an attachment. public class AttachmentProperties Inheritance object AttachmentProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The content type of the attachment. [JsonPropertyName(\"content_type\")] public required string ContentType { get; set; } Property Value string EmbedContentInRequest Gets or sets a value indicating whether the content of the attachment should be embedded in the request. [JsonPropertyName(\"embed_content_in_request\")] public required bool EmbedContentInRequest { get; set; } Property Value bool OriginalFileName The original file name of the attachment. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string Provider The name of the provider that is used to manage the attachment. [JsonPropertyName(\"provider\")] public required string Provider { get; set; } Property Value string Remarks The following file providers are supported: FoundationaLLM.Attachment FoundationaLLM.AzureOpenAI ProviderFileName The file name of the attachment that is stored by the provider. [JsonPropertyName(\"provider_file_name\")] public required string ProviderFileName { get; set; } Property Value string Remarks In the case of the FoundationaLLM.Attachment provider, this is the full path of the file in the storage account. In the case of the FoundationaLLM.AzureOpenAI provider, this is the OpenAI file ID. ProviderStorageAccountName The name of the storage account that is used by the provider. [JsonPropertyName(\"provider_storage_account_name\")] public string? ProviderStorageAccountName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequest.html",
    "title": "Class CompletionRequest | FoundationaLLM",
    "summary": "Class CompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll The completion request object. public class CompletionRequest : CompletionRequestBase Inheritance object CompletionRequestBase CompletionRequest Inherited Members CompletionRequestBase.OperationId CompletionRequestBase.LongRunningOperation CompletionRequestBase.SessionId CompletionRequestBase.UserPrompt CompletionRequestBase.UserPromptRewrite CompletionRequestBase.MessageHistory CompletionRequestBase.FileHistory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the selected agent. [JsonPropertyName(\"agent_name\")] public string? AgentName { get; set; } Property Value string Attachments One or more attachments to include with the orchestration request. The values should be the ObjectID of the attachment(s). [JsonPropertyName(\"attachments\")] public List<string> Attachments { get; init; } Property Value List<string> GatekeeperOptions A list of Gatekeeper feature names used by the orchestration request. [JsonPropertyName(\"gatekeeper_options\")] public string[]? GatekeeperOptions { get; set; } Property Value string[] Settings Settings that override some aspects of behaviour of the orchestration. [JsonPropertyName(\"settings\")] public OrchestrationSettings? Settings { get; set; } Property Value OrchestrationSettings"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequestBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.CompletionRequestBase.html",
    "title": "Class CompletionRequestBase | FoundationaLLM",
    "summary": "Class CompletionRequestBase Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll Base for completion requests public class CompletionRequestBase Inheritance object CompletionRequestBase Derived CompletionRequest LLMCompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileHistory Gets or sets the file history associated with the completion request. [JsonPropertyName(\"file_history\")] public List<FileHistoryItem> FileHistory { get; set; } Property Value List<FileHistoryItem> LongRunningOperation Gets or sets a flag that indicates whether this is a long-running operation. [JsonPropertyName(\"long_running_operation\")] public bool LongRunningOperation { get; set; } Property Value bool MessageHistory Gets or sets the message history associated with the completion request. [JsonPropertyName(\"message_history\")] public List<MessageHistoryItem>? MessageHistory { get; set; } Property Value List<MessageHistoryItem> OperationId Gets or sets the operation identifier of the completion request. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string SessionId Gets or sets the conversation identifier. [JsonPropertyName(\"session_id\")] public string? SessionId { get; set; } Property Value string UserPrompt Gets or sets the user prompt. [JsonPropertyName(\"user_prompt\")] public required string UserPrompt { get; set; } Property Value string UserPromptRewrite Gets or sets the rewrite of the user prompt. [JsonPropertyName(\"user_prompt_rewrite\")] public string? UserPromptRewrite { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.FileHistoryItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.FileHistoryItem.html",
    "title": "Class FileHistoryItem | FoundationaLLM",
    "summary": "Class FileHistoryItem Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll Represents a file history item in a conversation. public class FileHistoryItem Inheritance object FileHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The content type of the attachment. [JsonPropertyName(\"content_type\")] public string? ContentType { get; set; } Property Value string CurrentMessageAttachment Indicates if the file is an attachment to the current message. [JsonPropertyName(\"current_message_attachment\")] public required bool CurrentMessageAttachment { get; set; } Property Value bool EmbedContentInRequest Gets or sets a value indicating whether the content of the file should be embedded in the request. [JsonPropertyName(\"embed_content_in_request\")] public required bool EmbedContentInRequest { get; set; } Property Value bool FilePath The file path of the attachment in storage. [JsonPropertyName(\"file_path\")] public required string FilePath { get; set; } Property Value string ObjectId The ObjectID of the file attachment resource. [JsonPropertyName(\"object_id\")] public required string ObjectId { get; set; } Property Value string Order The order the file was uploaded in the current conversation. [JsonPropertyName(\"order\")] public required int Order { get; set; } Property Value int OriginalFileName The original file name of the attachment. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string SecondaryProvider The provider that manages the file. [JsonPropertyName(\"secondary_provider\")] public string? SecondaryProvider { get; set; } Property Value string SecondaryProviderObjectId The identifier of the file attachment resource in the secondary provider. [JsonPropertyName(\"secondary_provider_object_id\")] public string? SecondaryProviderObjectId { get; set; } Property Value string Methods FromAttachmentFile(AttachmentFile, int, bool) Creates an instance of FileHistoryItem based on an AttachmentFile. public static FileHistoryItem FromAttachmentFile(AttachmentFile attachmentFile, int Order, bool currentMessageAttachment) Parameters attachmentFile AttachmentFile The AttachmentFile resource. Order int The order in which the file has appeared in the conversation. currentMessageAttachment bool Indicates if the file is an attachment to the current message. Returns FileHistoryItem The FileHistoryItem object based on the AttachmentFile. FromContextFileRecord(ContextFileRecord, int, bool, bool) Creates an instance of FileHistoryItem based on a ContextFileRecord. Context files are managed entirely by FoundationaLLM. public static FileHistoryItem FromContextFileRecord(ContextFileRecord fileRecord, int order, bool currentMessageAttachment, bool embedContentInRequest) Parameters fileRecord ContextFileRecord The ContextFileRecord to convert to FileHistoryItem. order int The order in which the file appeared in the conversation. currentMessageAttachment bool Indicates if the file is an attachment to the current message. embedContentInRequest bool Indicates if the content of the file should be embedded in the request. Returns FileHistoryItem The FileHistoryItem object based on the ContextFileRecord."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.LLMCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.LLMCompletionRequest.html",
    "title": "Class LLMCompletionRequest | FoundationaLLM",
    "summary": "Class LLMCompletionRequest Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll The completion request sent by the Orchestration API to any of the downstream orchestrator APIs. public class LLMCompletionRequest : CompletionRequestBase Inheritance object CompletionRequestBase LLMCompletionRequest Inherited Members CompletionRequestBase.OperationId CompletionRequestBase.LongRunningOperation CompletionRequestBase.SessionId CompletionRequestBase.UserPrompt CompletionRequestBase.UserPromptRewrite CompletionRequestBase.MessageHistory CompletionRequestBase.FileHistory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIModel The AIModelBase object from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the agent. [JsonIgnore] public AIModelBase AIModel { get; } Property Value AIModelBase AIModelEndpointConfiguration The APIEndpointConfiguration object from the Objects dictionary corresponding to the AIModelBase object from the same dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the AIModel object associated with the agent. [JsonIgnore] public APIEndpointConfiguration AIModelEndpointConfiguration { get; } Property Value APIEndpointConfiguration Agent The agent that will process the completion request. [JsonPropertyName(\"agent\")] public required AgentBase Agent { get; set; } Property Value AgentBase Attachments A list of AttachmentProperties objects with the properties of the attachments to include with the orchestration request. [JsonPropertyName(\"attachments\")] public List<AttachmentProperties> Attachments { get; init; } Property Value List<AttachmentProperties> IndexingProfiles The list of IndexingProfile objects from the Objects dictionary. Ensure the Validate method is called before accessing this property. These objects are supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifiers set on the agent's vectorization settings. [JsonIgnore] public List<IndexingProfile>? IndexingProfiles { get; } Property Value List<IndexingProfile> Objects Dictionary of objects (indexed by names) resulting from exploding object identifiers in the Orchestration API. Can also contain objects that are not the direct result of exploding an object identifier. The dictionary supports the following keys: /instances/{instanceId}/providers/FoundationaLLM.Prompt/prompts/{name} /instances/{instanceId}/providers/FoundationaLLM.AIModel/aiModels/{name} /instances/{instanceId}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/{name} /instances/{instanceId}/providers/FoundationaLLM.Vectorization/indexingProfiles/{name} /instances/{instanceId}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/{name} AllAgents [JsonPropertyName(\"objects\")] public Dictionary<string, object> Objects { get; set; } Property Value Dictionary<string, object> OtherAgentsDescriptions The dictionary of other agent descriptions from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the descriptions of all agents the calling identity has access to, except for the agent associated with the request. [JsonIgnore] public Dictionary<string, string> OtherAgentsDescriptions { get; } Property Value Dictionary<string, string> Prompt The MultipartPrompt object from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the agent. [JsonIgnore] public MultipartPrompt Prompt { get; } Property Value MultipartPrompt TextEmbeddingProfile The TextEmbeddingProfile object from the Objects dictionary. Ensure the Validate method is called before accessing this property. This object is supposed to be added to the Objects dictionary by the instantiator of this request based on the object identifier set on the agent's vectorization settings. [JsonIgnore] public TextEmbeddingProfile? TextEmbeddingProfile { get; } Property Value TextEmbeddingProfile Methods Validate() Validates the content of this LLMCompletionRequest. public void Validate() Exceptions OrchestrationException"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.OrchestrationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.OrchestrationSettings.html",
    "title": "Class OrchestrationSettings | FoundationaLLM",
    "summary": "Class OrchestrationSettings Namespace FoundationaLLM.Common.Models.Orchestration.Request Assembly FoundationaLLM.Common.dll Provides settings for a completion request of type CompletionRequest. public class OrchestrationSettings Inheritance object OrchestrationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ModelParameters Dictionary with override values for the model parameters. For the list of supported keys, see ModelParametersKeys. [JsonPropertyName(\"model_parameters\")] public Dictionary<string, object>? ModelParameters { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Request.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Request | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Orchestration.Request Classes AttachmentProperties Provides a set of properties that are used to define an attachment. CompletionRequest The completion request object. CompletionRequestBase Base for completion requests FileHistoryItem Represents a file history item in a conversation. LLMCompletionRequest The completion request sent by the Orchestration API to any of the downstream orchestrator APIs. OrchestrationSettings Provides settings for a completion request of type CompletionRequest."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.AnalysisResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.AnalysisResult.html",
    "title": "Class AnalysisResult | FoundationaLLM",
    "summary": "Class AnalysisResult Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Represents the result of an analysis. public class AnalysisResult Inheritance object AnalysisResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentCapabilityCategory The category of the agent's capability that was used in the analysis. [JsonPropertyName(\"agent_capability_category\")] public string? AgentCapabilityCategory { get; set; } Property Value string ToolInput The input provided to the tool for analysis. [JsonPropertyName(\"tool_input\")] public string? ToolInput { get; set; } Property Value string ToolName The name of the tool that performed the analysis. [JsonPropertyName(\"tool_name\")] public string? ToolName { get; set; } Property Value string ToolOutput The output generated by the tool after analysis. [JsonPropertyName(\"tool_output\")] public string? ToolOutput { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponse.html",
    "title": "Class CompletionResponse | FoundationaLLM",
    "summary": "Class CompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Response from a language model. public class CompletionResponse : CompletionResponseBase Inheritance object CompletionResponseBase CompletionResponse Inherited Members CompletionResponseBase.OperationId CompletionResponseBase.Completion CompletionResponseBase.Content CompletionResponseBase.AnalysisResults CompletionResponseBase.ContentArtifacts CompletionResponseBase.UserPrompt CompletionResponseBase.UserPromptRewrite CompletionResponseBase.FullPrompt CompletionResponseBase.PromptTemplate CompletionResponseBase.AgentName CompletionResponseBase.PromptTokens CompletionResponseBase.CompletionTokens CompletionResponseBase.TotalTokens CompletionResponseBase.TotalCost CompletionResponseBase.Deleted CompletionResponseBase.Errors CompletionResponseBase.IsError object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionResponse() Initialize a completion response. public CompletionResponse() CompletionResponse(string, string, string, int, int, float[]?) Initialize a completion response public CompletionResponse(string operationId, string completion, string userPrompt, int userPromptTokens, int responseTokens, float[]? userPromptEmbedding) Parameters operationId string The operation id of the completion request. completion string The completion response from the language model. userPrompt string The user prompt the language model responded to. userPromptTokens int The number of tokens in the prompt. responseTokens int The number of tokens in the completion. userPromptEmbedding float[] User prompt embedding. Properties UserPromptEmbedding User prompt embedding. [JsonPropertyName(\"user_prompt_embedding\")] public float[]? UserPromptEmbedding { get; set; } Property Value float[] Methods FromJSONDocument(JsonDocument) Returns a CompletionResponse object from a JSON document. public static CompletionResponse? FromJSONDocument(JsonDocument json) Parameters json JsonDocument The JSON document to deserialize. Returns CompletionResponse"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponseBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.CompletionResponseBase.html",
    "title": "Class CompletionResponseBase | FoundationaLLM",
    "summary": "Class CompletionResponseBase Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Base model for a response from a language model. public class CompletionResponseBase Inheritance object CompletionResponseBase Derived CompletionResponse LLMCompletionResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the FoundationaLLM agent. [JsonPropertyName(\"agent_name\")] public string? AgentName { get; set; } Property Value string AnalysisResults A list of results from the analysis. [JsonPropertyName(\"analysis_results\")] public List<AnalysisResult>? AnalysisResults { get; set; } Property Value List<AnalysisResult> Completion The completion response from the language model. [JsonPropertyName(\"completion\")] public string? Completion { get; set; } Property Value string CompletionTokens The number of tokens in the completion. [JsonPropertyName(\"completion_tokens\")] public int CompletionTokens { get; set; } Property Value int Content Content returned from the Assistants API. [JsonPropertyName(\"content\")] public List<MessageContentItemBase>? Content { get; set; } Property Value List<MessageContentItemBase> ContentArtifacts The sources used in building the completion response. [JsonPropertyName(\"content_artifacts\")] public ContentArtifact[]? ContentArtifacts { get; set; } Property Value ContentArtifact[] Deleted Deleted flag used for soft delete. [JsonPropertyName(\"deleted\")] public bool Deleted { get; set; } Property Value bool Errors An array of error messages that occurred during the completion operation. [JsonPropertyName(\"errors\")] public string[]? Errors { get; set; } Property Value string[] FullPrompt The full prompt composed by the LLM. [JsonPropertyName(\"full_prompt\")] public string? FullPrompt { get; set; } Property Value string IsError Whether the errors collection actually represent a full error condition or not. [JsonPropertyName(\"is_error\")] public bool? IsError { get; set; } Property Value bool? OperationId The Operation ID identifying the completion request. [JsonPropertyName(\"operation_id\")] public string OperationId { get; set; } Property Value string PromptTemplate The prompt template used by the LLM. [JsonPropertyName(\"prompt_template\")] public string? PromptTemplate { get; set; } Property Value string PromptTokens The number of tokens in the prompt. [JsonPropertyName(\"prompt_tokens\")] public int PromptTokens { get; set; } Property Value int TotalCost The total cost of executing the completion operation. [JsonPropertyName(\"total_cost\")] public float TotalCost { get; set; } Property Value float TotalTokens The total number of tokens. [JsonPropertyName(\"total_tokens\")] public int TotalTokens { get; } Property Value int UserPrompt The user prompt the language model responded to. [JsonPropertyName(\"user_prompt\")] public string UserPrompt { get; set; } Property Value string UserPromptRewrite The user prompt rewrite. [JsonPropertyName(\"user_prompt_rewrite\")] public string? UserPromptRewrite { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.ContentArtifact.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.ContentArtifact.html",
    "title": "Class ContentArtifact | FoundationaLLM",
    "summary": "Class ContentArtifact Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Encapsulates data about the sources used in building a completion response. public class ContentArtifact Inheritance object ContentArtifact Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content Textual content. [JsonPropertyName(\"content\")] public string? Content { get; set; } Property Value string Filepath The location of the source information. [JsonPropertyName(\"filepath\")] public string? Filepath { get; set; } Property Value string Id The index identifier of the document containing the source information. [JsonPropertyName(\"id\")] public string? Id { get; set; } Property Value string Metadata The metadata associated with the content. [JsonPropertyName(\"metadata\")] public Dictionary<string, string>? Metadata { get; set; } Property Value Dictionary<string, string> Source The source of the content. [JsonPropertyName(\"source\")] public string? Source { get; set; } Property Value string Title The title of the document containing the source information. [JsonPropertyName(\"title\")] public string? Title { get; set; } Property Value string Type The type of the content. [JsonPropertyName(\"type\")] public string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.FilePathContentItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.FilePathContentItem.html",
    "title": "Class FilePathContentItem | FoundationaLLM",
    "summary": "Class FilePathContentItem Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll File content item used to generate a message content item. public class FilePathContentItem : MessageContentItemBase Inheritance object MessageContentItemBase FilePathContentItem Inherited Members MessageContentItemBase.AgentCapabilityCategory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors FilePathContentItem() Set default property values. public FilePathContentItem() Properties EndIndex The ending index of the annotation. [JsonPropertyName(\"end_index\")] public int? EndIndex { get; set; } Property Value int? FileId The ID of the file referenced by the annotation. [JsonPropertyName(\"file_id\")] public string? FileId { get; set; } Property Value string FileUrl The URL of the image file. [JsonPropertyName(\"file_url\")] public string? FileUrl { get; set; } Property Value string StartIndex The starting index of the annotation. [JsonPropertyName(\"start_index\")] public int? StartIndex { get; set; } Property Value int? Text The text of the annotation. [JsonPropertyName(\"text\")] public string? Text { get; set; } Property Value string Type The type of the message content item. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.ImageFileMessageContentItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.ImageFileMessageContentItem.html",
    "title": "Class ImageFileMessageContentItem | FoundationaLLM",
    "summary": "Class ImageFileMessageContentItem Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll An OpenAI image file message content item. public class ImageFileMessageContentItem : MessageContentItemBase Inheritance object MessageContentItemBase ImageFileMessageContentItem Inherited Members MessageContentItemBase.AgentCapabilityCategory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ImageFileMessageContentItem() Set default property values. public ImageFileMessageContentItem() Properties FileId The ID of the image file. [JsonPropertyName(\"file_id\")] public string? FileId { get; set; } Property Value string FileUrl The URL of the image file. [JsonPropertyName(\"file_url\")] public string? FileUrl { get; set; } Property Value string Type The type of the message content item. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.LLMCompletionResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.LLMCompletionResponse.html",
    "title": "Class LLMCompletionResponse | FoundationaLLM",
    "summary": "Class LLMCompletionResponse Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll LLMOrchestrationCompletionResponse class public class LLMCompletionResponse : CompletionResponseBase Inheritance object CompletionResponseBase LLMCompletionResponse Inherited Members CompletionResponseBase.OperationId CompletionResponseBase.Completion CompletionResponseBase.Content CompletionResponseBase.AnalysisResults CompletionResponseBase.ContentArtifacts CompletionResponseBase.UserPrompt CompletionResponseBase.UserPromptRewrite CompletionResponseBase.FullPrompt CompletionResponseBase.PromptTemplate CompletionResponseBase.AgentName CompletionResponseBase.PromptTokens CompletionResponseBase.CompletionTokens CompletionResponseBase.TotalTokens CompletionResponseBase.TotalCost CompletionResponseBase.Deleted CompletionResponseBase.Errors CompletionResponseBase.IsError object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.MessageContentItemBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.MessageContentItemBase.html",
    "title": "Class MessageContentItemBase | FoundationaLLM",
    "summary": "Class MessageContentItemBase Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll Base message content item model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(TextMessageContentItem), \"text\")] [JsonDerivedType(typeof(ImageFileMessageContentItem), \"image_file\")] [JsonDerivedType(typeof(FilePathContentItem), \"file_path\")] public class MessageContentItemBase Inheritance object MessageContentItemBase Derived FilePathContentItem ImageFileMessageContentItem TextMessageContentItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentCapabilityCategory The FoundationaLLM agent capability category that generated the message content item. [JsonPropertyName(\"agent_capability_category\")] [JsonPropertyOrder(-99)] public required string AgentCapabilityCategory { get; set; } Property Value string Remarks Must be one of the values defined in AgentCapabilityCategoryNames. Type The type of the message content item. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-100)] public virtual string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.TextMessageContentItem.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.TextMessageContentItem.html",
    "title": "Class TextMessageContentItem | FoundationaLLM",
    "summary": "Class TextMessageContentItem Namespace FoundationaLLM.Common.Models.Orchestration.Response Assembly FoundationaLLM.Common.dll An OpenAI text message content item. public class TextMessageContentItem : MessageContentItemBase Inheritance object MessageContentItemBase TextMessageContentItem Inherited Members MessageContentItemBase.AgentCapabilityCategory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextMessageContentItem() Set default property values. public TextMessageContentItem() Properties Annotations A list of file annotations used to generate the message content item. [JsonPropertyName(\"annotations\")] public List<FilePathContentItem> Annotations { get; set; } Property Value List<FilePathContentItem> Type The type of the message content item. [JsonIgnore] public override string? Type { get; set; } Property Value string Value The text value of the message content item. [JsonPropertyName(\"value\")] public string? Value { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.Response.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration.Response | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Orchestration.Response Classes AnalysisResult Represents the result of an analysis. CompletionResponse Response from a language model. CompletionResponseBase Base model for a response from a language model. ContentArtifact Encapsulates data about the sources used in building a completion response. FilePathContentItem File content item used to generate a message content item. ImageFileMessageContentItem An OpenAI image file message content item. LLMCompletionResponse LLMOrchestrationCompletionResponse class MessageContentItemBase Base message content item model. TextMessageContentItem An OpenAI text message content item."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.SummaryResponse.html",
    "title": "Class SummaryResponse | FoundationaLLM",
    "summary": "Class SummaryResponse Namespace FoundationaLLM.Common.Models.Orchestration Assembly FoundationaLLM.Common.dll The summary response object. public class SummaryResponse Inheritance object SummaryResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Summary The summary response. public string? Summary { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Orchestration.html",
    "title": "Namespace FoundationaLLM.Common.Models.Orchestration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Orchestration Namespaces FoundationaLLM.Common.Models.Orchestration.DataSourceConfigurations FoundationaLLM.Common.Models.Orchestration.DataSources FoundationaLLM.Common.Models.Orchestration.Direct FoundationaLLM.Common.Models.Orchestration.Request FoundationaLLM.Common.Models.Orchestration.Response Classes LongRunningOperation Represents the current state of a long-running operation. LongRunningOperationContext Provides a context for long-running operations. LongRunningOperationLogEntry The point-in-time state of a long-running operation. OrchestrationContext Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. SummaryResponse The summary response object. Enums OperationStatus Represents the status of a long-running operation."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.ContentItemRawContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.ContentItemRawContent.html",
    "title": "Class ContentItemRawContent | FoundationaLLM",
    "summary": "Class ContentItemRawContent Namespace FoundationaLLM.Common.Models.Plugins Assembly FoundationaLLM.Common.dll Provides the raw binary content of a content item. public class ContentItemRawContent Inheritance object ContentItemRawContent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType Gets or sets the content type of the content item. public required string ContentType { get; set; } Property Value string Metadata Gets or sets the metadata associated with the content item. public Dictionary<string, object> Metadata { get; set; } Property Value Dictionary<string, object> Name Gets or sets the name of the content item. public required string Name { get; set; } Property Value string RawContent Gets or sets the raw binary content of the content item. public required BinaryData RawContent { get; set; } Property Value BinaryData"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginDependencyMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginDependencyMetadata.html",
    "title": "Class PluginDependencyMetadata | FoundationaLLM",
    "summary": "Class PluginDependencyMetadata Namespace FoundationaLLM.Common.Models.Plugins.Metadata Assembly FoundationaLLM.Common.dll Provides the model for plugin dependency metadata. public class PluginDependencyMetadata Inheritance object PluginDependencyMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DependencyPluginNames Gets or sets the list of dependencies for the plugin. [JsonPropertyName(\"dependency_plugin_names\")] public List<string> DependencyPluginNames { get; set; } Property Value List<string> Remarks The list contains the names of the plugins that this plugin depends on. SelectionType Gets or sets the type of dependency selection. [JsonPropertyName(\"selection_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public PluginDependencySelectionTypes SelectionType { get; set; } Property Value PluginDependencySelectionTypes"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginMetadata.html",
    "title": "Class PluginMetadata | FoundationaLLM",
    "summary": "Class PluginMetadata Namespace FoundationaLLM.Common.Models.Plugins.Metadata Assembly FoundationaLLM.Common.dll Provides the model for plugin metadata. public class PluginMetadata Inheritance object PluginMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category Gets or sets the category of the plugin. [JsonPropertyName(\"category\")] public required string Category { get; set; } Property Value string Dependencies Gets or sets the list of PluginDependencyMetadata objects that represent the dependencies of the plugin. [JsonPropertyName(\"dependencies\")] public List<PluginDependencyMetadata> Dependencies { get; set; } Property Value List<PluginDependencyMetadata> Description Gets or sets the description of the plugin. [JsonPropertyName(\"description\")] public required string Description { get; set; } Property Value string DisplayName Gets or sets the display name of the plugin. [JsonPropertyName(\"display_name\")] public required string DisplayName { get; set; } Property Value string Name Gets or sets the name of the plugin. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string ObjectId Gets or sets the FoundationaLLM resoure identifier of the plugin. [JsonPropertyName(\"object_id\")] public required string ObjectId { get; set; } Property Value string ParameterSelectionHints Gets or sets the metadata associated with the plugin parameter selection hints. [JsonPropertyName(\"parameter_selection_hints\")] public Dictionary<string, PluginParameterSelectionHint> ParameterSelectionHints { get; set; } Property Value Dictionary<string, PluginParameterSelectionHint> Remarks The keys in the dictionary are the name of the paramters that are of type resource-object-id. The values in the dictionary are PluginParameterSelectionHint object providing the selection hints for the parameter. Parameters Gets or sets the metadata associated with the plugin parameters. [JsonPropertyName(\"parameters\")] public List<PluginParameterMetadata> Parameters { get; set; } Property Value List<PluginParameterMetadata> Subcategory Gets or sets the subcategory of the plugin. [JsonPropertyName(\"subcategory\")] public string? Subcategory { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginPackageMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginPackageMetadata.html",
    "title": "Class PluginPackageMetadata | FoundationaLLM",
    "summary": "Class PluginPackageMetadata Namespace FoundationaLLM.Common.Models.Plugins.Metadata Assembly FoundationaLLM.Common.dll Provides the model for plugin package metadata. public class PluginPackageMetadata Inheritance object PluginPackageMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Gets or sets the plugin package description. [JsonPropertyName(\"description\")] public required string Description { get; set; } Property Value string DisplayName Gets or sets the plugin package display name. [JsonPropertyName(\"display_name\")] public required string DisplayName { get; set; } Property Value string Name Gets or sets the plugin package name. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string Platform Gets or sets the plugin package platform. [JsonPropertyName(\"platform\")] public PluginPackagePlatform? Platform { get; set; } Property Value PluginPackagePlatform? Plugins Gets or sets the list of PluginMetadata objects describing the plugins in the package. [JsonPropertyName(\"plugin_metadata\")] public List<PluginMetadata> Plugins { get; set; } Property Value List<PluginMetadata>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginParameterSelectionHint.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.PluginParameterSelectionHint.html",
    "title": "Class PluginParameterSelectionHint | FoundationaLLM",
    "summary": "Class PluginParameterSelectionHint Namespace FoundationaLLM.Common.Models.Plugins.Metadata Assembly FoundationaLLM.Common.dll Provides the model for selection hints required by plugin parameters of type resource-object-id. public class PluginParameterSelectionHint Inheritance object PluginParameterSelectionHint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FilterActionPayload Gets or sets the filter action payload used to filter the available resources. public object? FilterActionPayload { get; set; } Property Value object ResourcePath Gets or sets the resource path used to filter the available resources. public required string ResourcePath { get; set; } Property Value string Remarks The resource path does not include the FoundationaLLM instance identifier. The resource path has the following form: \"providers/{resourceProvider}/{mainResourceType}\"."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.Metadata.html",
    "title": "Namespace FoundationaLLM.Common.Models.Plugins.Metadata | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Plugins.Metadata Classes PluginDependencyMetadata Provides the model for plugin dependency metadata. PluginMetadata Provides the model for plugin metadata. PluginPackageMetadata Provides the model for plugin package metadata. PluginParameterSelectionHint Provides the model for selection hints required by plugin parameters of type resource-object-id."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginComponent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginComponent.html",
    "title": "Class PluginComponent | FoundationaLLM",
    "summary": "Class PluginComponent Namespace FoundationaLLM.Common.Models.Plugins Assembly FoundationaLLM.Common.dll Provides the base model for an artifact handled by a plugin. public class PluginComponent : PluginConfiguration Inheritance object PluginConfiguration PluginComponent Derived DataPipelineDataSource DataPipelineStage Inherited Members PluginConfiguration.PluginObjectId PluginConfiguration.PluginParameters PluginConfiguration.PluginDependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Gets or sets the description of the artifact. [JsonPropertyName(\"description\")] public required string Description { get; set; } Property Value string Name Gets or sets the name of the artifact. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginConfiguration.html",
    "title": "Class PluginConfiguration | FoundationaLLM",
    "summary": "Class PluginConfiguration Namespace FoundationaLLM.Common.Models.Plugins Assembly FoundationaLLM.Common.dll Provides the model for a plugin configuration. public class PluginConfiguration Inheritance object PluginConfiguration Derived PluginComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PluginDependencies Gets or sets the list of plugin configurations this configuration depends on. [JsonPropertyName(\"plugin_dependencies\")] public List<PluginConfiguration> PluginDependencies { get; set; } Property Value List<PluginConfiguration> PluginObjectId Gets or sets the object identifier of the FoundationaLLM Plugin resource referred by the configuration. [JsonPropertyName(\"plugin_object_id\")] public required string PluginObjectId { get; set; } Property Value string PluginParameters Gets or sets the list of plugin parameters. [JsonPropertyName(\"plugin_parameters\")] public List<PluginConfigurationParameter> PluginParameters { get; set; } Property Value List<PluginConfigurationParameter>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginConfigurationParameter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginConfigurationParameter.html",
    "title": "Class PluginConfigurationParameter | FoundationaLLM",
    "summary": "Class PluginConfigurationParameter Namespace FoundationaLLM.Common.Models.Plugins Assembly FoundationaLLM.Common.dll Provides the model for a plugin configuration parameter. public class PluginConfigurationParameter Inheritance object PluginConfigurationParameter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DefaultValue Gets or sets the default value of the parameter. [JsonPropertyName(\"default_value\")] public object? DefaultValue { get; set; } Property Value object ParameterMetadata Gets or sets the PluginParameterMetadata that defines the parameter. [JsonPropertyName(\"parameter_metadata\")] public required PluginParameterMetadata ParameterMetadata { get; set; } Property Value PluginParameterMetadata"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginParameterMetadata.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginParameterMetadata.html",
    "title": "Class PluginParameterMetadata | FoundationaLLM",
    "summary": "Class PluginParameterMetadata Namespace FoundationaLLM.Common.Models.Plugins Assembly FoundationaLLM.Common.dll Provides the metadata for a plugin parameter definition. public class PluginParameterMetadata Inheritance object PluginParameterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Gets or sets the description of the parameter. [JsonPropertyName(\"description\")] public required string Description { get; set; } Property Value string Name Gets or sets the name of the parameter. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string Type Gets or sets the type of the parameter. [JsonPropertyName(\"type\")] public required string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginResult-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginResult-1.html",
    "title": "Class PluginResult<T> | FoundationaLLM",
    "summary": "Class PluginResult<T> Namespace FoundationaLLM.Common.Models.Plugins Assembly FoundationaLLM.Common.dll The result of an operation executed by a plugin. public record PluginResult<T> : PluginResult, IEquatable<PluginResult>, IEquatable<PluginResult<T>> where T : class Type Parameters T Inheritance object PluginResult PluginResult<T> Implements IEquatable<PluginResult> IEquatable<PluginResult<T>> Inherited Members PluginResult.Success PluginResult.StopProcessing PluginResult.ErrorMessage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks If StopProcessing is true, the caller of the plugin should not attempt again to ask the plugin to process the same work item. The plugin will set this property to true if it has identified a permanent error that will not be resolved by retrying the operation. Constructors PluginResult(T?, bool, bool, string?) The result of an operation executed by a plugin. public PluginResult(T? Value, bool Success, bool StopProcessing, string? ErrorMessage = null) Parameters Value T The result of the operation. Success bool Indicates whether the operation executed successfully or not. StopProcessing bool Indicates whether further processing should stop or not. ErrorMessage string When IsSuccess is false, contains an error message with details. Remarks If StopProcessing is true, the caller of the plugin should not attempt again to ask the plugin to process the same work item. The plugin will set this property to true if it has identified a permanent error that will not be resolved by retrying the operation. Properties Value The result of the operation. public T? Value { get; init; } Property Value T"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.PluginResult.html",
    "title": "Class PluginResult | FoundationaLLM",
    "summary": "Class PluginResult Namespace FoundationaLLM.Common.Models.Plugins Assembly FoundationaLLM.Common.dll The result of an operation executed by a plugin. public record PluginResult : IEquatable<PluginResult> Inheritance object PluginResult Implements IEquatable<PluginResult> Derived PluginResult<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks If StopProcessing is true, the caller of the plugin should not attempt again to ask the plugin to process the same work item. The plugin will set this property to true if it has identified a permanent error that will not be resolved by retrying the operation. Constructors PluginResult(bool, bool, string?) The result of an operation executed by a plugin. public PluginResult(bool Success, bool StopProcessing, string? ErrorMessage = null) Parameters Success bool Indicates whether the operation executed successfully or not. StopProcessing bool Indicates whether further processing should stop or not. ErrorMessage string When IsSuccess is false, contains an error message with details. Remarks If StopProcessing is true, the caller of the plugin should not attempt again to ask the plugin to process the same work item. The plugin will set this property to true if it has identified a permanent error that will not be resolved by retrying the operation. Properties ErrorMessage When IsSuccess is false, contains an error message with details. public string? ErrorMessage { get; init; } Property Value string StopProcessing Indicates whether further processing should stop or not. public bool StopProcessing { get; init; } Property Value bool Success Indicates whether the operation executed successfully or not. public bool Success { get; init; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Plugins.html",
    "title": "Namespace FoundationaLLM.Common.Models.Plugins | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Plugins Namespaces FoundationaLLM.Common.Models.Plugins.Metadata Classes ContentItemRawContent Provides the raw binary content of a content item. PluginComponent Provides the base model for an artifact handled by a plugin. PluginConfiguration Provides the model for a plugin configuration. PluginConfigurationParameter Provides the model for a plugin configuration parameter. PluginParameterMetadata Provides the metadata for a plugin parameter definition. PluginResult The result of an operation executed by a plugin. PluginResult<T> The result of an operation executed by a plugin."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Quota.DistributedQuotaEnforcementEventData.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Quota.DistributedQuotaEnforcementEventData.html",
    "title": "Class DistributedQuotaEnforcementEventData | FoundationaLLM",
    "summary": "Class DistributedQuotaEnforcementEventData Namespace FoundationaLLM.Common.Models.Quota Assembly FoundationaLLM.Common.dll Provides the data associated with a distributed quota enforcement event. public class DistributedQuotaEnforcementEventData Inheritance object DistributedQuotaEnforcementEventData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EventTimestamps Gets or sets the list of event timestamps. [JsonPropertyName(\"event_timestamps\")] public List<DateTimeOffset> EventTimestamps { get; set; } Property Value List<DateTimeOffset> QuotaContext Gets or sets the quota context. [JsonPropertyName(\"quota_context\")] public required string QuotaContext { get; set; } Property Value string QuotaMetricPartitionId Gets or sets the quota metric partition identifier. [JsonPropertyName(\"quota_metric_partition_id\")] public required string QuotaMetricPartitionId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Quota.QuotaDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Quota.QuotaDefinition.html",
    "title": "Class QuotaDefinition | FoundationaLLM",
    "summary": "Class QuotaDefinition Namespace FoundationaLLM.Common.Models.Quota Assembly FoundationaLLM.Common.dll Represents a quota definition. public class QuotaDefinition Inheritance object QuotaDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Context Gets or sets the context of the quota. [JsonPropertyName(\"context\")] public required string Context { get; set; } Property Value string Description Gets or sets the description of the quota. [JsonPropertyName(\"description\")] public required string Description { get; set; } Property Value string DistributedEnforcement Gets or sets a value indicating whether the quota is enforced in a distributed manner. [JsonPropertyName(\"distributed_enforcement\")] public bool DistributedEnforcement { get; set; } Property Value bool LockoutDurationSeconds Gets or sets the duration in seconds for which the quota is locked out after it has been exceeded. [JsonPropertyName(\"lockout_duration_seconds\")] public int LockoutDurationSeconds { get; set; } Property Value int MetricLimit Gets or sets the limit of the metric that is used to enforce the quota. [JsonPropertyName(\"metric_limit\")] public int MetricLimit { get; set; } Property Value int MetricPartition Gets or sets the type of partitioning applied to the metric that is used to enforce the quota. [JsonPropertyName(\"metric_partition\")] [JsonConverter(typeof(JsonStringEnumConverter))] public QuotaMetricPartitionType MetricPartition { get; set; } Property Value QuotaMetricPartitionType MetricWindowSeconds Gets or sets the window of time in seconds over which the metric is evaluated. [JsonPropertyName(\"metric_window_seconds\")] public int MetricWindowSeconds { get; set; } Property Value int Name Gets or sets the name of the quota. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string Type Gets or sets the type of the quota. [JsonPropertyName(\"type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public QuotaType Type { get; set; } Property Value QuotaType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Quota.QuotaMetricPartitionState.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Quota.QuotaMetricPartitionState.html",
    "title": "Class QuotaMetricPartitionState | FoundationaLLM",
    "summary": "Class QuotaMetricPartitionState Namespace FoundationaLLM.Common.Models.Quota Assembly FoundationaLLM.Common.dll Represents the state of a quota metric partition. public class QuotaMetricPartitionState Inheritance object QuotaMetricPartitionState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties LocalMetricCount Gets or sets the number of units of the quota metric that have a local origin (the service instance hosting the quota metric sequence). [JsonIgnore] public int LocalMetricCount { get; set; } Property Value int QuotaContext Gets or sets the quota context that contains the partition. [JsonPropertyName(\"quota_context\")] public required string QuotaContext { get; set; } Property Value string QuotaExceeded Gets or sets a value indicating whether the quota has been exceeded. [JsonPropertyName(\"quota_exceeded\")] public bool QuotaExceeded { get; set; } Property Value bool QuotaMetricPartitionId Gets or sets the identifier of the quota metric partition used for evaluation. [JsonIgnore] public required string QuotaMetricPartitionId { get; set; } Property Value string QuotaName Gets or sets the name of the quota that contains the partition. [JsonPropertyName(\"quota_name\")] public required string QuotaName { get; set; } Property Value string RemoteMetricCount Gets or sets the number of units of the quota metric that have a remote origin (other service instances than the one hosting the quota metric sequence). [JsonIgnore] public int RemoteMetricCount { get; set; } Property Value int TimeUntilRetrySeconds Gets or sets the number of seconds until the request can be retried. [JsonPropertyName(\"time_until_retry_seconds\")] public int TimeUntilRetrySeconds { get; set; } Property Value int TotalMetricCount Gets or sets the total number of units of the quota metric, both local and remote. [JsonIgnore] public int TotalMetricCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Quota.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Quota.html",
    "title": "Namespace FoundationaLLM.Common.Models.Quota | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Quota Classes DistributedQuotaEnforcementEventData Provides the data associated with a distributed quota enforcement event. QuotaDefinition Represents a quota definition. QuotaMetricPartitionState Represents the state of a quota metric partition."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.AIModelBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.AIModelBase.html",
    "title": "Class AIModelBase | FoundationaLLM",
    "summary": "Class AIModelBase Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Assembly FoundationaLLM.Common.dll Provides a set of standard properties for all AIModel objects. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(EmbeddingAIModel), \"embedding\")] [JsonDerivedType(typeof(CompletionAIModel), \"completion\")] [JsonDerivedType(typeof(ImageGenerationAIModel), \"image-generation\")] public class AIModelBase : ResourceBase Inheritance object ResourceName ResourceBase AIModelBase Derived CompletionAIModel EmbeddingAIModel ImageGenerationAIModel Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DeploymentName The name of the deployment corresponding to the AI model. [JsonPropertyName(\"deployment_name\")] public string? DeploymentName { get; set; } Property Value string EndpointObjectId The object id of the APIEndpointConfiguration object providing the configuration for the API endpoint used to interact with the model. [JsonPropertyName(\"endpoint_object_id\")] public required string EndpointObjectId { get; set; } Property Value string ModelParameters Dictionary with default values for the model parameters. For the list of supported keys, see ModelParametersKeys. [JsonPropertyName(\"model_parameters\")] public Dictionary<string, object> ModelParameters { get; set; } Property Value Dictionary<string, object> Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string Version The version of the AI model. [JsonPropertyName(\"version\")] public string? Version { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.CompletionAIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.CompletionAIModel.html",
    "title": "Class CompletionAIModel | FoundationaLLM",
    "summary": "Class CompletionAIModel Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Assembly FoundationaLLM.Common.dll Provides the properties for AI models used for completions. public class CompletionAIModel : AIModelBase Inheritance object ResourceName ResourceBase AIModelBase CompletionAIModel Inherited Members AIModelBase.Type AIModelBase.EndpointObjectId AIModelBase.Version AIModelBase.DeploymentName AIModelBase.ModelParameters ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionAIModel() Creates a new instance of the CompletionAIModel AI model. public CompletionAIModel()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.EmbeddingAIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.EmbeddingAIModel.html",
    "title": "Class EmbeddingAIModel | FoundationaLLM",
    "summary": "Class EmbeddingAIModel Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Assembly FoundationaLLM.Common.dll Provides the properties for AI models used for embeddings. public class EmbeddingAIModel : AIModelBase Inheritance object ResourceName ResourceBase AIModelBase EmbeddingAIModel Inherited Members AIModelBase.Type AIModelBase.EndpointObjectId AIModelBase.Version AIModelBase.DeploymentName AIModelBase.ModelParameters ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingAIModel() Creates a new instance of the EmbeddingAIModel AI model. public EmbeddingAIModel()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.ImageGenerationAIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.ImageGenerationAIModel.html",
    "title": "Class ImageGenerationAIModel | FoundationaLLM",
    "summary": "Class ImageGenerationAIModel Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Assembly FoundationaLLM.Common.dll Provides the properties for AI models used for image generation. public class ImageGenerationAIModel : AIModelBase Inheritance object ResourceName ResourceBase AIModelBase ImageGenerationAIModel Inherited Members AIModelBase.Type AIModelBase.EndpointObjectId AIModelBase.Version AIModelBase.DeploymentName AIModelBase.ModelParameters ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ImageGenerationAIModel() Creates a new instance of the ImageGenerationAIModel AI model. public ImageGenerationAIModel()"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AIModel.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AIModel Classes AIModelBase Provides a set of standard properties for all AIModel objects. CompletionAIModel Provides the properties for AI models used for completions. EmbeddingAIModel Provides the properties for AI models used for embeddings. ImageGenerationAIModel Provides the properties for AI models used for image generation."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentAccessToken.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentAccessToken.html",
    "title": "Class AgentAccessToken | FoundationaLLM",
    "summary": "Class AgentAccessToken Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens Assembly FoundationaLLM.Common.dll Agent access token object. public class AgentAccessToken : ResourceBase Inheritance object ResourceName ResourceBase AgentAccessToken Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Active A flag denoting if object is active or not. [JsonPropertyName(\"active\")] public required bool Active { get; set; } Property Value bool Id The unique identifier. [JsonPropertyName(\"id\")] public required Guid Id { get; set; } Property Value Guid"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentAccessTokenValidationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentAccessTokenValidationRequest.html",
    "title": "Class AgentAccessTokenValidationRequest | FoundationaLLM",
    "summary": "Class AgentAccessTokenValidationRequest Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens Assembly FoundationaLLM.Common.dll Agent access token validation request object. public class AgentAccessTokenValidationRequest Inheritance object AgentAccessTokenValidationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccessToken The access token to validate. [JsonPropertyName(\"access_token\")] public required string AccessToken { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentAccessTokenValidationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentAccessTokenValidationResult.html",
    "title": "Class AgentAccessTokenValidationResult | FoundationaLLM",
    "summary": "Class AgentAccessTokenValidationResult Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens Assembly FoundationaLLM.Common.dll Agent access token validation result object. public class AgentAccessTokenValidationResult Inheritance object AgentAccessTokenValidationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Valid Gets or sets the flag indicating whether the agent access token is valid. [JsonPropertyName(\"valid\")] public required bool Valid { get; set; } Property Value bool VirtualIdentity Gets or sets the UnifiedUserIdentity virtual identity associated with the agent access token. [JsonPropertyName(\"virtual_identity\")] public UnifiedUserIdentity? VirtualIdentity { get; set; } Property Value UnifiedUserIdentity"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentClientSecretKey.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.AgentClientSecretKey.html",
    "title": "Class AgentClientSecretKey | FoundationaLLM",
    "summary": "Class AgentClientSecretKey Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens Assembly FoundationaLLM.Common.dll Represents a secret key used as an agent access token to be shared to or received from the client. public class AgentClientSecretKey : ClientSecretKey Inheritance object ClientSecretKey AgentClientSecretKey Inherited Members ClientSecretKey.InstanceId ClientSecretKey.ContextId ClientSecretKey.Id ClientSecretKey.ClientSecret ClientSecretKey.ClientSecretString ClientSecretKey.TryParse(string, out ClientSecretKey) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The name of the agent this key is associated with. public string? AgentName { get; } Property Value string Methods FromClientSecretKey(ClientSecretKey) Creates an AgentClientSecretKey instance from the given ClientSecretKey instance. public static AgentClientSecretKey FromClientSecretKey(ClientSecretKey clientSecretKey) Parameters clientSecretKey ClientSecretKey The ClientSecretKey instance used to create the new instance. Returns AgentClientSecretKey An AgentClientSecretKey instance. SetContextId(string) Sets the context identifier of this key based on the given agent name. public void SetContextId(string agentName) Parameters agentName string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens Classes AgentAccessToken Agent access token object. AgentAccessTokenValidationRequest Agent access token validation request object. AgentAccessTokenValidationResult Agent access token validation result object. AgentClientSecretKey Represents a secret key used as an agent access token to be shared to or received from the client."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentBase.html",
    "title": "Class AgentBase | FoundationaLLM",
    "summary": "Class AgentBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Base agent metadata model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(KnowledgeManagementAgent), \"knowledge-management\")] public class AgentBase : ResourceBase Inheritance object ResourceName ResourceBase AgentBase Derived KnowledgeManagementAgent Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentType The object type of the agent. [JsonIgnore] public Type AgentType { get; } Property Value Type CacheSettings Gets or sets the agent's caching settings. [JsonPropertyName(\"cache_settings\")] public AgentCacheSettings? CacheSettings { get; set; } Property Value AgentCacheSettings ConversationHistorySettings The agent's conversation history configuration. [JsonPropertyName(\"conversation_history_settings\")] public AgentConversationHistorySettings? ConversationHistorySettings { get; set; } Property Value AgentConversationHistorySettings GatekeeperSettings The agent's Gatekeeper configuration. [JsonPropertyName(\"gatekeeper_settings\")] public AgentGatekeeperSettings? GatekeeperSettings { get; set; } Property Value AgentGatekeeperSettings SessionsEnabled Indicates whether sessions are enabled for the agent. [JsonPropertyName(\"sessions_enabled\")] public bool SessionsEnabled { get; set; } Property Value bool ShowFileUpload Indicates whether to show the file upload option on agent message input. [JsonPropertyName(\"show_file_upload\")] public bool? ShowFileUpload { get; set; } Property Value bool? ShowMessageRating Indicates whether to show rating options on the messages. [JsonPropertyName(\"show_message_rating\")] public bool? ShowMessageRating { get; set; } Property Value bool? ShowMessageTokens Indicates whether to show a token count on the messages. [JsonPropertyName(\"show_message_tokens\")] public bool? ShowMessageTokens { get; set; } Property Value bool? ShowViewPrompt Indicates whether to show a view prompt option on agent messages. [JsonPropertyName(\"show_view_prompt\")] public bool? ShowViewPrompt { get; set; } Property Value bool? TextRewriteSettings Gets or sets the agent's text rewrite settings. [JsonPropertyName(\"text_rewrite_settings\")] public AgentTextRewriteSettings? TextRewriteSettings { get; set; } Property Value AgentTextRewriteSettings Tools Gets or sets a list of tools that are registered with the agent. [JsonPropertyName(\"tools\")] public AgentTool[] Tools { get; set; } Property Value AgentTool[] Remarks The key is the name of the tool, and the value is the AgentTool object. Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string VirtualSecurityGroupId Gets or sets the object identifier of the virtual security group associated with the agent. [JsonPropertyName(\"virtual_security_group_id\")] public string? VirtualSecurityGroupId { get; set; } Property Value string Remarks The virtual security group is used to provide access to the agent for the virtual security principals. An example of such a virtual security principal is the virtual identity associated with an agent access token. Workflow The agent's workflow configuration. [JsonPropertyName(\"workflow\")] public AgentWorkflowBase? Workflow { get; set; } Property Value AgentWorkflowBase Methods HasAzureAIAgentServiceWorkflow() Checks whether the agent uses an Azure AI Agent Service workflow. public bool HasAzureAIAgentServiceWorkflow() Returns bool HasAzureOpenAIAssistantsWorkflow() Checks whether the agent uses an Azure OpenAI Assistants workflow. public bool HasAzureOpenAIAssistantsWorkflow() Returns bool True if the agent uses an Azure OpenAI Assistants workflow, False otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentCacheSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentCacheSettings.html",
    "title": "Class AgentCacheSettings | FoundationaLLM",
    "summary": "Class AgentCacheSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related caching settings. public class AgentCacheSettings Inheritance object AgentCacheSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SemanticCacheEnabled Gets or sets a value indicating whether the agent's semantic cache is enabled. [JsonPropertyName(\"semantic_cache_enabled\")] public bool SemanticCacheEnabled { get; set; } Property Value bool Remarks When enabled, the agent's semantic cache settings are provided in SemanticCacheSettings. SemanticCacheSettings Gets or sets the agent's semantic cache settings. [JsonPropertyName(\"semantic_cache_settings\")] public AgentSemanticCacheSettings? SemanticCacheSettings { get; set; } Property Value AgentSemanticCacheSettings Remarks The values in this property are only valid when SemanticCacheEnabled is true."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentConversationHistorySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentConversationHistorySettings.html",
    "title": "Class AgentConversationHistorySettings | FoundationaLLM",
    "summary": "Class AgentConversationHistorySettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related conversation history settings. public class AgentConversationHistorySettings Inheritance object AgentConversationHistorySettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Enabled Indicates whether the conversation history is enabled. [JsonPropertyName(\"enabled\")] public bool Enabled { get; set; } Property Value bool HistoryContentArtifactTypes Gets or sets the comma separated list of content artifact types to store in the conversation history. [JsonPropertyName(\"history_content_artifact_types\")] public string? HistoryContentArtifactTypes { get; set; } Property Value string MaxHistory The maximum number of turns to store in the conversation history. [JsonPropertyName(\"max_history\")] public int MaxHistory { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFile.html",
    "title": "Class AgentFile | FoundationaLLM",
    "summary": "Class AgentFile Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles Assembly FoundationaLLM.Common.dll Agent file resource. public class AgentFile : ResourceBase Inheritance object ResourceName ResourceBase AgentFile Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentObjectId Agent object identifier. [JsonPropertyName(\"agent_object_id\")] public string? AgentObjectId { get; set; } Property Value string Content File stream of the attachment contents. [JsonPropertyName(\"content\")] public byte[]? Content { get; set; } Property Value byte[] ContentType The mime content type of the attachment. [JsonPropertyName(\"content_type\")] public string? ContentType { get; set; } Property Value string Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileReference.html",
    "title": "Class AgentFileReference | FoundationaLLM",
    "summary": "Class AgentFileReference Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles Assembly FoundationaLLM.Common.dll Contains a reference to an file. public class AgentFileReference : FileReference Inheritance object ResourceReference FileReference AgentFileReference Inherited Members FileReference.OriginalFilename FileReference.ContentType FileReference.Size FileReference.UPN FileReference.Id ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The agent name. public required string AgentName { get; set; } Property Value string InstanceId The instance unique identifier. public required string InstanceId { get; set; } Property Value string ResourceType The object type of the resource. [JsonIgnore] [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociation.html",
    "title": "Class AgentFileToolAssociation | FoundationaLLM",
    "summary": "Class AgentFileToolAssociation Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles Assembly FoundationaLLM.Common.dll Agent file tool association. public class AgentFileToolAssociation : ResourceBase Inheritance object ResourceName ResourceBase AgentFileToolAssociation Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssociatedResourceObjectIds Gets or sets a dictionary of resource objects. Currently used when associating an agent file resource with a tool. [JsonPropertyName(\"associated_resource_object_ids\")] public Dictionary<string, ResourceObjectIdProperties>? AssociatedResourceObjectIds { get; set; } Property Value Dictionary<string, ResourceObjectIdProperties> FileObjectId Agent file object id. [JsonPropertyName(\"file_object_id\")] public required string FileObjectId { get; set; } Property Value string OpenAIFileId When a file is used with the OpenAI assistants API tool, associate the file with the OpenAI file ID. [JsonPropertyName(\"openai_file_id\")] public string? OpenAIFileId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociationError.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociationError.html",
    "title": "Class AgentFileToolAssociationError | FoundationaLLM",
    "summary": "Class AgentFileToolAssociationError Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles Assembly FoundationaLLM.Common.dll Agent file tool error. public class AgentFileToolAssociationError Inheritance object AgentFileToolAssociationError Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ErrorMessage Error message. [JsonPropertyName(\"error_message\")] public required string ErrorMessage { get; set; } Property Value string FileObjectId File object id. [JsonPropertyName(\"file_object_id\")] public required string FileObjectId { get; set; } Property Value string ToolObjectId Tool object id. [JsonPropertyName(\"tool_object_id\")] public required string ToolObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociationRequest.html",
    "title": "Class AgentFileToolAssociationRequest | FoundationaLLM",
    "summary": "Class AgentFileToolAssociationRequest Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles Assembly FoundationaLLM.Common.dll Request object to associate a tool with an agent file. Agent and File are obtained from the request URL. public class AgentFileToolAssociationRequest Inheritance object AgentFileToolAssociationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentFileToolAssociations The agent file tool association matrix. [JsonPropertyName(\"agent_file_tool_associations\")] public required Dictionary<string, Dictionary<string, bool>> AgentFileToolAssociations { get; set; } Property Value Dictionary<string, Dictionary<string, bool>>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.AgentFileToolAssociationResult.html",
    "title": "Class AgentFileToolAssociationResult | FoundationaLLM",
    "summary": "Class AgentFileToolAssociationResult Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles Assembly FoundationaLLM.Common.dll Represents the result of associating a tool with a file. public class AgentFileToolAssociationResult Inheritance object AgentFileToolAssociationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentFileToolAssociations Final agent file tool associations. [JsonPropertyName(\"agent_file_tool_associations\")] public required List<AgentFileToolAssociation> AgentFileToolAssociations { get; set; } Property Value List<AgentFileToolAssociation> Errors Agent file tool association errors. [JsonPropertyName(\"errors\")] public List<AgentFileToolAssociationError>? Errors { get; set; } Property Value List<AgentFileToolAssociationError> Success Indicates if the tool association was successful. [JsonPropertyName(\"success\")] public required bool Success { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles Classes AgentFile Agent file resource. AgentFileReference Contains a reference to an file. AgentFileToolAssociation Agent file tool association. AgentFileToolAssociationError Agent file tool error. AgentFileToolAssociationRequest Request object to associate a tool with an agent file. Agent and File are obtained from the request URL. AgentFileToolAssociationResult Represents the result of associating a tool with a file."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentGatekeeperSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentGatekeeperSettings.html",
    "title": "Class AgentGatekeeperSettings | FoundationaLLM",
    "summary": "Class AgentGatekeeperSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related gatekeeper settings. public class AgentGatekeeperSettings Inheritance object AgentGatekeeperSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Options If UseSystemSetting is false, provides Gatekeeper feature selection. [JsonPropertyName(\"options\")] public string[]? Options { get; set; } Property Value string[] UseSystemSetting Indicates whether to abide by or override the system settings for the Gatekeeper. [JsonPropertyName(\"use_system_setting\")] public bool UseSystemSetting { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentOrchestrationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentOrchestrationSettings.html",
    "title": "Class AgentOrchestrationSettings | FoundationaLLM",
    "summary": "Class AgentOrchestrationSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related orchestration settings. public class AgentOrchestrationSettings Inheritance object AgentOrchestrationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentParameters Dictionary with override values for the agent parameters. For the list of supported keys, see AgentParametersKeys. [JsonPropertyName(\"agent_parameters\")] public Dictionary<string, object>? AgentParameters { get; set; } Property Value Dictionary<string, object> Orchestrator The agent's LLM orchestrator type. [JsonPropertyName(\"orchestrator\")] public string? Orchestrator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentSemanticCacheSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentSemanticCacheSettings.html",
    "title": "Class AgentSemanticCacheSettings | FoundationaLLM",
    "summary": "Class AgentSemanticCacheSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related cache settings for the semantic cache. public class AgentSemanticCacheSettings Inheritance object AgentSemanticCacheSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingAIModelObjectId Gets or sets the object identifier of the AI model to use for the embedding. [JsonPropertyName(\"embedding_ai_model_object_id\")] public required string EmbeddingAIModelObjectId { get; set; } Property Value string EmbeddingDimensions Gets or sets the number of dimensions to use for the embedding. [JsonPropertyName(\"embedding_dimensions\")] public int EmbeddingDimensions { get; set; } Property Value int MinimumSimilarityThreshold Gets or sets the minimum similarity threshold for the semantic cache. [JsonPropertyName(\"minimum_similarity_threshold\")] public decimal MinimumSimilarityThreshold { get; set; } Property Value decimal Remarks This value determines the minimum similarity between the current conversation context and the context of the item in the cache for the item to be considered a match."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTextRewriteSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTextRewriteSettings.html",
    "title": "Class AgentTextRewriteSettings | FoundationaLLM",
    "summary": "Class AgentTextRewriteSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related text rewrite settings. public class AgentTextRewriteSettings Inheritance object AgentTextRewriteSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties UserPromptRewriteEnabled Gets or sets a value indicating whether user prompt rewrite is enabled for the agent. [JsonPropertyName(\"user_prompt_rewrite_enabled\")] public bool UserPromptRewriteEnabled { get; set; } Property Value bool Remarks When enabled, the agent's semantic cache settings are provided in UserPromptRewriteSettings. UserPromptRewriteSettings Gets or sets the agent's semantic cache settings. [JsonPropertyName(\"user_prompt_rewrite_settings\")] public AgentUserPromptRewriteSettings? UserPromptRewriteSettings { get; set; } Property Value AgentUserPromptRewriteSettings Remarks The values in this property are only valid when UserPromptRewriteEnabled is true."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTool.html",
    "title": "Class AgentTool | FoundationaLLM",
    "summary": "Class AgentTool Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Prvides the settings for a tool that is registered with the agent. public class AgentTool Inheritance object AgentTool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category Gets or sets the category of the tool. [JsonPropertyName(\"category\")] public string Category { get; set; } Property Value string ClassName Gets or sets the underlying class name of the tool. [JsonPropertyName(\"class_name\")] public string? ClassName { get; set; } Property Value string Description Gets or sets the description of the tool. [JsonPropertyName(\"description\")] public required string Description { get; set; } Property Value string Name Gets or sets the name of the tool. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string PackageName Gets or sets the package name of the tool. For internal tools, this value will be FoundationaLLM For external tools, this value will be the name of the package. [JsonPropertyName(\"package_name\")] public required string PackageName { get; set; } Property Value string Properties Gets or sets a dictionary of properties that are specific to the tool. [JsonPropertyName(\"properties\")] public Dictionary<string, object>? Properties { get; set; } Property Value Dictionary<string, object> ResourceObjectIds Gets or sets a dictionary of resource objects. [JsonPropertyName(\"resource_object_ids\")] public Dictionary<string, ResourceObjectIdProperties> ResourceObjectIds { get; set; } Property Value Dictionary<string, ResourceObjectIdProperties> Methods GetKnowledgeSearchSettings() Gets the knowledge search settings if they exists. public KnowledgeSearchSettings? GetKnowledgeSearchSettings() Returns KnowledgeSearchSettings An object containing the knowledge search settings. TryGetPropertyValue<T>(string, out T?) Tries to get the value of a property. public bool TryGetPropertyValue<T>(string propertyName, out T? propertyValue) Parameters propertyName string The name of the property being retrieved. propertyValue T The resultig property value. Returns bool true if the property value was successfull retrieved, false otherwise. Type Parameters T The type of the property being retrieved. TryGetResourceObjectIdsWithRole(string, out List<string>?) Tries to get the resource object identifiers with the specified role. public bool TryGetResourceObjectIdsWithRole(string roleName, out List<string>? resourceObjectIds) Parameters roleName string The name of the role being searched for. This is the value of the \"object_role\" property. resourceObjectIds List<string> The resulting list of resource object identifiers. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTypes.html",
    "title": "Class AgentTypes | FoundationaLLM",
    "summary": "Class AgentTypes Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Contains constants for the types of resources managed by the FoundationaLLM.Agent resource provider. public static class AgentTypes Inheritance object AgentTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AgentFile Agent file. public const string AgentFile = \"agent-file\" Field Value string Basic Basic agent without practical functionality. Used as base for all the other agents. public const string Basic = \"basic\" Field Value string KnowledgeManagement Knowledge Management agents are best for Q&A, summarization, and reasoning over textual data. public const string KnowledgeManagement = \"knowledge-management\" Field Value string Tool Tool. public const string Tool = \"tool\" Field Value string Workflow Workflow. public const string Workflow = \"workflow\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentUserPromptRewriteSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentUserPromptRewriteSettings.html",
    "title": "Class AgentUserPromptRewriteSettings | FoundationaLLM",
    "summary": "Class AgentUserPromptRewriteSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides agent-related user prompt rewrite settings. public class AgentUserPromptRewriteSettings Inheritance object AgentUserPromptRewriteSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties UserPromptRewriteAIModelObjectId Gets or sets the object identifier of the AI model to use for the user prompt rewriting. [JsonPropertyName(\"user_prompt_rewrite_ai_model_object_id\")] public required string UserPromptRewriteAIModelObjectId { get; set; } Property Value string UserPromptRewritePromptObjectId Gets or sets the object identifier of the prompt to use for the user prompt rewriting. [JsonPropertyName(\"user_prompt_rewrite_prompt_object_id\")] public required string UserPromptRewritePromptObjectId { get; set; } Property Value string UserPromptsWindowSize Gets or sets the window size for the user prompt rewriting. [JsonPropertyName(\"user_prompts_window_size\")] public required int UserPromptsWindowSize { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentVectorizationSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentVectorizationSettings.html",
    "title": "Class AgentVectorizationSettings | FoundationaLLM",
    "summary": "Class AgentVectorizationSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Vectorization settings related to a knowledge management agent. public class AgentVectorizationSettings Inheritance object AgentVectorizationSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSourceObjectId The data source resource path. [JsonPropertyName(\"data_source_object_id\")] public string? DataSourceObjectId { get; set; } Property Value string DedicatedPipeline Determines if the agent uses a dedicated pipeline. [JsonPropertyName(\"dedicated_pipeline\")] public bool DedicatedPipeline { get; set; } Property Value bool IndexingProfileObjectIds The vectorization indexing profile resource paths. [JsonPropertyName(\"indexing_profile_object_ids\")] public List<string>? IndexingProfileObjectIds { get; set; } Property Value List<string> TextEmbeddingProfileObjectId The vectorization text embedding profile resource path. [JsonPropertyName(\"text_embedding_profile_object_id\")] public string? TextEmbeddingProfileObjectId { get; set; } Property Value string TextPartitioningProfileObjectId The vectorization text partitioning profile resource path. [JsonPropertyName(\"text_partitioning_profile_object_id\")] public string? TextPartitioningProfileObjectId { get; set; } Property Value string TriggerCronSchedule The schedule of the trigger in Cron format. This property is valid only when TriggerType = Schedule. [JsonPropertyName(\"trigger_cron_schedule\")] public string? TriggerCronSchedule { get; set; } Property Value string TriggerType The type of trigger that initiates the execution of the pipeline. [JsonPropertyName(\"trigger_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationPipelineTriggerType? TriggerType { get; set; } Property Value VectorizationPipelineTriggerType? VectorizationDataPipelineObjectId The vectorization data pipeline object path. [JsonPropertyName(\"vectorization_data_pipeline_object_id\")] public string? VectorizationDataPipelineObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AgentWorkflowAIModel.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AgentWorkflowAIModel.html",
    "title": "Class AgentWorkflowAIModel | FoundationaLLM",
    "summary": "Class AgentWorkflowAIModel Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Associates a workflow AI model and its associated model parameter overrides. public class AgentWorkflowAIModel Inheritance object AgentWorkflowAIModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIModelObjectId The AI model object ID. [JsonPropertyName(\"ai_model_object_id\")] public required string AIModelObjectId { get; set; } Property Value string ModelParameters Dictionary with override values for the model parameters. For the list of supported keys, see ModelParametersKeys. [JsonPropertyName(\"model_parameters\")] public Dictionary<string, object>? ModelParameters { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AgentWorkflowBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AgentWorkflowBase.html",
    "title": "Class AgentWorkflowBase | FoundationaLLM",
    "summary": "Class AgentWorkflowBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Provides a workflow configuration for an agent. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AzureAIAgentServiceAgentWorkflow), \"azure-ai-agent-service-workflow\")] [JsonDerivedType(typeof(AzureOpenAIAssistantsAgentWorkflow), \"azure-openai-assistants-workflow\")] [JsonDerivedType(typeof(LangChainExpressionLanguageAgentWorkflow), \"langchain-expression-language-workflow\")] [JsonDerivedType(typeof(LangGraphReactAgentWorkflow), \"langgraph-react-agent-workflow\")] [JsonDerivedType(typeof(ExternalAgentWorkflow), \"external-agent-workflow\")] public class AgentWorkflowBase Inheritance object AgentWorkflowBase Derived AzureAIAgentServiceAgentWorkflow AzureOpenAIAssistantsAgentWorkflow ExternalAgentWorkflow LangChainExpressionLanguageAgentWorkflow LangGraphReactAgentWorkflow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AIProjectObjectId Gets the AI object identifier. [JsonIgnore] public string? AIProjectObjectId { get; } Property Value string ClassName The class name of the workflow. For internal workflows, this value will be FoundationaLLM For external workflows, this value will be the name of the implementation class. [JsonPropertyName(\"class_name\")] public string? ClassName { get; set; } Property Value string FilesPromptObjectId Gets the files prompt object identifier. [JsonIgnore] public string? FilesPromptObjectId { get; } Property Value string FinalPromptObjectId Gets the final prompt object identifier. [JsonIgnore] public string? FinalPromptObjectId { get; } Property Value string MainAIModelObjectId Gets the main AI model object identifier. [JsonIgnore] public string? MainAIModelObjectId { get; } Property Value string MainPromptObjectId Gets the main prompt object identifier. [JsonIgnore] public string? MainPromptObjectId { get; } Property Value string Name The name of the workflow. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string PackageName Gets or sets the package name of the workflow. For internal workflows, this value will be FoundationaLLM For external workflows, this value will be the name of the package. [JsonPropertyName(\"package_name\")] public required string PackageName { get; set; } Property Value string Properties Gets or sets a dictionary of properties that are specific to the workflow. [JsonPropertyName(\"properties\")] public Dictionary<string, object>? Properties { get; set; } Property Value Dictionary<string, object> ResourceObjectIds Gets or sets a dictionary of resource objects. [JsonPropertyName(\"resource_object_ids\")] public Dictionary<string, ResourceObjectIdProperties> ResourceObjectIds { get; set; } Property Value Dictionary<string, ResourceObjectIdProperties> RouterPromptObjectId Gets the router prompt object identifier. [JsonIgnore] public string? RouterPromptObjectId { get; } Property Value string Type The workflow resource associated with the agent. [JsonPropertyName(\"type\")] public virtual string? Type { get; set; } Property Value string WorkflowHost The host of the workflow environment. [JsonPropertyName(\"workflow_host\")] public string? WorkflowHost { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AgentWorkflowTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AgentWorkflowTypes.html",
    "title": "Class AgentWorkflowTypes | FoundationaLLM",
    "summary": "Class AgentWorkflowTypes Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Contains constants for the types of agent workflows. public static class AgentWorkflowTypes Inheritance object AgentWorkflowTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureAIAgentService The Azure AI Agent Service agent workflow. public const string AzureAIAgentService = \"azure-ai-agent-service-workflow\" Field Value string AzureOpenAIAssistants The OpenAI Assistants agent workflow. public const string AzureOpenAIAssistants = \"azure-openai-assistants-workflow\" Field Value string ExternalAgentWorkflow The External Agent workflow. public const string ExternalAgentWorkflow = \"external-agent-workflow\" Field Value string LangChainExpressionLanguage The LangChain Expression Language agent workflow. public const string LangChainExpressionLanguage = \"langchain-expression-language-workflow\" Field Value string LangGraphReactAgent The LangGraph ReAct agent workflow. public const string LangGraphReactAgent = \"langgraph-react-agent-workflow\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AzureAIAgentServiceAgentWorkflow.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AzureAIAgentServiceAgentWorkflow.html",
    "title": "Class AzureAIAgentServiceAgentWorkflow | FoundationaLLM",
    "summary": "Class AzureAIAgentServiceAgentWorkflow Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Provides an agent workflow configuration for an Azure AI Agent Service workflow. public class AzureAIAgentServiceAgentWorkflow : AgentWorkflowBase Inheritance object AgentWorkflowBase AzureAIAgentServiceAgentWorkflow Inherited Members AgentWorkflowBase.Name AgentWorkflowBase.PackageName AgentWorkflowBase.ClassName AgentWorkflowBase.WorkflowHost AgentWorkflowBase.ResourceObjectIds AgentWorkflowBase.Properties AgentWorkflowBase.MainAIModelObjectId AgentWorkflowBase.MainPromptObjectId AgentWorkflowBase.RouterPromptObjectId AgentWorkflowBase.FilesPromptObjectId AgentWorkflowBase.FinalPromptObjectId AgentWorkflowBase.AIProjectObjectId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentId The Azure AI Agent ID for the agent workflow. [JsonPropertyName(\"agent_id\")] public string? AgentId { get; set; } Property Value string ProjectConnectionString The Azure AI project connection string for the agent workflow. [JsonPropertyName(\"project_connection_string\")] public string? ProjectConnectionString { get; set; } Property Value string Type The workflow resource associated with the agent. [JsonIgnore] public override string Type { get; } Property Value string VectorStoreId The vector store ID for the agent. [JsonPropertyName(\"vector_store_id\")] public string? VectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AzureOpenAIAssistantsAgentWorkflow.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.AzureOpenAIAssistantsAgentWorkflow.html",
    "title": "Class AzureOpenAIAssistantsAgentWorkflow | FoundationaLLM",
    "summary": "Class AzureOpenAIAssistantsAgentWorkflow Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Provides an agent workflow configuration for an Azure OpenAI Assistants workflow. public class AzureOpenAIAssistantsAgentWorkflow : AgentWorkflowBase Inheritance object AgentWorkflowBase AzureOpenAIAssistantsAgentWorkflow Inherited Members AgentWorkflowBase.Name AgentWorkflowBase.PackageName AgentWorkflowBase.ClassName AgentWorkflowBase.WorkflowHost AgentWorkflowBase.ResourceObjectIds AgentWorkflowBase.Properties AgentWorkflowBase.MainAIModelObjectId AgentWorkflowBase.MainPromptObjectId AgentWorkflowBase.RouterPromptObjectId AgentWorkflowBase.FilesPromptObjectId AgentWorkflowBase.FinalPromptObjectId AgentWorkflowBase.AIProjectObjectId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssistantId The OpenAI Assistant ID for the agent workflow. [JsonPropertyName(\"assistant_id\")] public string? AssistantId { get; set; } Property Value string Type The workflow resource associated with the agent. [JsonIgnore] public override string Type { get; } Property Value string VectorStoreId The vector store ID for the assistant. [JsonPropertyName(\"vector_store_id\")] public string? VectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.ExternalAgentWorkflow.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.ExternalAgentWorkflow.html",
    "title": "Class ExternalAgentWorkflow | FoundationaLLM",
    "summary": "Class ExternalAgentWorkflow Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Provides an agent workflow configuration for an External Agent workflow loaded via an external module. public class ExternalAgentWorkflow : AgentWorkflowBase Inheritance object AgentWorkflowBase ExternalAgentWorkflow Inherited Members AgentWorkflowBase.Name AgentWorkflowBase.PackageName AgentWorkflowBase.ClassName AgentWorkflowBase.WorkflowHost AgentWorkflowBase.ResourceObjectIds AgentWorkflowBase.Properties AgentWorkflowBase.MainAIModelObjectId AgentWorkflowBase.MainPromptObjectId AgentWorkflowBase.RouterPromptObjectId AgentWorkflowBase.FilesPromptObjectId AgentWorkflowBase.FinalPromptObjectId AgentWorkflowBase.AIProjectObjectId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Type The workflow resource associated with the agent. [JsonIgnore] public override string Type { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.LangChainExpressionLanguageAgentWorkflow.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.LangChainExpressionLanguageAgentWorkflow.html",
    "title": "Class LangChainExpressionLanguageAgentWorkflow | FoundationaLLM",
    "summary": "Class LangChainExpressionLanguageAgentWorkflow Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Provides an agent workflow configuration for a LangChain Expression Language workflow. public class LangChainExpressionLanguageAgentWorkflow : AgentWorkflowBase Inheritance object AgentWorkflowBase LangChainExpressionLanguageAgentWorkflow Inherited Members AgentWorkflowBase.Name AgentWorkflowBase.PackageName AgentWorkflowBase.ClassName AgentWorkflowBase.WorkflowHost AgentWorkflowBase.ResourceObjectIds AgentWorkflowBase.Properties AgentWorkflowBase.MainAIModelObjectId AgentWorkflowBase.MainPromptObjectId AgentWorkflowBase.RouterPromptObjectId AgentWorkflowBase.FilesPromptObjectId AgentWorkflowBase.FinalPromptObjectId AgentWorkflowBase.AIProjectObjectId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Type The workflow resource associated with the agent. [JsonIgnore] public override string Type { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.LangGraphReactAgentWorkflow.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.LangGraphReactAgentWorkflow.html",
    "title": "Class LangGraphReactAgentWorkflow | FoundationaLLM",
    "summary": "Class LangGraphReactAgentWorkflow Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Assembly FoundationaLLM.Common.dll Provides an agent workflow configuration for a LangGraph ReAct Agent workflow. public class LangGraphReactAgentWorkflow : AgentWorkflowBase Inheritance object AgentWorkflowBase LangGraphReactAgentWorkflow Inherited Members AgentWorkflowBase.Name AgentWorkflowBase.PackageName AgentWorkflowBase.ClassName AgentWorkflowBase.WorkflowHost AgentWorkflowBase.ResourceObjectIds AgentWorkflowBase.Properties AgentWorkflowBase.MainAIModelObjectId AgentWorkflowBase.MainPromptObjectId AgentWorkflowBase.RouterPromptObjectId AgentWorkflowBase.FilesPromptObjectId AgentWorkflowBase.FinalPromptObjectId AgentWorkflowBase.AIProjectObjectId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties GraphRecursionLimit When using LangGraph, the recursion limit sets the number of supersteps that the graph is allowed to execute before it raises an error. The default value is 25. Set this value to null to use the default. [JsonPropertyName(\"graph_recursion_limit\")] public int? GraphRecursionLimit { get; set; } Property Value int? Type The workflow resource associated with the agent. [JsonIgnore] public override string Type { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Classes AgentWorkflowAIModel Associates a workflow AI model and its associated model parameter overrides. AgentWorkflowBase Provides a workflow configuration for an agent. AgentWorkflowTypes Contains constants for the types of agent workflows. AzureAIAgentServiceAgentWorkflow Provides an agent workflow configuration for an Azure AI Agent Service workflow. AzureOpenAIAssistantsAgentWorkflow Provides an agent workflow configuration for an Azure OpenAI Assistants workflow. ExternalAgentWorkflow Provides an agent workflow configuration for an External Agent workflow loaded via an external module. LangChainExpressionLanguageAgentWorkflow Provides an agent workflow configuration for a LangChain Expression Language workflow. LangGraphReactAgentWorkflow Provides an agent workflow configuration for a LangGraph ReAct Agent workflow."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.KnowledgeManagementAgent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.KnowledgeManagementAgent.html",
    "title": "Class KnowledgeManagementAgent | FoundationaLLM",
    "summary": "Class KnowledgeManagementAgent Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll The Knowledge Management agent metadata model. public class KnowledgeManagementAgent : AgentBase Inheritance object ResourceName ResourceBase AgentBase KnowledgeManagementAgent Inherited Members AgentBase.Type AgentBase.SessionsEnabled AgentBase.TextRewriteSettings AgentBase.CacheSettings AgentBase.ConversationHistorySettings AgentBase.GatekeeperSettings AgentBase.Workflow AgentBase.Tools AgentBase.VirtualSecurityGroupId AgentBase.ShowMessageTokens AgentBase.ShowMessageRating AgentBase.ShowViewPrompt AgentBase.ShowFileUpload AgentBase.AgentType AgentBase.HasAzureOpenAIAssistantsWorkflow() AgentBase.HasAzureAIAgentServiceWorkflow() ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementAgent() Set default property values. public KnowledgeManagementAgent() Properties InlineContext Whether the agent has an inline context and does not rely on an external resource. [JsonPropertyName(\"inline_context\")] public bool InlineContext { get; set; } Property Value bool Vectorization Gets or sets the vectorization settings for the agent. [Obsolete(\"Use knowledge search configuration at the tool level. This property will be removed in future versions.\")] [JsonPropertyName(\"vectorization\")] public AgentVectorizationSettings? Vectorization { get; set; } Property Value AgentVectorizationSettings"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.KnowledgeSearchSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.KnowledgeSearchSettings.html",
    "title": "Class KnowledgeSearchSettings | FoundationaLLM",
    "summary": "Class KnowledgeSearchSettings Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Provides the settings for knowledge search. public class KnowledgeSearchSettings Inheritance object KnowledgeSearchSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileUploadDataPipelineObjectId The object identifier of the data pipeline used to process uploaded files. public required string FileUploadDataPipelineObjectId { get; set; } Property Value string FileUploadVectorDatabaseObjectId The object identifier of the vector database used to store the processed uploaded files. public required string FileUploadVectorDatabaseObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.Tool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.Tool.html",
    "title": "Class Tool | FoundationaLLM",
    "summary": "Class Tool Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Tool resource. public class Tool : ResourceBase Inheritance object ResourceName ResourceBase Tool Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category Gets or sets the category of the tool. [JsonPropertyName(\"category\")] public string Category { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.Workflow.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.Workflow.html",
    "title": "Class Workflow | FoundationaLLM",
    "summary": "Class Workflow Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Assembly FoundationaLLM.Common.dll Workflow resource. public class Workflow : ResourceBase Inheritance object ResourceName ResourceBase Workflow Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Agent.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Agent Namespaces FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentAccessTokens FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentFiles FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentWorkflows Classes AgentBase Base agent metadata model. AgentCacheSettings Provides agent-related caching settings. AgentConversationHistorySettings Provides agent-related conversation history settings. AgentGatekeeperSettings Provides agent-related gatekeeper settings. AgentOrchestrationSettings Provides agent-related orchestration settings. AgentSemanticCacheSettings Provides agent-related cache settings for the semantic cache. AgentTextRewriteSettings Provides agent-related text rewrite settings. AgentTool Prvides the settings for a tool that is registered with the agent. AgentTypes Contains constants for the types of resources managed by the FoundationaLLM.Agent resource provider. AgentUserPromptRewriteSettings Provides agent-related user prompt rewrite settings. AgentVectorizationSettings Vectorization settings related to a knowledge management agent. KnowledgeManagementAgent The Knowledge Management agent metadata model. KnowledgeSearchSettings Provides the settings for knowledge search. Tool Tool resource. Workflow Workflow resource."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.AttachmentFile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.AttachmentFile.html",
    "title": "Class AttachmentFile | FoundationaLLM",
    "summary": "Class AttachmentFile Namespace FoundationaLLM.Common.Models.ResourceProviders.Attachment Assembly FoundationaLLM.Common.dll Attachment resource. public class AttachmentFile : ResourceBase Inheritance object ResourceName ResourceBase AttachmentFile Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content File stream of the attachment contents. [JsonPropertyName(\"content\")] public byte[]? Content { get; set; } Property Value byte[] ContentType The mime content type of the attachment. [JsonPropertyName(\"content_type\")] public string? ContentType { get; set; } Property Value string OriginalFileName The original name of the file (as it was uploaded). [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string Path Path for the attachment, starting with the container name. [JsonPropertyName(\"path\")] public string Path { get; set; } Property Value string SecondaryProvider Gets or sets the secondary provider of the attachment. [JsonPropertyName(\"secondary_provider\")] public string? SecondaryProvider { get; set; } Property Value string Remarks The only secondary provider currently supported is FoundationaLLM.AzureOpenAI. SecondaryProviderObjectId Gets or sets the object identifier of the secondary provider of the attachment. [JsonPropertyName(\"secondary_provider_object_id\")] public string? SecondaryProviderObjectId { get; set; } Property Value string Remarks The only secondary provider currently supported is FoundationaLLM.AzureOpenAI. In this case, the object identifier is the Azure OpenAI file identifier. Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.AttachmentReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.AttachmentReference.html",
    "title": "Class AttachmentReference | FoundationaLLM",
    "summary": "Class AttachmentReference Namespace FoundationaLLM.Common.Models.ResourceProviders.Attachment Assembly FoundationaLLM.Common.dll Contains a reference to an attachment. public class AttachmentReference : FileReference Inheritance object ResourceReference FileReference AttachmentReference Inherited Members FileReference.OriginalFilename FileReference.ContentType FileReference.Size FileReference.UPN FileReference.Id ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the resource. [JsonIgnore] [JsonIgnore] public override Type ResourceType { get; } Property Value Type SecondaryProvider Indicates an optional secondary provider for the attachment. public string? SecondaryProvider { get; set; } Property Value string Remarks The only secondary provider currently supported is the FoundationaLLM.AzureOpenAI provider. SecondaryProviderObjectId Gets or sets the object identifier of the secondary provider of the attachment. public string? SecondaryProviderObjectId { get; set; } Property Value string Remarks The only secondary provider currently supported is FoundationaLLM.AzureOpenAI. In this case, the object identifier is the Azure OpenAI file identifier."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Attachment.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Attachment | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Attachment Classes AttachmentFile Attachment resource. AttachmentReference Contains a reference to an attachment."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.AssignmentBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.AssignmentBase.html",
    "title": "Class AssignmentBase | FoundationaLLM",
    "summary": "Class AssignmentBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Authorization Assembly FoundationaLLM.Common.dll Represents an authorization assignment. public class AssignmentBase : ResourceBase Inheritance object ResourceName ResourceBase AssignmentBase Derived PolicyAssignment RoleAssignment Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This class should never be used directly. Instead, use RoleAssignment or PolicyAssignment. Properties PrincipalId The unique identifier of the security principal which is the target of the assignment. [JsonPropertyName(\"principal_id\")] public required string PrincipalId { get; set; } Property Value string PrincipalType The type of the security principal which is the target of the assignment. Can be User, Group, or ServicePrincipal. [JsonPropertyName(\"principal_type\")] public required string PrincipalType { get; set; } Property Value string Scope The scope at which the assignment is made. [JsonPropertyName(\"scope\")] public required string Scope { get; set; } Property Value string ScopeResourcePath The ResourcePath resulting from parsing the scope path. [JsonIgnore] public ResourcePath? ScopeResourcePath { get; set; } Property Value ResourcePath"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.RoleAssignment.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.RoleAssignment.html",
    "title": "Class RoleAssignment | FoundationaLLM",
    "summary": "Class RoleAssignment Namespace FoundationaLLM.Common.Models.ResourceProviders.Authorization Assembly FoundationaLLM.Common.dll Represents an RBAC role assignment. public class RoleAssignment : AssignmentBase Inheritance object ResourceName ResourceBase AssignmentBase RoleAssignment Inherited Members AssignmentBase.PrincipalId AssignmentBase.PrincipalType AssignmentBase.Scope AssignmentBase.ScopeResourcePath ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllowedActions The explicit list of all allowed actions resulting from expanding all wildcards. [JsonIgnore] public HashSet<string> AllowedActions { get; set; } Property Value HashSet<string> RoleDefinition The RoleDefinition referenced by the RoleDefinitionId property. [JsonIgnore] public RoleDefinition? RoleDefinition { get; set; } Property Value RoleDefinition RoleDefinitionId The unique identifier of the role definition. [JsonPropertyName(\"role_definition_id\")] public required string RoleDefinitionId { get; set; } Property Value string Methods Enrich(List<string>) Enriches the role assignment with additional information. public void Enrich(List<string> allowedInstanceIds) Parameters allowedInstanceIds List<string> The list of FoundationaLLM instance identifiers used as context for the enrichment. Remarks This method is called when the role assignments are loaded into memory. Besides the actual enrichment, it also ensures that the Scope property is set correctly."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.RoleDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.RoleDefinition.html",
    "title": "Class RoleDefinition | FoundationaLLM",
    "summary": "Class RoleDefinition Namespace FoundationaLLM.Common.Models.ResourceProviders.Authorization Assembly FoundationaLLM.Common.dll Defines a security role used in FoundationaLLM RBAC public class RoleDefinition : ResourceBase Inheritance object ResourceName ResourceBase RoleDefinition Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssignableScopes The list of scopes at which the role can be assigned. [JsonPropertyName(\"assignable_scopes\")] [JsonPropertyOrder(1)] public List<string> AssignableScopes { get; set; } Property Value List<string> Deleted Indicates whether the resource has been logically deleted. [JsonIgnore] public override bool Deleted { get; set; } Property Value bool Permissions The permissions associated with the security role definition. [JsonPropertyName(\"permissions\")] [JsonPropertyOrder(2)] public List<RoleDefinitionPermissions> Permissions { get; set; } Property Value List<RoleDefinitionPermissions> Methods GetAllowedActions() public List<string> GetAllowedActions() Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.RoleDefinitionPermissions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.RoleDefinitionPermissions.html",
    "title": "Class RoleDefinitionPermissions | FoundationaLLM",
    "summary": "Class RoleDefinitionPermissions Namespace FoundationaLLM.Common.Models.ResourceProviders.Authorization Assembly FoundationaLLM.Common.dll Manages the permissions associated with a security role definition. public class RoleDefinitionPermissions Inheritance object RoleDefinitionPermissions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions Allowed control plane actions. [JsonPropertyName(\"actions\")] [JsonPropertyOrder(1)] public List<string> Actions { get; set; } Property Value List<string> DataActions Allowed data plane actions. [JsonPropertyName(\"data_actions\")] [JsonPropertyOrder(3)] public List<string> DataActions { get; set; } Property Value List<string> NotActions Denied control plane actions. [JsonPropertyName(\"not_actions\")] [JsonPropertyOrder(2)] public List<string> NotActions { get; set; } Property Value List<string> NotDataActions Denied data plane actions. [JsonPropertyName(\"not_data_actions\")] [JsonPropertyOrder(4)] public List<string> NotDataActions { get; set; } Property Value List<string> Methods GetAllowedActions() public List<string> GetAllowedActions() Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Authorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Authorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Authorization Classes AssignmentBase Represents an authorization assignment. RoleAssignment Represents an RBAC role assignment. RoleDefinition Defines a security role used in FoundationaLLM RBAC RoleDefinitionPermissions Manages the permissions associated with a security role definition."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentConversationMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentConversationMapping.html",
    "title": "Class AzureAIAgentConversationMapping | FoundationaLLM",
    "summary": "Class AzureAIAgentConversationMapping Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureAI Assembly FoundationaLLM.Common.dll Provides details about a conversation mapping between FoundationaLLM and the Azure AI Agent Service. public class AzureAIAgentConversationMapping : AzureAIAgentResourceBase Inheritance object ResourceName ResourceBase AzureCosmosDBResource AzureAIAgentResourceBase AzureAIAgentConversationMapping Inherited Members AzureAIAgentResourceBase.Type AzureAIAgentResourceBase.PartitionKey AzureAIAgentResourceBase.ProjectConnectionString AzureCosmosDBResource.Id AzureCosmosDBResource.UPN AzureCosmosDBResource.InstanceId ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAIAgentConversationMapping() Set default property values. public AzureAIAgentConversationMapping() Properties AzureAIAgentId The Azure AI Agent Service agent id. [JsonPropertyName(\"azureai_agent_id\")] public required string AzureAIAgentId { get; set; } Property Value string AzureAIAgentThreadCreatedOn The time at which the Azure AI Agent Service thread was created. [JsonPropertyName(\"azureai_agent_thread_created_on\")] public DateTimeOffset? AzureAIAgentThreadCreatedOn { get; set; } Property Value DateTimeOffset? AzureAIAgentThreadId The Azure AI Agent Service thread id associated with the FoundationaLLM conversation (session) id. [JsonPropertyName(\"azure_ai_agent_thread_id\")] public string? AzureAIAgentThreadId { get; set; } Property Value string AzureAIAgentVectorStoreCreatedOn The time at which the Azure AI Agent Service vector store was created. [JsonPropertyName(\"azureai_agent_vector_store_created_on\")] public DateTimeOffset? AzureAIAgentVectorStoreCreatedOn { get; set; } Property Value DateTimeOffset? AzureAIAgentVectorStoreId The Azure AI Agent service vector store id associated with the FoundationaLLM session (conversation) id. [JsonPropertyName(\"azureai_agent_vector_store_id\")] public string? AzureAIAgentVectorStoreId { get; set; } Property Value string ConversationId The FoundationaLLM conversation (session) id. [JsonPropertyName(\"conversation_id\")] public required string ConversationId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentConversationMappingUpsertResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentConversationMappingUpsertResult.html",
    "title": "Class AzureAIAgentConversationMappingUpsertResult | FoundationaLLM",
    "summary": "Class AzureAIAgentConversationMappingUpsertResult Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureAI Assembly FoundationaLLM.Common.dll Represents the result of an upsert operation for an AzureAIAgentConversationMapping object. public class AzureAIAgentConversationMappingUpsertResult : ResourceProviderUpsertResult<AzureAIAgentConversationMapping> Inheritance object ResourceProviderUpsertResult ResourceProviderUpsertResult<AzureAIAgentConversationMapping> AzureAIAgentConversationMappingUpsertResult Inherited Members ResourceProviderUpsertResult<AzureAIAgentConversationMapping>.Resource ResourceProviderUpsertResult<AzureAIAgentConversationMapping>.ToActionResult() ResourceProviderUpsertResult.ObjectId ResourceProviderUpsertResult.ResourceExists object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NewAzureAIAgentThreadId The identifier of the newly created Azure AI Agent Service thread id (if any). public string? NewAzureAIAgentThreadId { get; set; } Property Value string NewAzureAIAgentVectorStoreId The identifier of the newly created Azure AI Agent Service vector store id (if any). public string? NewAzureAIAgentVectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentFileMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentFileMapping.html",
    "title": "Class AzureAIAgentFileMapping | FoundationaLLM",
    "summary": "Class AzureAIAgentFileMapping Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureAI Assembly FoundationaLLM.Common.dll Provides details about a file mapping between FoundationaLLM and the Azure AI Agent Service. public class AzureAIAgentFileMapping : AzureAIAgentResourceBase, IFileMapping Inheritance object ResourceName ResourceBase AzureCosmosDBResource AzureAIAgentResourceBase AzureAIAgentFileMapping Implements IFileMapping Inherited Members AzureAIAgentResourceBase.Type AzureAIAgentResourceBase.PartitionKey AzureAIAgentResourceBase.ProjectConnectionString AzureCosmosDBResource.Id AzureCosmosDBResource.UPN AzureCosmosDBResource.InstanceId ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAIAgentFileMapping() Set default property values. public AzureAIAgentFileMapping() Properties AzureAIAgentFileGeneratedOn The time when the file was generated by the Azure AI Agent service. [JsonPropertyName(\"azureai_agent_file_generated_on\")] public DateTimeOffset? AzureAIAgentFileGeneratedOn { get; set; } Property Value DateTimeOffset? AzureAIAgentFileId The Azure AI Agent Service file id associated with the FoundationaLLM file (attachment) id. [JsonPropertyName(\"azureai_agent_file_id\")] public required string AzureAIAgentFileId { get; set; } Property Value string AzureAIAgentFileUploadedOn The time when the file was uploaded to the Azure AI Agent service. [JsonPropertyName(\"azureai_agent_file_uploaded_on\")] public DateTimeOffset? AzureAIAgentFileUploadedOn { get; set; } Property Value DateTimeOffset? AzureAIAgentVectorStoreId The OpenAI vector store id holding the vectorized content of the OpenAI file. [JsonPropertyName(\"azureai_agent_vector_store_id\")] public string? AzureAIAgentVectorStoreId { get; set; } Property Value string FileContentType The content type of the file. [JsonPropertyName(\"file_content_type\")] public required string FileContentType { get; set; } Property Value string FileObjectId The FoundationaLLM.Attachment resource object id. [JsonPropertyName(\"file_object_id\")] public required string FileObjectId { get; set; } Property Value string FileRequiresVectorization Indicates whether the file requires vectorization or not. [JsonPropertyName(\"file_requires_vectorization\")] public bool FileRequiresVectorization { get; set; } Property Value bool OriginalFileName The original file name of the file. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentResourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIAgentResourceBase.html",
    "title": "Class AzureAIAgentResourceBase | FoundationaLLM",
    "summary": "Class AzureAIAgentResourceBase Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureAI Assembly FoundationaLLM.Common.dll Basic model for Azure AI Agent Service resources managed by the FoundationaLLM.AzureAI resource manager. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AzureAIAgentConversationMapping), \"AzureAIAgentConversationMapping\")] [JsonDerivedType(typeof(AzureAIAgentFileMapping), \"AzureAIAgentFileMapping\")] public class AzureAIAgentResourceBase : AzureCosmosDBResource Inheritance object ResourceName ResourceBase AzureCosmosDBResource AzureAIAgentResourceBase Derived AzureAIAgentConversationMapping AzureAIAgentFileMapping Inherited Members AzureCosmosDBResource.Id AzureCosmosDBResource.UPN AzureCosmosDBResource.InstanceId ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PartitionKey The logical partition key for the conversation mapping. public string PartitionKey { get; } Property Value string Remarks This property is used by storage providers that support partitioning of data (e.g. Azure Cosmos DB). ProjectConnectionString The Azure AI project connection string for the agent resource. public required string ProjectConnectionString { get; set; } Property Value string Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIProject.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.AzureAIProject.html",
    "title": "Class AzureAIProject | FoundationaLLM",
    "summary": "Class AzureAIProject Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureAI Assembly FoundationaLLM.Common.dll Provides an Azure AI project configuration for resources managed by the FoundationaLLM.AzureAI resource manager. public class AzureAIProject : ResourceBase Inheritance object ResourceName ResourceBase AzureAIProject Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAIProject() Set default property values. public AzureAIProject() Properties ProjectConnectionString The Azure AI project connection string for resources managed by the FoundationaLLM.AzureAI resource manager. [JsonPropertyName(\"project_connection_string\")] public required string ProjectConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureAI.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureAI | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureAI Classes AzureAIAgentConversationMapping Provides details about a conversation mapping between FoundationaLLM and the Azure AI Agent Service. AzureAIAgentConversationMappingUpsertResult Represents the result of an upsert operation for an AzureAIAgentConversationMapping object. AzureAIAgentFileMapping Provides details about a file mapping between FoundationaLLM and the Azure AI Agent Service. AzureAIAgentResourceBase Basic model for Azure AI Agent Service resources managed by the FoundationaLLM.AzureAI resource manager. AzureAIProject Provides an Azure AI project configuration for resources managed by the FoundationaLLM.AzureAI resource manager."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureCosmosDBResource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureCosmosDBResource.html",
    "title": "Class AzureCosmosDBResource | FoundationaLLM",
    "summary": "Class AzureCosmosDBResource Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Basic model for resources persisted in Azure Cosmos DB. public class AzureCosmosDBResource : ResourceBase Inheritance object ResourceName ResourceBase AzureCosmosDBResource Derived AzureAIAgentResourceBase AzureOpenAIResourceBase DataPipelineRun Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The unique identifier of the resource. [JsonPropertyName(\"id\")] [JsonPropertyOrder(-200)] public required string Id { get; set; } Property Value string InstanceId The FoundationaLLM instance identifier. [JsonPropertyName(\"instance_id\")] [JsonPropertyOrder(-8)] public required string InstanceId { get; set; } Property Value string UPN The user principal name (UPN) of the user who created the resource. [JsonPropertyName(\"upn\")] [JsonPropertyOrder(-9)] public required string UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIAssistant.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIAssistant.html",
    "title": "Class AzureOpenAIAssistant | FoundationaLLM",
    "summary": "Class AzureOpenAIAssistant Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Provides details about an Azure OpenAI Assistant. public class AzureOpenAIAssistant : ResourceBase Inheritance object ResourceName ResourceBase AzureOpenAIAssistant Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIConversationMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIConversationMapping.html",
    "title": "Class AzureOpenAIConversationMapping | FoundationaLLM",
    "summary": "Class AzureOpenAIConversationMapping Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Provides details about a conversation mapping between FoundationaLLM and Azure OpenAI Assistants. public class AzureOpenAIConversationMapping : AzureOpenAIResourceBase Inheritance object ResourceName ResourceBase AzureCosmosDBResource AzureOpenAIResourceBase AzureOpenAIConversationMapping Inherited Members AzureOpenAIResourceBase.Type AzureOpenAIResourceBase.PartitionKey AzureOpenAIResourceBase.OpenAIEndpoint AzureCosmosDBResource.Id AzureCosmosDBResource.UPN AzureCosmosDBResource.InstanceId ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAIConversationMapping() Set default property values. public AzureOpenAIConversationMapping() Properties ConversationId The FoundationaLLM conversation (session) id. [JsonPropertyName(\"conversation_id\")] public required string ConversationId { get; set; } Property Value string OpenAIAssistantsAssistantId The Azure OpenAI Assistants assistant id. [JsonPropertyName(\"openai_assistants_assistant_id\")] public required string OpenAIAssistantsAssistantId { get; set; } Property Value string OpenAIAssistantsThreadCreatedOn The time at which the Azure OpenAI Assistants thread was created. [JsonPropertyName(\"openai_assistants_thread_created_on\")] public DateTimeOffset? OpenAIAssistantsThreadCreatedOn { get; set; } Property Value DateTimeOffset? OpenAIAssistantsThreadId The Azure OpenAI Assistants thread id associated with the FoundationaLLM conversation (session) id. [JsonPropertyName(\"openai_assistants_thread_id\")] public string? OpenAIAssistantsThreadId { get; set; } Property Value string OpenAIVectorStoreCreatedOn The time at which the Azure OpenAI vector store was created. [JsonPropertyName(\"openai_vector_store_created_on\")] public DateTimeOffset? OpenAIVectorStoreCreatedOn { get; set; } Property Value DateTimeOffset? OpenAIVectorStoreId The Azure OpenAI vector store id associated with the FoundationaLLM session (conversation) id. [JsonPropertyName(\"openai_vector_store_id\")] public string? OpenAIVectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIConversationMappingUpsertResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIConversationMappingUpsertResult.html",
    "title": "Class AzureOpenAIConversationMappingUpsertResult | FoundationaLLM",
    "summary": "Class AzureOpenAIConversationMappingUpsertResult Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Represents the result of an upsert operation for an AzureOpenAIConversationMapping object. public class AzureOpenAIConversationMappingUpsertResult : ResourceProviderUpsertResult<AzureOpenAIConversationMapping> Inheritance object ResourceProviderUpsertResult ResourceProviderUpsertResult<AzureOpenAIConversationMapping> AzureOpenAIConversationMappingUpsertResult Inherited Members ResourceProviderUpsertResult<AzureOpenAIConversationMapping>.Resource ResourceProviderUpsertResult<AzureOpenAIConversationMapping>.ToActionResult() ResourceProviderUpsertResult.ObjectId ResourceProviderUpsertResult.ResourceExists object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties NewOpenAIAssistantThreadId The identifier of the newly created OpenAI assistant thread id (if any). public string? NewOpenAIAssistantThreadId { get; set; } Property Value string NewOpenAIVectorStoreId The identifier of the newly created OpenAI assistant vector store id (if any). public string? NewOpenAIVectorStoreId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIFileMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIFileMapping.html",
    "title": "Class AzureOpenAIFileMapping | FoundationaLLM",
    "summary": "Class AzureOpenAIFileMapping Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Provides details about a file mapping between FoundationaLLM and Azure OpenAI. public class AzureOpenAIFileMapping : AzureOpenAIResourceBase, IFileMapping Inheritance object ResourceName ResourceBase AzureCosmosDBResource AzureOpenAIResourceBase AzureOpenAIFileMapping Implements IFileMapping Inherited Members AzureOpenAIResourceBase.Type AzureOpenAIResourceBase.PartitionKey AzureOpenAIResourceBase.OpenAIEndpoint AzureCosmosDBResource.Id AzureCosmosDBResource.UPN AzureCosmosDBResource.InstanceId ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAIFileMapping() Set default property values. public AzureOpenAIFileMapping() Properties FileContentType The content type of the file. [JsonPropertyName(\"file_content_type\")] public required string FileContentType { get; set; } Property Value string FileObjectId The FoundationaLLM.Attachment resource object id. [JsonPropertyName(\"file_object_id\")] public required string FileObjectId { get; set; } Property Value string FileRequiresVectorization Indicates whether the file requires vectorization or not. [JsonPropertyName(\"file_requires_vectorization\")] public bool FileRequiresVectorization { get; set; } Property Value bool OpenAIAssistantsFileGeneratedOn The time when the file was generated by OpenAI. [JsonPropertyName(\"openai_assistants_file_generated_on\")] public DateTimeOffset? OpenAIAssistantsFileGeneratedOn { get; set; } Property Value DateTimeOffset? OpenAIFileId The OpenAI file id associated with the FoundationaLLM file (attachment) id. [JsonPropertyName(\"openai_file_id\")] public required string OpenAIFileId { get; set; } Property Value string OpenAIFileUploadedOn The time when the file was uploaded to OpenAI. [JsonPropertyName(\"openai_file_uploaded_on\")] public DateTimeOffset? OpenAIFileUploadedOn { get; set; } Property Value DateTimeOffset? OpenAIVectorStoreId The OpenAI vector store id holding the vectorized content of the OpenAI file. [JsonPropertyName(\"openai_vector_store_id\")] public string? OpenAIVectorStoreId { get; set; } Property Value string OriginalFileName The original file name of the file. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIResourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.AzureOpenAIResourceBase.html",
    "title": "Class AzureOpenAIResourceBase | FoundationaLLM",
    "summary": "Class AzureOpenAIResourceBase Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Assembly FoundationaLLM.Common.dll Basic model for resources managed by the FoundationaLLM.AzureOpenAI resource manager. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AzureOpenAIConversationMapping), \"AzureOpenAIConversationMapping\")] [JsonDerivedType(typeof(AzureOpenAIFileMapping), \"AzureOpenAIFileMapping\")] public class AzureOpenAIResourceBase : AzureCosmosDBResource Inheritance object ResourceName ResourceBase AzureCosmosDBResource AzureOpenAIResourceBase Derived AzureOpenAIConversationMapping AzureOpenAIFileMapping Inherited Members AzureCosmosDBResource.Id AzureCosmosDBResource.UPN AzureCosmosDBResource.InstanceId ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties OpenAIEndpoint The Azure OpenAI endpoint. public required string OpenAIEndpoint { get; set; } Property Value string PartitionKey The logical partition key for the conversation mapping. public string PartitionKey { get; } Property Value string Remarks This property is used by storage providers that support partitioning of data (e.g. Azure Cosmos DB). Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI Classes AzureOpenAIAssistant Provides details about an Azure OpenAI Assistant. AzureOpenAIConversationMapping Provides details about a conversation mapping between FoundationaLLM and Azure OpenAI Assistants. AzureOpenAIConversationMappingUpsertResult Represents the result of an upsert operation for an AzureOpenAIConversationMapping object. AzureOpenAIFileMapping Provides details about a file mapping between FoundationaLLM and Azure OpenAI. AzureOpenAIResourceBase Basic model for resources managed by the FoundationaLLM.AzureOpenAI resource manager."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointCategory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointCategory.html",
    "title": "Enum APIEndpointCategory | FoundationaLLM",
    "summary": "Enum APIEndpointCategory Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll The category for api endpoint class. public enum APIEndpointCategory Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureAIDirect = 4 Endpoints for direct interactions with Microsoft Azure AI services. AzureOpenAIDirect = 5 Endpoints for direct interactions with Microsoft Azure OpenAI services. ExternalOrchestration = 1 Endpoints for external orchestration services. FileStoreConnector = 6 Endpoints for connecting to external file stores, such as OneDrive. Gatekeeper = 3 Endpoints related to Gatekeeper. General = 7 General endpoints (internal APIs other than Orchestration, ExternalOrchestration, LLM, Gatekeeper, AzureAIDirect, or AzureOpenAIDirect. LLM = 2 Endpoints for Large Language Models. Orchestration = 0 Endpoints for internal orchestration services (e.g. LangChain API, SemanticKernel API)."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointConfiguration.html",
    "title": "Class APIEndpointConfiguration | FoundationaLLM",
    "summary": "Class APIEndpointConfiguration Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Provides the configuration for an API endpoint resource. public class APIEndpointConfiguration : ResourceBase Inheritance object ResourceName ResourceBase APIEndpointConfiguration Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors APIEndpointConfiguration() Creates a new instance of APIEndpointConfiguration. public APIEndpointConfiguration() Properties APIVersion The version to use when calling the API represented by the endpoint. [JsonPropertyName(\"api_version\")] public string? APIVersion { get; set; } Property Value string AuthenticationParameters Dictionary with values used for authentication. For the list of supported keys, see AuthenticationParametersKeys. [JsonPropertyName(\"authentication_parameters\")] public Dictionary<string, object> AuthenticationParameters { get; set; } Property Value Dictionary<string, object> AuthenticationType The type of authentication required for accessing the API. [JsonPropertyName(\"authentication_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes Category The api endpoint category. [JsonPropertyName(\"category\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required APIEndpointCategory Category { get; set; } Property Value APIEndpointCategory OperationType Type of operation the endpoint is performing. This value should be completions or chat. Default value is chat. [JsonPropertyName(\"operation_type\")] public string? OperationType { get; set; } Property Value string Provider The API endpoint provider. For a list of available API endpoint providers, see APIEndpointProviders. [JsonPropertyName(\"provider\")] public string? Provider { get; set; } Property Value string RetryStrategyName The name of the retry strategy. [JsonPropertyName(\"retry_strategy_name\")] public required string RetryStrategyName { get; set; } Property Value string StatusEndpoint The relative path for the status endpoint of the API endpoint, if available. [JsonPropertyName(\"status_endpoint\")] public string? StatusEndpoint { get; set; } Property Value string Subcategory The api endpoint subcategory. [JsonPropertyName(\"subcategory\")] [JsonConverter(typeof(JsonStringEnumConverter))] public APIEndpointSubcategory? Subcategory { get; set; } Property Value APIEndpointSubcategory? TimeoutSeconds The timeout duration in seconds for API calls. [JsonPropertyName(\"timeout_seconds\")] public required int TimeoutSeconds { get; set; } Property Value int Url The base URL of the API endpoint. [JsonPropertyName(\"url\")] public required string Url { get; set; } Property Value string UrlExceptions A list of URL exceptions. [JsonPropertyName(\"url_exceptions\")] public List<UrlException> UrlExceptions { get; set; } Property Value List<UrlException>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointConfigurationFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointConfigurationFilter.html",
    "title": "Class APIEndpointConfigurationFilter | FoundationaLLM",
    "summary": "Class APIEndpointConfigurationFilter Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Provides configuration for filtering APIEndpointConfiguration resources in the FoundationaLLM.Configuration resource provider. public class APIEndpointConfigurationFilter : ResourceFilter Inheritance object ResourceFilter APIEndpointConfigurationFilter Inherited Members ResourceFilter.DefaultResource ResourceFilter.ObjectIDs object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category Gets or sets the category of the API endpoint configuration. [JsonPropertyName(\"category\")] [JsonConverter(typeof(JsonStringEnumConverter))] public APIEndpointCategory? Category { get; set; } Property Value APIEndpointCategory? Subcategory Gets or sets the subcategory of the API endpoint configuration. [JsonPropertyName(\"subcategory\")] [JsonConverter(typeof(JsonStringEnumConverter))] public APIEndpointSubcategory? Subcategory { get; set; } Property Value APIEndpointSubcategory?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointSubcategory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.APIEndpointSubcategory.html",
    "title": "Enum APIEndpointSubcategory | FoundationaLLM",
    "summary": "Enum APIEndpointSubcategory Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll The subcategory for api endpoint class. public enum APIEndpointSubcategory Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AIModel = 2 Denotes the subcategory for AI model endpoints, such as Azure OpenAI. Indexing = 1 Denotes the subcategory for indexing services. OneDriveWorkSchool = 0 Denotes the subcategory for OneDrive Work or School for the FileStoreConnector category."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyBase.html",
    "title": "Class AppConfigurationKeyBase | FoundationaLLM",
    "summary": "Class AppConfigurationKeyBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Azure App Configuration key model. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(AppConfigurationKeyValue), \"appconfiguration-key-value\")] [JsonDerivedType(typeof(AppConfigurationKeyVaultReference), \"appconfiguration-key-vault-reference\")] public class AppConfigurationKeyBase : ResourceBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase Derived AppConfigurationKeyValue AppConfigurationKeyVaultReference Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The content type of the value. [JsonPropertyName(\"content_type\")] public string? ContentType { get; set; } Property Value string Key The name of the App Configuration key. [JsonPropertyName(\"key\")] public string? Key { get; set; } Property Value string Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string Value The value of the App Configuration key. [JsonPropertyName(\"value\")] public string? Value { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyValue.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyValue.html",
    "title": "Class AppConfigurationKeyValue | FoundationaLLM",
    "summary": "Class AppConfigurationKeyValue Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Azure App Configuration key value model. public class AppConfigurationKeyValue : AppConfigurationKeyBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase AppConfigurationKeyValue Inherited Members AppConfigurationKeyBase.Type AppConfigurationKeyBase.Key AppConfigurationKeyBase.Value AppConfigurationKeyBase.ContentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyVaultReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.AppConfigurationKeyVaultReference.html",
    "title": "Class AppConfigurationKeyVaultReference | FoundationaLLM",
    "summary": "Class AppConfigurationKeyVaultReference Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Azure App Configuration key vault reference. public class AppConfigurationKeyVaultReference : AppConfigurationKeyBase Inheritance object ResourceName ResourceBase AppConfigurationKeyBase AppConfigurationKeyVaultReference Inherited Members AppConfigurationKeyBase.Type AppConfigurationKeyBase.Key AppConfigurationKeyBase.Value AppConfigurationKeyBase.ContentType ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KeyVaultSecretName The name of the Azure Key Vault secret being referenced. [JsonPropertyName(\"key_vault_secret_name\")] public string? KeyVaultSecretName { get; set; } Property Value string KeyVaultUri The URI of the Azure Key Vault service being referenced. [JsonPropertyName(\"key_vault_uri\")] public string? KeyVaultUri { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.ConfigurationValue-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.ConfigurationValue-1.html",
    "title": "Class ConfigurationValue<T> | FoundationaLLM",
    "summary": "Class ConfigurationValue<T> Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Provides a strongly typed configuration value with support for per-user exceptions. public class ConfigurationValue<T> Type Parameters T The type of the configuration value Inheritance object ConfigurationValue<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Exceptions Gets or sets the list of exceptions to the configuration value. [JsonPropertyName(\"value_exceptions\")] public List<ConfigurationValueException<T>> Exceptions { get; set; } Property Value List<ConfigurationValueException<T>> Value Gets or sets the value of the configuration entry. [JsonPropertyName(\"value\")] public required T Value { get; set; } Property Value T Methods Deserialize(string) Deserializes a JSON string into a ConfigurationValue<T>. public static ConfigurationValue<T> Deserialize(string json) Parameters json string The serialized representation of the configuration value. Returns ConfigurationValue<T> A ConfigurationValue<T> providing the configuration value. GetValueForUser(string) Gets the value of the configuration entry for the specified user. public T GetValueForUser(string userPrincipalName) Parameters userPrincipalName string The user principal name (UPN) of the user. Returns T The configuration value. Remarks The method returns the user-specific value if an active exception exists for the user. If not, the method returns the default value."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.ConfigurationValueException-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.ConfigurationValueException-1.html",
    "title": "Class ConfigurationValueException<T> | FoundationaLLM",
    "summary": "Class ConfigurationValueException<T> Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Provides the user-specific value of a strongly typed configuration value. public class ConfigurationValueException<T> Type Parameters T The type of the configuration value. Inheritance object ConfigurationValueException<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Enabled Gets or sets a value indicating whether the configuration value is enabled. [JsonPropertyName(\"enabled\")] public bool Enabled { get; set; } Property Value bool UserPrincipalName Gets or sets the user principal name for the user to which the exception applies. [JsonPropertyName(\"user_principal_name\")] public required string UserPrincipalName { get; set; } Property Value string Value Gets or sets the value of the configuration exception entry. [JsonPropertyName(\"value\")] public required T Value { get; set; } Property Value T"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.UrlException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.UrlException.html",
    "title": "Class UrlException | FoundationaLLM",
    "summary": "Class UrlException Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Assembly FoundationaLLM.Common.dll Represents an exception to the base URL. public class UrlException Inheritance object UrlException Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Enabled Indicates whether the exception is enabled. [JsonPropertyName(\"enabled\")] public required bool Enabled { get; set; } Property Value bool Url The alternative URL. [JsonPropertyName(\"url\")] public required string Url { get; set; } Property Value string UserPrincipalName The user principal name. [JsonPropertyName(\"user_principal_name\")] public required string UserPrincipalName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Configuration.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Configuration Classes APIEndpointConfiguration Provides the configuration for an API endpoint resource. APIEndpointConfigurationFilter Provides configuration for filtering APIEndpointConfiguration resources in the FoundationaLLM.Configuration resource provider. AppConfigurationKeyBase Azure App Configuration key model. AppConfigurationKeyValue Azure App Configuration key value model. AppConfigurationKeyVaultReference Azure App Configuration key vault reference. ConfigurationValueException<T> Provides the user-specific value of a strongly typed configuration value. ConfigurationValue<T> Provides a strongly typed configuration value with support for per-user exceptions. UrlException Represents an exception to the base URL. Enums APIEndpointCategory The category for api endpoint class. APIEndpointSubcategory The subcategory for api endpoint class."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Context.KnowledgeSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Context.KnowledgeSource.html",
    "title": "Class KnowledgeSource | FoundationaLLM",
    "summary": "Class KnowledgeSource Namespace FoundationaLLM.Common.Models.ResourceProviders.Context Assembly FoundationaLLM.Common.dll Represents a FoundationaLLM knowledge source. public class KnowledgeSource : ResourceBase Inheritance object ResourceName ResourceBase KnowledgeSource Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingDimensions Gets or sets the number of dimensions for the embeddings used in the knowledge source. [JsonPropertyName(\"embedding_dimensions\")] public required int EmbeddingDimensions { get; set; } Property Value int EmbeddingModel Gets or sets the embedding model used for the knowledge source. [JsonPropertyName(\"embedding_model\")] public required string EmbeddingModel { get; set; } Property Value string HasKnowledgeGraph Gets or sets a flag that indicates whether the knowledge source has a knowledge graph. [JsonPropertyName(\"has_knowledge_graph\")] public bool HasKnowledgeGraph { get; set; } Property Value bool VectorDatabaseObjectId Gets or sets the object identifier of the vector database associated with the knowledge source. [JsonPropertyName(\"vector_database_object_id\")] public required string VectorDatabaseObjectId { get; set; } Property Value string VectorStoreId Gets or sets the object identifier of the vector store associated with the knowledge source. [JsonPropertyName(\"vector_store_id\")] public string? VectorStoreId { get; set; } Property Value string Remarks If this value is null, the knowledge source queries must specify the vector store identifier explicitly."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Context.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Context.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Context | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Context Classes KnowledgeSource Represents a FoundationaLLM knowledge source."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineDataSource.html",
    "title": "Class DataPipelineDataSource | FoundationaLLM",
    "summary": "Class DataPipelineDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Provides the model for a data pipeline data source. public class DataPipelineDataSource : PluginComponent Inheritance object PluginConfiguration PluginComponent DataPipelineDataSource Inherited Members PluginComponent.Name PluginComponent.Description PluginConfiguration.PluginObjectId PluginConfiguration.PluginParameters PluginConfiguration.PluginDependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataSourceObjectId Gets or sets the object identifier of the FoundationaLLM DataSource resource used to connect to the data source. [JsonPropertyName(\"data_source_object_id\")] public required string DataSourceObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineDefinition.html",
    "title": "Class DataPipelineDefinition | FoundationaLLM",
    "summary": "Class DataPipelineDefinition Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Provides the model for a data pipeline. public class DataPipelineDefinition : ResourceBase Inheritance object ResourceName ResourceBase DataPipelineDefinition Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Active Gets or sets a value that indicates whether the pipeline is active or not. [JsonPropertyName(\"active\")] public bool Active { get; set; } Property Value bool Remarks When the pipeline is inactive, it cannot be triggered to execute. AllStageNames Gets the names of all the data pipeline stages. [JsonIgnore] public List<string> AllStageNames { get; } Property Value List<string> AllStages Gets all the data pipeline stages. [JsonIgnore] public List<DataPipelineStage> AllStages { get; } Property Value List<DataPipelineStage> DataSource Gets or sets the DataPipelineDataSource model that represents the data source for the pipeline. [JsonPropertyName(\"data_source\")] public required DataPipelineDataSource DataSource { get; set; } Property Value DataPipelineDataSource MostRecentSnapshotObjectId Gets or sets the object identifier of the most recent snapshot of the data pipeline. [JsonPropertyName(\"most_recent_snapshot_object_id\")] public string MostRecentSnapshotObjectId { get; set; } Property Value string StartingStages Gets or sets the list of starting stages in the data pipeline. [JsonPropertyName(\"starting_stages\")] public List<DataPipelineStage> StartingStages { get; set; } Property Value List<DataPipelineStage> Triggers Gets or sets the list of triggers that can be used to start the pipeline. [JsonPropertyName(\"triggers\")] public List<DataPipelineTrigger> Triggers { get; set; } Property Value List<DataPipelineTrigger> Methods GetNextStages(string) Gets the list of data pipeline stages that follow the specified stage. public List<DataPipelineStage> GetNextStages(string stageName) Parameters stageName string The name of the stage to search for. Returns List<DataPipelineStage> The list of data pipeline stages that follow the specified stage. Exceptions ArgumentException GetStage(string) Gets the data pipeline stage with the specified name. public DataPipelineStage GetStage(string stageName) Parameters stageName string The name of the stage to search for. Returns DataPipelineStage The data pipeline stage with the specified name. Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineDefinitionSnapshot.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineDefinitionSnapshot.html",
    "title": "Class DataPipelineDefinitionSnapshot | FoundationaLLM",
    "summary": "Class DataPipelineDefinitionSnapshot Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Represents a snapshot of a data pipeline definition. public class DataPipelineDefinitionSnapshot : ResourceBase Inheritance object ResourceName ResourceBase DataPipelineDefinitionSnapshot Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataPipelineDefinition Gets or sets the data pipeline definition. public required DataPipelineDefinition DataPipelineDefinition { get; set; } Property Value DataPipelineDefinition"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineRun.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineRun.html",
    "title": "Class DataPipelineRun | FoundationaLLM",
    "summary": "Class DataPipelineRun Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Provider the model for a data pipeline run. public class DataPipelineRun : AzureCosmosDBResource, IRunnableResource Inheritance object ResourceName ResourceBase AzureCosmosDBResource DataPipelineRun Implements IRunnableResource Inherited Members AzureCosmosDBResource.Id AzureCosmosDBResource.UPN AzureCosmosDBResource.InstanceId ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineRun() Set default property values. public DataPipelineRun() Properties ActiveStages Gets or sets the list of active stages in the data pipeline run. [JsonPropertyName(\"active_stages\")] [JsonPropertyOrder(7)] public List<string> ActiveStages { get; set; } Property Value List<string> AllStages Gets or sets the list of all stages in the data pipeline run. [JsonPropertyName(\"all_stages\")] [JsonPropertyOrder(8)] public List<string> AllStages { get; set; } Property Value List<string> Completed Gets or sets the flag that indicates whether the resource run is completed. [JsonPropertyName(\"completed\")] [JsonPropertyOrder(11)] public bool Completed { get; set; } Property Value bool CompletedStages Gets or sets the list of completed stages in the data pipeline run. [JsonPropertyName(\"completed_stages\")] [JsonPropertyOrder(9)] public List<string> CompletedStages { get; set; } Property Value List<string> DataPipelineObjectId Gets or sets the object identifier of the data pipeline. [JsonPropertyName(\"data_pipeline_object_id\")] [JsonPropertyOrder(2)] public required string DataPipelineObjectId { get; set; } Property Value string Errors Gets or sets the list of errors encountered during the data pipeline run. [JsonPropertyName(\"errors\")] [JsonPropertyOrder(14)] public List<string>? Errors { get; set; } Property Value List<string> FailedStages Gets or sets the list of failed stages in the data pipeline run. [JsonPropertyName(\"failed_stages\")] [JsonPropertyOrder(10)] public List<string> FailedStages { get; set; } Property Value List<string> Processor Gets or sets the name of the processor that is used to process the data pipeline run. [JsonPropertyName(\"processor\")] [JsonPropertyOrder(6)] public required string Processor { get; set; } Property Value string Remarks Must be one of the values from DataPipelineRunProcessors. RunId The unique identifier of the data pipeline run. [JsonPropertyName(\"run_id\")] [JsonPropertyOrder(1)] public string RunId { get; } Property Value string StagesMetrics Gets or sets the metrics for each stage in the data pipeline run. [JsonPropertyName(\"stages_metrics\")] [JsonPropertyOrder(13)] public Dictionary<string, DataPipelineStageMetrics> StagesMetrics { get; set; } Property Value Dictionary<string, DataPipelineStageMetrics> Successful Gets or sets the flag that indicates whether the resource run was successful. [JsonPropertyName(\"successful\")] [JsonPropertyOrder(12)] public bool Successful { get; set; } Property Value bool TriggerName Gets or sets the name of the manual trigger used to start the pipeline. [JsonPropertyName(\"trigger_name\")] [JsonPropertyOrder(3)] public required string TriggerName { get; set; } Property Value string TriggerParameterValues Gets or sets a dictionary that contains the parameter values required to trigger the pipeline. [JsonPropertyName(\"trigger_parameter_values\")] [JsonPropertyOrder(4)] public required Dictionary<string, object> TriggerParameterValues { get; set; } Property Value Dictionary<string, object> TriggeringUPN Gets or sets the user principal name (UPN) of the user that triggered the creation of the data pipeline run. [JsonPropertyName(\"triggering_upn\")] [JsonPropertyOrder(5)] public required string TriggeringUPN { get; set; } Property Value string Methods Create(string, string, Dictionary<string, object>, string, string) Creates a new DataPipelineRun instance. public static DataPipelineRun Create(string dataPipelineObjectId, string triggerName, Dictionary<string, object> triggerParameterValues, string upn, string processor) Parameters dataPipelineObjectId string The object identifier of the data pipeline. triggerName string The name of the data pipeline trigger. triggerParameterValues Dictionary<string, object> The dictionary of data pipeline parameter values required by the trigger. upn string The UPN that is associated with the data pipeline run. processor string The name of the processor that is used to process the data pipeline run. Must be one of the values from DataPipelineRunProcessors. Returns DataPipelineRun FromTriggerRequest(DataPipelineTriggerRequest, UnifiedUserIdentity) Creates a new DataPipelineRun instance from a data pipeline trigger request. public static DataPipelineRun FromTriggerRequest(DataPipelineTriggerRequest request, UnifiedUserIdentity ownerUserIdentity) Parameters request DataPipelineTriggerRequest The data pipeline trigger request used to create the run. ownerUserIdentity UnifiedUserIdentity The identity of the user that owns the newly created data pipeline run. Returns DataPipelineRun The newly created data pipeline run object."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineRunFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineRunFilter.html",
    "title": "Class DataPipelineRunFilter | FoundationaLLM",
    "summary": "Class DataPipelineRunFilter Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Represents a filter for querying DataPipelineRun resources in the FoundationaLLM.DataPipeline resource provider. public class DataPipelineRunFilter Inheritance object DataPipelineRunFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Completed Gets or sets the flag that indicates whether only completed runs should be returned. [JsonPropertyName(\"completed\")] public bool? Completed { get; set; } Property Value bool? DataPipelineName Gets or sets the name of the data pipeline to filter runs by. [JsonPropertyName(\"data_pipeline_name\")] public string? DataPipelineName { get; set; } Property Value string DataPipelineNameFilter Gets or sets the data pipeline name filter to filter runs by. [JsonPropertyName(\"data_pipeline_name_filter\")] public string? DataPipelineNameFilter { get; set; } Property Value string EndTime Gets or sets the end time of the data pipeline run. [JsonPropertyName(\"end_time\")] public DateTimeOffset? EndTime { get; set; } Property Value DateTimeOffset? InstanceId Gets or sets the identifier of the FoundationaLLM instance to filter runs by. [JsonPropertyName(\"instance_id\")] public string? InstanceId { get; set; } Property Value string StartTime Gets or sets the start time of the data pipeline run. [JsonPropertyName(\"start_time\")] public DateTimeOffset? StartTime { get; set; } Property Value DateTimeOffset? Successful Gets or sets the flag that indicates whether only successful runs should be returned. [JsonPropertyName(\"successful\")] public bool? Successful { get; set; } Property Value bool?"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineStage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineStage.html",
    "title": "Class DataPipelineStage | FoundationaLLM",
    "summary": "Class DataPipelineStage Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Provides the definition of a data pipeline stage. public class DataPipelineStage : PluginComponent Inheritance object PluginConfiguration PluginComponent DataPipelineStage Inherited Members PluginComponent.Name PluginComponent.Description PluginConfiguration.PluginObjectId PluginConfiguration.PluginParameters PluginConfiguration.PluginDependencies object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AllStageNames Gets the name of the data pipeline stage and the names of all its next stages. [JsonIgnore] public List<string> AllStageNames { get; } Property Value List<string> AllStages Gets the data pipeline stage and all its next stages. [JsonIgnore] public List<DataPipelineStage> AllStages { get; } Property Value List<DataPipelineStage> NextStages Gets or sets the list of the data pipeline stages following this stage. [JsonPropertyName(\"next_stages\")] public List<DataPipelineStage> NextStages { get; set; } Property Value List<DataPipelineStage>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineStageMetrics.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineStageMetrics.html",
    "title": "Class DataPipelineStageMetrics | FoundationaLLM",
    "summary": "Class DataPipelineStageMetrics Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Represents the metrics for a data pipeline stage. public class DataPipelineStageMetrics Inheritance object DataPipelineStageMetrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletedWorkItemsCount Gets or sets the number of work items that have been processed in the stage. [JsonPropertyName(\"completed_work_items_count\")] public int CompletedWorkItemsCount { get; set; } Property Value int SuccessfulWorkItemsCount Gets or sets the number of work items that have been successfully processed in the stage. [JsonPropertyName(\"successful_work_items_count\")] public int SuccessfulWorkItemsCount { get; set; } Property Value int WorkItemsCount Gets or sets the number of work items that must be processed in the stage. [JsonPropertyName(\"work_items_count\")] public int WorkItemsCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineTrigger.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineTrigger.html",
    "title": "Class DataPipelineTrigger | FoundationaLLM",
    "summary": "Class DataPipelineTrigger Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Provides the model for a data pipeline trigger. public class DataPipelineTrigger Inheritance object DataPipelineTrigger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name Gets or sets the name of the data pipeline trigger. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string ParameterValues Gets or sets a dictionary that contains the parameter values required to trigger the pipeline. [JsonPropertyName(\"parameter_values\")] public required Dictionary<string, object> ParameterValues { get; set; } Property Value Dictionary<string, object> Remarks When the trigger type is Event or Schedule, the dictionary must contain parameter values for all the data pipeline parameters (which are the union of all the parameters required by the data source and the data pipeline stages). TriggerCronSchedule Gets or sets the schedule of the trigger in Cron format. [JsonPropertyName(\"trigger_cron_schedule\")] public string? TriggerCronSchedule { get; set; } Property Value string Remarks This property is valid only when TriggerType = Schedule. TriggerType Gets or sets the type of trigger that initiates the execution of the pipeline. [JsonPropertyName(\"trigger_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required DataPipelineTriggerType TriggerType { get; set; } Property Value DataPipelineTriggerType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineTriggerRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineTriggerRequest.html",
    "title": "Class DataPipelineTriggerRequest | FoundationaLLM",
    "summary": "Class DataPipelineTriggerRequest Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Represents a request to trigger a data pipeline run. public class DataPipelineTriggerRequest Inheritance object DataPipelineTriggerRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DataPipelineObjectId Gets or sets the object identifier of the data pipeline. [JsonPropertyName(\"data_pipeline_object_id\")] [JsonPropertyOrder(1)] public required string DataPipelineObjectId { get; set; } Property Value string Processor Gets or sets the name of the processor that is used to process the data pipeline run. [JsonPropertyName(\"processor\")] [JsonPropertyOrder(4)] public required string Processor { get; set; } Property Value string Remarks Must be one of the values from DataPipelineRunProcessors. TriggerName Gets or sets the name of the manual trigger used to start the pipeline. [JsonPropertyName(\"trigger_name\")] [JsonPropertyOrder(2)] public required string TriggerName { get; set; } Property Value string TriggerParameterValues Gets or sets a dictionary that contains the parameter values required to trigger the pipeline. [JsonPropertyName(\"trigger_parameter_values\")] [JsonPropertyOrder(3)] public required Dictionary<string, object> TriggerParameterValues { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineTriggerType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.DataPipelineTriggerType.html",
    "title": "Enum DataPipelineTriggerType | FoundationaLLM",
    "summary": "Enum DataPipelineTriggerType Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Assembly FoundationaLLM.Common.dll Types of data pipeline triggers. public enum DataPipelineTriggerType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Event = 2 The data pipeline is triggered based on content change events (e.g., an existing file is updated or a new file is added). Manual = 0 The data pipeline is triggered manually. Schedule = 1 The data pipeline is triggered based on a regular schedule."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataPipeline.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.DataPipeline Classes DataPipelineDataSource Provides the model for a data pipeline data source. DataPipelineDefinition Provides the model for a data pipeline. DataPipelineDefinitionSnapshot Represents a snapshot of a data pipeline definition. DataPipelineRun Provider the model for a data pipeline run. DataPipelineRunFilter Represents a filter for querying DataPipelineRun resources in the FoundationaLLM.DataPipeline resource provider. DataPipelineStage Provides the definition of a data pipeline stage. DataPipelineStageMetrics Represents the metrics for a data pipeline stage. DataPipelineTrigger Provides the model for a data pipeline trigger. DataPipelineTriggerRequest Represents a request to trigger a data pipeline run. Enums DataPipelineTriggerType Types of data pipeline triggers."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureDataLakeDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureDataLakeDataSource.html",
    "title": "Class AzureDataLakeDataSource | FoundationaLLM",
    "summary": "Class AzureDataLakeDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Azure Data Lake data source. public class AzureDataLakeDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase AzureDataLakeDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSource() Creates a new instance of the AzureDataLakeDataSource data source. public AzureDataLakeDataSource() Properties Folders The list of folders from the data lake. The format is [container_name]/[folder_path]. [JsonPropertyName(\"folders\")] public List<string> Folders { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureSQLDatabaseDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.AzureSQLDatabaseDataSource.html",
    "title": "Class AzureSQLDatabaseDataSource | FoundationaLLM",
    "summary": "Class AzureSQLDatabaseDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Azure SQL Database data source. public class AzureSQLDatabaseDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase AzureSQLDatabaseDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSource() Creates a new instance of the AzureSQLDatabaseDataSource data source. public AzureSQLDatabaseDataSource() Properties Tables The list of tables from the database. The format is [schema].[table_name]. [JsonPropertyName(\"tables\")] public List<string> Tables { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.DataSourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.DataSourceBase.html",
    "title": "Class DataSourceBase | FoundationaLLM",
    "summary": "Class DataSourceBase Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Basic data source. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(OneLakeDataSource), \"onelake\")] [JsonDerivedType(typeof(AzureDataLakeDataSource), \"azure-data-lake\")] [JsonDerivedType(typeof(AzureSQLDatabaseDataSource), \"azure-sql-database\")] [JsonDerivedType(typeof(SharePointOnlineSiteDataSource), \"sharepoint-online-site\")] [JsonDerivedType(typeof(WebSiteDataSource), \"web-site\")] public class DataSourceBase : ResourceBase Inheritance object ResourceName ResourceBase DataSourceBase Derived AzureDataLakeDataSource AzureSQLDatabaseDataSource OneLakeDataSource SharePointOnlineSiteDataSource WebSiteDataSource Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationReferences Configuration references associated with the data source. [JsonPropertyName(\"configuration_references\")] public Dictionary<string, string>? ConfigurationReferences { get; set; } Property Value Dictionary<string, string> Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.OneLakeDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.OneLakeDataSource.html",
    "title": "Class OneLakeDataSource | FoundationaLLM",
    "summary": "Class OneLakeDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Azure Data Lake data source. public class OneLakeDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase OneLakeDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OneLakeDataSource() Creates a new instance of the OneLakeDataSource data source. public OneLakeDataSource() Properties Workspaces The list of workspaces from the data lake. The format is [workspace_name]. [JsonPropertyName(\"workspaces\")] public List<string> Workspaces { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.SharePointOnlineSiteDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.SharePointOnlineSiteDataSource.html",
    "title": "Class SharePointOnlineSiteDataSource | FoundationaLLM",
    "summary": "Class SharePointOnlineSiteDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll SharePoint Online Site data source. public class SharePointOnlineSiteDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase SharePointOnlineSiteDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineSiteDataSource() Creates a new instance of the SharePointOnlineSiteDataSource data source. public SharePointOnlineSiteDataSource() Properties DocumentLibraries The list of paths of document libraries from the SharePoint online site. The paths must be relative to the site URL. [JsonPropertyName(\"document_libraries\")] public List<string> DocumentLibraries { get; set; } Property Value List<string> SiteUrl The URL of the SharePoint Online site. [JsonPropertyName(\"site_url\")] public string? SiteUrl { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.WebSiteDataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.WebSiteDataSource.html",
    "title": "Class WebSiteDataSource | FoundationaLLM",
    "summary": "Class WebSiteDataSource Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Assembly FoundationaLLM.Common.dll Web Site data source. public class WebSiteDataSource : DataSourceBase Inheritance object ResourceName ResourceBase DataSourceBase WebSiteDataSource Inherited Members DataSourceBase.Type DataSourceBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors WebSiteDataSource() Initializes a web site data source. public WebSiteDataSource() Properties SiteUrls The list of site URLs covered by the data source. A URL can point to a specific path within the site. The list can contain URLs with different base paths. [JsonPropertyName(\"site_urls\")] public List<string> SiteUrls { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.DataSource.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.DataSource Classes AzureDataLakeDataSource Azure Data Lake data source. AzureSQLDatabaseDataSource Azure SQL Database data source. DataSourceBase Basic data source. OneLakeDataSource Azure Data Lake data source. SharePointOnlineSiteDataSource SharePoint Online Site data source. WebSiteDataSource Web Site data source."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.FileContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.FileContent.html",
    "title": "Class FileContent | FoundationaLLM",
    "summary": "Class FileContent Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Holds the content of an OpenAI file. public class FileContent : ResourceBase Inheritance object ResourceName ResourceBase FileContent Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BinaryContent The binary content of the file. [JsonIgnore] public ReadOnlyMemory<byte>? BinaryContent { get; set; } Property Value ReadOnlyMemory<byte>? ContentType The content type of the file. [JsonPropertyName(\"content_type\")] public required string ContentType { get; set; } Property Value string OriginalFileName The original file name of the file. [JsonPropertyName(\"original_file_name\")] public required string OriginalFileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.FileReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.FileReference.html",
    "title": "Class FileReference | FoundationaLLM",
    "summary": "Class FileReference Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Contains a reference to a file. public class FileReference : ResourceReference Inheritance object ResourceReference FileReference Derived AgentFileReference AttachmentReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.ResourceType ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType The mime content type of the file. public string ContentType { get; set; } Property Value string Id The unique identifier. [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string OriginalFilename The original file name of the file. This is useful because the resource name is generated by the system and may not be the same as the original file name. public string OriginalFilename { get; set; } Property Value string Size The size of the file. public long Size { get; set; } Property Value long UPN The UPN of the user who created the file. [JsonPropertyName(\"upn\")] public string UPN { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.ResourceProviderManagementAction.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.ResourceProviderManagementAction.html",
    "title": "Class ResourceProviderManagementAction | FoundationaLLM",
    "summary": "Class ResourceProviderManagementAction Namespace FoundationaLLM.Common.Models.ResourceProviders.Global Assembly FoundationaLLM.Common.dll Represents a management action for a resource provider. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(ResourceProviderSendEventAction), \"send-event\")] public class ResourceProviderManagementAction Inheritance object ResourceProviderManagementAction Derived ResourceProviderSendEventAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TargetServiceName Gets or sets the name of the target service for the management action. [JsonPropertyName(\"target_service_name\")] [JsonPropertyOrder(-99)] public string? TargetServiceName { get; set; } Property Value string Remarks If this property is set, it indicates that the action is intended for a specific service. The management be handled only by instances of the resource provider that are hosted by the specified service. Type Gets or sets the type of the management action. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-100)] public string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.ResourceProviderManagementActionTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.ResourceProviderManagementActionTypes.html",
    "title": "Class ResourceProviderManagementActionTypes | FoundationaLLM",
    "summary": "Class ResourceProviderManagementActionTypes Namespace FoundationaLLM.Common.Models.ResourceProviders.Global Assembly FoundationaLLM.Common.dll Defines the types of management actions that can be performed on resource providers. public static class ResourceProviderManagementActionTypes Inheritance object ResourceProviderManagementActionTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SendEvent Represents an action to send an event to a resource provider. public const string SendEvent = \"send-event\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.ResourceProviderSendEventAction.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.ResourceProviderSendEventAction.html",
    "title": "Class ResourceProviderSendEventAction | FoundationaLLM",
    "summary": "Class ResourceProviderSendEventAction Namespace FoundationaLLM.Common.Models.ResourceProviders.Global Assembly FoundationaLLM.Common.dll Represents a management action to send an event to a resource provider. public class ResourceProviderSendEventAction : ResourceProviderManagementAction Inheritance object ResourceProviderManagementAction ResourceProviderSendEventAction Inherited Members ResourceProviderManagementAction.Type ResourceProviderManagementAction.TargetServiceName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderSendEventAction() Initializes a new instance of the ResourceProviderSendEventAction class. public ResourceProviderSendEventAction() Properties EventType Gets or sets the type of the event to be sent. [JsonPropertyName(\"event_type\")] [JsonPropertyOrder(1)] public required string EventType { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Global.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Global | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Global Classes ResourceProviderManagementAction Represents a management action for a resource provider. ResourceProviderManagementActionTypes Defines the types of management actions that can be performed on resource providers. ResourceProviderSendEventAction Represents a management action to send an event to a resource provider."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.IFileMapping.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.IFileMapping.html",
    "title": "Interface IFileMapping | FoundationaLLM",
    "summary": "Interface IFileMapping Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides fields used for file mapping capabilities. public interface IFileMapping Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileContentType The content type of the file. string FileContentType { get; set; } Property Value string FileObjectId The FoundationaLLM.Attachment resource object id. string FileObjectId { get; set; } Property Value string FileRequiresVectorization Indicates whether the file requires vectorization or not. bool FileRequiresVectorization { get; set; } Property Value bool OriginalFileName The original file name of the file. string OriginalFileName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.NameCheckResultType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.NameCheckResultType.html",
    "title": "Enum NameCheckResultType | FoundationaLLM",
    "summary": "Enum NameCheckResultType Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll The result types of resource name checks. public enum NameCheckResultType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Allowed = 0 The name is valid and is allowed. Denied = 1 The name is invalid and cannot be used"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginDefinition.html",
    "title": "Class PluginDefinition | FoundationaLLM",
    "summary": "Class PluginDefinition Namespace FoundationaLLM.Common.Models.ResourceProviders.Plugin Assembly FoundationaLLM.Common.dll Provides the model for a plugin. public class PluginDefinition : ResourceBase Inheritance object ResourceName ResourceBase PluginDefinition Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category Gets or sets the category of the plugin. [JsonPropertyName(\"category\")] public required string Category { get; set; } Property Value string Dependencies Gets or sets the list of PluginDependencyMetadata objects that represent the dependencies of the plugin. [JsonPropertyName(\"dependencies\")] public List<PluginDependencyMetadata> Dependencies { get; set; } Property Value List<PluginDependencyMetadata> ParameterSelectionHints Gets or sets the metadata associated with the plugin parameter selection hints. [JsonPropertyName(\"parameter_selection_hints\")] public Dictionary<string, PluginParameterSelectionHint> ParameterSelectionHints { get; set; } Property Value Dictionary<string, PluginParameterSelectionHint> Remarks The keys in the dictionary are the name of the paramters that are of type resource-object-id. The values in the dictionary are PluginParameterSelectionHint object providing the selection hints for the parameter. Parameters Gets or sets the metadata associated with the plugin parameters. [JsonPropertyName(\"parameters\")] public List<PluginParameterMetadata> Parameters { get; set; } Property Value List<PluginParameterMetadata> PluginPackageObjectId Gets or sets the FoundationaLLM object identifier of the plugin package that provides the plugin. [JsonPropertyName(\"plugin_package_object_id\")] public required string PluginPackageObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginFilter.html",
    "title": "Class PluginFilter | FoundationaLLM",
    "summary": "Class PluginFilter Namespace FoundationaLLM.Common.Models.ResourceProviders.Plugin Assembly FoundationaLLM.Common.dll Provides filter properties for Plugin resources. public class PluginFilter Inheritance object PluginFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Categories Gets or sets a value representing the list of plugin categories to retrieve. [JsonPropertyName(\"categories\")] public List<string> Categories { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginPackageDefinition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginPackageDefinition.html",
    "title": "Class PluginPackageDefinition | FoundationaLLM",
    "summary": "Class PluginPackageDefinition Namespace FoundationaLLM.Common.Models.ResourceProviders.Plugin Assembly FoundationaLLM.Common.dll Provides the model for a plugin package. public class PluginPackageDefinition : ResourceBase Inheritance object ResourceName ResourceBase PluginPackageDefinition Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PackageFilePath Gets or sets the path to the package file. [JsonPropertyName(\"package_file_path\")] public required string PackageFilePath { get; set; } Property Value string PackageFileSize Gets or sets the size of the package file. [JsonPropertyName(\"package_file_size\")] public required int PackageFileSize { get; set; } Property Value int PackagePlatform Gets or sets the platform of the package. [JsonPropertyName(\"package_platform\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required PluginPackagePlatform PackagePlatform { get; set; } Property Value PluginPackagePlatform Remarks The supported values are defined in the PluginPackagePlatform enum. PackageVersion Gets or sets the version of the package. [JsonPropertyName(\"package_version\")] [JsonConverter(typeof(JsonStringSemanticVersionConverter))] public required SemanticVersion PackageVersion { get; set; } Property Value SemanticVersion"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginPackageManagerInstance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.PluginPackageManagerInstance.html",
    "title": "Class PluginPackageManagerInstance | FoundationaLLM",
    "summary": "Class PluginPackageManagerInstance Namespace FoundationaLLM.Common.Models.ResourceProviders.Plugin Assembly FoundationaLLM.Common.dll Represents a plugin package manager instance resource. public class PluginPackageManagerInstance : ResourceBase Inheritance object ResourceName ResourceBase PluginPackageManagerInstance Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AssemblyLoadContext Gets or sets the assembly load context for the plugin package manager instance. public AssemblyLoadContext AssemblyLoadContext { get; set; } Property Value AssemblyLoadContext Dependencies Gets or sets the dependencies of the plugin package. public Dictionary<string, string> Dependencies { get; set; } Property Value Dictionary<string, string> Instance Gets or sets the plugin package manager instance. public IPluginPackageManager Instance { get; set; } Property Value IPluginPackageManager PackageVersion Gets or sets the plugin package version. public SemanticVersion PackageVersion { get; set; } Property Value SemanticVersion"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Plugin.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Plugin | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Plugin Classes PluginDefinition Provides the model for a plugin. PluginFilter Provides filter properties for Plugin resources. PluginPackageDefinition Provides the model for a plugin package. PluginPackageManagerInstance Represents a plugin package manager instance resource."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.MultipartPrompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.MultipartPrompt.html",
    "title": "Class MultipartPrompt | FoundationaLLM",
    "summary": "Class MultipartPrompt Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt Assembly FoundationaLLM.Common.dll Multipart prompt composed of a prefix and a suffix. public class MultipartPrompt : PromptBase Inheritance object ResourceName ResourceBase PromptBase MultipartPrompt Inherited Members PromptBase.Type PromptBase.Category ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MultipartPrompt() Set default property values. public MultipartPrompt() Properties Prefix The prompt prefix. [JsonPropertyName(\"prefix\")] public string? Prefix { get; set; } Property Value string Suffix The prompt suffix. [JsonPropertyName(\"suffix\")] public string? Suffix { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.PromptBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.PromptBase.html",
    "title": "Class PromptBase | FoundationaLLM",
    "summary": "Class PromptBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt Assembly FoundationaLLM.Common.dll Basic prompt. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(MultipartPrompt), \"multipart\")] public class PromptBase : ResourceBase Inheritance object ResourceName ResourceBase PromptBase Derived MultipartPrompt Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category The category of the prompt. [JsonPropertyName(\"category\")] [JsonConverter(typeof(JsonStringEnumConverter))] public PromptCategory? Category { get; set; } Property Value PromptCategory? Type The type of the resource. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.PromptCategory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.PromptCategory.html",
    "title": "Enum PromptCategory | FoundationaLLM",
    "summary": "Enum PromptCategory Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt Assembly FoundationaLLM.Common.dll The category for the prompt class. public enum PromptCategory Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Agent = 0 Agent prompt. DataPipeline = 3 Data Pipeline prompt. Tool = 2 Tool prompt. Workflow = 1 Workflow prompt."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Prompt.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Prompt Classes MultipartPrompt Multipart prompt composed of a prefix and a suffix. PromptBase Basic prompt. Enums PromptCategory The category for the prompt class."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceBase.html",
    "title": "Class ResourceBase | FoundationaLLM",
    "summary": "Class ResourceBase Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Basic properties for all resources. public class ResourceBase : ResourceName Inheritance object ResourceName ResourceBase Derived PolicyDefinition Conversation AIModelBase AgentAccessToken AgentBase AgentFile AgentFileToolAssociation Tool Workflow AttachmentFile AssignmentBase RoleDefinition AzureAIProject AzureCosmosDBResource AzureOpenAIAssistant APIEndpointConfiguration AppConfigurationKeyBase KnowledgeSource DataPipelineDefinition DataPipelineDefinitionSnapshot DataSourceBase FileContent PluginDefinition PluginPackageDefinition PluginPackageManagerInstance PromptBase ResourceCollection<T> VectorDatabase VectorStore VectorizationProfileBase VectorizationRequest VectorizationPipeline VectorizationPipelineExecution Inherited Members ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CostCenter The cost center of the resource. [JsonPropertyName(\"cost_center\")] [JsonPropertyOrder(-1)] public string? CostCenter { get; set; } Property Value string CreatedBy The entity who created the resource. [JsonPropertyName(\"created_by\")] [JsonPropertyOrder(502)] public string? CreatedBy { get; set; } Property Value string CreatedOn The time at which the resource was created. [JsonPropertyName(\"created_on\")] [JsonPropertyOrder(500)] public DateTimeOffset CreatedOn { get; set; } Property Value DateTimeOffset Deleted Indicates whether the resource has been logically deleted. [JsonPropertyName(\"deleted\")] [JsonPropertyOrder(504)] public virtual bool Deleted { get; set; } Property Value bool Description The description of the resource. [JsonPropertyName(\"description\")] [JsonPropertyOrder(-2)] public string? Description { get; set; } Property Value string DisplayName The display name of the resource. [JsonPropertyName(\"display_name\")] [JsonPropertyOrder(-3)] public string? DisplayName { get; set; } Property Value string ExpirationDate The date and time on which the resource expires and is no longer usable. [JsonPropertyName(\"expiration_date\")] [JsonPropertyOrder(505)] public DateTimeOffset? ExpirationDate { get; set; } Property Value DateTimeOffset? ObjectId The unique identifier of the resource. [JsonPropertyName(\"object_id\")] [JsonPropertyOrder(-4)] public string? ObjectId { get; set; } Property Value string Properties Gets or sets the property bag for the resource. [JsonPropertyName(\"properties\")] [JsonPropertyOrder(400)] public Dictionary<string, string>? Properties { get; set; } Property Value Dictionary<string, string> UpdatedBy The entity who last updated the resource. [JsonPropertyName(\"updated_by\")] [JsonPropertyOrder(503)] public string? UpdatedBy { get; set; } Property Value string UpdatedOn The time at which the resource was last updated. [JsonPropertyName(\"updated_on\")] [JsonPropertyOrder(501)] public DateTimeOffset UpdatedOn { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceCollection-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceCollection-1.html",
    "title": "Class ResourceCollection<T> | FoundationaLLM",
    "summary": "Class ResourceCollection<T> Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents a collection of resources of type T. public class ResourceCollection<T> : ResourceBase where T : ResourceBase Type Parameters T The type of resource in the collection. Inheritance object ResourceName ResourceBase ResourceCollection<T> Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Resources Gets or sets the collection of resources of type T. public IEnumerable<T> Resources { get; set; } Property Value IEnumerable<T>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceFilter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceFilter.html",
    "title": "Class ResourceFilter | FoundationaLLM",
    "summary": "Class ResourceFilter Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Filters resources based on the specified criteria. public class ResourceFilter Inheritance object ResourceFilter Derived APIEndpointConfigurationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DefaultResource Gets or sets a value that specifies whether the default resource should be retrieved or not. [JsonPropertyName(\"default\")] public bool? DefaultResource { get; set; } Property Value bool? Remarks If set, this value has precedence over the ObjectIDs property. If not set, the ObjectIDs property is used to filter resources. ObjectIDs Gets or sets a list of object IDs to filter resources. [JsonPropertyName(\"object_ids\")] public List<string>? ObjectIDs { get; set; } Property Value List<string> Remarks The DefaultResource property has precendece over this property. If the DefaultResource property is set, this property is ignored."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceName.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceName.html",
    "title": "Class ResourceName | FoundationaLLM",
    "summary": "Class ResourceName Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll A named resource with a type. public class ResourceName Inheritance object ResourceName Derived ResourceBase ResourceNameCheckResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the resource. [JsonPropertyName(\"name\")] [JsonPropertyOrder(-5)] public virtual required string Name { get; set; } Property Value string Type The type of the resource. [JsonPropertyName(\"type\")] [JsonPropertyOrder(-100)] public virtual string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceNameCheckResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceNameCheckResult.html",
    "title": "Class ResourceNameCheckResult | FoundationaLLM",
    "summary": "Class ResourceNameCheckResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll The result of a resource name check. public class ResourceNameCheckResult : ResourceName Inheritance object ResourceName ResourceNameCheckResult Inherited Members ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deleted Gets or sets a value indicating whether the resource is logically deleted or not. public required bool Deleted { get; set; } Property Value bool Exists Gets or sets a value indicating whether the resource exists or not. public required bool Exists { get; set; } Property Value bool Remarks For logically deleted resources, the value of this property will be true. The Deleted property indicates whether the resource was logically deleted or not. Message An optional message indicating why is the name not allowed. public string? Message { get; set; } Property Value string Status The NameCheckResultType indicating whether the name is allowed or not. [JsonConverter(typeof(JsonStringEnumConverter))] public NameCheckResultType Status { get; set; } Property Value NameCheckResultType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceObjectIdProperties.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceObjectIdProperties.html",
    "title": "Class ResourceObjectIdProperties | FoundationaLLM",
    "summary": "Class ResourceObjectIdProperties Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Defines the properties of a resource. public class ResourceObjectIdProperties Inheritance object ResourceObjectIdProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ObjectId The unique identifier of the resource. [JsonPropertyName(\"object_id\")] public required string ObjectId { get; set; } Property Value string Properties Gets or sets a dictionary of properties. [JsonPropertyName(\"properties\")] public Dictionary<string, object> Properties { get; set; } Property Value Dictionary<string, object> Methods HasObjectRole(string) Indicates whether the resource has the specified object role. public bool HasObjectRole(string role) Parameters role string The object role being searched. Returns bool true if the object role is present, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourcePath.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourcePath.html",
    "title": "Class ResourcePath | FoundationaLLM",
    "summary": "Class ResourcePath Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides the logic for handling FoundationaLLM resource identifiers. public class ResourcePath Inheritance object ResourcePath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourcePath(string, ImmutableList<string>, Dictionary<string, ResourceTypeDescriptor>, bool) Creates a new resource identifier from a resource path optionally allowing an action. public ResourcePath(string resourcePath, ImmutableList<string> allowedResourceProviders, Dictionary<string, ResourceTypeDescriptor> allowedResourceTypes, bool allowAction = true) Parameters resourcePath string The resource path used to create the resource identifier. allowedResourceProviders ImmutableList<string> Provides a list of allowed resource providers. allowedResourceTypes Dictionary<string, ResourceTypeDescriptor> Provides a dictionary of ResourceTypeDescriptor used to validate resource types. allowAction bool Optional parameter that indicates whether an action name is allowed as part of the resource identifier. Properties Action Gets the action (if any) specified in the resource path. public string? Action { get; } Property Value string HasAction Indicates whether the resource path contains a valid action or not. public bool HasAction { get; } Property Value bool HasResourceId Indicates whether the resource path contains a valid resource id or not. public bool HasResourceId { get; } Property Value bool HasSubordinateResourceId A flag denoting if the resource path contains subordinate resources or not. public bool HasSubordinateResourceId { get; } Property Value bool InstanceId The instance id of the resource identifier. Can be null if the resource path does not contain an instance id. public string? InstanceId { get; } Property Value string IsInstancePath Indicates whether the resource path is an instance path or not (i.e., only contains the FoundationaLLM instance identifier). public bool IsInstancePath { get; } Property Value bool IsResourceTypePath Indicates whether the resource path refers to a resource type (does not contain a resource name). public bool IsResourceTypePath { get; } Property Value bool IsRootPath Indicates whether the resource path is a root path (\"/\") or not. public bool IsRootPath { get; } Property Value bool MainResourceId Gets the resource id of the main resource type of the path. public string? MainResourceId { get; } Property Value string MainResourceType Gets the object type of the main resource type of the path. public Type? MainResourceType { get; } Property Value Type Remarks The main resource type is the first resource type in the path. In the case of nested resources, this will be the resource type of the main resource. MainResourceTypeName Gets the name of the main resource type of the path. public string? MainResourceTypeName { get; } Property Value string Remarks The main resource type is the first resource type in the path. In the case of nested resources, this will be the resource type of the main resource. ObjectId Gets the resource object identifier associated with the resource path. public string? ObjectId { get; } Property Value string Remarks Only fully qualified resource paths can be converted to object identifiers. ObjectIdWithoutAction Gets the resource object identifier associated with the resource path without the action name. public string? ObjectIdWithoutAction { get; } Property Value string Remarks Only fully qualified resource paths can be converted to object identifiers. ParentObjectId Gets the parent object identifier of the resource path. public string? ParentObjectId { get; } Property Value string ParentResourceId Gets the resource id of the parent resource of the path. public string? ParentResourceId { get; } Property Value string ParentResourceType Gets the resource type of the parent resource of the path. public Type? ParentResourceType { get; } Property Value Type ParentResourceTypeName Gets the resource type name of the parent resource of the path. public string? ParentResourceTypeName { get; } Property Value string RawResourcePath Gets the raw resource path which was used to create the resource path object. public string RawResourcePath { get; } Property Value string ResourceId Gets the resource id of the resource identified by the path. public string? ResourceId { get; } Property Value string Remarks This is the last resource id in the path. If the path refers to nested resources, this will be the resource id of the last resource. Otherwise, it will be the resource id of the main resource (and hence identical to MainResourceId). ResourceProvider The resource provider of the resource identifier. Can be null if the resource path does not contain a resource provider. public string? ResourceProvider { get; } Property Value string ResourceType Gets the resource type of the resource identified by the path. public Type? ResourceType { get; } Property Value Type Remarks This is the last resource type in the path. If the path refers to nested resources, this will be the resource type of the last resource. Otherwise, it will be the resource type of the main resource (and hence identical to MainResourceType). ResourceTypeInstances The resource type instances of the resource identifier. public List<ResourceTypeInstance> ResourceTypeInstances { get; } Property Value List<ResourceTypeInstance> ResourceTypeName Gets the resource type name of the resource identified by the path. public string? ResourceTypeName { get; } Property Value string Remarks This is the last resource type name in the path. If the path refers to nested resources, this will be the resource type name of the last resource. Otherwise, it will be the resource type name of the main resource (and hence identical to MainResourceTypeName). Methods GetAllowedResourceTypes(string) Retrieves the allowed resource types for a specified resource provider. public static Dictionary<string, ResourceTypeDescriptor> GetAllowedResourceTypes(string resourceProvider) Parameters resourceProvider string The name of the resource provider. Returns Dictionary<string, ResourceTypeDescriptor> GetObjectId(string?, string?) Computes the object id of the resource identifier. public string GetObjectId(string? instanceId, string? resourceProvider) Parameters instanceId string The FoundationaLLM instance id. Provide this if the resource does not have a fully-qualified resource identifier. resourceProvider string The name of the resource provider. Provide this if the resource does not have a fully-qualified resource identifier. Returns string The object id. GetObjectId(string, string, string, string) Computes the object id of the resource identifier. public static string GetObjectId(string instanceId, string resourceProviderName, string resourceTypeName, string resourceName) Parameters instanceId string The FoundationaLLM instance id. resourceProviderName string The name of the resource provider. resourceTypeName string The name of the resource type. resourceName string The name of the resource. Returns string The object id. GetObjectId(string, string, string, string, string, string) Computes the object id of the resource identifier. public static string GetObjectId(string instanceId, string resourceProviderName, string mainResourceTypeName, string mainResourceName, string resourceTypeName, string resourceName) Parameters instanceId string The FoundationaLLM instance id. resourceProviderName string The name of the resource provider. mainResourceTypeName string The name of the main resource type. mainResourceName string The name of the main resource. resourceTypeName string The name of the resource type. resourceName string The name of the resource. Returns string The object id. GetResourcePath(string) Parses a resource path. public static ResourcePath GetResourcePath(string resourcePath) Parameters resourcePath string The resource path to be parsed. Returns ResourcePath A ResourcePath object containing the parsed resource path. GetResourceTypeObjectId() Computes the object id of the resource type associated with the resource identifier. public string GetResourceTypeObjectId() Returns string The resource type object id. Exceptions ResourceProviderException IncludesResourcePath(ResourcePath, bool) Determines whether the resource path includes another specified resource path. public bool IncludesResourcePath(ResourcePath other, bool allowEqual = true) Parameters other ResourcePath The ResourcePath to check for inclusion. allowEqual bool Indicates whether an equal resource path is considered to be included or not. Returns bool True if the specified resource path is included in the resource path. Join(string, string) Joins a resource path with a subordinate resource path. public static string Join(string resourcePath, string subordinateResourcePath) Parameters resourcePath string The main resource path. subordinateResourcePath string The subordinate resource path. Returns string The combined resource path. Exceptions ArgumentNullException MatchesResourceTypes(ResourcePath) Determines whether the resource path matches exactly (including order) the resource types of another specified resource path. public bool MatchesResourceTypes(ResourcePath other) Parameters other ResourcePath The ResourcePath to be matched. Returns bool True if the resource path matches exactly (including order) the resource types of the other resource path. TryParse(string, ImmutableList<string>, Dictionary<string, ResourceTypeDescriptor>, bool, out ResourcePath?) Tries to parse a resource path and create a resource identifier from it. public static bool TryParse(string resourcePath, ImmutableList<string> allowedResourceProviders, Dictionary<string, ResourceTypeDescriptor> allowedResourceTypes, bool allowAction, out ResourcePath? resourcePathInstance) Parameters resourcePath string The resource path used to create the resource identifier. allowedResourceProviders ImmutableList<string> Provides a list of allowed resource providers. allowedResourceTypes Dictionary<string, ResourceTypeDescriptor> Provides a dictionary of ResourceTypeDescriptor used to validate resource types. allowAction bool Optional parameter that indicates whether an action name is allowed as part of the resource identifier. resourcePathInstance ResourcePath The parsed resource path. Returns bool True if the resource path is parsed successfully. TryParseInstanceId(string, out string?) Tries to retrieve the identifier of the FoundationaLLM instance from a resource path. public static bool TryParseInstanceId(string resourcePath, out string? instanceId) Parameters resourcePath string The resource path to analyze. instanceId string The FoundationaLLM instance identifier. Returns bool True if a valid intance identifier is retrieved successfully. TryParseResourceProvider(string, out string?) Tries to retrieve the name of the resource provider from a resource path. public static bool TryParseResourceProvider(string resourcePath, out string? resourceProvider) Parameters resourcePath string The resource path to analyze. resourceProvider string The resource provider name. Returns bool True if a valid resource provider name is retrieved successfully."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderActionResult-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderActionResult-1.html",
    "title": "Class ResourceProviderActionResult<T> | FoundationaLLM",
    "summary": "Class ResourceProviderActionResult<T> Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll The result of an action executed by a resource provider. public record ResourceProviderActionResult<T> : ResourceProviderActionResult, IEquatable<ResourceProviderActionResult>, IEquatable<ResourceProviderActionResult<T>> where T : ResourceBase Type Parameters T Inheritance object ResourceProviderActionResult ResourceProviderActionResult<T> Implements IEquatable<ResourceProviderActionResult> IEquatable<ResourceProviderActionResult<T>> Inherited Members ResourceProviderActionResult.ObjectId ResourceProviderActionResult.IsSuccess ResourceProviderActionResult.ErrorMessage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderActionResult(string, bool, string?) The result of an action executed by a resource provider. public ResourceProviderActionResult(string ObjectId, bool IsSuccessResult, string? ErrorMessage = null) Parameters ObjectId string The object id to which the result refers to. IsSuccessResult bool Indicates whether the action executed successfully or not. ErrorMessage string When IsSuccess is false, contains an error message with details. Properties IsSuccessResult Indicates whether the action executed successfully or not. public bool IsSuccessResult { get; init; } Property Value bool Resource Gets or sets the resource resulting from the action. [JsonPropertyName(\"resource\")] public T? Resource { get; set; } Property Value T Remarks Each resource provider will decide whether to return the resource in the action result or not."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderActionResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderActionResult.html",
    "title": "Class ResourceProviderActionResult | FoundationaLLM",
    "summary": "Class ResourceProviderActionResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the result of executing a resource provider action. public record ResourceProviderActionResult : IEquatable<ResourceProviderActionResult> Inheritance object ResourceProviderActionResult Implements IEquatable<ResourceProviderActionResult> Derived ResourceProviderActionResult<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderActionResult(string, bool, string?) Represents the result of executing a resource provider action. public ResourceProviderActionResult(string ObjectId, bool IsSuccess, string? ErrorMessage = null) Parameters ObjectId string The object id to which the result refers to. IsSuccess bool Indicates whether the execution was completed successfully. ErrorMessage string When IsSuccess is false, contains an error message with details. Properties ErrorMessage When IsSuccess is false, contains an error message with details. [JsonPropertyName(\"error_message\")] public string? ErrorMessage { get; init; } Property Value string IsSuccess Indicates whether the execution was completed successfully. [JsonPropertyName(\"is_success\")] public bool IsSuccess { get; init; } Property Value bool ObjectId The object id to which the result refers to. [JsonPropertyName(\"object_id\")] public string ObjectId { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderCacheWarmupConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderCacheWarmupConfiguration.html",
    "title": "Class ResourceProviderCacheWarmupConfiguration | FoundationaLLM",
    "summary": "Class ResourceProviderCacheWarmupConfiguration Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the configuration for resource provider cache warmup. public class ResourceProviderCacheWarmupConfiguration Inheritance object ResourceProviderCacheWarmupConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Description Gets or sets the description of the cache warmup configuration. public required string Description { get; set; } Property Value string ResourceObjectIds Gets or sets the list of resource names that should be pre-cached. public required List<string> ResourceObjectIds { get; set; } Property Value List<string> SecurityPrincipalIds Gets or sets the list of security principal ids that should be pre-cached. public required List<string> SecurityPrincipalIds { get; set; } Property Value List<string> ServiceName Gets or sets the name of the service to which the configuration applies. public required string ServiceName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderDeleteResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderDeleteResult.html",
    "title": "Class ResourceProviderDeleteResult | FoundationaLLM",
    "summary": "Class ResourceProviderDeleteResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the result of a delete operation. public class ResourceProviderDeleteResult Inheritance object ResourceProviderDeleteResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deleted A flag denoting whether the resource was deleted or not. public required bool Deleted { get; set; } Property Value bool Reason The reason why the resource was not deleted. public string? Reason { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderFormFile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderFormFile.html",
    "title": "Class ResourceProviderFormFile | FoundationaLLM",
    "summary": "Class ResourceProviderFormFile Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about a file uploaded through the IFormFile mechanism from ASP.NET. public class ResourceProviderFormFile Inheritance object ResourceProviderFormFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BinaryContent The binary content of the file. public required ReadOnlyMemory<byte> BinaryContent { get; set; } Property Value ReadOnlyMemory<byte> ContentType The mime content type of the file. public required string ContentType { get; set; } Property Value string FileName The name of the file. public required string FileName { get; set; } Property Value string Payload Additional optional parameters from the form payload. public Dictionary<string, string>? Payload { get; set; } Property Value Dictionary<string, string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderGetOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderGetOptions.html",
    "title": "Class ResourceProviderGetOptions | FoundationaLLM",
    "summary": "Class ResourceProviderGetOptions Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides options for resource provider get operations. public class ResourceProviderGetOptions : ResourceProviderOperationOptionsBase Inheritance object ResourceProviderOperationOptionsBase ResourceProviderGetOptions Inherited Members ResourceProviderOperationOptionsBase.Parameters object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IncludeActions Gets or sets a value indicating whether to include actions in the response. public bool IncludeActions { get; set; } Property Value bool Remarks If the value is set to true, for each resource, the response will include the authorizable actions assigned directly or indirectly to the resource. IncludeRoles Gets or sets a value indicating whether to include roles in the response. public bool IncludeRoles { get; set; } Property Value bool Remarks If the value is set to true, for each resource, the response will include the roles assigned directly or indirectly to the resource. LoadContent Gets or sets a value indicating whether to load resource content (applicable only to resources that have content). public bool LoadContent { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderGetResult-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderGetResult-1.html",
    "title": "Class ResourceProviderGetResult<T> | FoundationaLLM",
    "summary": "Class ResourceProviderGetResult<T> Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the result of a fetch operation. public class ResourceProviderGetResult<T> where T : ResourceBase Type Parameters T Inheritance object ResourceProviderGetResult<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Actions Gets or sets the list of authorizable actions assigned directly or indirectly to the resource. [JsonPropertyName(\"actions\")] public required List<string> Actions { get; set; } Property Value List<string> Resource Gets or sets the resource resulting from the fetch operation. [JsonPropertyName(\"resource\")] public required T Resource { get; set; } Property Value T Roles Gets or sets the list of roles assigned directly or indirectly to the resource. [JsonPropertyName(\"roles\")] public required List<string> Roles { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderOperationOptionsBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderOperationOptionsBase.html",
    "title": "Class ResourceProviderOperationOptionsBase | FoundationaLLM",
    "summary": "Class ResourceProviderOperationOptionsBase Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides options common to all resource provider operations. public class ResourceProviderOperationOptionsBase Inheritance object ResourceProviderOperationOptionsBase Derived ResourceProviderGetOptions ResourceProviderUpsertOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Parameters Gets or sets a dictionary of parameters to be used in the resource provider operation request. public Dictionary<string, object> Parameters { get; set; } Property Value Dictionary<string, object>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertOptions.html",
    "title": "Class ResourceProviderUpsertOptions | FoundationaLLM",
    "summary": "Class ResourceProviderUpsertOptions Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides options for resource provider upsert operations. public class ResourceProviderUpsertOptions : ResourceProviderOperationOptionsBase Inheritance object ResourceProviderOperationOptionsBase ResourceProviderUpsertOptions Inherited Members ResourceProviderOperationOptionsBase.Parameters object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertResult-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertResult-1.html",
    "title": "Class ResourceProviderUpsertResult<T> | FoundationaLLM",
    "summary": "Class ResourceProviderUpsertResult<T> Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the typed result of an upsert operation. public class ResourceProviderUpsertResult<T> : ResourceProviderUpsertResult where T : ResourceBase Type Parameters T Inheritance object ResourceProviderUpsertResult ResourceProviderUpsertResult<T> Derived AzureAIAgentConversationMappingUpsertResult AzureOpenAIConversationMappingUpsertResult Inherited Members ResourceProviderUpsertResult.ObjectId ResourceProviderUpsertResult.ResourceExists object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Resource Gets or sets the resource resulting from the upsert operation. [JsonPropertyName(\"resource\")] public T? Resource { get; set; } Property Value T Remarks Each resource provider will decide whether to return the resource in the upsert result or not. Methods ToActionResult() Converts the upsert result to an action result. public ResourceProviderActionResult<T> ToActionResult() Returns ResourceProviderActionResult<T> The action result created from the upsert result."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceProviderUpsertResult.html",
    "title": "Class ResourceProviderUpsertResult | FoundationaLLM",
    "summary": "Class ResourceProviderUpsertResult Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Represents the result of an upsert operation. public class ResourceProviderUpsertResult Inheritance object ResourceProviderUpsertResult Derived ResourceProviderUpsertResult<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ObjectId The id of the object that was created or updated. public required string ObjectId { get; set; } Property Value string Resource Gets or sets the resource resulting from the upsert operation. [JsonPropertyName(\"resource\")] public object? Resource { get; set; } Property Value object Remarks Each resource provider will decide whether to return the resource in the upsert result or not. ResourceExists A flag denoting whether the upserted resource already exists. public required bool ResourceExists { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReference.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReference.html",
    "title": "Class ResourceReference | FoundationaLLM",
    "summary": "Class ResourceReference Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Resource reference used by resource providers to index the resources they manage. public class ResourceReference Inheritance object ResourceReference Derived AzureAIReference AIModelReference AgentReference FileReference APIEndpointReference DataPipelineReference DataSourceReference PluginReference VectorReference PromptReference Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Deleted Indicates whether the resource has been logically deleted. public bool Deleted { get; set; } Property Value bool Filename The filename of the resource. public required string Filename { get; set; } Property Value string Name The name of the resource. public required string Name { get; set; } Property Value string ObjectId The unique identifier of the resource. [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public string? ObjectId { get; set; } Property Value string ResourceType The object type of the resource. [JsonIgnore] public virtual Type ResourceType { get; } Property Value Type Remarks Derived classes should override this property to provide the type of the resource reference. Type The type of the resource. public required string Type { get; set; } Property Value string Methods Equals(object?) Determines whether the specified object is equal to the current ResourceReference. public override bool Equals(object? obj) Parameters obj object The object to compare with the current ResourceReference. Returns bool true if the specified object is equal to the current ResourceReference; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current ResourceReference. Operators operator ==(ResourceReference, ResourceReference) Determines whether two specified instances of ResourceReference are equal. public static bool operator ==(ResourceReference left, ResourceReference right) Parameters left ResourceReference The first ResourceReference to compare. right ResourceReference The second ResourceReference to compare. Returns bool true if the two ResourceReference instances are equal; otherwise, false. operator !=(ResourceReference, ResourceReference) Determines whether two specified instances of ResourceReference are not equal. public static bool operator !=(ResourceReference left, ResourceReference right) Parameters left ResourceReference The first ResourceReference to compare. right ResourceReference The second ResourceReference to compare. Returns bool true if the two ResourceReference instances are not equal; otherwise, false."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReferenceList-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceReferenceList-1.html",
    "title": "Class ResourceReferenceList<T> | FoundationaLLM",
    "summary": "Class ResourceReferenceList<T> Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Maintains a collection of resource references. public class ResourceReferenceList<T> where T : ResourceReference Type Parameters T The type of resource reference kept in the store. Inheritance object ResourceReferenceList<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DefaultResourceName Gets or sets the name of the resource that should be used as the default resource. public string? DefaultResourceName { get; set; } Property Value string ResourceReferences The dictionary of resource references indexed by their unique names. public required List<T> ResourceReferences { get; set; } Property Value List<T>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAction.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAction.html",
    "title": "Class ResourceTypeAction | FoundationaLLM",
    "summary": "Class ResourceTypeAction Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about a resource type action. public record ResourceTypeAction : IEquatable<ResourceTypeAction> Inheritance object ResourceTypeAction Implements IEquatable<ResourceTypeAction> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeAction(string, bool, bool, List<ResourceTypeAllowedTypes>) Provides details about a resource type action. public ResourceTypeAction(string Name, bool AllowedOnResource, bool AllowedOnResourceType, List<ResourceTypeAllowedTypes> AllowedTypes) Parameters Name string The name of the action. AllowedOnResource bool Indicates whether the action can be executed on individual resources. AllowedOnResourceType bool Indicates whether the action can be executed on the resource type itself. AllowedTypes List<ResourceTypeAllowedTypes> The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. Properties AllowedOnResource Indicates whether the action can be executed on individual resources. public bool AllowedOnResource { get; init; } Property Value bool AllowedOnResourceType Indicates whether the action can be executed on the resource type itself. public bool AllowedOnResourceType { get; init; } Property Value bool AllowedTypes The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. public List<ResourceTypeAllowedTypes> AllowedTypes { get; init; } Property Value List<ResourceTypeAllowedTypes> Name The name of the action. public string Name { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAllowedTypes.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeAllowedTypes.html",
    "title": "Class ResourceTypeAllowedTypes | FoundationaLLM",
    "summary": "Class ResourceTypeAllowedTypes Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about the types that are allowed for the body and return of a specific HTTP method. public record ResourceTypeAllowedTypes : IEquatable<ResourceTypeAllowedTypes> Inheritance object ResourceTypeAllowedTypes Implements IEquatable<ResourceTypeAllowedTypes> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeAllowedTypes(string, string, Dictionary<string, Type>, List<Type>, List<Type>) Provides details about the types that are allowed for the body and return of a specific HTTP method. public ResourceTypeAllowedTypes(string HttpMethod, string AuthorizationRequirements, Dictionary<string, Type> AllowedParameterTypes, List<Type> AllowedBodyTypes, List<Type> AllowedReturnTypes) Parameters HttpMethod string The name of the HTTP method. Can be one of GET, POST, PUT, PATCH, or DELETE. AuthorizationRequirements string The requirements for authorizing the HTTP request. For all HTTP requests except POST, contains the name of the authorizable operation that is required to authorize the request. For POST requests will contain the name of the authorizable operation optionally followed by a RBAC role name (in this case, the two values must be separated by '|'. AllowedParameterTypes Dictionary<string, Type> The dictionary of query parameter names and types that are allowed for the method. AllowedBodyTypes List<Type> The list of types that are allowed as payloads for the HTTP request. AllowedReturnTypes List<Type> The list of types the are allowed as return types for the HTTP request. Properties AllowedBodyTypes The list of types that are allowed as payloads for the HTTP request. public List<Type> AllowedBodyTypes { get; init; } Property Value List<Type> AllowedParameterTypes The dictionary of query parameter names and types that are allowed for the method. public Dictionary<string, Type> AllowedParameterTypes { get; init; } Property Value Dictionary<string, Type> AllowedReturnTypes The list of types the are allowed as return types for the HTTP request. public List<Type> AllowedReturnTypes { get; init; } Property Value List<Type> AuthorizationRequirements The requirements for authorizing the HTTP request. For all HTTP requests except POST, contains the name of the authorizable operation that is required to authorize the request. For POST requests will contain the name of the authorizable operation optionally followed by a RBAC role name (in this case, the two values must be separated by '|'. public string AuthorizationRequirements { get; init; } Property Value string HttpMethod The name of the HTTP method. Can be one of GET, POST, PUT, PATCH, or DELETE. public string HttpMethod { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeDescriptor.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeDescriptor.html",
    "title": "Class ResourceTypeDescriptor | FoundationaLLM",
    "summary": "Class ResourceTypeDescriptor Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Provides details about a resource type managed by a resource provider. public class ResourceTypeDescriptor Inheritance object ResourceTypeDescriptor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeDescriptor(string, Type) Provides details about a resource type managed by a resource provider. public ResourceTypeDescriptor(string resourceTypeName, Type resourceType) Parameters resourceTypeName string The name of the resource type. resourceType Type The object type of the resource type. Properties Actions The list of actions supported by the resource type. public List<ResourceTypeAction> Actions { get; set; } Property Value List<ResourceTypeAction> AllowedTypes The list of ResourceTypeAllowedTypes specifying which body and return types are allowed for various HTTP methods. public List<ResourceTypeAllowedTypes> AllowedTypes { get; set; } Property Value List<ResourceTypeAllowedTypes> ResourceType The object type of the resource type. public Type ResourceType { get; set; } Property Value Type ResourceTypeName The name of the resource type. public string ResourceTypeName { get; set; } Property Value string SubTypes The dictionary of resource descriptors specifying the resource's allowed subtypes. public Dictionary<string, ResourceTypeDescriptor> SubTypes { get; set; } Property Value Dictionary<string, ResourceTypeDescriptor> Methods TypeAllowedForHttpGet(Type) Indicates whether the resource type allows the the retrieval of the specified type. public bool TypeAllowedForHttpGet(Type type) Parameters type Type The Type being checked. Returns bool true is the specified type can be retrieved, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeInstance.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.ResourceTypeInstance.html",
    "title": "Class ResourceTypeInstance | FoundationaLLM",
    "summary": "Class ResourceTypeInstance Namespace FoundationaLLM.Common.Models.ResourceProviders Assembly FoundationaLLM.Common.dll Identifies a specific resource type instance. public record ResourceTypeInstance : IEquatable<ResourceTypeInstance> Inheritance object ResourceTypeInstance Implements IEquatable<ResourceTypeInstance> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceTypeInstance(string, Type) Identifies a specific resource type instance. public ResourceTypeInstance(string ResourceTypeName, Type ResourceType) Parameters ResourceTypeName string The name of the resource type. ResourceType Type The object type of the resource type. Fields Action An optional action to be executed on the resource instance. public string? Action Field Value string ResourceId An optional resource type instance unique identifier. public string? ResourceId Field Value string Properties ResourceType The object type of the resource type. public Type ResourceType { get; init; } Property Value Type ResourceTypeName The name of the resource type. public string ResourceTypeName { get; init; } Property Value string Methods Includes(ResourceTypeInstance?) Checks whether the current instance includes another ResourceTypeInstance instance. public bool Includes(ResourceTypeInstance? other) Parameters other ResourceTypeInstance The ResourceTypeInstance to check for inclusion. Returns bool True if the current instance includes the other instance."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.VectorDatabase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.VectorDatabase.html",
    "title": "Class VectorDatabase | FoundationaLLM",
    "summary": "Class VectorDatabase Namespace FoundationaLLM.Common.Models.ResourceProviders.Vector Assembly FoundationaLLM.Common.dll Represents a vector database resource. public class VectorDatabase : ResourceBase Inheritance object ResourceName ResourceBase VectorDatabase Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIEndpointConfigurationObjectId Gets or sets the API Endpoint Configuration object identifier. [JsonPropertyName(\"api_endpoint_configuration_object_id\")] public required string APIEndpointConfigurationObjectId { get; set; } Property Value string ContentPropertyName Gets or sets the name of the property that stores the content. [JsonPropertyName(\"content_property_name\")] public required string ContentPropertyName { get; set; } Property Value string DatabaseName Gets or sets the name of the vector database. [JsonPropertyName(\"database_name\")] public required string DatabaseName { get; set; } Property Value string DatabaseType Gets or sets the type of the vector database. [JsonPropertyName(\"database_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required VectorDatabaseType DatabaseType { get; set; } Property Value VectorDatabaseType EmbeddingPropertyName Gets or sets the name of the property that stores the embeddings. [JsonPropertyName(\"embedding_property_name\")] public required string EmbeddingPropertyName { get; set; } Property Value string MetadataPropertyName Gets or sets the name of the metadata property that stores additional information about each item. [JsonPropertyName(\"metadata_property_name\")] public required string MetadataPropertyName { get; set; } Property Value string VectorStoreIdPropertyName Gets or sets the name of the property that stores the vector store identifier. [JsonPropertyName(\"vector_store_id_property_name\")] public required string VectorStoreIdPropertyName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.VectorDatabaseType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.VectorDatabaseType.html",
    "title": "Enum VectorDatabaseType | FoundationaLLM",
    "summary": "Enum VectorDatabaseType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vector Assembly FoundationaLLM.Common.dll Defines the types of vector databases available to store embeddings. public enum VectorDatabaseType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureAISearch = 0 Azure AI Search vector database. AzureCosmosDBNoSQL = 1 Azure Cosmos DB NoSQL vector database. AzurePostgreSQL = 2 Azure PostgreSQL vector database."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.VectorStore.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.VectorStore.html",
    "title": "Class VectorStore | FoundationaLLM",
    "summary": "Class VectorStore Namespace FoundationaLLM.Common.Models.ResourceProviders.Vector Assembly FoundationaLLM.Common.dll Represents a vector store resource. public class VectorStore : ResourceBase Inheritance object ResourceName ResourceBase VectorStore Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vector.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Vector | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Vector Classes VectorDatabase Represents a vector database resource. VectorStore Represents a vector store resource. Enums VectorDatabaseType Defines the types of vector databases available to store embeddings."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexerType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexerType.html",
    "title": "Enum IndexerType | FoundationaLLM",
    "summary": "Enum IndexerType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Types of vectori indexes available to store embeddings. public enum IndexerType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureAISearchIndexer = 0 Indexer using Azure AI Search vector indexes. AzureCosmosDBNoSQLIndexer = 1 Indexer using Azure Cosmos DB NoSQL indexes. PostgresIndexer = 2 Indexer using PostgreSQL indexes."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexingProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.IndexingProfile.html",
    "title": "Class IndexingProfile | FoundationaLLM",
    "summary": "Class IndexingProfile Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides details about an indexing profile. public class IndexingProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase IndexingProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Indexer The type of the indexer. [JsonPropertyName(\"indexer\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required IndexerType Indexer { get; set; } Property Value IndexerType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingProfile.html",
    "title": "Class TextEmbeddingProfile | FoundationaLLM",
    "summary": "Class TextEmbeddingProfile Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides details about a text embedding profile. public class TextEmbeddingProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase TextEmbeddingProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TextEmbedding The type of the text splitter. [JsonPropertyName(\"text_embedding\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required TextEmbeddingType TextEmbedding { get; set; } Property Value TextEmbeddingType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextEmbeddingType.html",
    "title": "Enum TextEmbeddingType | FoundationaLLM",
    "summary": "Enum TextEmbeddingType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Types of text embeddings available for text embedding. public enum TextEmbeddingType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields GatewayTextEmbedding = 0 Text emebdding that uses the Gateway API to embed text."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextPartitioningProfile.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextPartitioningProfile.html",
    "title": "Class TextPartitioningProfile | FoundationaLLM",
    "summary": "Class TextPartitioningProfile Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides details about a text partitioning profile. public class TextPartitioningProfile : VectorizationProfileBase Inheritance object ResourceName ResourceBase VectorizationProfileBase TextPartitioningProfile Inherited Members VectorizationProfileBase.Type VectorizationProfileBase.Settings VectorizationProfileBase.ConfigurationReferences ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties TextSplitter The type of the text splitter. [JsonPropertyName(\"text_splitter\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required TextSplitterType TextSplitter { get; set; } Property Value TextSplitterType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextSplitterType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.TextSplitterType.html",
    "title": "Enum TextSplitterType | FoundationaLLM",
    "summary": "Enum TextSplitterType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Types of text splitters available for text partitioning. public enum TextSplitterType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields TokenTextSplitter = 0 Text splitter that uses token counts to partition text."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationLongRunningOperation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationLongRunningOperation.html",
    "title": "Class VectorizationLongRunningOperation | FoundationaLLM",
    "summary": "Class VectorizationLongRunningOperation Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Provides the details of a long-running vectorization operation. public class VectorizationLongRunningOperation Inheritance object VectorizationLongRunningOperation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Complete Indicates whether the operation is complete or not. [JsonPropertyOrder(10)] [JsonPropertyName(\"complete\")] public bool Complete { get; set; } Property Value bool FirstResponseTime The first time we learned about the operation being run. [JsonPropertyOrder(5)] [JsonPropertyName(\"first_response_time\")] public DateTime FirstResponseTime { get; set; } Property Value DateTime LastResponseTime The last time we learned about the operation being run. [JsonPropertyOrder(6)] [JsonPropertyName(\"last_response_time\")] public DateTime LastResponseTime { get; set; } Property Value DateTime OperationId The unique identifier of the long-running operation. [JsonPropertyOrder(-5)] [JsonPropertyName(\"operation_id\")] public required string OperationId { get; set; } Property Value string PollingCount The number of times an attempt was made to retrieve the result. [JsonPropertyOrder(15)] [JsonPropertyName(\"polling_count\")] public int PollingCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingState.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingState.html",
    "title": "Enum VectorizationProcessingState | FoundationaLLM",
    "summary": "Enum VectorizationProcessingState Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Describes the state of a vectorization request. [JsonConverter(typeof(JsonStringEnumConverter))] public enum VectorizationProcessingState Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Completed = 2 All steps of the request have completed successfully. Failed = 3 An error occurred during processing. InProgress = 1 The request is being processed. New = 0 The vectorization request is new and has not been processed."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProcessingType.html",
    "title": "Enum VectorizationProcessingType | FoundationaLLM",
    "summary": "Enum VectorizationProcessingType Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll The type of vectorization request processing. public enum VectorizationProcessingType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Asynchronous = 0 Asynchronous processing using vectorization workers. Synchronous = 1 Synchronous processing using the vectorization API."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProfileBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationProfileBase.html",
    "title": "Class VectorizationProfileBase | FoundationaLLM",
    "summary": "Class VectorizationProfileBase Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Basic properties for vectorization profiles. [JsonPolymorphic(TypeDiscriminatorPropertyName = \"type\")] [JsonDerivedType(typeof(TextPartitioningProfile), \"text-partitioning-profile\")] [JsonDerivedType(typeof(TextEmbeddingProfile), \"text-embedding-profile\")] [JsonDerivedType(typeof(IndexingProfile), \"indexing-profile\")] public class VectorizationProfileBase : ResourceBase Inheritance object ResourceName ResourceBase VectorizationProfileBase Derived IndexingProfile TextEmbeddingProfile TextPartitioningProfile Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConfigurationReferences Configuration references associated with the vectorization profile. [JsonPropertyName(\"configuration_references\")] public Dictionary<string, string>? ConfigurationReferences { get; set; } Property Value Dictionary<string, string> Settings The configuration associated with the vectorization profile. [JsonPropertyName(\"settings\")] public Dictionary<string, string>? Settings { get; set; } Property Value Dictionary<string, string> Type The type of the vectorization profile. [JsonIgnore] public override string? Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationRequest.html",
    "title": "Class VectorizationRequest | FoundationaLLM",
    "summary": "Class VectorizationRequest Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Represents a vectorization request. public class VectorizationRequest : ResourceBase Inheritance object ResourceName ResourceBase VectorizationRequest Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationRequest() Set default property values. public VectorizationRequest() Properties Complete Indicates whether the vectorization process is complete or not. [JsonIgnore] public bool Complete { get; } Property Value bool CompletedSteps The ordered list of the names of the vectorization steps that were already completed. [JsonPropertyOrder(201)] [JsonPropertyName(\"completed_steps\")] public List<string> CompletedSteps { get; set; } Property Value List<string> ContentIdentifier The ContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(2)] [JsonPropertyName(\"content_identifier\")] public required ContentIdentifier ContentIdentifier { get; set; } Property Value ContentIdentifier CurrentStep The current step of the vectorization request. [JsonPropertyOrder(203)] [JsonPropertyName(\"current_step\")] public string? CurrentStep { get; } Property Value string ErrorCount The number of times the processing of the current step resulted in an error. [JsonPropertyOrder(204)] [JsonPropertyName(\"error_count\")] public int ErrorCount { get; set; } Property Value int ErrorMessages Error messages that occurred during the processing of the vectorization request. [JsonPropertyOrder(103)] [JsonPropertyName(\"error_messages\")] public List<string> ErrorMessages { get; set; } Property Value List<string> ExecutionEnd The time when the vectorization request finished being processed. [JsonPropertyOrder(102)] [JsonPropertyName(\"execution_end\")] public DateTime? ExecutionEnd { get; set; } Property Value DateTime? ExecutionStart The time when the vectorization request started being processed. [JsonPropertyOrder(101)] [JsonPropertyName(\"execution_start\")] public DateTime? ExecutionStart { get; set; } Property Value DateTime? Expired Identifies whether the request is expired or not. Vectorization requests that had no successful step executions in the last 10 days are considered expired. public bool Expired { get; } Property Value bool this[string] Gets the vectorization pipeline step that has a specific identifier. public VectorizationStep? this[string step] { get; } Parameters step string The identifier of the vectorization pipeline step. Property Value VectorizationStep An instances of the VectorizationStep class with the details required by the step handler. LastSuccessfulStepTime The time of the last successful processing of a step. [JsonPropertyOrder(206)] [JsonPropertyName(\"last_successful_step_time\")] public DateTime LastSuccessfulStepTime { get; set; } Property Value DateTime PipelineExecutionId If run in the context of a pipeline, the unique identifier of the pipeline execution. [JsonPropertyOrder(52)] [JsonPropertyName(\"pipeline_execution_id\")] public string? PipelineExecutionId { get; set; } Property Value string PipelineExecutionStart Gets or sets the time when the pipeline execution started. [JsonPropertyOrder(53)] [JsonPropertyName(\"pipeline_execution_start\")] public DateTimeOffset? PipelineExecutionStart { get; set; } Property Value DateTimeOffset? PipelineName If run in the context of a pipeline, the name of the pipeline resource being executed. [JsonPropertyOrder(51)] [JsonPropertyName(\"pipeline_name\")] public string? PipelineName { get; set; } Property Value string PipelineObjectId If run in the context of a pipeline, the object id of the pipeline resource being executed. [JsonPropertyOrder(50)] [JsonPropertyName(\"pipeline_object_id\")] public string? PipelineObjectId { get; set; } Property Value string ProcessingState The VectorizationProcessingState indicating the current state of the vectorization request. [JsonPropertyOrder(100)] [JsonPropertyName(\"processing_state\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationProcessingState ProcessingState { get; set; } Property Value VectorizationProcessingState ProcessingType The VectorizationProcessingType indicating how should the request be processed. [JsonPropertyOrder(3)] [JsonPropertyName(\"processing_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required VectorizationProcessingType ProcessingType { get; set; } Property Value VectorizationProcessingType RemainingSteps The ordered list of the names of the vectorization steps that still need to be executed. [JsonPropertyOrder(202)] [JsonPropertyName(\"remaining_steps\")] public List<string> RemainingSteps { get; set; } Property Value List<string> ResourceFilePath Path to the vectorization request resource file. [JsonPropertyOrder(1)] [JsonPropertyName(\"resource_filepath\")] public string? ResourceFilePath { get; set; } Property Value string RunningOperations A dictionary of running operation identifiers indexed by step name. Some steps can be executed via long-running operations that required the persistence of operation identifiers. [JsonPropertyOrder(205)] [JsonPropertyName(\"running_operations\")] public Dictionary<string, VectorizationLongRunningOperation> RunningOperations { get; set; } Property Value Dictionary<string, VectorizationLongRunningOperation> Steps The list of vectorization steps requested by the vectorization request. Vectorization steps are identified by unique names like \"extract\", \"partition\", \"embed\", \"index\", etc. [JsonPropertyOrder(200)] [JsonPropertyName(\"steps\")] public required List<VectorizationStep> Steps { get; set; } Property Value List<VectorizationStep> Methods GetDate(string) Gets the date from the name of the vectorization request. public static DateOnly GetDate(string vectorizationRequestName) Parameters vectorizationRequestName string The name of the vectorization request. Returns DateOnly The date parsed from the name. Remarks The required format of the vectorization request name is \"yyyyMMdd-...\" (e.g., \"20250502-abc\"). GetDateFromName() Gets the date from the name of the vectorization request. public DateOnly GetDateFromName() Returns DateOnly The date parsed from the name. MoveToNextStep() Advances the vectorization pipeline to the next step. The newly set current step is used to choose the next request source to which the vectorization request will be added. public (string PreviousStep, string? CurrentStep) MoveToNextStep() Returns (string PreviousStep, string CurrentStep) A tuple containing the name of the previous step and the name of the next step to execute if there are steps left to execute or null if the processing of the vectorization request is complete."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationResult.html",
    "title": "Class VectorizationResult | FoundationaLLM",
    "summary": "Class VectorizationResult Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Represents the result of executing a vectorization action. public record VectorizationResult : IEquatable<VectorizationResult> Inheritance object VectorizationResult Implements IEquatable<VectorizationResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationResult(string, bool, string?) Represents the result of executing a vectorization action. public VectorizationResult(string ObjectId, bool IsSuccess, string? ErrorMessage) Parameters ObjectId string The object id to which the result refers to. IsSuccess bool Indicates whether the execution was completed successfully. ErrorMessage string When IsSuccess is false, contains an error message with details. Properties ErrorMessage When IsSuccess is false, contains an error message with details. [JsonPropertyName(\"error_message\")] public string? ErrorMessage { get; init; } Property Value string IsSuccess Indicates whether the execution was completed successfully. [JsonPropertyName(\"is_success\")] public bool IsSuccess { get; init; } Property Value bool ObjectId The object id to which the result refers to. [JsonPropertyName(\"object_id\")] public string ObjectId { get; init; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationStep.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.VectorizationStep.html",
    "title": "Class VectorizationStep | FoundationaLLM",
    "summary": "Class VectorizationStep Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Assembly FoundationaLLM.Common.dll Represents a vectorization step in a vectorization request. public class VectorizationStep Inheritance object VectorizationStep Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id The identifier of the step. [JsonPropertyOrder(0)] [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string Parameters Dictionary-based configuration for the step. [JsonPropertyOrder(1)] [JsonPropertyName(\"parameters\")] public required Dictionary<string, string> Parameters { get; set; } Property Value Dictionary<string, string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.Vectorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders.Vectorization Classes IndexingProfile Provides details about an indexing profile. TextEmbeddingProfile Provides details about a text embedding profile. TextPartitioningProfile Provides details about a text partitioning profile. VectorizationLongRunningOperation Provides the details of a long-running vectorization operation. VectorizationProfileBase Basic properties for vectorization profiles. VectorizationRequest Represents a vectorization request. VectorizationResult Represents the result of executing a vectorization action. VectorizationStep Represents a vectorization step in a vectorization request. Enums IndexerType Types of vectori indexes available to store embeddings. TextEmbeddingType Types of text embeddings available for text embedding. TextSplitterType Types of text splitters available for text partitioning. VectorizationProcessingState Describes the state of a vectorization request. VectorizationProcessingType The type of vectorization request processing."
  },
  "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Models.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.ResourceProviders Namespaces FoundationaLLM.Common.Models.ResourceProviders.AIModel FoundationaLLM.Common.Models.ResourceProviders.Agent FoundationaLLM.Common.Models.ResourceProviders.Attachment FoundationaLLM.Common.Models.ResourceProviders.Authorization FoundationaLLM.Common.Models.ResourceProviders.AzureAI FoundationaLLM.Common.Models.ResourceProviders.AzureOpenAI FoundationaLLM.Common.Models.ResourceProviders.Configuration FoundationaLLM.Common.Models.ResourceProviders.Context FoundationaLLM.Common.Models.ResourceProviders.DataPipeline FoundationaLLM.Common.Models.ResourceProviders.DataSource FoundationaLLM.Common.Models.ResourceProviders.Global FoundationaLLM.Common.Models.ResourceProviders.Plugin FoundationaLLM.Common.Models.ResourceProviders.Prompt FoundationaLLM.Common.Models.ResourceProviders.Vector FoundationaLLM.Common.Models.ResourceProviders.Vectorization Classes AzureCosmosDBResource Basic model for resources persisted in Azure Cosmos DB. FileContent Holds the content of an OpenAI file. FileReference Contains a reference to a file. ResourceBase Basic properties for all resources. ResourceCollection<T> Represents a collection of resources of type T. ResourceFilter Filters resources based on the specified criteria. ResourceName A named resource with a type. ResourceNameCheckResult The result of a resource name check. ResourceObjectIdProperties Defines the properties of a resource. ResourcePath Provides the logic for handling FoundationaLLM resource identifiers. ResourceProviderActionResult Represents the result of executing a resource provider action. ResourceProviderActionResult<T> The result of an action executed by a resource provider. ResourceProviderCacheWarmupConfiguration Represents the configuration for resource provider cache warmup. ResourceProviderDeleteResult Represents the result of a delete operation. ResourceProviderFormFile Provides details about a file uploaded through the IFormFile mechanism from ASP.NET. ResourceProviderGetOptions Provides options for resource provider get operations. ResourceProviderGetResult<T> Represents the result of a fetch operation. ResourceProviderOperationOptionsBase Provides options common to all resource provider operations. ResourceProviderUpsertOptions Provides options for resource provider upsert operations. ResourceProviderUpsertResult Represents the result of an upsert operation. ResourceProviderUpsertResult<T> Represents the typed result of an upsert operation. ResourceReference Resource reference used by resource providers to index the resources they manage. ResourceReferenceList<T> Maintains a collection of resource references. ResourceTypeAction Provides details about a resource type action. ResourceTypeAllowedTypes Provides details about the types that are allowed for the body and return of a specific HTTP method. ResourceTypeDescriptor Provides details about a resource type managed by a resource provider. ResourceTypeInstance Identifies a specific resource type instance. Interfaces IFileMapping Provides fields used for file mapping capabilities. Enums NameCheckResultType The result types of resource name checks."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.ContentIdentifier.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.ContentIdentifier.html",
    "title": "Class ContentIdentifier | FoundationaLLM",
    "summary": "Class ContentIdentifier Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Represents the content associated with a vectorization request. public class ContentIdentifier Inheritance object ContentIdentifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the content being vectorized. Vectorization state services use it to derive the location of the state in the underlying storage. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public required string CanonicalId { get; set; } Property Value string DataSourceObjectId The name of the vectorization content source profile that provides settings to connect to the content source. [JsonPropertyOrder(0)] [JsonPropertyName(\"data_source_object_id\")] public required string DataSourceObjectId { get; set; } Property Value string FileName The file name part of the content identifier. [JsonIgnore] public string FileName { get; } Property Value string this[int] The indexer allowing to access the components of the multipart identifier using [] notation. [JsonIgnore] public string this[int i] { get; } Parameters i int The index of component being retrieved. Property Value string Metadata Additional metadata associated with the content being vectorized. [JsonPropertyOrder(3)] [JsonPropertyName(\"metadata\")] public Dictionary<string, object>? Metadata { get; set; } Property Value Dictionary<string, object> MultipartId The multipart unique identifier of the the content (i.e. document) being vectorized. [JsonInclude] [JsonPropertyOrder(1)] [JsonPropertyName(\"multipart_id\")] public required List<string> MultipartId { get; set; } Property Value List<string> UniqueId The unique identifier of the content (i.e., document) being vectorized. The identifier is determined by concatenating the parts from MultipartId. [JsonIgnore] public string UniqueId { get; } Property Value string Methods ValidateMultipartId(int) Validates a multipart unique content identifier. public void ValidateMultipartId(int expectedPartsCount) Parameters expectedPartsCount int The expected number of parts in the multipart identifier. Exceptions ContentIdentifierException"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContent.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContent.html",
    "title": "Class EmbeddedContent | FoundationaLLM",
    "summary": "Class EmbeddedContent Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Provides information about embedded content. public class EmbeddedContent Inheritance object EmbeddedContent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentId The canonical identifier of the content. public required ContentIdentifier ContentId { get; set; } Property Value ContentIdentifier ContentParts The list of conent public required List<EmbeddedContentPart> ContentParts { get; set; } Property Value List<EmbeddedContentPart>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContentPart.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.EmbeddedContentPart.html",
    "title": "Class EmbeddedContentPart | FoundationaLLM",
    "summary": "Class EmbeddedContentPart Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Provides information about an embedded content part. public class EmbeddedContentPart Inheritance object EmbeddedContentPart Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text content that was embedded. public required string Content { get; set; } Property Value string Embedding The vector embedding associated with the content. public required Embedding Embedding { get; set; } Property Value Embedding Id The unique identifier of the embedded content part. public required string Id { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.JsonConverter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.JsonConverter.html",
    "title": "Class Embedding.JsonConverter | FoundationaLLM",
    "summary": "Class Embedding.JsonConverter Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Serializes the content of an Embedding value. Note: use Embedding.JsonConverter to serialize objects using the Embedding type, for example: [JsonPropertyName(\"vector\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding Vector { get; set; } public sealed class Embedding.JsonConverter : JsonConverter<Embedding> Inheritance object JsonConverter JsonConverter<Embedding> Embedding.JsonConverter Inherited Members JsonConverter<Embedding>.CanConvert(Type) JsonConverter<Embedding>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<Embedding>.WriteAsPropertyName(Utf8JsonWriter, Embedding, JsonSerializerOptions) JsonConverter<Embedding>.HandleNull JsonConverter<Embedding>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type Embedding. public override Embedding Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns Embedding The converted value. Write(Utf8JsonWriter, Embedding, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, Embedding value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value Embedding The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.Embedding.html",
    "title": "Struct Embedding | FoundationaLLM",
    "summary": "Struct Embedding Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Stores a vector embedding. This type should be serialized using Emedding.JsonConverter. public struct Embedding : IEquatable<Embedding> Implements IEquatable<Embedding> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors Embedding(int) Creates an embedding with a zero-initialzed vector of a specified size. public Embedding(int size) Parameters size int The size of the vector representing the embedding. Embedding(ReadOnlyMemory<float>) Creates an embedding from a vector represents as a ReadOnlyMemory<T> object. public Embedding(ReadOnlyMemory<float> vector) Parameters vector ReadOnlyMemory<float> Embedding(float[]) Creates an embedding from a vector represented as an array of real numbers. public Embedding(float[] vector) Parameters vector float[] The array containing the vector values. Properties Length Length of the vector representing the embedding. This property is only serialized when Embedding.JsonConverter is used. [JsonIgnore] public readonly int Length { get; } Property Value int Vector The vector that represents the embedding. This property is only serialized when Embedding.JsonConverter is used. [JsonIgnore] public ReadOnlyMemory<float> Vector { readonly get; set; } Property Value ReadOnlyMemory<float> Methods Equals(Embedding) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Embedding other) Parameters other Embedding An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Inidicates whether the current object is equal to another object. public override readonly bool Equals(object? obj) Parameters obj object An object to compare with this object. Returns bool True if the object is equal to the obj param and False otherwise. GetHashCode() Calculated the hashcode for this Embedding. public override readonly int GetHashCode() Returns int The hash value represented by an integer. Operators operator ==(Embedding, Embedding) Checks if two Embedding values are equal. public static bool operator ==(Embedding v1, Embedding v2) Parameters v1 Embedding The first Embedding value to be cheched. v2 Embedding The second Embedding value to be checked. Returns bool True if the two values are equal, False otherwise. operator !=(Embedding, Embedding) Checks if two Embedding values are different. public static bool operator !=(Embedding v1, Embedding v2) Parameters v1 Embedding The first Embedding value to be cheched. v2 Embedding The second Embedding value to be checked. Returns bool True if the two values are different, False otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextChunk.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextChunk.html",
    "title": "Class TextChunk | FoundationaLLM",
    "summary": "Class TextChunk Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Represents a chunk of text produced by a text splitter. public class TextChunk Inheritance object TextChunk Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Completion Gets or sets the completion text generated for the chunk, if applicable. [JsonPropertyName(\"completion\")] public string? Completion { get; set; } Property Value string Content The text content of the chunk. [JsonPropertyName(\"content\")] public string? Content { get; set; } Property Value string Embedding Gets or sets the embedding generated for the chunk, if applicable. [JsonPropertyName(\"embedding\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding? Embedding { get; set; } Property Value Embedding? OperationId The identifier of the operation the text chunk belongs to. Can be null if the chunk is not associated with an operation. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string Position The position of the text chunk in the content it belongs to. [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value int TokensCount The size of the chunk in tokens. [JsonPropertyName(\"tokens_count\")] public int TokensCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextCompletionRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextCompletionRequest.html",
    "title": "Class TextCompletionRequest | FoundationaLLM",
    "summary": "Class TextCompletionRequest Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Models a request to run a list of completions. public class TextCompletionRequest Inheritance object TextCompletionRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletionModelName The name of the completion model to use. If not specified, a default embedding model should be used. [JsonPropertyName(\"completion_model_name\")] public string CompletionModelName { get; set; } Property Value string CompletionModelParameters Gets or sets the parameters for the completion model. [JsonPropertyName(\"completion_model_parameters\")] public Dictionary<string, object> CompletionModelParameters { get; set; } Property Value Dictionary<string, object> TextChunks The list of TextChunk objects containing the completion inputs. [JsonPropertyName(\"text_chunks\")] public IList<TextChunk> TextChunks { get; set; } Property Value IList<TextChunk>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextEmbeddingRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextEmbeddingRequest.html",
    "title": "Class TextEmbeddingRequest | FoundationaLLM",
    "summary": "Class TextEmbeddingRequest Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Models a request to embed a list of text chunks. public class TextEmbeddingRequest Inheritance object TextEmbeddingRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingModelDimensions Gets or set the number of dimensions for the embedding model. [JsonPropertyName(\"embedding_model_dimensions\")] public int EmbeddingModelDimensions { get; set; } Property Value int EmbeddingModelName The name of the embedding model to use. If not specified, a default embedding model should be used. [JsonPropertyName(\"embedding_model_name\")] public string EmbeddingModelName { get; set; } Property Value string Prioritized Indicates whether the request should be prioritized. Example: Synchronous vectorization and user prompt embedding for completions. [JsonPropertyName(\"prioritized\")] public bool Prioritized { get; set; } Property Value bool TextChunks The list of TextChunk objects containing the texts to embed. [JsonPropertyName(\"text_chunks\")] public IList<TextChunk> TextChunks { get; set; } Property Value IList<TextChunk>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextOperationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.TextOperationResult.html",
    "title": "Class TextOperationResult | FoundationaLLM",
    "summary": "Class TextOperationResult Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll The result of a text operation request. public class TextOperationResult Inheritance object TextOperationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ErrorMessage The message describing the error that lead to the cancellation of the operation. [JsonPropertyName(\"error_message\")] public string? ErrorMessage { get; set; } Property Value string Failed Indicates whether the text operation failed due to an error. When true, the ErrorMessage property contains a message describing the error. [JsonPropertyName(\"cancelled\")] public bool Failed { get; set; } Property Value bool InProgress Indicates whether the text operation is still in progress. When true, the OperationId property contains an operation identifier. [JsonPropertyName(\"in_progress\")] public bool InProgress { get; set; } Property Value bool OperationId Optional operation identifier that can be used to retrieve the final result. [JsonPropertyName(\"operation_id\")] public string? OperationId { get; set; } Property Value string ProcessedTextChunksCount Gets or sets the number of text chunks that were successfully processed. [JsonPropertyName(\"processed_text_chunks_count\")] public int ProcessedTextChunksCount { get; set; } Property Value int TextChunks The list of TextChunk objects containing the results. [JsonPropertyName(\"text_chunks\")] public IList<TextChunk> TextChunks { get; set; } Property Value IList<TextChunk> TokenCount The number of tokens used during the text operation. [JsonPropertyName(\"token_count\")] public int TokenCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipeline.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipeline.html",
    "title": "Class VectorizationPipeline | FoundationaLLM",
    "summary": "Class VectorizationPipeline Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Defines a vectorization pipeline. public class VectorizationPipeline : ResourceBase Inheritance object ResourceName ResourceBase VectorizationPipeline Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationPipeline() Set default property values. public VectorizationPipeline() Properties Active Indicates whether the pipeline is active or not. When the pipeline is inactive, it cannot be triggered to execute. [JsonPropertyName(\"active\")] public bool Active { get; set; } Property Value bool DataSourceObjectId The object identifier of the data source used to retrieve content for vectorization. [JsonPropertyName(\"data_source_object_id\")] public required string DataSourceObjectId { get; set; } Property Value string IndexingProfileObjectId The object identifier of the indexing profile used to index text embeddings. [JsonPropertyName(\"indexing_profile_object_id\")] public required string IndexingProfileObjectId { get; set; } Property Value string LatestExecutionId Gets or sets the identifier of the latest execution of the pipeline. [JsonPropertyName(\"latest_execution_id\")] public string? LatestExecutionId { get; set; } Property Value string TextEmbeddingProfileObjectId The object identifier of the text embedding profile used to embed text. [JsonPropertyName(\"text_embedding_profile_object_id\")] public required string TextEmbeddingProfileObjectId { get; set; } Property Value string TextPartitioningProfileObjectId The object identifier of the text partitioning profile used to split text. [JsonPropertyName(\"text_partitioning_profile_object_id\")] public required string TextPartitioningProfileObjectId { get; set; } Property Value string TriggerCronSchedule The schedule of the trigger in Cron format. This propoerty is valid only when TriggerType = Schedule. [JsonPropertyName(\"trigger_cron_schedule\")] public string? TriggerCronSchedule { get; set; } Property Value string TriggerType The type of trigger that initiates the execution of the pipeline. [JsonPropertyName(\"trigger_type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public required VectorizationPipelineTriggerType TriggerType { get; set; } Property Value VectorizationPipelineTriggerType"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineExecution.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineExecution.html",
    "title": "Class VectorizationPipelineExecution | FoundationaLLM",
    "summary": "Class VectorizationPipelineExecution Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Provides the details of a vectorization pipeline execution. public class VectorizationPipelineExecution : ResourceBase Inheritance object ResourceName ResourceBase VectorizationPipelineExecution Inherited Members ResourceBase.ObjectId ResourceBase.DisplayName ResourceBase.Description ResourceBase.CostCenter ResourceBase.Properties ResourceBase.CreatedOn ResourceBase.UpdatedOn ResourceBase.CreatedBy ResourceBase.UpdatedBy ResourceBase.Deleted ResourceBase.ExpirationDate ResourceName.Type ResourceName.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ErrorMessages Gets or sets a list of error messages that includes content that was rejected at creation time along with the error. [JsonPropertyOrder(8)] [JsonPropertyName(\"error_messages\")] public List<string> ErrorMessages { get; set; } Property Value List<string> ExecutionEnd Gets or sets the UTC time when the pipeline execution was completed. [JsonPropertyOrder(3)] [JsonPropertyName(\"execution_end\")] public DateTimeOffset? ExecutionEnd { get; set; } Property Value DateTimeOffset? ExecutionStart Gets or sets the UTC time when the pipeline execution was started. [JsonPropertyOrder(2)] [JsonPropertyName(\"execution_start\")] public DateTimeOffset? ExecutionStart { get; set; } Property Value DateTimeOffset? PipelineObjectId Gets or sets the object identifier of the pipeline resource being executed. [JsonPropertyOrder(1)] [JsonPropertyName(\"pipeline_object_id\")] public required string PipelineObjectId { get; set; } Property Value string ProcessingState Gets or sets the processing state of the pipeline execution. [JsonPropertyOrder(7)] [JsonPropertyName(\"processing_state\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationProcessingState ProcessingState { get; } Property Value VectorizationProcessingState Remarks New -> empty vectorization requests collection InProgress -> at least one vectorization request in progress Failed -> at least one vectorization request failed Completed -> all vectorization requests completed successfully VectorizationRequestCount Gets or sets the number of vectorization requests that were submitted to the pipeline. [JsonPropertyOrder(4)] [JsonPropertyName(\"vectorization_request_count\")] public int VectorizationRequestCount { get; set; } Property Value int VectorizationRequestFailuresCount Gets or sets the number of vectorization requests that failed during processing. [JsonPropertyOrder(5)] [JsonPropertyName(\"vectorization_request_failures_count\")] public int VectorizationRequestFailuresCount { get; set; } Property Value int VectorizationRequestSuccessesCount Gets or sets the number of vectorization requests that failed during processing. [JsonPropertyOrder(6)] [JsonPropertyName(\"vectorization_request_successes_count\")] public int VectorizationRequestSuccessesCount { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineExecutionDetail.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineExecutionDetail.html",
    "title": "Class VectorizationPipelineExecutionDetail | FoundationaLLM",
    "summary": "Class VectorizationPipelineExecutionDetail Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Represents the state of a vectorization pipeline execution. public class VectorizationPipelineExecutionDetail Inheritance object VectorizationPipelineExecutionDetail Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ExecutionId Gets or sets the unique identifier of the pipeline execution. [JsonPropertyOrder(1)] [JsonPropertyName(\"execution_id\")] public required string ExecutionId { get; set; } Property Value string PipelineObjectId Gets or sets the object identifier of the pipeline resource being executed. [JsonPropertyOrder(0)] [JsonPropertyName(\"pipeline_object_id\")] public required string PipelineObjectId { get; set; } Property Value string VectorizationRequestObjectIds The vectorization requests associated with the pipeline execution and their status. Key: vectorization request resource object id Value: the processing state of the request [JsonPropertyOrder(2)] [JsonPropertyName(\"vectorization_request_object_ids\")] public List<string> VectorizationRequestObjectIds { get; set; } Property Value List<string>"
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineTriggerType.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.VectorizationPipelineTriggerType.html",
    "title": "Enum VectorizationPipelineTriggerType | FoundationaLLM",
    "summary": "Enum VectorizationPipelineTriggerType Namespace FoundationaLLM.Common.Models.Vectorization Assembly FoundationaLLM.Common.dll Types of vectorization pipeline triggers. public enum VectorizationPipelineTriggerType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields Event = 2 The vectorization pipeline is triggered based on content change events (e.g., an existing file is updated or a new file is added). Manual = 0 The vectorization pipeline is triggered manually. Schedule = 1 The vectorization pipeline is triggered based on a regular schedule."
  },
  "api/dotnet/FoundationaLLM.Common.Models.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.Vectorization.html",
    "title": "Namespace FoundationaLLM.Common.Models.Vectorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models.Vectorization Classes ContentIdentifier Represents the content associated with a vectorization request. EmbeddedContent Provides information about embedded content. EmbeddedContentPart Provides information about an embedded content part. Embedding.JsonConverter Serializes the content of an Embedding value. Note: use Embedding.JsonConverter to serialize objects using the Embedding type, for example: [JsonPropertyName(\"vector\")] [JsonConverter(typeof(Embedding.JsonConverter))] public Embedding Vector { get; set; } TextChunk Represents a chunk of text produced by a text splitter. TextCompletionRequest Models a request to run a list of completions. TextEmbeddingRequest Models a request to embed a list of text chunks. TextOperationResult The result of a text operation request. VectorizationPipeline Defines a vectorization pipeline. VectorizationPipelineExecution Provides the details of a vectorization pipeline execution. VectorizationPipelineExecutionDetail Represents the state of a vectorization pipeline execution. Structs Embedding Stores a vector embedding. This type should be serialized using Emedding.JsonConverter. Enums VectorizationPipelineTriggerType Types of vectorization pipeline triggers."
  },
  "api/dotnet/FoundationaLLM.Common.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Models.html",
    "title": "Namespace FoundationaLLM.Common.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Models Namespaces FoundationaLLM.Common.Models.Authentication FoundationaLLM.Common.Models.Authorization FoundationaLLM.Common.Models.Azure FoundationaLLM.Common.Models.AzureAIService FoundationaLLM.Common.Models.Cache FoundationaLLM.Common.Models.CodeExecution FoundationaLLM.Common.Models.Collections FoundationaLLM.Common.Models.Configuration FoundationaLLM.Common.Models.Context FoundationaLLM.Common.Models.Conversation FoundationaLLM.Common.Models.DataPipelines FoundationaLLM.Common.Models.Events FoundationaLLM.Common.Models.Gateway FoundationaLLM.Common.Models.Infrastructure FoundationaLLM.Common.Models.Knowledge FoundationaLLM.Common.Models.Metadata FoundationaLLM.Common.Models.Orchestration FoundationaLLM.Common.Models.Plugins FoundationaLLM.Common.Models.Quota FoundationaLLM.Common.Models.ResourceProviders FoundationaLLM.Common.Models.Vectorization"
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.ConfigureSwaggerOptions.html",
    "title": "Class ConfigureSwaggerOptions | FoundationaLLM",
    "summary": "Class ConfigureSwaggerOptions Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Configures the Swagger generation options. public class ConfigureSwaggerOptions : IConfigureOptions<SwaggerGenOptions> Inheritance object ConfigureSwaggerOptions Implements IConfigureOptions<SwaggerGenOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This allows API versioning to define a Swagger document per API version after the Asp.Versioning.ApiExplorer.IApiVersionDescriptionProvider service has been resolved from the service container. Constructors ConfigureSwaggerOptions(IApiVersionDescriptionProvider) Initializes a new instance of the ConfigureSwaggerOptions class. public ConfigureSwaggerOptions(IApiVersionDescriptionProvider provider) Parameters provider IApiVersionDescriptionProvider The provider used to generate Swagger documents. Methods Configure(SwaggerGenOptions) Invoked to configure a SwaggerGenOptions instance. public void Configure(SwaggerGenOptions options) Parameters options SwaggerGenOptions The options instance to configure."
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.SwaggerDefaultValues.html",
    "title": "Class SwaggerDefaultValues | FoundationaLLM",
    "summary": "Class SwaggerDefaultValues Namespace FoundationaLLM.Common.OpenAPI Assembly FoundationaLLM.Common.dll Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used. public class SwaggerDefaultValues : IOperationFilter Inheritance object SwaggerDefaultValues Implements IOperationFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This IOperationFilter is only required due to bugs in the SwaggerGenerator. Once they are fixed and published, this class can be removed. Methods Apply(OpenApiOperation, OperationFilterContext) public void Apply(OpenApiOperation operation, OperationFilterContext context) Parameters operation OpenApiOperation context OperationFilterContext"
  },
  "api/dotnet/FoundationaLLM.Common.OpenAPI.html": {
    "href": "api/dotnet/FoundationaLLM.Common.OpenAPI.html",
    "title": "Namespace FoundationaLLM.Common.OpenAPI | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.OpenAPI Classes ConfigureSwaggerOptions Configures the Swagger generation options. SwaggerDefaultValues Represents the OpenAPI/Swashbuckle operation filter used to document information provided, but not used."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.DownstreamAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.DownstreamAPIService.html",
    "title": "Class DownstreamAPIService | FoundationaLLM",
    "summary": "Class DownstreamAPIService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Contains methods for interacting with the downstream API. public class DownstreamAPIService : IDownstreamAPIService Inheritance object DownstreamAPIService Implements IDownstreamAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DownstreamAPIService(string, IOrchestrationContext, IHttpClientFactoryService, ILogger<DownstreamAPIService>) Contains methods for interacting with the downstream API. public DownstreamAPIService(string downstreamHttpClientName, IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService, ILogger<DownstreamAPIService> logger) Parameters downstreamHttpClientName string The name of the downstream HTTP client. callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. logger ILogger<DownstreamAPIService> The ILogger used for logging. Properties APIName The name of the downstream API. public string APIName { get; } Property Value string Methods GetCompletion(string, CompletionRequest) Gets a completion from the downstream API. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.HttpClientFactoryService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.HttpClientFactoryService.html",
    "title": "Class HttpClientFactoryService | FoundationaLLM",
    "summary": "Class HttpClientFactoryService Namespace FoundationaLLM.Common.Services.API Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class HttpClientFactoryService : IHttpClientFactoryService Inheritance object HttpClientFactoryService Implements IHttpClientFactoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors HttpClientFactoryService(IServiceProvider, IConfiguration, IHttpClientFactory) Creates a new instance of the HttpClientFactoryService class. public HttpClientFactoryService(IServiceProvider serviceProvider, IConfiguration configuration, IHttpClientFactory httpClientFactory) Parameters serviceProvider IServiceProvider The IServiceProvider for the main DI container. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. httpClientFactory IHttpClientFactory A fully configured IHttpClientFactory. Exceptions ArgumentNullException Methods CreateClient(APIEndpointConfiguration, UnifiedUserIdentity?) Creates a HttpClient instance based on the endpoint configuration. public Task<HttpClient> CreateClient(APIEndpointConfiguration endpointConfiguration, UnifiedUserIdentity? userIdentity) Parameters endpointConfiguration APIEndpointConfiguration The APIEndpointConfiguration resource used to create the client. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClient(string, UnifiedUserIdentity) Creates a HttpClient instance based on the client name. The client name must be registered in the IHttpClientFactory configuration. public Task<HttpClient> CreateClient(string clientName, UnifiedUserIdentity userIdentity) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. CreateClientForStatus(string, UnifiedUserIdentity) Creates a HttpClient instance based on the client name and sets the base address to the status endpoint. The client name must be registered in the IHttpClientFactory configuration. public Task<HttpClient> CreateClientForStatus(string clientName, UnifiedUserIdentity userIdentity) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. Returns Task<HttpClient> An HttpClient instance. Exceptions Exception When if the service base address is null or the status endpoint is null or empty. CreateClient<T>(string, UnifiedUserIdentity, Func<Dictionary<string, object>, T>, Dictionary<string, object>?) Creates a T client instance based on the client name and a client builder delegate. public Task<T> CreateClient<T>(string clientName, UnifiedUserIdentity userIdentity, Func<Dictionary<string, object>, T> clientBuilder, Dictionary<string, object>? clientBuilderParameters = null) Parameters clientName string The name of the HTTP client to create. This name must be registered as an APIEndpointConfiguration resource in the FoundationaLLM.Configuration resource provider. userIdentity UnifiedUserIdentity The UnifiedUserIdentity of the caller requesting the client. clientBuilder Func<Dictionary<string, object>, T> A delegate that creates the T client instance based on a dictionary of values. The keys available in the dictionary are defined in HttpClientFactoryServiceKeyNames. clientBuilderParameters Dictionary<string, object> A dictionary of parameters to pass to the client builder delegate. Returns Task<T> A T client instance. Type Parameters T The type of the client to create. CreateUnregisteredClient(TimeSpan?) Creates a new unregistered HttpClient instance with a timeout. public HttpClient CreateUnregisteredClient(TimeSpan? timeout = null) Parameters timeout TimeSpan? The timeout for the HttpClient. If not specified, the default timeout in seconds is applied. For an infinite waiting period, use InfiniteTimeSpan Returns HttpClient An HttpClient instance."
  },
  "api/dotnet/FoundationaLLM.Common.Services.API.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.API.html",
    "title": "Namespace FoundationaLLM.Common.Services.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.API Classes DownstreamAPIService Contains methods for interacting with the downstream API. HttpClientFactoryService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAISearchService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAISearchService.html",
    "title": "Class AzureAISearchService | FoundationaLLM",
    "summary": "Class AzureAISearchService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Implements the Azure AI Search Service. public class AzureAISearchService : IAzureAISearchService Inheritance object AzureAISearchService Implements IAzureAISearchService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAISearchService(SearchIndexClient, ILogger<AzureAISearchService>) Implements the Azure AI Search Service. public AzureAISearchService(SearchIndexClient searchIndexClient, ILogger<AzureAISearchService> logger) Parameters searchIndexClient SearchIndexClient The Azure SDK client for the Azure AI Search service. logger ILogger<AzureAISearchService> The logger used for logging. Methods CreateIndexIfNotExists(string, IEnumerable<SearchField>, VectorSearch?) Creates an index in the Azure AI Search service if it does not already exist. public Task CreateIndexIfNotExists(string indexName, IEnumerable<SearchField> indexFields, VectorSearch? indexConfiguration = null) Parameters indexName string The name of the index to create. indexFields IEnumerable<SearchField> The list of fields for the newly created index. indexConfiguration VectorSearch The optionsl vectorization configuration for the newly created index. Returns Task CreateSearchIndexClient(Dictionary<string, object>) Creates a new instance of the SearchIndexClient class using a dictionary of parameter values. public static SearchIndexClient CreateSearchIndexClient(Dictionary<string, object> clientParameters) Parameters clientParameters Dictionary<string, object> The dictionary of parameter values used to create the client instance. Returns SearchIndexClient The requested client instance. Exceptions NotImplementedException DeleteDocuments(string, string, string) Deletes documents from the specified index in the Azure AI Search service based on a filter. public Task<int> DeleteDocuments(string indexName, string keyFieldName, string filter) Parameters indexName string The name of the index from which the documents should be deleted. keyFieldName string The name of the key field for the index. filter string The filter used to identify the documents to be deleted. Returns Task<int> The number of documents that were deleted. SearchDocuments(string, IEnumerable<string>, string, string, ReadOnlyMemory<float>, string, float, int, bool) Searches for documents in the specified index that match the given filter and are similar to the provided user prompt embedding. public Task<IEnumerable<SearchDocument>> SearchDocuments(string indexName, IEnumerable<string> select, string filter, string userPrompt, ReadOnlyMemory<float> userPromptEmbedding, string embeddingPropertyName, float similarityThreshold, int topN, bool useSemanticRanking) Parameters indexName string The name of the index to search within. select IEnumerable<string> A list of fields to select in the search results. If null or empty, all fields will be selected. filter string A filter expression to narrow down the search results. userPrompt string The original user prompt. userPromptEmbedding ReadOnlyMemory<float> A read-only memory segment representing the embedding of the user prompt. embeddingPropertyName string The name of the index property that contains embeddings. similarityThreshold float The minimum similarity score required for a document to be included in the results. Must be a value between 0 and 1. topN int The maximum number of documents to return. Must be a positive integer. useSemanticRanking bool A flag that indicates whether semantic ranking should be used or not. Returns Task<IEnumerable<SearchDocument>> An enumerable collection of SearchDocument objects that match the filter and meet the similarity threshold, ordered by relevance. The collection will be empty if no matching documents are found. UploadDocuments(string, List<string>, List<object[]>) Uploads documents to the specified index in the Azure AI Search service. public Task UploadDocuments(string indexName, List<string> fieldNames, List<object[]> fieldValues) Parameters indexName string The name of the index in which the documents should be uploaded. fieldNames List<string> The names of the fields of the documents. fieldValues List<object[]> The values of the fields of the documents. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAIService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAIService.html",
    "title": "Class AzureAIService | FoundationaLLM",
    "summary": "Class AzureAIService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Service to interact with Azure AI Studio. public class AzureAIService : IAzureAIService Inheritance object AzureAIService Implements IAzureAIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for Azure AI Service. Constructors AzureAIService(IOptions<AzureAISettings>, ILogger<AzureAIService>, IStorageService, IOrchestrationContext, IHttpClientFactoryService) Service to interact with Azure AI Studio. public AzureAIService(IOptions<AzureAISettings> azureAISettings, ILogger<AzureAIService> logger, IStorageService blobStorageService, IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters azureAISettings IOptions<AzureAISettings> logger ILogger<AzureAIService> blobStorageService IStorageService callContext IOrchestrationContext httpClientFactoryService IHttpClientFactoryService Remarks Constructor for Azure AI Service. Methods CreateDataSet(InputsMapping, string) Creates a new data set. public Task<string> CreateDataSet(InputsMapping data, string blobName) Parameters data InputsMapping blobName string Returns Task<string> CreateDataSetVersion(string, string, int) Creates a data set version request. public Task<DataVersionResponse> CreateDataSetVersion(string dataSetName, string dataSetPath, int version = 1) Parameters dataSetName string dataSetPath string version int Returns Task<DataVersionResponse> DownloadResults(Guid) Downloads the results of a job. public Task<string> DownloadResults(Guid jobId) Parameters jobId Guid Returns Task<string> GetJobStatus(Guid) Retrieves the status of a job. public Task<string> GetJobStatus(Guid jobId) Parameters jobId Guid Returns Task<string> GetResultsByIndex(Guid, int, int) Retrieves the results of a job by index. public Task<string> GetResultsByIndex(Guid jobId, int startIndex = 0, int endIndex = 149) Parameters jobId Guid startIndex int endIndex int Returns Task<string> SubmitJob(string, string, int, string) Submits a job to the Azure AI service. public Task<Guid> SubmitJob(string displayName, string dataSetName, int dataSetVersion, string metrics) Parameters displayName string dataSetName string dataSetVersion int metrics string Returns Task<Guid>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAppConfigurationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureAppConfigurationService.html",
    "title": "Class AzureAppConfigurationService | FoundationaLLM",
    "summary": "Class AzureAppConfigurationService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides access to and management of Azure App Configuration. public class AzureAppConfigurationService : IAzureAppConfigurationService Inheritance object AzureAppConfigurationService Implements IAzureAppConfigurationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAppConfigurationService(ConfigurationClient, ILogger<AzureAppConfigurationService>) Provides access to and management of Azure App Configuration. public AzureAppConfigurationService(ConfigurationClient configurationClient, ILogger<AzureAppConfigurationService> logger) Parameters configurationClient ConfigurationClient The Azure App Configuration ConfigurationClient. logger ILogger<AzureAppConfigurationService> The logger. Methods CheckAppConfigurationSettingExistsAsync(string) Check if an individual Azure App Configuration key exists. public Task<bool> CheckAppConfigurationSettingExistsAsync(string key) Parameters key string Returns Task<bool> CheckAppConfigurationSettingsExistAsync() Returns a map of configuration setting keys and whether they exist in Azure App Configuration. public Task<Dictionary<string, bool>> CheckAppConfigurationSettingsExistAsync() Returns Task<Dictionary<string, bool>> DeleteAppConfigurationSettingAsync(string) Deletes an Azure App Configuration setting and its associated Azure Key Vault secret. public Task DeleteAppConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task GetConfigurationSettingAsync(string) Gets the value of a configuration setting from Azure App Configuration. public Task<string?> GetConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task<string> GetConfigurationSettingsAsync(string) Gets the values of configuration settings from Azure App Configuration. public Task<List<(string Key, string? Value, string ContentType)>> GetConfigurationSettingsAsync(string keyFilter) Parameters keyFilter string The key name filter used to select the settings keys for which values are retrieved. Returns Task<List<(string Key, string Value, string ContentType)>> GetFeatureFlagAsync(string) Gets the value of a feature flag from Azure App Configuration. public Task<bool> GetFeatureFlagAsync(string key) Parameters key string The App Configuration feature flag key. Returns Task<bool> SetConfigurationSettingAsync(string, string, string) Sets the value of a configuration setting in Azure App Configuration. public Task SetConfigurationSettingAsync(string key, string value, string contentType) Parameters key string The App Configuration setting key. value string The value to set. contentType string The content type of the value. Returns Task SetFeatureFlagAsync(string, bool) Sets the value of a feature flag in Azure App Configuration. public Task SetFeatureFlagAsync(string key, bool flagEnabled) Parameters key string The App Configuration feature flag key. flagEnabled bool Whether to enable the feature flag. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureCosmosDBService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureCosmosDBService.html",
    "title": "Class AzureCosmosDBService | FoundationaLLM",
    "summary": "Class AzureCosmosDBService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Service to access Azure Cosmos DB for NoSQL. public class AzureCosmosDBService : IAzureCosmosDBService Inheritance object AzureCosmosDBService Implements IAzureCosmosDBService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBService(IOptions<AzureCosmosDBSettings>, CosmosClient, ILogger<AzureCosmosDBService>) Initializes a new instance of the AzureCosmosDBService class. public AzureCosmosDBService(IOptions<AzureCosmosDBSettings> settings, CosmosClient client, ILogger<AzureCosmosDBService> logger) Parameters settings IOptions<AzureCosmosDBSettings> The AzureCosmosDBSettings settings retrieved by the injected IOptions<TOptions>. client CosmosClient The Cosmos DB client. logger ILogger<AzureCosmosDBService> The logging interface used to log under the AzureCosmosDBService type name. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Methods CreateAgentFile(AgentFileReference, CancellationToken) Creates an agent file. public Task CreateAgentFile(AgentFileReference agentFile, CancellationToken cancellationToken = default) Parameters agentFile AgentFileReference The agent file to be added. cancellationToken CancellationToken Cancellation token for async calls. Returns Task CreateAttachment(AttachmentReference, CancellationToken) Creates an attachment. public Task CreateAttachment(AttachmentReference attachmentReference, CancellationToken cancellationToken = default) Parameters attachmentReference AttachmentReference cancellationToken CancellationToken Cancellation token for async calls. Returns Task CreateOrUpdateConversationAsync(Conversation, CancellationToken) Creates or updates a conversation. public Task<Conversation> CreateOrUpdateConversationAsync(Conversation session, CancellationToken cancellationToken = default) Parameters session Conversation Conversation item to create or update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Conversation> Newly created or updated conversation item. CreateVectorSearchContainerAsync(string, string, string, int, CancellationToken) Creates a new container for vector search. public Task CreateVectorSearchContainerAsync(string containerName, string partitionKeyPath, string vectorPropertyPath, int vectorDimensions, CancellationToken cancellationToken = default) Parameters containerName string The name of the container to create. partitionKeyPath string The property path that contains the partition key. vectorPropertyPath string vectorDimensions int The length of each vector (the number of dimensions used for embedding). cancellationToken CancellationToken The cancellation token to signal the need to cancel the operation. Returns Task DeleteAgentFile(AgentFileReference, CancellationToken) Deletes an agent file. public Task DeleteAgentFile(AgentFileReference agentFile, CancellationToken cancellationToken = default) Parameters agentFile AgentFileReference The agent file to be deleted. cancellationToken CancellationToken Cancellation token for async calls. Returns Task DeleteAttachment(AttachmentReference, CancellationToken) Deletes an attachment. public Task DeleteAttachment(AttachmentReference attachmentReference, CancellationToken cancellationToken = default) Parameters attachmentReference AttachmentReference cancellationToken CancellationToken Cancellation token for async calls. Returns Task DeleteConversationAsync(string, CancellationToken) Batch deletes an existing chat session and all related messages. public Task DeleteConversationAsync(string sessionId, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to flag messages and sessions for deletion. cancellationToken CancellationToken Cancellation token for async calls. Returns Task FilterAttachments(string, ResourceFilter, CancellationToken) Gets list of filtered attachments. public Task<List<AttachmentReference>> FilterAttachments(string upn, ResourceFilter resourceFilter, CancellationToken cancellationToken = default) Parameters upn string The user's UPN. resourceFilter ResourceFilter The resource filter. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<AttachmentReference>> A list of filtered attachments. GetAgentFile(string, string, string, CancellationToken) Gets an agent file. public Task<AgentFileReference?> GetAgentFile(string instanceId, string agentName, string id, CancellationToken cancellationToken = default) Parameters instanceId string The instance unique identifier agentName string The agent name. id string The agent file id. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<AgentFileReference> An agent file. GetAgentFiles(string, string, CancellationToken) Gets a list of agent files. public Task<List<AgentFileReference>> GetAgentFiles(string instanceId, string agentName, CancellationToken cancellationToken = default) Parameters instanceId string The instance unique identifier agentName string The agent name. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<AgentFileReference>> A list of agent files. GetAttachment(string, string, CancellationToken) Gets an attachment. public Task<AttachmentReference?> GetAttachment(string upn, string resourceName, CancellationToken cancellationToken = default) Parameters upn string The user's UPN. resourceName string cancellationToken CancellationToken Cancellation token for async calls. Returns Task<AttachmentReference> An attachment. GetAttachments(string, CancellationToken) Gets a list of attachments for the signed in user. public Task<List<AttachmentReference>> GetAttachments(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the attachments for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<AttachmentReference>> A list of attachments for the signed in user. GetCompletionPromptAsync(string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPromptAsync(string sessionId, string completionPromptId) Parameters sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetCompletionResponseAsync(string, ReadOnlyMemory<float>, decimal) Gets the completion response for a given user prompt embedding using vector search and a minimum threshold for similarity. public Task<CompletionResponse?> GetCompletionResponseAsync(string containerName, ReadOnlyMemory<float> userPromptEmbedding, decimal minimumSimilarityScore) Parameters containerName string The name of the container holding the vector index. userPromptEmbedding ReadOnlyMemory<float> The reference embedding used for the vector search. minimumSimilarityScore decimal The threshold used for the similarity score. Returns Task<CompletionResponse> A CompletionResponse that matches the search criteria. If no item in the vector index matches the criteria, returns . GetConversationAsync(string, CancellationToken) Performs a point read to retrieve a single conversation item. public Task<Conversation?> GetConversationAsync(string id, CancellationToken cancellationToken = default) Parameters id string cancellationToken CancellationToken Returns Task<Conversation> The conversation item. Returns null if the conversation does not exist. GetConversationsAsync(string, string, CancellationToken) Gets a list of all current conversations. public Task<List<Conversation>> GetConversationsAsync(string type, string upn, CancellationToken cancellationToken = default) Parameters type string The conversation type to return. upn string The user principal name used for retrieving conversations for the signed-in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Conversation>> List of distinct conversation items. GetItemAsync<T>(string, string, string, CancellationToken) Gets a single item by its identifier and partition key. public Task<T?> GetItemAsync<T>(string containerName, string id, string partitionKey, CancellationToken cancellationToken = default) Parameters containerName string The name of the container storing the item. id string The identifier of the item. partitionKey string The partition key of the item. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The retrieved object of type T. Type Parameters T The type of the item to retrieve. GetLongRunningOperationContextAsync(string, CancellationToken) Get the context for a long running operation. public Task<LongRunningOperationContext> GetLongRunningOperationContextAsync(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The identifier of the long running operation. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<LongRunningOperationContext> A LongRunningOperationContext object providing the context for the long running operation. GetMessageAsync(string, string, CancellationToken) Gets a single conversation message by its identifier. public Task<Message> GetMessageAsync(string id, string sessionId, CancellationToken cancellationToken = default) Parameters id string The identifier of the message. sessionId string The identifier of the conversation. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> A Message object containing the message. GetSessionMessagesAsync(string, string, int?, CancellationToken) Gets a list of all current chat messages for a specified session identifier. Messages are always sorted by TimeStamp in ascending order. public Task<List<Message>> GetSessionMessagesAsync(string sessionId, string upn, int? max = null, CancellationToken cancellationToken = default) Parameters sessionId string Chat session identifier used to filter messages. upn string The user principal name used for retrieving the messages for the signed in user. max int? If provided, limits the number of messages. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<List<Message>> List of chat message items for the specified session. GetUserProfileAsync(string, CancellationToken) Returns the user profile for a given user via their UPN. public Task<UserProfile> GetUserProfileAsync(string upn, CancellationToken cancellationToken = default) Parameters upn string The user principal name used for retrieving the messages for the signed in user. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<UserProfile> InsertMessageAsync(Message, CancellationToken) Creates a new chat message. public Task<Message> InsertMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to create. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Newly created chat message item. PatchConversationPropertiesAsync(string, string, Dictionary<string, object?>, CancellationToken) Updates conversation properties through a patch operation. public Task<Conversation> PatchConversationPropertiesAsync(string id, string upn, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters id string The conversation id. upn string The user principal name used for policy enforcement. propertyValues Dictionary<string, object> The dictionary containing property names and updated values. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Conversation> Updated conversation item. PatchItemPropertiesAsync<T>(string, string, string, string, Dictionary<string, object?>, CancellationToken) Patches an item in the specified container. public Task<T> PatchItemPropertiesAsync<T>(string containerName, string partitionKey, string id, string upn, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters containerName string The name of the container storing the item. partitionKey string The partition key of the item. id string The item ID. upn string The user principal name used for matching the UPN of the item. propertyValues Dictionary<string, object> Dictionary of the property names and values to patch. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The patched object of type . Type Parameters T The type of the item to patch. PatchMultipleSessionsItemsInTransactionAsync(string, List<IPatchOperationItem>, CancellationToken) Updates a subset of the properties of one or more items of a specified type from the Sessions collection. public Task<Dictionary<string, object>> PatchMultipleSessionsItemsInTransactionAsync(string partitionKey, List<IPatchOperationItem> patchOperations, CancellationToken cancellationToken = default) Parameters partitionKey string The partition key of the item(s) being updated. Batch operations must occur within the same partition key. patchOperations List<IPatchOperationItem> The patch operations to perform on each object, including the object's identifier, dictionary containing the property names and updated values, and the item type. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Dictionary<string, object>> PatchOperationsItemPropertiesAsync<T>(string, string, Dictionary<string, object?>, CancellationToken) Updates a subset of the properties of an item of a specified type from the Operations collection. public Task<T> PatchOperationsItemPropertiesAsync<T>(string itemId, string partitionKey, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters itemId string The identifier of the item being updated. partitionKey string The partition key of the item being updated. propertyValues Dictionary<string, object> The dictionary containing property names and updated values. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> Type Parameters T The type of the item to update. PatchSessionsItemPropertiesAsync<T>(string, string, Dictionary<string, object?>, CancellationToken) Updates a subset of the properties of an item of a specified type from the Sessions collection. public Task<T> PatchSessionsItemPropertiesAsync<T>(string itemId, string partitionKey, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters itemId string The identifier of the item being updated. partitionKey string The partition key of the item being updated. propertyValues Dictionary<string, object> The dictionary containing property names and updated values. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> Type Parameters T The type of the item to update. UpdateMessageAsync(Message, CancellationToken) Updates an existing chat message. public Task<Message> UpdateMessageAsync(Message message, CancellationToken cancellationToken = default) Parameters message Message Chat message item to update. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<Message> Revised chat message item. UpsertItemAsync<T>(string, string, T, CancellationToken) Creates or updates an item in the specified container. public Task<T?> UpsertItemAsync<T>(string containerName, string partitionKey, T item, CancellationToken cancellationToken = default) Parameters containerName string The name of the container storing the item. partitionKey string The partition key of the item. item T The item to be created or updated. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The created or updated object of type T. Type Parameters T The type of the item to create or update. UpsertLongRunningOperationContextAsync(LongRunningOperationContext, CancellationToken) Inserts or updates a long running operation context. public Task UpsertLongRunningOperationContextAsync(LongRunningOperationContext longRunningOperationContext, CancellationToken cancellationToken = default) Parameters longRunningOperationContext LongRunningOperationContext The LongRunningOperationContext object providing the context for the long running operation. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertSessionBatchAsync(params dynamic[]) Batch create or update chat messages and session. public Task UpsertSessionBatchAsync(params dynamic[] messages) Parameters messages dynamic[] Chat message and session items to create or replace. Returns Task UpsertUserProfileAsync(UserProfile, CancellationToken) Inserts or updates a user profile. public Task UpsertUserProfileAsync(UserProfile userProfile, CancellationToken cancellationToken = default) Parameters userProfile UserProfile The user profile to upsert. cancellationToken CancellationToken Cancellation token for async calls. Returns Task UpsertUserSessionAsync(Conversation, CancellationToken) Create or update a user session from the passed in Session object. public Task UpsertUserSessionAsync(Conversation session, CancellationToken cancellationToken = default) Parameters session Conversation The chat session item to create or replace. cancellationToken CancellationToken Cancellation token for async calls. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureKeyVaultService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureKeyVaultService.html",
    "title": "Class AzureKeyVaultService | FoundationaLLM",
    "summary": "Class AzureKeyVaultService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides access to and management of Azure Key Vault. public class AzureKeyVaultService : IAzureKeyVaultService Inheritance object AzureKeyVaultService Implements IAzureKeyVaultService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureKeyVaultService(SecretClient) Provides access to and management of Azure Key Vault. public AzureKeyVaultService(SecretClient secretClient) Parameters secretClient SecretClient The Key Vault SecretClient. Properties KeyVaultUri Gets the URI of the Key Vault. public string KeyVaultUri { get; } Property Value string Methods CheckKeyVaultSecretsExistAsync(IEnumerable<string?>) Returns a map of secret names and whether they exist in Key Vault. public Task<Dictionary<string, bool>> CheckKeyVaultSecretsExistAsync(IEnumerable<string?> secretNames) Parameters secretNames IEnumerable<string> The list of secret names to check. Returns Task<Dictionary<string, bool>> CheckSecretExistsAsync(string) Returns whether a secret exists in Key Vault. public Task<bool> CheckSecretExistsAsync(string secretName) Parameters secretName string The secret name to check. Returns Task<bool> GetSecretValue(string) Gets the value of a secret from Key Vault. public string? GetSecretValue(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns string GetSecretValueAsync(string) Gets the value of a secret from Key Vault. public Task<string?> GetSecretValueAsync(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns Task<string> RemoveSecretAsync(string) Removes the specified secret from the Key Vault. public Task RemoveSecretAsync(string secretName) Parameters secretName string The name of the secret to be removed. Returns Task SetSecretValueAsync(string, string) Sets the value of a secret in Key Vault. public Task SetSecretValueAsync(string secretName, string secretValue) Parameters secretName string The name of the secret whose value you wish to set. secretValue string The secret value. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureResourceManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.AzureResourceManagerService.html",
    "title": "Class AzureResourceManagerService | FoundationaLLM",
    "summary": "Class AzureResourceManagerService Namespace FoundationaLLM.Common.Services.Azure Assembly FoundationaLLM.Common.dll Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public class AzureResourceManagerService : IAzureResourceManagerService Inheritance object AzureResourceManagerService Implements IAzureResourceManagerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureResourceManagerService(ILogger<AzureResourceManagerService>) Provides services to interact with the Azure Resource Manager (ARM) infrastructure. public AzureResourceManagerService(ILogger<AzureResourceManagerService> logger) Parameters logger ILogger<AzureResourceManagerService> The logger used for logging. Methods CreateEventGridNamespaceTopicSubscription(string, string, string, List<string>, CancellationToken) Creates a new Azure Event Grid namespace topic subscription. public Task<bool> CreateEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, List<string> includedEventTypes, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be created. topicSubscriptionName string The name of the subscription to be created. includedEventTypes List<string> The list of event types to include in the subscription as part of the filters configuration. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task<bool> True if the subscription was successfully created, false otherwise. DeleteEventGridNamespaceTopicSubscription(string, string, string, CancellationToken) Deletes an Azure Event Grid namespace topic subscription. public Task DeleteEventGridNamespaceTopicSubscription(string namespaceResourceId, string topicName, string topicSubscriptionName, CancellationToken cancellationToken) Parameters namespaceResourceId string The Azure resource identifier of the Azure Event Grid namespace. topicName string The name of the topic for which the subscription should be deleted. topicSubscriptionName string The name of the subscription to be deleted. cancellationToken CancellationToken The CancellationToken signaling the request to cancel the operation. Returns Task GetOpenAIAccountProperties(string) Retrieves the properties of an Azure OpenAI account. public Task<AzureOpenAIAccount> GetOpenAIAccountProperties(string openAIAccountResourceId) Parameters openAIAccountResourceId string The Azure resource identifier of the Azure OpenAI account. Returns Task<AzureOpenAIAccount> An AzureOpenAIAccount object with the properties of the account, including model deployments."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Azure.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Azure.html",
    "title": "Namespace FoundationaLLM.Common.Services.Azure | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Azure Classes AzureAISearchService Implements the Azure AI Search Service. AzureAIService Service to interact with Azure AI Studio. AzureAppConfigurationService Provides access to and management of Azure App Configuration. AzureCosmosDBService Service to access Azure Cosmos DB for NoSQL. AzureKeyVaultService Provides access to and management of Azure Key Vault. AzureResourceManagerService Provides services to interact with the Azure Resource Manager (ARM) infrastructure."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Cache.AuthorizationServiceClientCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Cache.AuthorizationServiceClientCacheService.html",
    "title": "Class AuthorizationServiceClientCacheService | FoundationaLLM",
    "summary": "Class AuthorizationServiceClientCacheService Namespace FoundationaLLM.Common.Services.Cache Assembly FoundationaLLM.Common.dll Provides the caching services used by the FoundationaLLM authorization service client. public class AuthorizationServiceClientCacheService : IAuthorizationServiceClientCacheService Inheritance object AuthorizationServiceClientCacheService Implements IAuthorizationServiceClientCacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AuthorizationServiceClientCacheService(AuthorizationServiceClientSettings, ILogger) Provides the caching services used by the FoundationaLLM authorization service client. public AuthorizationServiceClientCacheService(AuthorizationServiceClientSettings settings, ILogger logger) Parameters settings AuthorizationServiceClientSettings The AuthorizationServiceClientSettings used to configure the authorization service client. logger ILogger The ILogger used to log information. Methods SetValue(ActionAuthorizationRequest, ActionAuthorizationResult) Sets an ActionAuthorizationResult in the cache. public void SetValue(ActionAuthorizationRequest authorizationRequest, ActionAuthorizationResult result) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest key used to set the authorization result in the cache. result ActionAuthorizationResult TryGetValue(ActionAuthorizationRequest, out ActionAuthorizationResult?) Attempts to retrieve an ActionAuthorizationResult from the cache. public bool TryGetValue(ActionAuthorizationRequest authorizationRequest, out ActionAuthorizationResult? authorizationResult) Parameters authorizationRequest ActionAuthorizationRequest The ActionAuthorizationRequest key used to identify the authorization result in the cache. authorizationResult ActionAuthorizationResult The ActionAuthorizationResult to be retrieved. Returns bool true if the value was found in the cache, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Cache.MemoryCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Cache.MemoryCacheService.html",
    "title": "Class MemoryCacheService | FoundationaLLM",
    "summary": "Class MemoryCacheService Namespace FoundationaLLM.Common.Services.Cache Assembly FoundationaLLM.Common.dll Provides an in-memory cache service. public class MemoryCacheService : ICacheService Inheritance object MemoryCacheService Implements ICacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MemoryCacheService(ILogger<MemoryCacheService>) Provides an in-memory cache service. public MemoryCacheService(ILogger<MemoryCacheService> logger) Parameters logger ILogger<MemoryCacheService> The logger used for logging. Methods GetItemsCount(string) Gets the number of items in the cache that belong to a specified category. public int GetItemsCount(string categoryName) Parameters categoryName string The name of the category. Returns int Get<T>(CacheKey) Gets an object from the cache. public T? Get<T>(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Returns T The object identified by the key. Type Parameters T The type of object retrieved from the cache. Get<T>(CacheKey, Func<Task<T>>, bool, TimeSpan?) Gets an object from the cache. If the object is not found in the cache, will attempt to retrieve it using a specified retriever. public Task<T?> Get<T>(CacheKey key, Func<Task<T>> valueRetriever, bool allowNull, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. valueRetriever Func<Task<T>> The retriever used to get the value to populate the cache. allowNull bool Indicates whether null values returned by the value retriever should be cached or not. expirationTime TimeSpan? The TimeSpan time to live. Returns Task<T> The object identified by the key. Type Parameters T The type of object retrieved from the cache. Remove(CacheKey) Removes an object from the cache. public void Remove(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. RemoveByCategory(CacheKey) Removes all objects belonging to a category from the cache. public void RemoveByCategory(CacheKey key) Parameters key CacheKey The CacheKey key identifying the object in the cache. Set<T>(CacheKey, T?, TimeSpan?) Adds an object to the cache. public void Set<T>(CacheKey key, T? value, TimeSpan? expirationTime) Parameters key CacheKey The CacheKey key identifying the object in the cache. value T The object to be added to the cache. expirationTime TimeSpan? The TimeSpan time to live. Type Parameters T The type of object retrieved from the cache."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Cache.ResourceProviderResourceCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Cache.ResourceProviderResourceCacheService.html",
    "title": "Class ResourceProviderResourceCacheService | FoundationaLLM",
    "summary": "Class ResourceProviderResourceCacheService Namespace FoundationaLLM.Common.Services.Cache Assembly FoundationaLLM.Common.dll Provides the resource caching services used by FoundationaLLM resource providers. public class ResourceProviderResourceCacheService : IResourceProviderResourceCacheService Inheritance object ResourceProviderResourceCacheService Implements IResourceProviderResourceCacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderResourceCacheService(ResourceProviderCacheSettings, ILogger) Initializes a new instance of the ResourceProviderResourceCacheService class. public ResourceProviderResourceCacheService(ResourceProviderCacheSettings cacheSettings, ILogger logger) Parameters cacheSettings ResourceProviderCacheSettings The ResourceProviderCacheSettings providing settings for the cache. logger ILogger The ILogger used to log information. Methods Reset() Resets the cache. public void Reset() SetValue<T>(ResourceReference, T) Sets a resource value identified by a resource reference in the cache. public void SetValue<T>(ResourceReference resourceReference, T resourceValue) where T : ResourceBase Parameters resourceReference ResourceReference The ResourceReference used as a key in the cache. resourceValue T The resource value to be set. Type Parameters T The type of resource value to be set. TryGetValue<T>(ResourceReference, out T?) Tries to get a resource value identified by a resource reference from the cache. public bool TryGetValue<T>(ResourceReference resourceReference, out T? resourceValue) where T : ResourceBase Parameters resourceReference ResourceReference The ResourceReference used as a key in the cache. resourceValue T The resource value to be retrieved. Returns bool true is the resource value was found in the cache, false otherwise. Type Parameters T The type of resource value to be retrieved."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Cache.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Cache.html",
    "title": "Namespace FoundationaLLM.Common.Services.Cache | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Cache Classes AuthorizationServiceClientCacheService Provides the caching services used by the FoundationaLLM authorization service client. MemoryCacheService Provides an in-memory cache service. ResourceProviderResourceCacheService Provides the resource caching services used by FoundationaLLM resource providers."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.AzureEventGridEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.AzureEventGridEventService.html",
    "title": "Class AzureEventGridEventService | FoundationaLLM",
    "summary": "Class AzureEventGridEventService Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Provides services to integrate with the Azure Event Grid eventing platform. public class AzureEventGridEventService : IEventService Inheritance object AzureEventGridEventService Implements IEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureEventGridEventService(DependencyInjectionContainerSettings, IOptions<AzureEventGridEventServiceSettings>, IOptions<AzureEventGridEventServiceProfile>, IAzureResourceManagerService, IHttpClientFactoryService, ILogger<AzureEventGridEventService>) Creates a new instance of the AzureEventGridEventService event service. public AzureEventGridEventService(DependencyInjectionContainerSettings dependencyInjectionContainerSettings, IOptions<AzureEventGridEventServiceSettings> settingsOptions, IOptions<AzureEventGridEventServiceProfile> profileOptions, IAzureResourceManagerService azureResourceManager, IHttpClientFactoryService httpClientFactory, ILogger<AzureEventGridEventService> logger) Parameters dependencyInjectionContainerSettings DependencyInjectionContainerSettings The DependencyInjectionContainerSettings providing the configuration of the dependency injection container. settingsOptions IOptions<AzureEventGridEventServiceSettings> The options providing the settings for the service. profileOptions IOptions<AzureEventGridEventServiceProfile> The options providing the profile for the service. azureResourceManager IAzureResourceManagerService The IAzureResourceManagerService service providing access to Azure ARM services. httpClientFactory IHttpClientFactoryService The IHttpClientFactoryService service used to create HTTP clients. logger ILogger<AzureEventGridEventService> The logger used for logging. Properties InitializationTask Gets the TaskCompletionSource<TResult> (TResult of type bool) that signals the completion of the initialization task. public Task<bool> InitializationTask { get; } Property Value Task<bool> Remarks The result of the task indicates whether initialization completed successfully or not. ServiceInstanceName The name of the service instance. public string ServiceInstanceName { get; } Property Value string Methods ExecuteAsync(CancellationToken) Executes the event service until cancellation is signaled. public Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SendEvent(string, CloudEvent) Sends an event to the event service. public Task SendEvent(string topicName, CloudEvent cloudEvent) Parameters topicName string The name of the topic where the event should be sent. cloudEvent CloudEvent The CloudEvent object containing the details of the event. Returns Task StartAsync(CancellationToken) Starts the event service, allowing it to initialize. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the event service, allowing it to cleanup. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task SubscribeToEventTypeEvent(string, EventTypeEventDelegate) Adds an event set event delgate to the list of event handlers for a specified event set namespace. public void SubscribeToEventTypeEvent(string eventType, EventTypeEventDelegate eventHandler) Parameters eventType string The event type to subscribe to. eventHandler EventTypeEventDelegate The function to be invoked during event handling. UnsubscribeFromEventTypeEvent(string, EventTypeEventDelegate) Removes an event set event delegate from the list of event handlers for a specified event set namespace. public void UnsubscribeFromEventTypeEvent(string eventType, EventTypeEventDelegate eventHandler) Parameters eventType string The event type to subscribe to. eventHandler EventTypeEventDelegate The function to be invoked during event handling."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.EventsWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.EventsWorker.html",
    "title": "Class EventsWorker | FoundationaLLM",
    "summary": "Class EventsWorker Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Background worker used to execute the event service. public class EventsWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService EventsWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EventsWorker(IEventService, ILogger<EventsWorker>) Background worker used to execute the event service. public EventsWorker(IEventService eventService, ILogger<EventsWorker> logger) Parameters eventService IEventService The IEventService to run. logger ILogger<EventsWorker> The logger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.LocalEventService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.LocalEventService.html",
    "title": "Class LocalEventService | FoundationaLLM",
    "summary": "Class LocalEventService Namespace FoundationaLLM.Common.Services.Events Assembly FoundationaLLM.Common.dll Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern. public class LocalEventService Inheritance object LocalEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LocalEventService(LocalEventServiceSettings, IEventService, ILogger) Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern. public LocalEventService(LocalEventServiceSettings settings, IEventService eventService, ILogger logger) Parameters settings LocalEventServiceSettings The LocalEventServiceSettings containing configuration settings for the service. eventService IEventService The IEventService event service that is publishing events through event namespaces. logger ILogger The logger used for logging. Methods StartLocalEventProcessing(Func<EventTypeEventArgs, Task>) Kicks off the extraction of events from the events queue. The events are initially received from the events service and are queued internally. In the background, the extraction thread will dequeue and submit them to final processing using the provided event handler. public void StartLocalEventProcessing(Func<EventTypeEventArgs, Task> eventHandler) Parameters eventHandler Func<EventTypeEventArgs, Task> The event handler invoked to process each set of events. SubscribeToEventTypes(List<string>) Subscribes this instance to a specified list of event types supported by the IEventService. public void SubscribeToEventTypes(List<string> eventTypes) Parameters eventTypes List<string> The list with the event types to subscribe to."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Events.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Events.html",
    "title": "Namespace FoundationaLLM.Common.Services.Events | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Events Classes AzureEventGridEventService Provides services to integrate with the Azure Event Grid eventing platform. EventsWorker Background worker used to execute the event service. LocalEventService Subscribes to IEventService event namespaces and handles events using a decoupled, queue-based pattern."
  },
  "api/dotnet/FoundationaLLM.Common.Services.IAzureAppConfigurationService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.IAzureAppConfigurationService.html",
    "title": "Interface IAzureAppConfigurationService | FoundationaLLM",
    "summary": "Interface IAzureAppConfigurationService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure App Configuration. public interface IAzureAppConfigurationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CheckAppConfigurationSettingExistsAsync(string) Check if an individual Azure App Configuration key exists. Task<bool> CheckAppConfigurationSettingExistsAsync(string key) Parameters key string Returns Task<bool> CheckAppConfigurationSettingsExistAsync() Returns a map of configuration setting keys and whether they exist in Azure App Configuration. Task<Dictionary<string, bool>> CheckAppConfigurationSettingsExistAsync() Returns Task<Dictionary<string, bool>> DeleteAppConfigurationSettingAsync(string) Deletes an Azure App Configuration setting and its associated Azure Key Vault secret. Task DeleteAppConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task GetConfigurationSettingAsync(string) Gets the value of a configuration setting from Azure App Configuration. Task<string?> GetConfigurationSettingAsync(string key) Parameters key string The App Configuration setting key. Returns Task<string> GetConfigurationSettingsAsync(string) Gets the values of configuration settings from Azure App Configuration. Task<List<(string Key, string? Value, string ContentType)>> GetConfigurationSettingsAsync(string keyFilter) Parameters keyFilter string The key name filter used to select the settings keys for which values are retrieved. Returns Task<List<(string Key, string Value, string ContentType)>> GetFeatureFlagAsync(string) Gets the value of a feature flag from Azure App Configuration. Task<bool> GetFeatureFlagAsync(string key) Parameters key string The App Configuration feature flag key. Returns Task<bool> SetConfigurationSettingAsync(string, string, string) Sets the value of a configuration setting in Azure App Configuration. Task SetConfigurationSettingAsync(string key, string value, string contentType) Parameters key string The App Configuration setting key. value string The value to set. contentType string The content type of the value. Returns Task SetFeatureFlagAsync(string, bool) Sets the value of a feature flag in Azure App Configuration. Task SetFeatureFlagAsync(string key, bool flagEnabled) Parameters key string The App Configuration feature flag key. flagEnabled bool Whether to enable the feature flag. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.IAzureKeyVaultService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.IAzureKeyVaultService.html",
    "title": "Interface IAzureKeyVaultService | FoundationaLLM",
    "summary": "Interface IAzureKeyVaultService Namespace FoundationaLLM.Common.Services Assembly FoundationaLLM.Common.dll Provides access to and management of Azure Key Vault. public interface IAzureKeyVaultService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties KeyVaultUri Gets the URI of the Key Vault. string KeyVaultUri { get; } Property Value string Methods CheckKeyVaultSecretsExistAsync(IEnumerable<string?>) Returns a map of secret names and whether they exist in Key Vault. Task<Dictionary<string, bool>> CheckKeyVaultSecretsExistAsync(IEnumerable<string?> secretNames) Parameters secretNames IEnumerable<string> The list of secret names to check. Returns Task<Dictionary<string, bool>> CheckSecretExistsAsync(string) Returns whether a secret exists in Key Vault. Task<bool> CheckSecretExistsAsync(string secretName) Parameters secretName string The secret name to check. Returns Task<bool> GetSecretValue(string) Gets the value of a secret from Key Vault. string? GetSecretValue(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns string GetSecretValueAsync(string) Gets the value of a secret from Key Vault. Task<string?> GetSecretValueAsync(string secretName) Parameters secretName string The name of the secret whose value you wish to retrieve. Returns Task<string> RemoveSecretAsync(string) Removes the specified secret from the Key Vault. Task RemoveSecretAsync(string secretName) Parameters secretName string The name of the secret to be removed. Returns Task SetSecretValueAsync(string, string) Sets the value of a secret in Key Vault. Task SetSecretValueAsync(string secretName, string secretValue) Parameters secretName string The name of the secret whose value you wish to set. secretValue string The secret value. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Plugins.DataPipelineStagePluginBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Plugins.DataPipelineStagePluginBase.html",
    "title": "Class DataPipelineStagePluginBase | FoundationaLLM",
    "summary": "Class DataPipelineStagePluginBase Namespace FoundationaLLM.Common.Services.Plugins Assembly FoundationaLLM.Common.dll Implements a basic Data Pipeline Stage Plugin. public class DataPipelineStagePluginBase : PluginBase, IDataPipelineStagePlugin Inheritance object PluginBase DataPipelineStagePluginBase Implements IDataPipelineStagePlugin Derived AzureAISearchIndexingDataPipelineStagePlugin GatewayTextEmbeddingDataPipelineStagePlugin KnowledgeExtractionDataPipelineStagePlugin KnowledgeGraphDataPipelineStagePlugin TextExtractionDataPipelineStagePlugin TextPartitioningDataPipelineStagePlugin Inherited Members PluginBase.Name PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineStagePluginBase(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Initializes a new instance of the base data pipeline stage plugin. public DataPipelineStagePluginBase(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> packageManager IPluginPackageManager packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider Fields _dataPipelineStateService protected readonly IDataPipelineStateService _dataPipelineStateService Field Value IDataPipelineStateService Methods GetStageWorkItems(List<string>, string, string, string) Gets the list of data pipeline work items based on the provided content items canonical identifiers. public virtual Task<List<DataPipelineRunWorkItem>> GetStageWorkItems(List<string> contentItemsCanonicalIds, string dataPipelineRunId, string dataPipelineStageName, string previousDataPipelineStageName) Parameters contentItemsCanonicalIds List<string> The list of icontent items canonical identifiers. dataPipelineRunId string The unique identifier of the data pipeline run. dataPipelineStageName string The name of the data pipeline stage. previousDataPipelineStageName string The name of the previous data pipeline stage. Returns Task<List<DataPipelineRunWorkItem>> A list of data pipeline work items. GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) Gets the list of data pipeline work items based on the provided content items. public virtual Task<List<DataPipelineRunWorkItem>> GetStartingStageWorkItems(List<DataPipelineContentItem> contentItems, string dataPipelineRunId, string dataPipelineStageName) Parameters contentItems List<DataPipelineContentItem> The list of content items. dataPipelineRunId string The unique identifier of the data pipeline run. dataPipelineStageName string The name of the data pipeline stage. Returns Task<List<DataPipelineRunWorkItem>> A list of data pipeline work items. ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. public virtual Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Plugins.PluginBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Plugins.PluginBase.html",
    "title": "Class PluginBase | FoundationaLLM",
    "summary": "Class PluginBase Namespace FoundationaLLM.Common.Services.Plugins Assembly FoundationaLLM.Common.dll Implements the basic functionality of a plugin. public class PluginBase Inheritance object PluginBase Derived DataPipelineStagePluginBase DOCXContentTextExtractionPlugin ImageContentTextExtractionPlugin ImageMetadataTextExtractionPlugin PDFContentTextExtractionPlugin PPTXContentTextExtractionPlugin XLSXContentTextExtractionPlugin SemanticContentTextPartitioningPlugin TokenContentTextPartitioningPlugin AzureDataLakeDataSourcePlugin ContextFileDataSourcePlugin SharePointOnlineDataSourcePlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PluginBase(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Initializes the plugin with the specified parameters and package manager. public PluginBase(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Fields _logger protected readonly ILogger<PluginBase> _logger Field Value ILogger<PluginBase> _packageManager protected readonly IPluginPackageManager _packageManager Field Value IPluginPackageManager _packageManagerResolver protected readonly IPluginPackageManagerResolver _packageManagerResolver Field Value IPluginPackageManagerResolver _pluginMetadata protected readonly PluginMetadata _pluginMetadata Field Value PluginMetadata _pluginParameters protected readonly Dictionary<string, object> _pluginParameters Field Value Dictionary<string, object> _serviceProvider protected readonly IServiceProvider _serviceProvider Field Value IServiceProvider Properties Name protected virtual string Name { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Plugins.PluginPackageManagerResolver.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Plugins.PluginPackageManagerResolver.html",
    "title": "Class PluginPackageManagerResolver | FoundationaLLM",
    "summary": "Class PluginPackageManagerResolver Namespace FoundationaLLM.Common.Services.Plugins Assembly FoundationaLLM.Common.dll Provides functionality to resolve and manage plugin packages. public class PluginPackageManagerResolver : IPluginPackageManagerResolver Inheritance object PluginPackageManagerResolver Implements IPluginPackageManagerResolver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This class implements the IPluginPackageManagerResolver interface to offer methods for handling plugin package resolution. It is designed to be used in scenarios where dynamic loading and management of plugins are required. Constructors PluginPackageManagerResolver(IResourceProviderService) Provides functionality to resolve and manage plugin packages. public PluginPackageManagerResolver(IResourceProviderService pluginResourceProvider) Parameters pluginResourceProvider IResourceProviderService The resource provider service for plugins. Remarks This class implements the IPluginPackageManagerResolver interface to offer methods for handling plugin package resolution. It is designed to be used in scenarios where dynamic loading and management of plugins are required. Methods GetPluginPackageManager(PluginDefinition, UnifiedUserIdentity) Retrieves an instance of the plugin package manager for the specified plugin definition and user identity. public Task<IPluginPackageManager> GetPluginPackageManager(PluginDefinition pluginDefinition, UnifiedUserIdentity userIdentity) Parameters pluginDefinition PluginDefinition The definition of the plugin for which the package manager is requested. userIdentity UnifiedUserIdentity The identity of the user requesting the plugin package manager. Returns Task<IPluginPackageManager> GetPluginPackageManager(string, UnifiedUserIdentity) Asynchronously retrieves the plugin package manager associated with the specified plugin object identifier. public Task<IPluginPackageManager> GetPluginPackageManager(string pluginObjectId, UnifiedUserIdentity userIdentity) Parameters pluginObjectId string The unique identifier of the plugin object for which the package manager is requested. userIdentity UnifiedUserIdentity The identity of the user requesting the package manager. Returns Task<IPluginPackageManager> A task that represents the asynchronous operation. The task result contains the IPluginPackageManager associated with the specified plugin object identifier."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Plugins.PluginService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Plugins.PluginService.html",
    "title": "Class PluginService | FoundationaLLM",
    "summary": "Class PluginService Namespace FoundationaLLM.Common.Services.Plugins Assembly FoundationaLLM.Common.dll Provides capabilities for managing plugins. public class PluginService : IPluginService Inheritance object PluginService Implements IPluginService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PluginService(IResourceProviderService, IServiceProvider) Provides capabilities for managing plugins. public PluginService(IResourceProviderService pluginResourceProvider, IServiceProvider serviceProvider) Parameters pluginResourceProvider IResourceProviderService The FoundationaLLM Plugin resource provider service. serviceProvider IServiceProvider The service collection provided by the dependency injection container. Methods GetDataPipelineStagePlugin(string, string, Dictionary<string, object>, UnifiedUserIdentity) Retrieves the data pipeline stage plugin based on the specified plugin object identifier. public Task<IDataPipelineStagePlugin> GetDataPipelineStagePlugin(string instanceId, string pluginObjectId, Dictionary<string, object> pluginParameters, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. pluginObjectId string The plugin object identifier. pluginParameters Dictionary<string, object> The dictionary containing the names and values of the plugin parameters. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<IDataPipelineStagePlugin> The data pipeline stage plugin. GetDataSourcePlugin(string, string, Dictionary<string, object>, string, UnifiedUserIdentity) Retrieves the data source plugin based on the specified plugin object identifier. public Task<IDataSourcePlugin> GetDataSourcePlugin(string instanceId, string pluginObjectId, Dictionary<string, object> pluginParameters, string dataSourceObjectId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. pluginObjectId string The plugin object identifier. pluginParameters Dictionary<string, object> The dictionary containing the names and values of the plugin parameters. dataSourceObjectId string The FoundationaLLM object identifier of the data source. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<IDataSourcePlugin> The data source plugin. GetPluginPackageManager(string, string, UnifiedUserIdentity) Retrieves the data source plugin based on the specified plugin object identifier. public Task<IPluginPackageManager> GetPluginPackageManager(string instanceId, string pluginObjectId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. pluginObjectId string The plugin object identifier. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<IPluginPackageManager> The plugin package manager instance that manages the plugin."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Plugins.html",
    "title": "Namespace FoundationaLLM.Common.Services.Plugins | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Plugins Classes DataPipelineStagePluginBase Implements a basic Data Pipeline Stage Plugin. PluginBase Implements the basic functionality of a plugin. PluginPackageManagerResolver Provides functionality to resolve and manage plugin packages. PluginService Provides capabilities for managing plugins."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Quota.QuotaContextBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Quota.QuotaContextBase.html",
    "title": "Class QuotaContextBase | FoundationaLLM",
    "summary": "Class QuotaContextBase Namespace FoundationaLLM.Common.Services.Quota Assembly FoundationaLLM.Common.dll Implements the base class for managing the in-memory state of a quota context. public abstract class QuotaContextBase Inheritance object QuotaContextBase Derived SinglePartitionQuotaContext UserIdentifierQuotaContext UserPrincipalNameQuotaContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors QuotaContextBase(string, QuotaDefinition, ILogger) Implements the base class for managing the in-memory state of a quota context. protected QuotaContextBase(string quotaServiceIdentifier, QuotaDefinition quota, ILogger logger) Parameters quotaServiceIdentifier string The identifier of the QuotaService instance managing this quota context. quota QuotaDefinition The QuotaDefinition providing the quota configuration. logger ILogger The logger used for logging. Fields _logger The logger used for logging. protected readonly ILogger _logger Field Value ILogger _metricPartitions The dictionary of QuotaMetricPartition instances that correspond to the partition identifiers. protected readonly Dictionary<string, QuotaMetricPartition> _metricPartitions Field Value Dictionary<string, QuotaMetricPartition> Remarks Each derived class must implement the specific methods to get the quota metric partition that corresponds to the partition identifier. _quota The QuotaDefinition providing the quota configuration. protected readonly QuotaDefinition _quota Field Value QuotaDefinition _quotaServiceIdentifier The identifier of the QuotaService instance managing this quota context. protected readonly string _quotaServiceIdentifier Field Value string _syncRoot The object used to synchronize access to the quota context. protected readonly object _syncRoot Field Value object Properties Quota Gets or sets the context. public QuotaDefinition Quota { get; } Property Value QuotaDefinition Methods AddLocalMetricUnit(DateTimeOffset, string, string) Adds a new local unit of the quota metric to the quota context and checks if the quota is exceeded or not. public QuotaMetricPartitionState AddLocalMetricUnit(DateTimeOffset referenceTime, string userIdentifier, string userPrincipalName) Parameters referenceTime DateTimeOffset The time at which the local metric unit was recorded. userIdentifier string The user identifier associated with the unit of the quota metric. userPrincipalName string The user principal name associated with the unit of the quota metric. Returns QuotaMetricPartitionState The result of the quota evaluation. AddRemoteMetricUnits(List<DateTimeOffset>, string) Adds remote units of the quota metric to the quota context. public void AddRemoteMetricUnits(List<DateTimeOffset> referenceTimes, string partitionId) Parameters referenceTimes List<DateTimeOffset> The times at which the remote metric units were recorded. partitionId string The quota metric partition identifier. EnsureQuotaMetricPartition(string) Ensures that the quota metric partition corresponding to the specified partition identifier exists. protected QuotaMetricPartition EnsureQuotaMetricPartition(string partitionId) Parameters partitionId string The quota metric partition identifier. Returns QuotaMetricPartition GetQuotaMetricPartition(string) Gets the quota metric partition that corresponds to the specified partition identifier. protected virtual QuotaMetricPartition GetQuotaMetricPartition(string partitionId) Parameters partitionId string The quota metric partition id. Returns QuotaMetricPartition A QuotaMetricPartition instance. GetQuotaMetricPartition(string, string) Gets the quota metric partition that corresponds to the specified user identifier and/or user principal name. protected abstract QuotaMetricPartition GetQuotaMetricPartition(string userIdentifier, string userPrincipalName) Parameters userIdentifier string The user identifier used to get the quota metric partition userPrincipalName string The user principal name used to get the quota metric partition. Returns QuotaMetricPartition A QuotaMetricPartition instance."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Quota.QuotaMetricPartition.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Quota.QuotaMetricPartition.html",
    "title": "Class QuotaMetricPartition | FoundationaLLM",
    "summary": "Class QuotaMetricPartition Namespace FoundationaLLM.Common.Services.Quota Assembly FoundationaLLM.Common.dll Represents a partition of a quota metric. public class QuotaMetricPartition Inheritance object QuotaMetricPartition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors QuotaMetricPartition(string, string, string, string, int, int, int, ILogger) Represents a partition of a quota metric. public QuotaMetricPartition(string quotaServiceIdentifier, string quotaName, string quotaContext, string quotaMetricPartitionId, int metricLimit, int metricWindowSeconds, int lockoutDurationSeconds, ILogger logger) Parameters quotaServiceIdentifier string The identifier of the QuotaService instance managing this quota context. quotaName string The name of the quota that this quota metric partition refers to. quotaContext string The quota context that this quota metric partition refers to. quotaMetricPartitionId string The identifier of the quota metric partion that this sequence refers to. metricLimit int The limit of the metric for the time window specified by metricWindowSeconds. metricWindowSeconds int The time window for the metric limit. lockoutDurationSeconds int The duration of the lockout period when the metric limit is exceeded. logger ILogger The logger instance to use for logging. Properties QuotaMetricPartitionId The identifier of the quota metric partition that this sequence refers to. public string QuotaMetricPartitionId { get; } Property Value string Remarks The value of the identifier is only relevant within the parent quota context (where it is unique). Methods AddLocalMetricUnit(DateTimeOffset) Adds a local metric unit to the metric partition. public QuotaMetricPartitionState AddLocalMetricUnit(DateTimeOffset localReferenceTime) Parameters localReferenceTime DateTimeOffset The time at which the local metric unit was recorded. Returns QuotaMetricPartitionState A QuotaMetricPartitionState instance with the current state of the metric partition. AddRemoteMetricUnits(List<DateTimeOffset>) Adds remote metric units to the metric partition. public QuotaMetricPartitionState? AddRemoteMetricUnits(List<DateTimeOffset> remoteReferenceTimes) Parameters remoteReferenceTimes List<DateTimeOffset> The times at which the remote metric units were recorded. Returns QuotaMetricPartitionState A QuotaMetricPartitionState instance with the current state of the metric partition."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Quota.QuotaService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Quota.QuotaService.html",
    "title": "Class QuotaService | FoundationaLLM",
    "summary": "Class QuotaService Namespace FoundationaLLM.Common.Services.Quota Assembly FoundationaLLM.Common.dll Implements the FoundationaLLM quota service. public class QuotaService : IQuotaService Inheritance object QuotaService Implements IQuotaService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors QuotaService(DependencyInjectionContainerSettings, IStorageService, IEventService, ILoggerFactory) Initializes a new instance of the QuotaService class. public QuotaService(DependencyInjectionContainerSettings dependencyInjectionContainerSettings, IStorageService storageService, IEventService eventService, ILoggerFactory loggerFactory) Parameters dependencyInjectionContainerSettings DependencyInjectionContainerSettings The DependencyInjectionContainerSettings providing the configuration of the dependency injection container. storageService IStorageService The storage service used for storing quota configuration. eventService IEventService The IEventService providing event services to the quota service. loggerFactory ILoggerFactory The logger factory used to create loggers. Properties Enabled Indicates whether the quota service is enabled. public bool Enabled { get; } Property Value bool InitializationTask Gets the TaskCompletionSource<TResult> (TResult of type bool) that signals the completion of the initialization task. public Task<bool> InitializationTask { get; } Property Value Task<bool> Remarks The result of the task indicates whether initialization completed successfully or not. Methods EvaluateCompletionRequestForQuota(string, string, UnifiedUserIdentity?, CompletionRequest) Evaluates a completion request to determine if it exceeds any quotas. public QuotaMetricPartitionState EvaluateCompletionRequestForQuota(string apiName, string controllerName, UnifiedUserIdentity? userIdentity, CompletionRequest completionRequest) Parameters apiName string The name of the API handling the request. controllerName string The name of the ASP.NET controller handling the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity associated with the request. completionRequest CompletionRequest The CompletionRequest providing the completion request details. Returns QuotaMetricPartitionState EvaluateRawRequestForQuota(string, string?, UnifiedUserIdentity?) Evaluates an HTTP API request to determine if it exceeds any quotas. public QuotaMetricPartitionState EvaluateRawRequestForQuota(string apiName, string? controllerName, UnifiedUserIdentity? userIdentity) Parameters apiName string The name of the API handling the request. controllerName string The name of the ASP.NET controller handling the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity associated with the request. Returns QuotaMetricPartitionState An QuotaMetricPartitionState object that indicates if any quotas where exceeded and provides details in case of a quota breach."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Quota.SinglePartitionQuotaContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Quota.SinglePartitionQuotaContext.html",
    "title": "Class SinglePartitionQuotaContext | FoundationaLLM",
    "summary": "Class SinglePartitionQuotaContext Namespace FoundationaLLM.Common.Services.Quota Assembly FoundationaLLM.Common.dll Implements a quota context with a single partition. public class SinglePartitionQuotaContext : QuotaContextBase Inheritance object QuotaContextBase SinglePartitionQuotaContext Inherited Members QuotaContextBase._quotaServiceIdentifier QuotaContextBase._syncRoot QuotaContextBase._logger QuotaContextBase._quota QuotaContextBase._metricPartitions QuotaContextBase.Quota QuotaContextBase.EnsureQuotaMetricPartition(string) QuotaContextBase.AddLocalMetricUnit(DateTimeOffset, string, string) QuotaContextBase.AddRemoteMetricUnits(List<DateTimeOffset>, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SinglePartitionQuotaContext(string, QuotaDefinition, ILogger) Implements a quota context with a single partition. public SinglePartitionQuotaContext(string quotaServiceIdentifier, QuotaDefinition quota, ILogger logger) Parameters quotaServiceIdentifier string The identifier of the QuotaService instance managing this quota context. quota QuotaDefinition The QuotaDefinition providing the quota configuration. logger ILogger The logger used for logging. Methods GetQuotaMetricPartition(string) Gets the quota metric partition that corresponds to the specified partition identifier. protected override QuotaMetricPartition GetQuotaMetricPartition(string partitionId) Parameters partitionId string The quota metric partition id. Returns QuotaMetricPartition A QuotaMetricPartition instance. GetQuotaMetricPartition(string, string) Gets the quota metric partition that corresponds to the specified user identifier and/or user principal name. protected override QuotaMetricPartition GetQuotaMetricPartition(string userIdentifier, string userPrincipalName) Parameters userIdentifier string The user identifier used to get the quota metric partition userPrincipalName string The user principal name used to get the quota metric partition. Returns QuotaMetricPartition A QuotaMetricPartition instance."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Quota.UserIdentifierQuotaContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Quota.UserIdentifierQuotaContext.html",
    "title": "Class UserIdentifierQuotaContext | FoundationaLLM",
    "summary": "Class UserIdentifierQuotaContext Namespace FoundationaLLM.Common.Services.Quota Assembly FoundationaLLM.Common.dll Implements a quota context partitioned by user identifier. public class UserIdentifierQuotaContext : QuotaContextBase Inheritance object QuotaContextBase UserIdentifierQuotaContext Inherited Members QuotaContextBase._quotaServiceIdentifier QuotaContextBase._syncRoot QuotaContextBase._logger QuotaContextBase._quota QuotaContextBase._metricPartitions QuotaContextBase.Quota QuotaContextBase.GetQuotaMetricPartition(string) QuotaContextBase.EnsureQuotaMetricPartition(string) QuotaContextBase.AddLocalMetricUnit(DateTimeOffset, string, string) QuotaContextBase.AddRemoteMetricUnits(List<DateTimeOffset>, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserIdentifierQuotaContext(string, QuotaDefinition, ILogger) Implements a quota context partitioned by user identifier. public UserIdentifierQuotaContext(string quotaServiceIdentifier, QuotaDefinition quota, ILogger logger) Parameters quotaServiceIdentifier string The identifier of the QuotaService instance managing this quota context. quota QuotaDefinition The QuotaDefinition providing the quota configuration. logger ILogger The logger used for logging. Methods GetQuotaMetricPartition(string, string) Gets the quota metric partition that corresponds to the specified user identifier and/or user principal name. protected override QuotaMetricPartition GetQuotaMetricPartition(string userIdentifier, string userPrincipalName) Parameters userIdentifier string The user identifier used to get the quota metric partition userPrincipalName string The user principal name used to get the quota metric partition. Returns QuotaMetricPartition A QuotaMetricPartition instance."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Quota.UserPrincipalNameQuotaContext.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Quota.UserPrincipalNameQuotaContext.html",
    "title": "Class UserPrincipalNameQuotaContext | FoundationaLLM",
    "summary": "Class UserPrincipalNameQuotaContext Namespace FoundationaLLM.Common.Services.Quota Assembly FoundationaLLM.Common.dll Implements a quota context partitioned by user principal name. public class UserPrincipalNameQuotaContext : QuotaContextBase Inheritance object QuotaContextBase UserPrincipalNameQuotaContext Inherited Members QuotaContextBase._quotaServiceIdentifier QuotaContextBase._syncRoot QuotaContextBase._logger QuotaContextBase._quota QuotaContextBase._metricPartitions QuotaContextBase.Quota QuotaContextBase.GetQuotaMetricPartition(string) QuotaContextBase.EnsureQuotaMetricPartition(string) QuotaContextBase.AddLocalMetricUnit(DateTimeOffset, string, string) QuotaContextBase.AddRemoteMetricUnits(List<DateTimeOffset>, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserPrincipalNameQuotaContext(string, QuotaDefinition, ILogger) Implements a quota context partitioned by user principal name. public UserPrincipalNameQuotaContext(string quotaServiceIdentifier, QuotaDefinition quota, ILogger logger) Parameters quotaServiceIdentifier string The identifier of the QuotaService instance managing this quota context. quota QuotaDefinition The QuotaDefinition providing the quota configuration. logger ILogger The logger used for logging. Methods GetQuotaMetricPartition(string, string) Gets the quota metric partition that corresponds to the specified user identifier and/or user principal name. protected override QuotaMetricPartition GetQuotaMetricPartition(string userIdentifier, string userPrincipalName) Parameters userIdentifier string The user identifier used to get the quota metric partition userPrincipalName string The user principal name used to get the quota metric partition. Returns QuotaMetricPartition A QuotaMetricPartition instance."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Quota.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Quota.html",
    "title": "Namespace FoundationaLLM.Common.Services.Quota | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Quota Classes QuotaContextBase Implements the base class for managing the in-memory state of a quota context. QuotaMetricPartition Represents a partition of a quota metric. QuotaService Implements the FoundationaLLM quota service. SinglePartitionQuotaContext Implements a quota context with a single partition. UserIdentifierQuotaContext Implements a quota context partitioned by user identifier. UserPrincipalNameQuotaContext Implements a quota context partitioned by user principal name."
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderResourceReferenceStore-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderResourceReferenceStore-1.html",
    "title": "Class ResourceProviderResourceReferenceStore<T> | FoundationaLLM",
    "summary": "Class ResourceProviderResourceReferenceStore<T> Namespace FoundationaLLM.Common.Services.ResourceProviders Assembly FoundationaLLM.Common.dll Maintains a collection of resource references used by FoundationaLLM resource providers. public class ResourceProviderResourceReferenceStore<T> where T : ResourceReference Type Parameters T The type of resource reference kept in the store. Inheritance object ResourceProviderResourceReferenceStore<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderResourceReferenceStore(IResourceProviderService, IStorageService, ILogger, CancellationToken) Maintains a collection of resource references used by FoundationaLLM resource providers. public ResourceProviderResourceReferenceStore(IResourceProviderService resourceProvider, IStorageService resourceProviderStorageService, ILogger logger, CancellationToken cancellationToken = default) Parameters resourceProvider IResourceProviderService The IResourceProviderService resource provider service that uses the reference store. resourceProviderStorageService IStorageService The IStorageService used by the resource provider. logger ILogger The ILogger service used by the resource provider. cancellationToken CancellationToken The CancellationToken used by the resource provider to signal the need to cancel operations. Properties DefaultResourceName Gets the name of the default resource (if any). public string? DefaultResourceName { get; } Property Value string Methods AddResourceReference(T) Adds a resource reference to the store. public Task AddResourceReference(T resourceReference) Parameters resourceReference T The resource reference to add. Returns Task AddResourceReferences(IEnumerable<T>) Adds a resource reference to the store. public Task AddResourceReferences(IEnumerable<T> resourceReferences) Parameters resourceReferences IEnumerable<T> The list of resource references to add. Returns Task DeleteResourceReference(T) Deletes a resource reference from the store. public Task DeleteResourceReference(T resourceReference) Parameters resourceReference T The name of the resource to delete. Returns Task Exceptions ResourceProviderException GetAllResourceReferences<T1>() Gets all resource references of type T1 in the store. public Task<IEnumerable<T>> GetAllResourceReferences<T1>() where T1 : ResourceBase Returns Task<IEnumerable<T>> A List<T> containing all the resource references of the specified type. Type Parameters T1 Remarks This method is not safe in scenarios where multiple instances of a resource provider are running at the same time. GetResourceReference(string) Gets a resource reference by the unique name of the resource. public Task<T?> GetResourceReference(string resourceName) Parameters resourceName string The name of the resource. Returns Task<T> GetResourceReferences(IEnumerable<string>) Gets the resource references for the specified resource names. public Task<IEnumerable<T>> GetResourceReferences(IEnumerable<string> resourceNames) Parameters resourceNames IEnumerable<string> The list of resource names for which the references should be retrieved. Returns Task<IEnumerable<T>> GetResourceReferences(Func<T, bool>) Filters the resource references in the store based on the predicate. public Task<IEnumerable<T>> GetResourceReferences(Func<T, bool> predicate) Parameters predicate Func<T, bool> The predicate to filter the resource references. Returns Task<IEnumerable<T>> Remarks This method is not safe in scenarios where multiple instances of a resource provider are running at the same time. LoadResourceReferences() Loads the resource references from the storage service. public Task LoadResourceReferences() Returns Task PurgeResourceReference(T) public Task PurgeResourceReference(T resourceReference) Parameters resourceReference T Returns Task Exceptions ResourceProviderException SetDefaultResourceName(T) Sets the default resource name on the store. public Task SetDefaultResourceName(T resourceReference) Parameters resourceReference T The resource reference to set as the default. Returns Task TryGetResourceReference(string) Attempts to get a resource reference by the unique name of the resource. public Task<(bool Success, bool Deleted, T? ResourceReference)> TryGetResourceReference(string resourceName) Parameters resourceName string The name of the resource. Returns Task<(bool Success, bool Deleted, T ResourceReference)> A tuple containing a boolean value (Success) indicating whether the resource reference was successfully retrieved, a boolean value (Deleted) indicating whether the resource is deleted (and not purged), and the resource reference itself (ResourceReference). Remarks When Success is false, the ResourceReference will be null. This means that the resource reference was not found in the store. When Success is true, the ResourceReference will contain the reference to the resource. This means that the resource reference is either valid or it has been logically deleted. Callers should check the Deleted value to determine whether the resource was logically deleted."
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderServiceBase-1.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.ResourceProviderServiceBase-1.html",
    "title": "Class ResourceProviderServiceBase<TResourceReference> | FoundationaLLM",
    "summary": "Class ResourceProviderServiceBase<TResourceReference> Namespace FoundationaLLM.Common.Services.ResourceProviders Assembly FoundationaLLM.Common.dll Implements basic resource provider functionality public class ResourceProviderServiceBase<TResourceReference> : IResourceProviderService, IManagementProviderService where TResourceReference : ResourceReference Type Parameters TResourceReference The type of the resource reference used by the resource provider. Inheritance object ResourceProviderServiceBase<TResourceReference> Implements IResourceProviderService IManagementProviderService Derived AzureAIResourceProviderService AIModelResourceProviderService AgentResourceProviderService AttachmentResourceProviderService AuthorizationResourceProviderService AzureOpenAIResourceProviderService ConfigurationResourceProviderService ContextResourceProviderService ConversationResourceProviderService DataPipelineResourceProviderService DataSourceResourceProviderService PluginResourceProviderService PromptResourceProviderService VectorResourceProviderService VectorizationResourceProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceProviderServiceBase(InstanceSettings, ResourceProviderCacheSettings, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILogger, List<string>?, bool) Creates a new instance of the resource provider. public ResourceProviderServiceBase(InstanceSettings instanceSettings, ResourceProviderCacheSettings cacheSettings, IAuthorizationServiceClient authorizationServiceClient, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILogger logger, List<string>? eventTypesToSubscribe = null, bool useInternalReferencesStore = false) Parameters instanceSettings InstanceSettings The InstanceSettings that provides instance-wide settings. cacheSettings ResourceProviderCacheSettings The ResourceProviderCacheSettings that provides settings for the resource provider cache. authorizationServiceClient IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services to the resource provider. storageService IStorageService The IStorageService providing storage services to the resource provider. eventService IEventService The IEventService providing event services to the resource provider. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing services to instantiate resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger The logger used for logging. eventTypesToSubscribe List<string> The list of Event Service event namespaces to subscribe to for local event processing. useInternalReferencesStore bool Indicates whether the resource provider should use the internal resource references store or provide one of its own. Fields _authorizationServiceClient The IAuthorizationServiceClient providing authorization services to the resource provider. protected readonly IAuthorizationServiceClient _authorizationServiceClient Field Value IAuthorizationServiceClient _eventService The IEventService providing event services to the resource provider. protected readonly IEventService _eventService Field Value IEventService _instanceSettings The InstanceSettings that provides instance-wide settings. protected readonly InstanceSettings _instanceSettings Field Value InstanceSettings _logger The logger used for logging. protected readonly ILogger _logger Field Value ILogger _resourceReferenceStore The resource reference store used by the resource provider. protected ResourceProviderResourceReferenceStore<TResourceReference>? _resourceReferenceStore Field Value ResourceProviderResourceReferenceStore<TResourceReference> _resourceValidatorFactory The IResourceValidatorFactory providing services to instantiate resource validators. protected readonly IResourceValidatorFactory _resourceValidatorFactory Field Value IResourceValidatorFactory _serviceProvider The IServiceProvider tha provides dependency injection services. protected readonly IServiceProvider _serviceProvider Field Value IServiceProvider _storageService The IStorageService providing storage services to the resource provider. protected readonly IStorageService _storageService Field Value IStorageService _validator The standard validator used to validate resources. protected readonly StandardValidator _validator Field Value StandardValidator Properties AllowedResourceTypes The metadata describing the resource types allowed by the resource provider. public Dictionary<string, ResourceTypeDescriptor> AllowedResourceTypes { get; } Property Value Dictionary<string, ResourceTypeDescriptor> InitializationTask The task that is executed when the resource provider is initialized. public Task InitializationTask { get; } Property Value Task Remarks This task enables the consumers of the resource provider to wait for the initialization to be completed. IsInitialized Indicates whether the resource provider is initialized or not. public bool IsInitialized { get; } Property Value bool Name The name of the resource provider. public string Name { get; } Property Value string StorageAccountName The name of the storage account used by the resource provider. public string StorageAccountName { get; } Property Value string StorageContainerName The name of the storage account container used by the resource provider. public string StorageContainerName { get; } Property Value string _name The name of the resource provider. Must be overridden in derived classes. protected virtual string _name { get; } Property Value string _serializerSettings Default JSON serialization settings. protected virtual JsonSerializerOptions _serializerSettings { get; } Property Value JsonSerializerOptions _storageContainerName The name of the storage container name used by the resource provider to store its internal data. protected virtual string _storageContainerName { get; } Property Value string Methods CheckResourceName<T>(ResourceName) Checks if a resource name is available. protected Task<ResourceNameCheckResult> CheckResourceName<T>(ResourceName resourceName) Parameters resourceName ResourceName The ResourceName providing the name to be checked for availability. Returns Task<ResourceNameCheckResult> A ResourceNameCheckResult indicating the outcome of the operation. Type Parameters T The type of resource for which the name check is performed. CreateResource(TResourceReference, Stream, string?) Creates a resource based on a resource reference and the resource itself. protected Task CreateResource(TResourceReference resourceReference, Stream content, string? contentType) Parameters resourceReference TResourceReference The resource reference used to identify the resource. content Stream The resource itself. contentType string The resource content type, if applicable. Returns Task Exceptions ResourceProviderException CreateResource<T>(TResourceReference, T) Creates a resource based on a resource reference and the resource itself. protected Task CreateResource<T>(TResourceReference resourceReference, T resource) where T : ResourceBase Parameters resourceReference TResourceReference The resource reference used to identify the resource. resource T The resource itself. Returns Task Type Parameters T The type of resource to create. Exceptions ResourceProviderException CreateResources<T1, T2>(TResourceReference, T1, TResourceReference, T2) Creates two resources based on their resource references and the resources themselves. protected Task CreateResources<T1, T2>(TResourceReference resourceReference1, T1 resource1, TResourceReference resourceReference2, T2 resource2) where T1 : ResourceBase where T2 : ResourceBase Parameters resourceReference1 TResourceReference The resource reference used to identify the first resource. resource1 T1 The first resource to create. resourceReference2 TResourceReference The resource reference used to identify the second resource. resource2 T2 The second resource to create. Returns Task Type Parameters T1 The type of the first resource to create. T2 The type of the second resource to create. Exceptions ResourceProviderException DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected virtual Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected virtual Task DeleteResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task Type Parameters T The type of the resource being deleted. Exceptions NotImplementedException DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) Deletes logically a resource based on its logical path. public Task DeleteResourceAsync<T>(string instanceId, string resourceName, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The name of the resource being logically deleted. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task Type Parameters T The type of the resource. DeleteResource<T>(ResourcePath) Deletes a resource. protected Task DeleteResource<T>(ResourcePath resourcePath) Parameters resourcePath ResourcePath The ResourcePath identifying the resource to delete. Returns Task Type Parameters T The type of resource to delete. Remarks The operation is a logical delete. The resource reference is marked deleted, but the resource content remains in storage. To fully remove a resource, the delete operation must be followed by a purge operation. Exceptions ResourceProviderException EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) public PolicyDefinition EnsureAndValidatePolicyDefinitions(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult) Parameters resourcePath ResourcePath authorizationResult ResourcePathAuthorizationResult Returns PolicyDefinition ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected virtual Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) Executes a management action on the resource provider. protected Task<ResourceProviderActionResult> ExecuteManagementAction(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. Returns Task<ResourceProviderActionResult> ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) The internal implementation of ExecuteResourceActionAsync. Must be overridden in derived classes. protected virtual Task<TResult> ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, TAction actionPayload, UnifiedUserIdentity userIdentity) where T : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. actionPayload TAction The TAction object containing details about the action to be executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> A TResult object with the result of the action. Type Parameters T TAction TResult Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) Executes an action on a resource. public Task<TResult> ExecuteResourceActionAsync<T, TAction, TResult>(string instanceId, string resourceName, string actionName, TAction actionPayload, UnifiedUserIdentity userIdentity) where T : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The name of the resource on which the action is executed. actionName string The name of the action being executed. actionPayload TAction The payload of the action providing details about it. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> Type Parameters T The type of the resource. TAction The type of the action payload providing details about the action to be executed. TResult The type of the result returned. ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) Executes an action on a main resource and it subordinate resource. public Task<TResult> ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string instanceId, string mainResourceName, string resourceName, string actionName, TAction actionPayload, UnifiedUserIdentity userIdentity) where TMain : ResourceBase where TSubordinate : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters instanceId string The FoundationaLLM instance identifier. mainResourceName string The name of the main resource on which the action is executed. resourceName string The name of the subordinate resource on which the action is executed. actionName string The name of the action being executed. actionPayload TAction The payload of the action providing details about it. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> Type Parameters TMain The type of the main resource. TSubordinate The type of the subordinate resource. TAction The type of the action payload providing details about the action to be executed. TResult The type of the result returned. FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions?, Func<TResourceReference, bool, Task<T>>?, Func<T, bool>?) Loads a list of resources filtered based on object IDs. protected Task<IEnumerable<T>> FilterResources<T>(ResourcePath resourcePath, ResourceFilter filter, ResourcePathAuthorizationResult authorizationResult, ResourceProviderGetOptions? options = null, Func<TResourceReference, bool, Task<T>>? customResourceLoader = null, Func<T, bool>? customResourceFilter = null) where T : ResourceBase Parameters resourcePath ResourcePath The ResourcePath resource type path to filter. filter ResourceFilter The ResourceFilter used to filter the resources. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. customResourceLoader Func<TResourceReference, bool, Task<T>> An optional function that loads the resource used to override the default resource loading mechanism. customResourceFilter Func<T, bool> An optional function that filters the list of loaded resources. Returns Task<IEnumerable<T>> A list of objects of type T. Type Parameters T The type of resources to load. GetParsedResourcePath(string, bool) Gets a ResourcePath object for the specified string resource path. protected ResourcePath GetParsedResourcePath(string resourcePath, bool allowAction = true) Parameters resourcePath string The resource path. allowAction bool Indicates whether actions are allowed in the resource path. Returns ResourcePath A ResourcePath object. GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected virtual Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions?) Gets a resource based on its logical path. public Task<T> GetResourceAsync<T>(string resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath string The logical path of the resource. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions?) Gets a resource based on its name. public Task<T> GetResourceAsync<T>(string instanceId, string resourceName, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The logical path of the resource. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> The instance of the resource corresponding to the specified logical path. Type Parameters T The type of the resource. GetResourcePath(string, Type, string?, string?) Get the fully qualified resource path for a specified resource. protected (string ResourcePath, ResourceTypeDescriptor ResourceTypeDescriptor) GetResourcePath(string instanceId, Type resourceType, string? resourceName = null, string? actionName = null) Parameters instanceId string The FoundationaLLM instance identifier. resourceType Type The type of the resource. resourceName string The name of the resource. actionName string The name of the action. Returns (string ResourcePath, ResourceTypeDescriptor ResourceTypeDescriptor) GetResourcePath(string, Type, string, Type, string?, string?) Get the fully qualified resource path for a specified resource and subordinate resource. protected (string ResourcePath, ResourceTypeDescriptor ResourceTypeDescriptor) GetResourcePath(string instanceId, Type mainResourceType, string mainResourceName, Type resourceType, string? resourceName = null, string? actionName = null) Parameters instanceId string The FoundationaLLM instance identifier. mainResourceType Type The type of the main resource. mainResourceName string The name of the main resource. resourceType Type The type of the resource. resourceName string The name of the resource. actionName string The name of the action. Returns (string ResourcePath, ResourceTypeDescriptor ResourceTypeDescriptor) GetResourceProviderServiceByName(string) Gets a resource provider service by name. protected IResourceProviderService GetResourceProviderServiceByName(string name) Parameters name string The name of the resource provider. Returns IResourceProviderService The IResourceProviderService used to interact with the resource provider. GetResourceProviderState() Gets the resource provider state. protected virtual Task<BinaryData> GetResourceProviderState() Returns Task<BinaryData> The resource provider state in binary format. GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected virtual Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected virtual Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions?) Gets resources of a specific type. public Task<List<ResourceProviderGetResult<T>>> GetResourcesAsync<T>(string instanceId, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<List<ResourceProviderGetResult<T>>> A list of ResourceProviderGetResult<T> containing the loaded resources. Type Parameters T The type of resource to return. HandleCacheResetCommand() Handles the cache reset command. protected virtual Task HandleCacheResetCommand() Returns Task HandleDeleteAsync(string, UnifiedUserIdentity) Handles a HTTP DELETE request for a specified resource path. public Task HandleDeleteAsync(string resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task HandleEventsInternal(EventTypeEventArgs) Handles events received from the IEventService when they are dequeued locally. protected virtual Task HandleEventsInternal(EventTypeEventArgs e) Parameters e EventTypeEventArgs The EventTypeEventArgs containing the event type and the actual events. Returns Task HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions?) Handles a HTTP GET request for a specified resource path. public Task<object> HandleGetAsync(string resourcePath, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath string The resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> The serialized form of the result of handling the request. HandlePostAsync(string, string?, ResourceProviderFormFile?, UnifiedUserIdentity) Handles a HTTP POST request for a specified resource path. public Task<object> HandlePostAsync(string resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, UnifiedUserIdentity userIdentity) Parameters resourcePath string The resource path. serializedResource string formFile ResourceProviderFormFile The optional file attached to the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> The serialized form of the result of handling the request. Initialize() Initializes the resource provider. public Task Initialize() Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected virtual Task InitializeInternal() Returns Task LoadResource<T>(string) Loads a resource based on its name. protected Task<T?> LoadResource<T>(string resourceName) where T : ResourceBase Parameters resourceName string The name of the resource. Returns Task<T> The loaded resource. Type Parameters T The type of resource to load. Exceptions ResourceProviderException LoadResource<T>(TResourceReference) Loads a resource based on its resource reference. protected Task<T?> LoadResource<T>(TResourceReference resourceReference) where T : ResourceBase Parameters resourceReference TResourceReference The type of resource reference used to indetify the resource to load. Returns Task<T> The loaded resource. Type Parameters T The type of resource to load. Remarks Always ensure this method is called within a lock to avoid unexpected racing conditions. Exceptions ResourceProviderException LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions?, Func<TResourceReference, bool, Task<T>>?) Loads one or more resources of a specific type. protected Task<List<ResourceProviderGetResult<T>>> LoadResources<T>(ResourceTypeInstance instance, ResourcePathAuthorizationResult authorizationResult, ResourceProviderGetOptions? options = null, Func<TResourceReference, bool, Task<T>>? customResourceLoader = null) where T : ResourceBase Parameters instance ResourceTypeInstance The ResourceTypeInstance that indicates a specific resource to load. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. customResourceLoader Func<TResourceReference, bool, Task<T>> An optional function that loads the resource used to override the default resource loading mechanism. Returns Task<List<ResourceProviderGetResult<T>>> A list of ResourceProviderGetResult<T> objects. Type Parameters T The type of resources to load. PurgeResource<T>(ResourcePath) Purges a deleted resource. protected Task<ResourceProviderActionResult> PurgeResource<T>(ResourcePath resourcePath) Parameters resourcePath ResourcePath The ResourcePath identifying the resource to purge. Returns Task<ResourceProviderActionResult> A ResourceProviderActionResult indicating the outcome of the operation. Type Parameters T The type of the resource to purge. Remarks The operation can only be applied to a resource that has been logically deleted. Exceptions ResourceProviderException ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of ResourceExistsAsync. Must be overridden in derived classes. protected virtual Task<(bool Exists, bool Deleted)> ResourceExistsAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(bool Exists, bool Deleted)> A tuple indicating whether the resource exists or not and whether it is logically deleted or not. Type Parameters T The type of resource being checked. Remarks If a resource was logically deleted but not purged, this method will return True, indicating the existence of the resource. ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) Checks if a resource exists. public Task<(bool Exists, bool Deleted)> ResourceExistsAsync<T>(string instanceId, string resourceName, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The resource name being checked. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(bool Exists, bool Deleted)> A tuple indicating whether the resource exists or not and whether it is logically deleted or not. Type Parameters T The type of the resource. Remarks If a resource was logically deleted but not purged, this method will return True, indicating the existence of the resource. SaveResource<T>(TResourceReference, T) Saves a resource based on its resource reference and the resource itself. protected Task SaveResource<T>(TResourceReference resourceReference, T resource) where T : ResourceBase Parameters resourceReference TResourceReference The resource reference used to identify the resource. resource T The resource to be saved. Returns Task Type Parameters T The type of resource to save. SendResourceProviderEvent(string, string?, object?, bool) Sends a resource provider event to the event service. protected Task SendResourceProviderEvent(string eventType, string? targetServiceName = null, object? data = null, bool forceLocalProcessing = false) Parameters eventType string The type of the event to send. targetServiceName string Optional name of the target service to which the event is sent. If null, the event is sent to all services. data object The optional data to send with the event. forceLocalProcessing bool Indicates whether the event should be processed on the service instance that created it as well. Returns Task Remarks See EventTypes for a list of event types. SetDefaultResource<T>(ResourcePath) Sets a resource as the default for its resource type. protected Task<ResourceProviderActionResult> SetDefaultResource<T>(ResourcePath resourcePath) Parameters resourcePath ResourcePath The ResourcePath identifying the resource to which the default resource name should be set. Returns Task<ResourceProviderActionResult> A ResourceProviderActionResult indicating the outcome of the operation. Type Parameters T The resource type. Exceptions ResourceProviderException UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) Updates the base properties of an object derived from ResourceBase. protected void UpdateBaseProperties(ResourceBase resource, UnifiedUserIdentity userIdentity, bool isNew = false) Parameters resource ResourceBase The ResourceBase object to be updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the information about the identity of the user that performed a create or update operation on the resource. isNew bool Indicates whether the resource is new or being updated. UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) The internal implementation of UpdateResourcePropertiesAsync. Must be overridden in derived classes. protected virtual Task<TResult> UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, Dictionary<string, object> propertyValues, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. propertyValues Dictionary<string, object> The dictionary with propery names and values to update. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> Type Parameters T The type of the resource being updated. TResult The type of the result returned. UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object?>, UnifiedUserIdentity) Updates a subset of the properties of a resource. public Task<TResult> UpdateResourcePropertiesAsync<T, TResult>(string instanceId, string resourceName, Dictionary<string, object?> propertyValues, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters instanceId string The FoundationaLLM instance identifier. resourceName string The name of the resource being updated. propertyValues Dictionary<string, object> The dictionary with propery names and values to update. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> Type Parameters T The type of the resource. TResult The type of the result returned. UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected virtual Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected virtual Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned. UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) Creates or updates a resource based on its logical path. public Task<TResult> UpsertResourceAsync<T, TResult>(string instanceId, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters instanceId string The FoundationaLLM instance identifier. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> The object id of the resource. Type Parameters T The type of the resource. TResult The type of the result returned WaitForInitialization() Waits for the resource provider service to be initialized. public Task WaitForInitialization() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Common.Services.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.ResourceProviders Classes ResourceProviderResourceReferenceStore<T> Maintains a collection of resource references used by FoundationaLLM resource providers. ResourceProviderServiceBase<TResourceReference> Implements basic resource provider functionality"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.EntraUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.EntraUserClaimsProviderService.html",
    "title": "Class EntraUserClaimsProviderService | FoundationaLLM",
    "summary": "Class EntraUserClaimsProviderService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. public class EntraUserClaimsProviderService : IUserClaimsProviderService Inheritance object EntraUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetSecurityGroupIds(ClaimsPrincipal?) Returns a list of security group identifiers from the provided ClaimsPrincipal. public List<string>? GetSecurityGroupIds(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns List<string> GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity IsServicePrincipal(ClaimsPrincipal) Inidicates whether the specified principal is a service principal or not. public bool IsServicePrincipal(ClaimsPrincipal userPrincipal) Parameters userPrincipal ClaimsPrincipal The ClaimsPrincipal object providing details about the security principal. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.MicrosoftGraphIdentityManagementService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.MicrosoftGraphIdentityManagementService.html",
    "title": "Class MicrosoftGraphIdentityManagementService | FoundationaLLM",
    "summary": "Class MicrosoftGraphIdentityManagementService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll Implements group membership services using the Microsoft Graph API. public class MicrosoftGraphIdentityManagementService : IIdentityManagementService Inheritance object MicrosoftGraphIdentityManagementService Implements IIdentityManagementService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the MicrosoftGraphIdentityManagementService class. Constructors MicrosoftGraphIdentityManagementService(GraphServiceClient, ILogger<MicrosoftGraphIdentityManagementService>) Implements group membership services using the Microsoft Graph API. public MicrosoftGraphIdentityManagementService(GraphServiceClient graphServiceClient, ILogger<MicrosoftGraphIdentityManagementService> logger) Parameters graphServiceClient GraphServiceClient The GraphServiceClient to be used for API interactions. logger ILogger<MicrosoftGraphIdentityManagementService> The logger used for logging. Remarks Initializes a new instance of the MicrosoftGraphIdentityManagementService class. Methods GetGroupsForPrincipal(string) Retrieves the group identifiers list of the groups where the specified user principal is a member. public Task<List<string>> GetGroupsForPrincipal(string userIdentifier) Parameters userIdentifier string The user identifier for which group membership is retrieved. Can be either an object id or a user principal name (UPN). Returns Task<List<string>> GetObjectsByIds(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. public Task<List<ObjectQueryResult>> GetObjectsByIds(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<List<ObjectQueryResult>> GetServicePrincipalById(string) Retrieves a security principal by its identifier. public Task<ObjectQueryResult> GetServicePrincipalById(string servicePrincipalId) Parameters servicePrincipalId string The service principal identifier used to retrieve a single service principal. Returns Task<ObjectQueryResult> GetServicePrincipals(ObjectQueryParameters) Retrieves a list of service principals with filtering and paging options. public Task<PagedResponse<ObjectQueryResult>> GetServicePrincipals(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving service principals. Returns Task<PagedResponse<ObjectQueryResult>> GetUserById(string) Retrieves a user account by its identifier. public Task<ObjectQueryResult> GetUserById(string userId) Parameters userId string The user identifier used to retrieve a single user account. Returns Task<ObjectQueryResult> GetUserGroupById(string) Retrieves a group account by its identifier. public Task<ObjectQueryResult> GetUserGroupById(string groupId) Parameters groupId string The group account identifier used to retrieve a single group account. Returns Task<ObjectQueryResult> GetUserGroups(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. public Task<PagedResponse<ObjectQueryResult>> GetUserGroups(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving group accounts. Returns Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. public Task<PagedResponse<ObjectQueryResult>> GetUsers(ObjectQueryParameters queryParams) Parameters queryParams ObjectQueryParameters The filtering and paging options used when retrieving users. Returns Task<PagedResponse<ObjectQueryResult>>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.NoOpUserClaimsProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.NoOpUserClaimsProviderService.html",
    "title": "Class NoOpUserClaimsProviderService | FoundationaLLM",
    "summary": "Class NoOpUserClaimsProviderService Namespace FoundationaLLM.Common.Services.Security Assembly FoundationaLLM.Common.dll No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed. public class NoOpUserClaimsProviderService : IUserClaimsProviderService Inheritance object NoOpUserClaimsProviderService Implements IUserClaimsProviderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetSecurityGroupIds(ClaimsPrincipal?) Returns a list of security group identifiers from the provided ClaimsPrincipal. public List<string>? GetSecurityGroupIds(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns List<string> GetUserIdentity(ClaimsPrincipal?) Returns a UnifiedUserIdentity object from the provided ClaimsPrincipal. public UnifiedUserIdentity? GetUserIdentity(ClaimsPrincipal? userPrincipal) Parameters userPrincipal ClaimsPrincipal The principal that provides multiple claims-based identities. Returns UnifiedUserIdentity IsServicePrincipal(ClaimsPrincipal) Inidicates whether the specified principal is a service principal or not. public bool IsServicePrincipal(ClaimsPrincipal userPrincipal) Parameters userPrincipal ClaimsPrincipal The ClaimsPrincipal object providing details about the security principal. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Security.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Security.html",
    "title": "Namespace FoundationaLLM.Common.Services.Security | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Security Classes EntraUserClaimsProviderService Provides a common interface for retrieving and resolving user claims from Microsoft Entra ID to a UnifiedUserIdentity object. MicrosoftGraphIdentityManagementService Implements group membership services using the Microsoft Graph API. NoOpUserClaimsProviderService No-op implementation of IUserClaimsProviderService in cases where the user identity is not needed."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.BlobStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.BlobStorageService.html",
    "title": "Class BlobStorageService | FoundationaLLM",
    "summary": "Class BlobStorageService Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to Azure blob storage. public class BlobStorageService : StorageServiceBase, IStorageService Inheritance object StorageServiceBase BlobStorageService Implements IStorageService Inherited Members StorageServiceBase._settings StorageServiceBase._logger StorageServiceBase.InstanceName StorageServiceBase.StorageAccountName StorageServiceBase.StorageContainerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Initializes a new instance of the BlobStorageService with the specified options and logger. Constructors BlobStorageService(IOptions<BlobStorageServiceSettings>, ILogger<BlobStorageService>) Provides access to Azure blob storage. public BlobStorageService(IOptions<BlobStorageServiceSettings> storageOptions, ILogger<BlobStorageService> logger) Parameters storageOptions IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the settings. logger ILogger<BlobStorageService> The logger used for logging. Remarks Initializes a new instance of the BlobStorageService with the specified options and logger. Methods CopyFileAsync(string, string, string, CancellationToken) Copies a file from one location to another within the specified storage container. public Task CopyFileAsync(string containerName, string sourceFilePath, string destinationFilePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. sourceFilePath string The path of the file to copy. destinationFilePath string The path of the destination. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected override void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected override void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected override void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name. DeleteFileAsync(string, string, CancellationToken) Deletes a file from storage. public Task DeleteFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to delete. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. public Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> GetFilePathsAsync(string, string?, bool, CancellationToken) Retrieves a list file paths in the specific directory. public Task<List<string>> GetFilePathsAsync(string containerName, string? directoryPath = null, bool recursive = true, CancellationToken cancellationToken = default) Parameters containerName string Name of the container, file system or Workspace name. directoryPath string Directory to list file contents recursive bool Recurse through child folders cancellationToken CancellationToken Determines if a request should be cancelled. Returns Task<List<string>> List of individual file paths located in the container. GetMatchingFilePathsAsync(string, string, CancellationToken) Retrieves a list of file paths that match a specific pattern. public Task<List<string>> GetMatchingFilePathsAsync(string containerName, string filePathPattern, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. filePathPattern string The file name pattern to match. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<List<string>> ReadFile(string, string) Reads the binary content of a specified file from the storage. public BinaryData ReadFile(string containerName, string filePath) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. Returns BinaryData The binary content of the file. ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. public Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. UpdateJSONFileAsync<T>(string, string, Func<T, T>, CancellationToken) Updates a specified JSON file in the storage. public Task UpdateJSONFileAsync<T>(string containerName, string filePath, Func<T, T> objectTransformer, CancellationToken cancellationToken) where T : class Parameters containerName string The name of the container where the file is located. filePath string The path of the file to update. objectTransformer Func<T, T> A function that updates the object persisted in the JSON file. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task Type Parameters T The type of the object persisted in the JSON file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.DataLakeStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.DataLakeStorageService.html",
    "title": "Class DataLakeStorageService | FoundationaLLM",
    "summary": "Class DataLakeStorageService Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to Azure Data Lake blob storage. public class DataLakeStorageService : StorageServiceBase, IStorageService Inheritance object StorageServiceBase DataLakeStorageService Implements IStorageService Inherited Members StorageServiceBase._settings StorageServiceBase._logger StorageServiceBase.InstanceName StorageServiceBase.StorageContainerName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataLakeStorageService(BlobStorageServiceSettings, ILogger<DataLakeStorageService>) Initializes a new instance of the DataLakeStorageService with the specified options and logger. public DataLakeStorageService(BlobStorageServiceSettings storageSettings, ILogger<DataLakeStorageService> logger) Parameters storageSettings BlobStorageServiceSettings The BlobStorageServiceSettings object with the blob storage settings. logger ILogger<DataLakeStorageService> The logger used for logging. DataLakeStorageService(IOptions<BlobStorageServiceSettings>, ILogger<DataLakeStorageService>) Initializes a new instance of the DataLakeStorageService with the specified options and logger. public DataLakeStorageService(IOptions<BlobStorageServiceSettings> options, ILogger<DataLakeStorageService> logger) Parameters options IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the blob storage settings. logger ILogger<DataLakeStorageService> The logger used for logging. Properties StorageAccountName The name of the storage account. public string StorageAccountName { get; } Property Value string Methods CopyFileAsync(string, string, string, CancellationToken) Copies a file from one location to another within the specified storage container. public Task CopyFileAsync(string containerName, string sourceFilePath, string destinationFilePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. sourceFilePath string The path of the file to copy. destinationFilePath string The path of the destination. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected override void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected override void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected override void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name. DeleteFileAsync(string, string, CancellationToken) Deletes a file from storage. public Task DeleteFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to delete. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. public Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> GetFilePathsAsync(string, string?, bool, CancellationToken) Retrieves a list file paths in the specific directory. public Task<List<string>> GetFilePathsAsync(string containerName, string? directoryPath = null, bool recursive = true, CancellationToken cancellationToken = default) Parameters containerName string Name of the container, file system or Workspace name. directoryPath string Directory to list file contents recursive bool Recurse through child folders cancellationToken CancellationToken Determines if a request should be cancelled. Returns Task<List<string>> List of individual file paths located in the container. GetMatchingFilePathsAsync(string, string, CancellationToken) Retrieves a list of file paths that match a specific pattern. public Task<List<string>> GetMatchingFilePathsAsync(string containerName, string filePathPattern, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. filePathPattern string The file name pattern to match. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<List<string>> ReadFile(string, string) Reads the binary content of a specified file from the storage. public BinaryData ReadFile(string containerName, string filePath) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. Returns BinaryData The binary content of the file. ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. public Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. UpdateJSONFileAsync<T>(string, string, Func<T, T>, CancellationToken) Updates a specified JSON file in the storage. public Task UpdateJSONFileAsync<T>(string containerName, string filePath, Func<T, T> objectTransformer, CancellationToken cancellationToken) where T : class Parameters containerName string The name of the container where the file is located. filePath string The path of the file to update. objectTransformer Func<T, T> A function that updates the object persisted in the JSON file. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task Type Parameters T The type of the object persisted in the JSON file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.NullStorageService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.NullStorageService.html",
    "title": "Class NullStorageService | FoundationaLLM",
    "summary": "Class NullStorageService Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll No-op implementation of the storage service. public class NullStorageService : IStorageService Inheritance object NullStorageService Implements IStorageService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This implementation should be used by resource providers that are using a different storage mechanism than blob storage. Properties InstanceName The optional instance name of the storage service. public string? InstanceName { get; set; } Property Value string StorageAccountName The name of the storage account. public string? StorageAccountName { get; } Property Value string StorageContainerName The name of the storage container. public string? StorageContainerName { get; } Property Value string Methods CopyFileAsync(string, string, string, CancellationToken) Copies a file from one location to another within the specified storage container. public Task CopyFileAsync(string containerName, string sourceFilePath, string destinationFilePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. sourceFilePath string The path of the file to copy. destinationFilePath string The path of the destination. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task DeleteFileAsync(string, string, CancellationToken) Deletes a file from storage. public Task DeleteFileAsync(string containerName, string filePath, CancellationToken cancellationToken = default) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to delete. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task FileExistsAsync(string, string, CancellationToken) Checks if a file exists on the storage. public Task<bool> FileExistsAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<bool> GetFilePathsAsync(string, string?, bool, CancellationToken) Retrieves a list file paths in the specific directory. public Task<List<string>> GetFilePathsAsync(string containerName, string? directoryPath = null, bool recursive = true, CancellationToken cancellationToken = default) Parameters containerName string Name of the container, file system or Workspace name. directoryPath string Directory to list file contents recursive bool Recurse through child folders cancellationToken CancellationToken Determines if a request should be cancelled. Returns Task<List<string>> List of individual file paths located in the container. GetMatchingFilePathsAsync(string, string, CancellationToken) Retrieves a list of file paths that match a specific pattern. public Task<List<string>> GetMatchingFilePathsAsync(string containerName, string filePathPattern, CancellationToken cancellationToken = default) Parameters containerName string The name of the container. filePathPattern string The file name pattern to match. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<List<string>> ReadFile(string, string) Reads the binary content of a specified file from the storage. public BinaryData ReadFile(string containerName, string filePath) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. Returns BinaryData The binary content of the file. ReadFileAsync(string, string, CancellationToken) Reads the binary content of a specified file from the storage. public Task<BinaryData> ReadFileAsync(string containerName, string filePath, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<BinaryData> The binary content of the file. UpdateJSONFileAsync<T>(string, string, Func<T, T>, CancellationToken) Updates a specified JSON file in the storage. public Task UpdateJSONFileAsync<T>(string containerName, string filePath, Func<T, T> objectTransformer, CancellationToken cancellationToken) where T : class Parameters containerName string The name of the container where the file is located. filePath string The path of the file to update. objectTransformer Func<T, T> A function that updates the object persisted in the JSON file. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task Type Parameters T The type of the object persisted in the JSON file. WriteFileAsync(string, string, Stream, string?, CancellationToken) Writes the binary content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, Stream fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent Stream The binary content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task WriteFileAsync(string, string, string, string?, CancellationToken) Writes the string content to a specified file from the storage. public Task WriteFileAsync(string containerName, string filePath, string fileContent, string? contentType, CancellationToken cancellationToken) Parameters containerName string The name of the container where the file is located. filePath string The path of the file to read. fileContent string The string content written to the file. contentType string An optional content type. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.StorageServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.StorageServiceBase.html",
    "title": "Class StorageServiceBase | FoundationaLLM",
    "summary": "Class StorageServiceBase Namespace FoundationaLLM.Common.Services.Storage Assembly FoundationaLLM.Common.dll Provides access to storage. public abstract class StorageServiceBase Inheritance object StorageServiceBase Derived BlobStorageService DataLakeStorageService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageServiceBase(BlobStorageServiceSettings, ILogger<StorageServiceBase>) Initializes a new instance of the StorageServiceBase with the specified settings and logger. public StorageServiceBase(BlobStorageServiceSettings settings, ILogger<StorageServiceBase> logger) Parameters settings BlobStorageServiceSettings The BlobStorageServiceSettings object with the settings. logger ILogger<StorageServiceBase> The logger used for logging. StorageServiceBase(IOptions<BlobStorageServiceSettings>, ILogger<StorageServiceBase>) Initializes a new instance of the StorageServiceBase with the specified options and logger. public StorageServiceBase(IOptions<BlobStorageServiceSettings> storageOptions, ILogger<StorageServiceBase> logger) Parameters storageOptions IOptions<BlobStorageServiceSettings> The options object containing the BlobStorageServiceSettings object with the settings. logger ILogger<StorageServiceBase> The logger used for logging. Fields _logger The logger used for logging. protected readonly ILogger<StorageServiceBase> _logger Field Value ILogger<StorageServiceBase> _settings The BlobStorageServiceSettings used to configure the storage service. protected readonly BlobStorageServiceSettings _settings Field Value BlobStorageServiceSettings Properties InstanceName The optional instance name of the storage service. public string? InstanceName { get; set; } Property Value string StorageAccountName The name of the storage account. public string? StorageAccountName { get; } Property Value string StorageContainerName public string? StorageContainerName { get; } Property Value string Methods CreateClientFromAccountKey(string, string) Creates a storage client from an account name and an account key. protected abstract void CreateClientFromAccountKey(string accountName, string accountKey) Parameters accountName string The storage account name. accountKey string The storage account key. CreateClientFromConnectionString(string) Creates a storage client from a connection string. protected abstract void CreateClientFromConnectionString(string connectionString) Parameters connectionString string The storage connection string. CreateClientFromIdentity(string) Create a storage client from an account name using the default identity for authentication. protected abstract void CreateClientFromIdentity(string accountName) Parameters accountName string The storage account name."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Storage.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Storage.html",
    "title": "Namespace FoundationaLLM.Common.Services.Storage | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Storage Classes BlobStorageService Provides access to Azure blob storage. DataLakeStorageService Provides access to Azure Data Lake blob storage. NullStorageService No-op implementation of the storage service. StorageServiceBase Provides access to storage."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Templates.RegexTemplatingService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Templates.RegexTemplatingService.html",
    "title": "Class RegexTemplatingService | FoundationaLLM",
    "summary": "Class RegexTemplatingService Namespace FoundationaLLM.Common.Services.Templates Assembly FoundationaLLM.Common.dll Templating engine that uses regular expressions to replace tokens in strings. public class RegexTemplatingService : ITemplatingService Inheritance object RegexTemplatingService Implements ITemplatingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RegexTemplatingService(ILogger<RegexTemplatingService>) Templating engine that uses regular expressions to replace tokens in strings. public RegexTemplatingService(ILogger<RegexTemplatingService> logger) Parameters logger ILogger<RegexTemplatingService> The logger used for logging. Methods Transform(string, Dictionary<string, string>?) Transforms the input string by replacing tokens with the corresponding values. public string Transform(string s, Dictionary<string, string>? tokenAndValues = null) Parameters s string The input string to be transformed. tokenAndValues Dictionary<string, string> Optional dictionary of well-known tokens and the values that should take its place. Returns string The transformed string where all the valid tokens have been replaced."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Templates.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Templates.html",
    "title": "Namespace FoundationaLLM.Common.Services.Templates | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Templates Classes RegexTemplatingService Templating engine that uses regular expressions to replace tokens in strings."
  },
  "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.TokenTextSplitterService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.TokenTextSplitterService.html",
    "title": "Class TokenTextSplitterService | FoundationaLLM",
    "summary": "Class TokenTextSplitterService Namespace FoundationaLLM.Common.Services.TextSplitters Assembly FoundationaLLM.Common.dll Splits text based on number of tokens. public class TokenTextSplitterService : ITextSplitterService Inheritance object TokenTextSplitterService Implements ITextSplitterService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TokenTextSplitterService(ITokenizerService, IOptions<TokenTextSplitterServiceSettings>, ILogger<TokenTextSplitterService>) Splits text based on number of tokens. public TokenTextSplitterService(ITokenizerService tokenizerService, IOptions<TokenTextSplitterServiceSettings> options, ILogger<TokenTextSplitterService> logger) Parameters tokenizerService ITokenizerService The ITokenizerService used to tokenize the input text. options IOptions<TokenTextSplitterServiceSettings> The IOptions<TOptions> providing the settings for the service. logger ILogger<TokenTextSplitterService> The logger used for logging. Methods SplitPlainText(string) Splits plain text into multiple chunks. public List<TextChunk> SplitPlainText(string text) Parameters text string The plain text to split. Returns List<TextChunk> A list of TextChunk items containing the text chunks and their sizes in tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.TextSplitters.html",
    "title": "Namespace FoundationaLLM.Common.Services.TextSplitters | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.TextSplitters Classes TokenTextSplitterService Splits text based on number of tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.LeasedTikTokenizer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.LeasedTikTokenizer.html",
    "title": "Class LeasedTikTokenizer | FoundationaLLM",
    "summary": "Class LeasedTikTokenizer Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Extends the TikTokenizer class to support leasing to multiple clients. public class LeasedTikTokenizer : TikTokenizer, ITokenizer Inheritance object TikTokenizer LeasedTikTokenizer Implements ITokenizer Inherited Members TikTokenizer.DefaultCacheSize TikTokenizer.Encode(string, IReadOnlyCollection<string>) TikTokenizer.Encode(string, bool) TikTokenizer.EncodeTrimSuffix(string, IReadOnlyCollection<string>, int) TikTokenizer.EncodeTrimSuffix(string, int, bool) TikTokenizer.EncodeTrimPrefix(string, IReadOnlyCollection<string>, int) TikTokenizer.EncodeTrimPrefix(string, int, bool) TikTokenizer.Decode(int[]) TikTokenizer.NumOfCacheEntries object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LeasedTikTokenizer(Stream, IReadOnlyDictionary<string, int>, string, int) Extends the TikTokenizer class to support leasing to multiple clients. public LeasedTikTokenizer(Stream tikTokenBpeFileStream, IReadOnlyDictionary<string, int> specialTokensEncoder, string pattern, int cacheSize) Parameters tikTokenBpeFileStream Stream specialTokensEncoder IReadOnlyDictionary<string, int> pattern string cacheSize int Properties IsLeased Indicates whether the tokenizer is leased or not. public bool IsLeased { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftBPETokenizerService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftBPETokenizerService.html",
    "title": "Class MicrosoftBPETokenizerService | FoundationaLLM",
    "summary": "Class MicrosoftBPETokenizerService Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Implements an ITokenizerService using the Microsoft BPE tokenizer (https://github.com/microsoft/Tokenizer). This class should always be instantiated as a singleton when used in dependency injection scenarios. public class MicrosoftBPETokenizerService : ITokenizerService Inheritance object MicrosoftBPETokenizerService Implements ITokenizerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MicrosoftBPETokenizerService(ILogger<MicrosoftBPETokenizerService>) Initializes a new instance of the MicrosoftBPETokenizerService class. public MicrosoftBPETokenizerService(ILogger<MicrosoftBPETokenizerService> logger) Parameters logger ILogger<MicrosoftBPETokenizerService> The logger used for logging. Methods CountTokens(string, string?) Count the number of tokens in a given text. public long CountTokens(string text, string? encoderName = null) Parameters text string The text to evaluate. encoderName string The name of the encoder used for tokenization. Returns long The number of tokens in the text. Decode(int[], string?) Decode an array of integer token ids. public string Decode(int[] tokens, string? encoderName) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string?) Encode a string with a set of allowed special tokens that are not broken apart. public List<int> Encode(string text, string? encoderName) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftMLTokenizer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.MicrosoftMLTokenizer.html",
    "title": "Class MicrosoftMLTokenizer | FoundationaLLM",
    "summary": "Class MicrosoftMLTokenizer Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Represents a tokenizer service that uses the Microsoft ML Tokenizer. public class MicrosoftMLTokenizer : ITokenizerService Inheritance object MicrosoftMLTokenizer Implements ITokenizerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Tokenizer Gets the underlying tokenizer instance. public Tokenizer Tokenizer { get; } Property Value Tokenizer Methods CountTokens(string, string?) Count the number of tokens in a given text. public long CountTokens(string text, string? encoderName = null) Parameters text string The text to evaluate. encoderName string The name of the encoder used for tokenization. Returns long The number of tokens in the text. Decode(int[], string?) Decode an array of integer token ids. public string Decode(int[] tokens, string? encoderName) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string?) Encode a string with a set of allowed special tokens that are not broken apart. public List<int> Encode(string text, string? encoderName) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerConfig.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerConfig.html",
    "title": "Class TikTokenizerConfig | FoundationaLLM",
    "summary": "Class TikTokenizerConfig Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Provides the configuration values required to create a new TikTokenizer instance. public record TikTokenizerConfig : IEquatable<TikTokenizerConfig> Inheritance object TikTokenizerConfig Implements IEquatable<TikTokenizerConfig> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TikTokenizerConfig(string, string, Dictionary<string, int>) Provides the configuration values required to create a new TikTokenizer instance. public TikTokenizerConfig(string RegexPattern, string MergeableRanksFileUrl, Dictionary<string, int> SpecialTokens) Parameters RegexPattern string Regex pattern to break a long string. MergeableRanksFileUrl string The URL used to download the BPE rank file. SpecialTokens Dictionary<string, int> Special tokens mapping. Properties MergeableRanksFileContent The raw content of the BPE rank file. public byte[]? MergeableRanksFileContent { get; set; } Property Value byte[] MergeableRanksFileUrl The URL used to download the BPE rank file. public string MergeableRanksFileUrl { get; init; } Property Value string RegexPattern Regex pattern to break a long string. public string RegexPattern { get; init; } Property Value string SpecialTokens Special tokens mapping. public Dictionary<string, int> SpecialTokens { get; init; } Property Value Dictionary<string, int>"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerEncoders.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerEncoders.html",
    "title": "Class TikTokenizerEncoders | FoundationaLLM",
    "summary": "Class TikTokenizerEncoders Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Well-known TikTokenizer encoder names. public static class TikTokenizerEncoders Inheritance object TikTokenizerEncoders Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CL100K_BASE Encoder used by OpenAI models like GPT-4, GPT-3.5-Turbo, and Text-Embedding-ADA-002. public const string CL100K_BASE = \"cl100k_base\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerTokens.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TikTokenizerTokens.html",
    "title": "Class TikTokenizerTokens | FoundationaLLM",
    "summary": "Class TikTokenizerTokens Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Well-known special TikTokenizer token names. public static class TikTokenizerTokens Inheritance object TikTokenizerTokens Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ENDOFPROMPT End of prompt token. public const string ENDOFPROMPT = \"<|endofprompt|>\" Field Value string ENDOFTEXT End of text token. public const string ENDOFTEXT = \"<|endoftext|>\" Field Value string FIM_MIDDLE Fill-In-the-Middle (FIM) middle token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_MIDDLE = \"<|fim_middle|>\" Field Value string FIM_PREFIX Fill-In-the-Middle (FIM) prefix token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_PREFIX = \"<|fim_prefix|>\" Field Value string FIM_SUFFIX Fill-In-the-Middle (FIM) suffix token. For details see https://arxiv.org/abs/2207.14255 and https://github.com/openai/human-eval-infilling. public const string FIM_SUFFIX = \"<|fim_suffix|>\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TokenizerServiceNames.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TokenizerServiceNames.html",
    "title": "Class TokenizerServiceNames | FoundationaLLM",
    "summary": "Class TokenizerServiceNames Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll Names of tokenizer services supported by the platform. public static class TokenizerServiceNames Inheritance object TokenizerServiceNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MICROSOFT_BPE_TOKENIZER Tokenizer service implemented by Microsoft. For details, see https://github.com/microsoft/Tokenizer. public const string MICROSOFT_BPE_TOKENIZER = \"MicrosoftBPETokenizer\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TryAGITokenizer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.TryAGITokenizer.html",
    "title": "Class TryAGITokenizer | FoundationaLLM",
    "summary": "Class TryAGITokenizer Namespace FoundationaLLM.Common.Services.Tokenizers Assembly FoundationaLLM.Common.dll A tokenizer service that uses the Tiktoken library to encode and decode text into tokens. public class TryAGITokenizer : ITokenizerService Inheritance object TryAGITokenizer Implements ITokenizerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CountTokens(string, string?) Count the number of tokens in a given text. public long CountTokens(string text, string? encoderName = null) Parameters text string The text to evaluate. encoderName string The name of the encoder used for tokenization. Returns long The number of tokens in the text. Decode(int[], string?) Decode an array of integer token ids. public string Decode(int[] tokens, string? encoderName = null) Parameters tokens int[] An array of integer token ids. encoderName string The name of the encoder used for tokenization. Returns string Decoded text. Encode(string, string?) Encode a string with a set of allowed special tokens that are not broken apart. public List<int> Encode(string text, string? encoderName = null) Parameters text string String to be encoded. encoderName string The name of the encoder used for tokenization. Returns List<int> List of token ids."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Tokenizers.html",
    "title": "Namespace FoundationaLLM.Common.Services.Tokenizers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Tokenizers Classes LeasedTikTokenizer Extends the TikTokenizer class to support leasing to multiple clients. MicrosoftBPETokenizerService Implements an ITokenizerService using the Microsoft BPE tokenizer (https://github.com/microsoft/Tokenizer). This class should always be instantiated as a singleton when used in dependency injection scenarios. MicrosoftMLTokenizer Represents a tokenizer service that uses the Microsoft ML Tokenizer. TikTokenizerConfig Provides the configuration values required to create a new TikTokenizer instance. TikTokenizerEncoders Well-known TikTokenizer encoder names. TikTokenizerTokens Well-known special TikTokenizer token names. TokenizerServiceNames Names of tokenizer services supported by the platform. TryAGITokenizer A tokenizer service that uses the Tiktoken library to encode and decode text into tokens."
  },
  "api/dotnet/FoundationaLLM.Common.Services.Users.UserProfileService.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Users.UserProfileService.html",
    "title": "Class UserProfileService | FoundationaLLM",
    "summary": "Class UserProfileService Namespace FoundationaLLM.Common.Services.Users Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class UserProfileService : IUserProfileService Inheritance object UserProfileService Implements IUserProfileService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserProfileService(IAzureCosmosDBService, ILogger<UserProfileService>, IOrchestrationContext) Initializes a new instance of the CoreService class. public UserProfileService(IAzureCosmosDBService cosmosDbService, ILogger<UserProfileService> logger, IOrchestrationContext callContext) Parameters cosmosDbService IAzureCosmosDBService The Azure Cosmos DB service that contains user profiles. logger ILogger<UserProfileService> The logging interface used to log under the UserProfileService type name. callContext IOrchestrationContext Contains contextual data for the calling service. Methods GetUserProfileAsync(string) Returns the user profile of the signed in user. public Task<UserProfile?> GetUserProfileAsync(string instanceId) Parameters instanceId string The instance ID. Returns Task<UserProfile> Exceptions InvalidOperationException GetUserProfileForUserAsync(string, string) Returns the user profile of the specified user. public Task<UserProfile?> GetUserProfileForUserAsync(string instanceId, string upn) Parameters instanceId string The instance ID. upn string The user principal name of the user for whom to return the user profile. Returns Task<UserProfile> UpsertUserProfileAsync(string, UserProfile) Inserts or updates a user profile. public Task UpsertUserProfileAsync(string instanceId, UserProfile userProfile) Parameters instanceId string The instance ID. userProfile UserProfile The user profile to upsert. Returns Task Exceptions InvalidOperationException"
  },
  "api/dotnet/FoundationaLLM.Common.Services.Users.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.Users.html",
    "title": "Namespace FoundationaLLM.Common.Services.Users | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services.Users Classes UserProfileService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy."
  },
  "api/dotnet/FoundationaLLM.Common.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Services.html",
    "title": "Namespace FoundationaLLM.Common.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Services Namespaces FoundationaLLM.Common.Services.API FoundationaLLM.Common.Services.Azure FoundationaLLM.Common.Services.Cache FoundationaLLM.Common.Services.Events FoundationaLLM.Common.Services.Plugins FoundationaLLM.Common.Services.Quota FoundationaLLM.Common.Services.ResourceProviders FoundationaLLM.Common.Services.Security FoundationaLLM.Common.Services.Storage FoundationaLLM.Common.Services.Templates FoundationaLLM.Common.Services.TextSplitters FoundationaLLM.Common.Services.Tokenizers FoundationaLLM.Common.Services.Users Interfaces IAzureAppConfigurationService Provides access to and management of Azure App Configuration. IAzureKeyVaultService Provides access to and management of Azure Key Vault."
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonHttpRetryStrategyOptions.html",
    "title": "Class CommonHttpRetryStrategyOptions | FoundationaLLM",
    "summary": "Class CommonHttpRetryStrategyOptions Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll Common Http retry resiliency strategy options used by the API classes and their libraries. public static class CommonHttpRetryStrategyOptions Inheritance object CommonHttpRetryStrategyOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCommonHttpRetryStrategyOptions() Configures the commonly used Polly Http retry resiliency strategy options. public static HttpRetryStrategyOptions GetCommonHttpRetryStrategyOptions() Returns HttpRetryStrategyOptions"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CommonJsonSerializerOptions.html",
    "title": "Class CommonJsonSerializerOptions | FoundationaLLM",
    "summary": "Class CommonJsonSerializerOptions Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll JSON serializer settings for the API classes and their libraries. public static class CommonJsonSerializerOptions Inheritance object CommonJsonSerializerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetJsonSerializerOptions() Configures the System.Text.Json JSON serializer settings. public static JsonSerializerOptions GetJsonSerializerOptions() Returns JsonSerializerOptions GetJsonSerializerOptions(Func<JsonSerializerOptions, JsonSerializerOptions>) Configures the System.Text.Json JSON serializer settings. public static JsonSerializerOptions GetJsonSerializerOptions(Func<JsonSerializerOptions, JsonSerializerOptions> customizer) Parameters customizer Func<JsonSerializerOptions, JsonSerializerOptions> A function that customizes the default settings. Returns JsonSerializerOptions"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.CoreConfiguration.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.CoreConfiguration.html",
    "title": "Class CoreConfiguration | FoundationaLLM",
    "summary": "Class CoreConfiguration Namespace FoundationaLLM.Common.Settings Assembly FoundationaLLM.Common.dll The configuration for the file store. public class CoreConfiguration Inheritance object CoreConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletionResponsePollingIntervalMilliseconds Gets or sets the polling interval in milliseconds for checking the completion of a response. public int CompletionResponsePollingIntervalMilliseconds { get; set; } Property Value int FileStoreConnectors A list of API endpoint configurations for file store connectors. public IEnumerable<APIEndpointConfiguration>? FileStoreConnectors { get; set; } Property Value IEnumerable<APIEndpointConfiguration> MaxUploadsPerMessage Indicates the maximum number of files that can be uploaded in a single message. public int MaxUploadsPerMessage { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Common.Settings.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Settings.html",
    "title": "Namespace FoundationaLLM.Common.Settings | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Settings Classes CommonHttpRetryStrategyOptions Common Http retry resiliency strategy options used by the API classes and their libraries. CommonJsonSerializerOptions JSON serializer settings for the API classes and their libraries. CoreConfiguration The configuration for the file store."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.ConcurrentTaskPool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.ConcurrentTaskPool.html",
    "title": "Class ConcurrentTaskPool | FoundationaLLM",
    "summary": "Class ConcurrentTaskPool Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents a pool of active tasks with a predefined capacity. public class ConcurrentTaskPool Inheritance object ConcurrentTaskPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This class is thread safe. Constructors ConcurrentTaskPool(int, ILogger<ConcurrentTaskPool>) Constructs a task pool with a specified capacity. public ConcurrentTaskPool(int maxConcurrentTasks, ILogger<ConcurrentTaskPool> logger) Parameters maxConcurrentTasks int Indicates the maximum number of tasks accepted by the task pool. logger ILogger<ConcurrentTaskPool> The ILogger used for logging. Properties AvailableCapacity Indicates whether the task pool is at capacity or not. public int AvailableCapacity { get; } Property Value int Methods HasRunningTaskForPayload(string) Determines whether the task pool already has a running task for a specified payload id. public bool HasRunningTaskForPayload(string payloadId) Parameters payloadId string The identifier of the payload. Returns bool True if the task pool already has a running task for the specified payload, false otherwise. TryAdd(IEnumerable<TaskInfo>) Adds a new batch of tasks to the task pool. public bool TryAdd(IEnumerable<TaskInfo> tasks) Parameters tasks IEnumerable<TaskInfo> The list of TaskInfo items to be added to the pool. Returns bool Exceptions TaskPoolException The exception raised when a task cannot be added to the pool (e.g., the task pool is at capacity)."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskInfo.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskInfo.html",
    "title": "Class TaskInfo | FoundationaLLM",
    "summary": "Class TaskInfo Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Provides the context for a task running in the task pool. public class TaskInfo Inheritance object TaskInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PayloadId The unique identifier of the payload processed by the task. public required string PayloadId { get; set; } Property Value string StartTime The start time of the task. public required DateTimeOffset StartTime { get; set; } Property Value DateTimeOffset Task The Task being run. public required Task Task { get; set; } Property Value Task"
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPool.html",
    "title": "Class TaskPool | FoundationaLLM",
    "summary": "Class TaskPool Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents a pool of active tasks with a predefined capacity. public class TaskPool Inheritance object TaskPool Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This class is not thread safe, it assumes the taks pool is managed from a single thread. Constructors TaskPool(int, ILogger) Represents a pool of active tasks with a predefined capacity. public TaskPool(int maxConcurrentTasks, ILogger logger) Parameters maxConcurrentTasks int Indicates the maximum number of tasks accepted by the task pool. logger ILogger The ILogger used for logging. Remarks This class is not thread safe, it assumes the taks pool is managed from a single thread. Properties AvailableCapacity Indicates whether the task pool is at capacity or not. public int AvailableCapacity { get; } Property Value int Methods Add(IEnumerable<TaskInfo>) Adds a new batch of tasks to the task pool. public void Add(IEnumerable<TaskInfo> tasks) Parameters tasks IEnumerable<TaskInfo> The list of TaskInfo items to be added to the pool. Exceptions TaskPoolException The exception raised when a task cannot be added to the pool (e.g., the task pool is at capacity). HasRunningTaskForPayload(string) Determines whether the task pool already has a running task for a specified payload id. public bool HasRunningTaskForPayload(string payloadId) Parameters payloadId string The identifier of the payload. Returns bool True if the task pool already has a running task for the specified payload, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.TaskPoolException.html",
    "title": "Class TaskPoolException | FoundationaLLM",
    "summary": "Class TaskPoolException Namespace FoundationaLLM.Common.Tasks Assembly FoundationaLLM.Common.dll Represents errors that occur in task pools. public class TaskPoolException : Exception, ISerializable Inheritance object Exception TaskPoolException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TaskPoolException() Initializes a new instance of the TaskPoolException class with a default message. public TaskPoolException() TaskPoolException(string?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message) Parameters message string A string that describes the error. TaskPoolException(string?, Exception?) Initializes a new instance of the TaskPoolException class with its message set to message. public TaskPoolException(string? message, Exception? innerException) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception."
  },
  "api/dotnet/FoundationaLLM.Common.Tasks.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Tasks.html",
    "title": "Namespace FoundationaLLM.Common.Tasks | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Tasks Classes ConcurrentTaskPool Represents a pool of active tasks with a predefined capacity. TaskInfo Provides the context for a task running in the task pool. TaskPool Represents a pool of active tasks with a predefined capacity. TaskPoolException Represents errors that occur in task pools."
  },
  "api/dotnet/FoundationaLLM.Common.Telemetry.TelemetryActivitySources.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Telemetry.TelemetryActivitySources.html",
    "title": "Class TelemetryActivitySources | FoundationaLLM",
    "summary": "Class TelemetryActivitySources Namespace FoundationaLLM.Common.Telemetry Assembly FoundationaLLM.Common.dll Provides predefined telemetry activity sources for the components of the platform. public class TelemetryActivitySources Inheritance object TelemetryActivitySources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields CoreAPIActivitySource The activity source for the Core API. public static readonly ActivitySource CoreAPIActivitySource Field Value ActivitySource OrchestrationAPIActivitySource The activity source for the Orchestration API. public static readonly ActivitySource OrchestrationAPIActivitySource Field Value ActivitySource"
  },
  "api/dotnet/FoundationaLLM.Common.Telemetry.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Telemetry.html",
    "title": "Namespace FoundationaLLM.Common.Telemetry | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Telemetry Classes TelemetryActivitySources Provides predefined telemetry activity sources for the components of the platform."
  },
  "api/dotnet/FoundationaLLM.Common.Text.CosmosSystemTextJsonSerializer.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Text.CosmosSystemTextJsonSerializer.html",
    "title": "Class CosmosSystemTextJsonSerializer | FoundationaLLM",
    "summary": "Class CosmosSystemTextJsonSerializer Namespace FoundationaLLM.Common.Text Assembly FoundationaLLM.Common.dll Custom serializer for Cosmos DB that uses System.Text.Json. public class CosmosSystemTextJsonSerializer : CosmosSerializer Inheritance object CosmosSerializer CosmosSystemTextJsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosSystemTextJsonSerializer(JsonSerializerOptions) Initializes a new instance of the CosmosSystemTextJsonSerializer class. public CosmosSystemTextJsonSerializer(JsonSerializerOptions jsonSerializerOptions) Parameters jsonSerializerOptions JsonSerializerOptions Methods FromStream<T>(Stream) Convert a Stream of JSON to an object. The implementation is responsible for Disposing of the stream, including when an exception is thrown, to avoid memory leaks. public override T FromStream<T>(Stream stream) Parameters stream Stream The Stream response containing JSON from Cosmos DB. Returns T The object deserialized from the stream. Type Parameters T Any type passed to Container. ToStream<T>(T) Convert the object to a Stream. The caller will take ownership of the stream and ensure it is correctly disposed of. Stream.CanRead must be true. public override Stream ToStream<T>(T input) Parameters input T Any type passed to Container. Returns Stream A readable Stream containing JSON of the serialized object. Type Parameters T"
  },
  "api/dotnet/FoundationaLLM.Common.Text.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Text.html",
    "title": "Namespace FoundationaLLM.Common.Text | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Text Classes CosmosSystemTextJsonSerializer Custom serializer for Cosmos DB that uses System.Text.Json."
  },
  "api/dotnet/FoundationaLLM.Common.Utils.Base58.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.Base58.html",
    "title": "Class Base58 | FoundationaLLM",
    "summary": "Class Base58 Namespace FoundationaLLM.Common.Utils Assembly FoundationaLLM.Common.dll public static class Base58 Inheritance object Base58 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Encode(byte[]) public static string Encode(byte[] input) Parameters input byte[] Returns string TryDecode(string, byte[], out int) public static bool TryDecode(string input, byte[] bytes, out int numBytesWritten) Parameters input string bytes byte[] numBytesWritten int Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Utils.FileMethods.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.FileMethods.html",
    "title": "Class FileMethods | FoundationaLLM",
    "summary": "Class FileMethods Namespace FoundationaLLM.Common.Utils Assembly FoundationaLLM.Common.dll Contains methods for working with files. public class FileMethods Inheritance object FileMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetMessageContentFileType(string?, string?) Returns the type of the message content based on the file name. public static string GetMessageContentFileType(string? fileName, string? fallbackValue) Parameters fileName string The file name to evaluate. fallbackValue string If populated, defines the fallback type value if a mapping cannot be determined from the passed in file name. Otherwise, the default value is FilePath. Returns string GetMimeType(byte[]) Returns the mime type of the file data. public static string GetMimeType(byte[] fileData) Parameters fileData byte[] The byte array for the file to inspect. Returns string GetMimeType(string) Returns the mime type of the file based on its name. public static string GetMimeType(string fileName) Parameters fileName string The name of the file. Returns string The mime type."
  },
  "api/dotnet/FoundationaLLM.Common.Utils.JsonStringSemanticVersionConverter.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.JsonStringSemanticVersionConverter.html",
    "title": "Class JsonStringSemanticVersionConverter | FoundationaLLM",
    "summary": "Class JsonStringSemanticVersionConverter Namespace FoundationaLLM.Common.Utils Assembly FoundationaLLM.Common.dll Provides a JSON converter for NuGet.Versioning.SemanticVersion objects. public class JsonStringSemanticVersionConverter : JsonConverter<SemanticVersion> Inheritance object JsonConverter JsonConverter<SemanticVersion> JsonStringSemanticVersionConverter Inherited Members JsonConverter<SemanticVersion>.CanConvert(Type) JsonConverter<SemanticVersion>.ReadAsPropertyName(ref Utf8JsonReader, Type, JsonSerializerOptions) JsonConverter<SemanticVersion>.WriteAsPropertyName(Utf8JsonWriter, SemanticVersion, JsonSerializerOptions) JsonConverter<SemanticVersion>.HandleNull JsonConverter<SemanticVersion>.Type object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Reads and converts the JSON to type NuGet.Versioning.SemanticVersion. public override SemanticVersion Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters reader Utf8JsonReader The reader. typeToConvert Type The type to convert. options JsonSerializerOptions An object that specifies serialization options to use. Returns SemanticVersion The converted value. Write(Utf8JsonWriter, SemanticVersion, JsonSerializerOptions) Writes a specified value as JSON. public override void Write(Utf8JsonWriter writer, SemanticVersion value, JsonSerializerOptions options) Parameters writer Utf8JsonWriter The writer to write to. value SemanticVersion The value to convert to JSON. options JsonSerializerOptions An object that specifies serialization options to use."
  },
  "api/dotnet/FoundationaLLM.Common.Utils.ResourcePathUtils.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.ResourcePathUtils.html",
    "title": "Class ResourcePathUtils | FoundationaLLM",
    "summary": "Class ResourcePathUtils Namespace FoundationaLLM.Common.Utils Assembly FoundationaLLM.Common.dll Utilities dedicated to the ResourcePath class. public static class ResourcePathUtils Inheritance object ResourcePathUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseForAuthorizationRequestResourcePath(string, List<string>) Parses a resource path from an ActionAuthorizationRequest object. public static ResourcePath ParseForAuthorizationRequestResourcePath(string resourcePath, List<string> allowedInstanceIds) Parameters resourcePath string The resource path to be analyzed. allowedInstanceIds List<string> The list of allowed FoundationaLLM instance identifiers. Returns ResourcePath A ResourcePath instance. Exceptions AuthorizationException Thrown if the resource path is invalid. ParseForPolicyAssignmentScope(string, List<string>) Parses a resource path used as scope for a PBAC policy assignment. public static ResourcePath ParseForPolicyAssignmentScope(string resourcePath, List<string> allowedInstanceIds) Parameters resourcePath string The resource path to be parsed. allowedInstanceIds List<string> The list of FoundationaLLM instance identifiers used as the context for parsing. Returns ResourcePath A ResourcePath object containing the parsed resource path. Remarks Resource paths used as scopes for policy assignments must be valid resource type paths. If the resource path is not a valid resource type path, the method will throw an exception. Also, all resource paths must reference one of the allowed FoundationaLLM instance identifiers. Exceptions AuthorizationException ParseForRoleAssignmentScope(string, List<string>) Parses a resource path used as scope for an RBAC role assignment. public static ResourcePath ParseForRoleAssignmentScope(string resourcePath, List<string> allowedInstanceIds) Parameters resourcePath string The resource path to be parsed. allowedInstanceIds List<string> The list of FoundationaLLM instance identifiers used as the context for parsing. Returns ResourcePath A ResourcePath object containing the parsed resource path. Remarks Technically, the resource path can be any valid resource path, including a root path. At the moment, role assignments are not allowed at the root level, so the method will throw an exception if the resource path is a root path. Role assignments at the root level are reserved for future use (e.g., in SaaS scenarios where cross-FoundationaLLM instance assignments are needed). Any non-root resource path must reference one of the allowed FoundationaLLM instance identifiers. Exceptions AuthorizationException"
  },
  "api/dotnet/FoundationaLLM.Common.Utils.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Utils.html",
    "title": "Namespace FoundationaLLM.Common.Utils | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Utils Classes Base58 FileMethods Contains methods for working with files. JsonStringSemanticVersionConverter Provides a JSON converter for NuGet.Versioning.SemanticVersion objects. ResourcePathUtils Utilities dedicated to the ResourcePath class."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.Plugins.PluginComponentValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.Plugins.PluginComponentValidator.html",
    "title": "Class PluginComponentValidator | FoundationaLLM",
    "summary": "Class PluginComponentValidator Namespace FoundationaLLM.Common.Validation.Plugins Assembly FoundationaLLM.Common.dll Validator for the PluginComponent model. public class PluginComponentValidator : AbstractValidator<PluginComponent>, IValidator<PluginComponent>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<PluginComponent> PluginComponentValidator Implements IValidator<PluginComponent> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<PluginComponent>.Validate(PluginComponent) AbstractValidator<PluginComponent>.ValidateAsync(PluginComponent, CancellationToken) AbstractValidator<PluginComponent>.Validate(ValidationContext<PluginComponent>) AbstractValidator<PluginComponent>.ValidateAsync(ValidationContext<PluginComponent>, CancellationToken) AbstractValidator<PluginComponent>.CreateDescriptor() AbstractValidator<PluginComponent>.RuleFor<TProperty>(Expression<Func<PluginComponent, TProperty>>) AbstractValidator<PluginComponent>.Transform<TProperty, TTransformed>(Expression<Func<PluginComponent, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<PluginComponent>.Transform<TProperty, TTransformed>(Expression<Func<PluginComponent, TProperty>>, Func<PluginComponent, TProperty, TTransformed>) AbstractValidator<PluginComponent>.RuleForEach<TElement>(Expression<Func<PluginComponent, IEnumerable<TElement>>>) AbstractValidator<PluginComponent>.TransformForEach<TElement, TTransformed>(Expression<Func<PluginComponent, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<PluginComponent>.TransformForEach<TElement, TTransformed>(Expression<Func<PluginComponent, IEnumerable<TElement>>>, Func<PluginComponent, TElement, TTransformed>) AbstractValidator<PluginComponent>.RuleSet(string, Action) AbstractValidator<PluginComponent>.When(Func<PluginComponent, bool>, Action) AbstractValidator<PluginComponent>.When(Func<PluginComponent, ValidationContext<PluginComponent>, bool>, Action) AbstractValidator<PluginComponent>.Unless(Func<PluginComponent, bool>, Action) AbstractValidator<PluginComponent>.Unless(Func<PluginComponent, ValidationContext<PluginComponent>, bool>, Action) AbstractValidator<PluginComponent>.WhenAsync(Func<PluginComponent, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginComponent>.WhenAsync(Func<PluginComponent, ValidationContext<PluginComponent>, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginComponent>.UnlessAsync(Func<PluginComponent, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginComponent>.UnlessAsync(Func<PluginComponent, ValidationContext<PluginComponent>, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginComponent>.Include(IValidator<PluginComponent>) AbstractValidator<PluginComponent>.Include<TValidator>(Func<PluginComponent, TValidator>) AbstractValidator<PluginComponent>.GetEnumerator() AbstractValidator<PluginComponent>.EnsureInstanceNotNull(object) AbstractValidator<PluginComponent>.PreValidate(ValidationContext<PluginComponent>, ValidationResult) AbstractValidator<PluginComponent>.RaiseValidationException(ValidationContext<PluginComponent>, ValidationResult) AbstractValidator<PluginComponent>.OnRuleAdded(IValidationRule<PluginComponent>) AbstractValidator<PluginComponent>.CascadeMode AbstractValidator<PluginComponent>.ClassLevelCascadeMode AbstractValidator<PluginComponent>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PluginComponentValidator() Configures the validation rules for the PluginComponent model. public PluginComponentValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Validation.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.Plugins.html",
    "title": "Namespace FoundationaLLM.Common.Validation.Plugins | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Validation.Plugins Classes PluginComponentValidator Validator for the PluginComponent model."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.AzureCosmosDBResourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.AzureCosmosDBResourceValidator.html",
    "title": "Class AzureCosmosDBResourceValidator | FoundationaLLM",
    "summary": "Class AzureCosmosDBResourceValidator Namespace FoundationaLLM.Common.Validation.ResourceProvider Assembly FoundationaLLM.Common.dll Validator for the AzureCosmosDBResource model. public class AzureCosmosDBResourceValidator : AbstractValidator<AzureCosmosDBResource>, IValidator<AzureCosmosDBResource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AzureCosmosDBResource> AzureCosmosDBResourceValidator Implements IValidator<AzureCosmosDBResource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<AzureCosmosDBResource>.Validate(AzureCosmosDBResource) AbstractValidator<AzureCosmosDBResource>.ValidateAsync(AzureCosmosDBResource, CancellationToken) AbstractValidator<AzureCosmosDBResource>.Validate(ValidationContext<AzureCosmosDBResource>) AbstractValidator<AzureCosmosDBResource>.ValidateAsync(ValidationContext<AzureCosmosDBResource>, CancellationToken) AbstractValidator<AzureCosmosDBResource>.CreateDescriptor() AbstractValidator<AzureCosmosDBResource>.RuleFor<TProperty>(Expression<Func<AzureCosmosDBResource, TProperty>>) AbstractValidator<AzureCosmosDBResource>.Transform<TProperty, TTransformed>(Expression<Func<AzureCosmosDBResource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AzureCosmosDBResource>.Transform<TProperty, TTransformed>(Expression<Func<AzureCosmosDBResource, TProperty>>, Func<AzureCosmosDBResource, TProperty, TTransformed>) AbstractValidator<AzureCosmosDBResource>.RuleForEach<TElement>(Expression<Func<AzureCosmosDBResource, IEnumerable<TElement>>>) AbstractValidator<AzureCosmosDBResource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureCosmosDBResource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AzureCosmosDBResource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureCosmosDBResource, IEnumerable<TElement>>>, Func<AzureCosmosDBResource, TElement, TTransformed>) AbstractValidator<AzureCosmosDBResource>.RuleSet(string, Action) AbstractValidator<AzureCosmosDBResource>.When(Func<AzureCosmosDBResource, bool>, Action) AbstractValidator<AzureCosmosDBResource>.When(Func<AzureCosmosDBResource, ValidationContext<AzureCosmosDBResource>, bool>, Action) AbstractValidator<AzureCosmosDBResource>.Unless(Func<AzureCosmosDBResource, bool>, Action) AbstractValidator<AzureCosmosDBResource>.Unless(Func<AzureCosmosDBResource, ValidationContext<AzureCosmosDBResource>, bool>, Action) AbstractValidator<AzureCosmosDBResource>.WhenAsync(Func<AzureCosmosDBResource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureCosmosDBResource>.WhenAsync(Func<AzureCosmosDBResource, ValidationContext<AzureCosmosDBResource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureCosmosDBResource>.UnlessAsync(Func<AzureCosmosDBResource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureCosmosDBResource>.UnlessAsync(Func<AzureCosmosDBResource, ValidationContext<AzureCosmosDBResource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureCosmosDBResource>.Include(IValidator<AzureCosmosDBResource>) AbstractValidator<AzureCosmosDBResource>.Include<TValidator>(Func<AzureCosmosDBResource, TValidator>) AbstractValidator<AzureCosmosDBResource>.GetEnumerator() AbstractValidator<AzureCosmosDBResource>.EnsureInstanceNotNull(object) AbstractValidator<AzureCosmosDBResource>.PreValidate(ValidationContext<AzureCosmosDBResource>, ValidationResult) AbstractValidator<AzureCosmosDBResource>.RaiseValidationException(ValidationContext<AzureCosmosDBResource>, ValidationResult) AbstractValidator<AzureCosmosDBResource>.OnRuleAdded(IValidationRule<AzureCosmosDBResource>) AbstractValidator<AzureCosmosDBResource>.CascadeMode AbstractValidator<AzureCosmosDBResource>.ClassLevelCascadeMode AbstractValidator<AzureCosmosDBResource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBResourceValidator() Configures the validation rules for the AzureCosmosDBResource model. public AzureCosmosDBResourceValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.ResourceBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.ResourceBaseValidator.html",
    "title": "Class ResourceBaseValidator | FoundationaLLM",
    "summary": "Class ResourceBaseValidator Namespace FoundationaLLM.Common.Validation.ResourceProvider Assembly FoundationaLLM.Common.dll Validator for the ResourceBase model. public class ResourceBaseValidator : AbstractValidator<ResourceBase>, IValidator<ResourceBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ResourceBase> ResourceBaseValidator Implements IValidator<ResourceBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ResourceBase>.Validate(ResourceBase) AbstractValidator<ResourceBase>.ValidateAsync(ResourceBase, CancellationToken) AbstractValidator<ResourceBase>.Validate(ValidationContext<ResourceBase>) AbstractValidator<ResourceBase>.ValidateAsync(ValidationContext<ResourceBase>, CancellationToken) AbstractValidator<ResourceBase>.CreateDescriptor() AbstractValidator<ResourceBase>.RuleFor<TProperty>(Expression<Func<ResourceBase, TProperty>>) AbstractValidator<ResourceBase>.Transform<TProperty, TTransformed>(Expression<Func<ResourceBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ResourceBase>.Transform<TProperty, TTransformed>(Expression<Func<ResourceBase, TProperty>>, Func<ResourceBase, TProperty, TTransformed>) AbstractValidator<ResourceBase>.RuleForEach<TElement>(Expression<Func<ResourceBase, IEnumerable<TElement>>>) AbstractValidator<ResourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<ResourceBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ResourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<ResourceBase, IEnumerable<TElement>>>, Func<ResourceBase, TElement, TTransformed>) AbstractValidator<ResourceBase>.RuleSet(string, Action) AbstractValidator<ResourceBase>.When(Func<ResourceBase, bool>, Action) AbstractValidator<ResourceBase>.When(Func<ResourceBase, ValidationContext<ResourceBase>, bool>, Action) AbstractValidator<ResourceBase>.Unless(Func<ResourceBase, bool>, Action) AbstractValidator<ResourceBase>.Unless(Func<ResourceBase, ValidationContext<ResourceBase>, bool>, Action) AbstractValidator<ResourceBase>.WhenAsync(Func<ResourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.WhenAsync(Func<ResourceBase, ValidationContext<ResourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.UnlessAsync(Func<ResourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.UnlessAsync(Func<ResourceBase, ValidationContext<ResourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<ResourceBase>.Include(IValidator<ResourceBase>) AbstractValidator<ResourceBase>.Include<TValidator>(Func<ResourceBase, TValidator>) AbstractValidator<ResourceBase>.GetEnumerator() AbstractValidator<ResourceBase>.EnsureInstanceNotNull(object) AbstractValidator<ResourceBase>.PreValidate(ValidationContext<ResourceBase>, ValidationResult) AbstractValidator<ResourceBase>.RaiseValidationException(ValidationContext<ResourceBase>, ValidationResult) AbstractValidator<ResourceBase>.OnRuleAdded(IValidationRule<ResourceBase>) AbstractValidator<ResourceBase>.CascadeMode AbstractValidator<ResourceBase>.ClassLevelCascadeMode AbstractValidator<ResourceBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceBaseValidator() Configures the validation rules for the ResourceBase model. public ResourceBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceProvider.html",
    "title": "Namespace FoundationaLLM.Common.Validation.ResourceProvider | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Validation.ResourceProvider Classes AzureCosmosDBResourceValidator Validator for the AzureCosmosDBResource model. ResourceBaseValidator Validator for the ResourceBase model."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ResourceValidatorFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ResourceValidatorFactory.html",
    "title": "Class ResourceValidatorFactory | FoundationaLLM",
    "summary": "Class ResourceValidatorFactory Namespace FoundationaLLM.Common.Validation Assembly FoundationaLLM.Common.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ResourceValidatorFactory : IResourceValidatorFactory Inheritance object ResourceValidatorFactory Implements IResourceValidatorFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceValidatorFactory(IServiceProvider) public ResourceValidatorFactory(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider Methods GetValidator(Type) Gets a validator for the Type parameter, providing a non-generic option to resolve validators at runtime. public object? GetValidator(Type type) Parameters type Type The type of object being validated. Returns object GetValidator<T>() Gets a validator for the specified type. public IValidator<T>? GetValidator<T>() where T : class Returns IValidator<T> Type Parameters T The type of object being validated."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.StandardValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.StandardValidator.html",
    "title": "Class StandardValidator | FoundationaLLM",
    "summary": "Class StandardValidator Namespace FoundationaLLM.Common.Validation Assembly FoundationaLLM.Common.dll Provides the standard validation implementation. public class StandardValidator Inheritance object StandardValidator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StandardValidator(IResourceValidatorFactory, Func<string, Exception>) Provides the standard validation implementation. public StandardValidator(IResourceValidatorFactory validatorFactory, Func<string, Exception> exceptionBuilder) Parameters validatorFactory IResourceValidatorFactory The resource validator factory used to create validators. exceptionBuilder Func<string, Exception> The function that builds the exception thrown when the object instance is not valid. Methods ValidateAndThrowAsync<T>(T) Validates the specified object instance and throws an exception if the instance is invalid. public Task ValidateAndThrowAsync<T>(T instance) where T : class Parameters instance T The object instance being validated. Returns Task Type Parameters T The type of the object instance to validate."
  },
  "api/dotnet/FoundationaLLM.Common.Validation.ValidationUtils.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.ValidationUtils.html",
    "title": "Class ValidationUtils | FoundationaLLM",
    "summary": "Class ValidationUtils Namespace FoundationaLLM.Common.Validation Assembly FoundationaLLM.Common.dll Provides general purpose validation utilities. public class ValidationUtils Inheritance object ValidationUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidateGuid(string?) Validates the correctness of a string representing a GUID value. public static bool ValidateGuid(string? guid) Parameters guid string The string to be validated. Returns bool ValidateObjectId(string?) Validates the correctness of a FoundationaLLM object identifier. public static bool ValidateObjectId(string? objectId) Parameters objectId string The FoundationaLLM object identifier to be validated. Returns bool"
  },
  "api/dotnet/FoundationaLLM.Common.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Common.Validation.html",
    "title": "Namespace FoundationaLLM.Common.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common.Validation Namespaces FoundationaLLM.Common.Validation.Plugins FoundationaLLM.Common.Validation.ResourceProvider Classes ResourceValidatorFactory Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. StandardValidator Provides the standard validation implementation. ValidationUtils Provides general purpose validation utilities."
  },
  "api/dotnet/FoundationaLLM.Common.html": {
    "href": "api/dotnet/FoundationaLLM.Common.html",
    "title": "Namespace FoundationaLLM.Common | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Common Namespaces FoundationaLLM.Common.Authentication FoundationaLLM.Common.Clients FoundationaLLM.Common.Constants FoundationaLLM.Common.Exceptions FoundationaLLM.Common.Extensions FoundationaLLM.Common.Interfaces FoundationaLLM.Common.Middleware FoundationaLLM.Common.Models FoundationaLLM.Common.OpenAPI FoundationaLLM.Common.Services FoundationaLLM.Common.Settings FoundationaLLM.Common.Tasks FoundationaLLM.Common.Telemetry FoundationaLLM.Common.Text FoundationaLLM.Common.Utils FoundationaLLM.Common.Validation"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.AppConfigurationCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.AppConfigurationCatalog.html",
    "title": "Class AppConfigurationCatalog | FoundationaLLM",
    "summary": "Class AppConfigurationCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll A catalog containing the configuration entries for the solution. public static class AppConfigurationCatalog Inheritance object AppConfigurationCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAllEntries() Returns the list of all the app configuration entries for this solution. public static List<AppConfigurationEntry> GetAllEntries() Returns List<AppConfigurationEntry> GetRequiredConfigurationsForVersion(string) Returns the list of all the app configuration entries for this solution that are required for the given version. public static IEnumerable<AppConfigurationEntry> GetRequiredConfigurationsForVersion(string version) Parameters version string The current version of the caller. Returns IEnumerable<AppConfigurationEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.EnvironmentVariablesCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.EnvironmentVariablesCatalog.html",
    "title": "Class EnvironmentVariablesCatalog | FoundationaLLM",
    "summary": "Class EnvironmentVariablesCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll Provides the catalog of environment variables required by the solution. public static class EnvironmentVariablesCatalog Inheritance object EnvironmentVariablesCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRequiredEnvironmentVariables(string) Returns the required environment variables. public static IEnumerable<EnvironmentVariableEntry> GetRequiredEnvironmentVariables(string serviceName = \"\") Parameters serviceName string Optional service name. When not specified, the default environment variables list is returned. Returns IEnumerable<EnvironmentVariableEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.KeyVaultSecretsCatalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.KeyVaultSecretsCatalog.html",
    "title": "Class KeyVaultSecretsCatalog | FoundationaLLM",
    "summary": "Class KeyVaultSecretsCatalog Namespace FoundationaLLM.Configuration.Catalog Assembly FoundationaLLM.Configuration.dll A catalog of Key Vault secrets used in this solution. public static class KeyVaultSecretsCatalog Inheritance object KeyVaultSecretsCatalog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRequiredKeyVaultSecretsForVersion(string, string) Returns the list of all the Key Vault secrets for this solution that are required for the given version. public static IEnumerable<KeyVaultSecretEntry> GetRequiredKeyVaultSecretsForVersion(string version, string serviceName = \"\") Parameters version string The current version of the caller. serviceName string Optional service name. When not specified, the generic key vault secrets list is returned. Returns IEnumerable<KeyVaultSecretEntry>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Catalog.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Catalog.html",
    "title": "Namespace FoundationaLLM.Configuration.Catalog | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Configuration.Catalog Classes AppConfigurationCatalog A catalog containing the configuration entries for the solution. EnvironmentVariablesCatalog Provides the catalog of environment variables required by the solution. KeyVaultSecretsCatalog A catalog of Key Vault secrets used in this solution."
  },
  "api/dotnet/FoundationaLLM.Configuration.Interfaces.IConfigurationHealthChecks.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Interfaces.IConfigurationHealthChecks.html",
    "title": "Interface IConfigurationHealthChecks | FoundationaLLM",
    "summary": "Interface IConfigurationHealthChecks Namespace FoundationaLLM.Configuration.Interfaces Assembly FoundationaLLM.Configuration.dll Provides health checks for the application's configuration settings. public interface IConfigurationHealthChecks Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidateConfigurationsAsync(string) Validates the application's configuration settings. Task ValidateConfigurationsAsync(string version) Parameters version string The current app version. Returns Task ValidateEnvironmentVariables() Validates the application's environment variables. void ValidateEnvironmentVariables() ValidateKeyVaultSecretsAsync(string) Validates the application's Key Vault secrets. Task ValidateKeyVaultSecretsAsync(string version) Parameters version string The current app version. Returns Task Exceptions ConfigurationValidationException"
  },
  "api/dotnet/FoundationaLLM.Configuration.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Interfaces.html",
    "title": "Namespace FoundationaLLM.Configuration.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Configuration.Interfaces Interfaces IConfigurationHealthChecks Provides health checks for the application's configuration settings."
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.APIEndpointReference.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.APIEndpointReference.html",
    "title": "Class APIEndpointReference | FoundationaLLM",
    "summary": "Class APIEndpointReference Namespace FoundationaLLM.Configuration.Models Assembly FoundationaLLM.Configuration.dll Holds a reference to an api endpoint reference. public class APIEndpointReference : ResourceReference Inheritance object ResourceReference APIEndpointReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the agent. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Configuration.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Models.html",
    "title": "Namespace FoundationaLLM.Configuration.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Configuration.Models Classes APIEndpointReference Holds a reference to an api endpoint reference."
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationHealthCheckService.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationHealthCheckService.html",
    "title": "Class ConfigurationHealthCheckService | FoundationaLLM",
    "summary": "Class ConfigurationHealthCheckService Namespace FoundationaLLM.Configuration.Services Assembly FoundationaLLM.Configuration.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class ConfigurationHealthCheckService : IHostedService Inheritance object ConfigurationHealthCheckService Implements IHostedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationHealthCheckService(IConfigurationHealthChecks, IConfiguration, ILogger<ConfigurationHealthCheckService>, IHostApplicationLifetime) public ConfigurationHealthCheckService(IConfigurationHealthChecks healthChecks, IConfiguration configuration, ILogger<ConfigurationHealthCheckService> logger, IHostApplicationLifetime appLifetime) Parameters healthChecks IConfigurationHealthChecks configuration IConfiguration logger ILogger<ConfigurationHealthCheckService> appLifetime IHostApplicationLifetime Methods StartAsync(CancellationToken) Triggered when the application host is ready to start the service. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the start process has been aborted. Returns Task A Task that represents the asynchronous Start operation. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.ConfigurationResourceProviderService.html",
    "title": "Class ConfigurationResourceProviderService | FoundationaLLM",
    "summary": "Class ConfigurationResourceProviderService Namespace FoundationaLLM.Configuration.Services Assembly FoundationaLLM.Configuration.dll Implements the FoundationaLLM.Configuration resource provider. public class ConfigurationResourceProviderService : ResourceProviderServiceBase<APIEndpointReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<APIEndpointReference> ConfigurationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<APIEndpointReference>._resourceReferenceStore ResourceProviderServiceBase<APIEndpointReference>._serviceProvider ResourceProviderServiceBase<APIEndpointReference>._authorizationServiceClient ResourceProviderServiceBase<APIEndpointReference>._storageService ResourceProviderServiceBase<APIEndpointReference>._eventService ResourceProviderServiceBase<APIEndpointReference>._resourceValidatorFactory ResourceProviderServiceBase<APIEndpointReference>._validator ResourceProviderServiceBase<APIEndpointReference>._logger ResourceProviderServiceBase<APIEndpointReference>._instanceSettings ResourceProviderServiceBase<APIEndpointReference>._storageContainerName ResourceProviderServiceBase<APIEndpointReference>._serializerSettings ResourceProviderServiceBase<APIEndpointReference>.Name ResourceProviderServiceBase<APIEndpointReference>.IsInitialized ResourceProviderServiceBase<APIEndpointReference>.InitializationTask ResourceProviderServiceBase<APIEndpointReference>.AllowedResourceTypes ResourceProviderServiceBase<APIEndpointReference>.StorageAccountName ResourceProviderServiceBase<APIEndpointReference>.StorageContainerName ResourceProviderServiceBase<APIEndpointReference>.Initialize() ResourceProviderServiceBase<APIEndpointReference>.WaitForInitialization() ResourceProviderServiceBase<APIEndpointReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<APIEndpointReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<APIEndpointReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<APIEndpointReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<APIEndpointReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<APIEndpointReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<APIEndpointReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<APIEndpointReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<APIEndpointReference>.HandleCacheResetCommand() ResourceProviderServiceBase<APIEndpointReference>.GetResourceProviderState() ResourceProviderServiceBase<APIEndpointReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<APIEndpointReference, bool, Task<T>>) ResourceProviderServiceBase<APIEndpointReference>.LoadResource<T>(APIEndpointReference) ResourceProviderServiceBase<APIEndpointReference>.LoadResource<T>(string) ResourceProviderServiceBase<APIEndpointReference>.CreateResource<T>(APIEndpointReference, T) ResourceProviderServiceBase<APIEndpointReference>.CreateResource(APIEndpointReference, Stream, string) ResourceProviderServiceBase<APIEndpointReference>.CreateResources<T1, T2>(APIEndpointReference, T1, APIEndpointReference, T2) ResourceProviderServiceBase<APIEndpointReference>.SaveResource<T>(APIEndpointReference, T) ResourceProviderServiceBase<APIEndpointReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<APIEndpointReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<APIEndpointReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<APIEndpointReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<APIEndpointReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<APIEndpointReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<APIEndpointReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<APIEndpointReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<APIEndpointReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<APIEndpointReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<APIEndpointReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<APIEndpointReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<APIEndpointReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IAzureAppConfigurationService, IAzureKeyVaultService, IConfiguration, IServiceProvider, ILogger<ConfigurationResourceProviderService>) Implements the FoundationaLLM.Configuration resource provider. public ConfigurationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureAppConfigurationService appConfigurationService, IAzureKeyVaultService keyVaultService, IConfiguration configuration, IServiceProvider serviceProvider, ILogger<ConfigurationResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. appConfigurationService IAzureAppConfigurationService The IAzureAppConfigurationService provding access to the app configuration service. keyVaultService IAzureKeyVaultService The IAzureKeyVaultService providing access to the key vault service. configuration IConfiguration The IConfiguration providing configuration services. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<ConfigurationResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). HandleEventsInternal(EventTypeEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEventsInternal(EventTypeEventArgs e) Parameters e EventTypeEventArgs The EventTypeEventArgs containing the event type and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Configuration.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Services.html",
    "title": "Namespace FoundationaLLM.Configuration.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Configuration.Services Classes ConfigurationHealthCheckService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. ConfigurationResourceProviderService Implements the FoundationaLLM.Configuration resource provider."
  },
  "api/dotnet/FoundationaLLM.Configuration.Validation.ConfigurationHealthChecks.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Validation.ConfigurationHealthChecks.html",
    "title": "Class ConfigurationHealthChecks | FoundationaLLM",
    "summary": "Class ConfigurationHealthChecks Namespace FoundationaLLM.Configuration.Validation Assembly FoundationaLLM.Configuration.dll Provides health checks for the application's configuration settings. public class ConfigurationHealthChecks : IConfigurationHealthChecks Inheritance object ConfigurationHealthChecks Implements IConfigurationHealthChecks Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationHealthChecks(IAzureAppConfigurationService, IAzureKeyVaultService, ILogger<ConfigurationHealthChecks>) Provides health checks for the application's configuration settings. public ConfigurationHealthChecks(IAzureAppConfigurationService azureAppConfigurationService, IAzureKeyVaultService azureKeyVaultService, ILogger<ConfigurationHealthChecks> logger) Parameters azureAppConfigurationService IAzureAppConfigurationService azureKeyVaultService IAzureKeyVaultService logger ILogger<ConfigurationHealthChecks> Methods ValidateConfigurationsAsync(string) Validates the application's configuration settings. public Task ValidateConfigurationsAsync(string version) Parameters version string The current app version. Returns Task ValidateEnvironmentVariables() Validates the application's environment variables. public void ValidateEnvironmentVariables() ValidateKeyVaultSecretsAsync(string) Validates the application's Key Vault secrets. public Task ValidateKeyVaultSecretsAsync(string version) Parameters version string The current app version. Returns Task Exceptions ConfigurationValidationException"
  },
  "api/dotnet/FoundationaLLM.Configuration.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.Validation.html",
    "title": "Namespace FoundationaLLM.Configuration.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Configuration.Validation Classes ConfigurationHealthChecks Provides health checks for the application's configuration settings."
  },
  "api/dotnet/FoundationaLLM.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Configuration.html",
    "title": "Namespace FoundationaLLM.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Configuration Namespaces FoundationaLLM.Configuration.Catalog FoundationaLLM.Configuration.Interfaces FoundationaLLM.Configuration.Models FoundationaLLM.Configuration.Services FoundationaLLM.Configuration.Validation"
  },
  "api/dotnet/FoundationaLLM.Context.API.Controllers.CodeSessionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Context.API.Controllers.CodeSessionsController.html",
    "title": "Class CodeSessionsController | FoundationaLLM",
    "summary": "Class CodeSessionsController Namespace FoundationaLLM.Context.API.Controllers Assembly FoundationaLLM.Context.API.dll Provdes methods for managing code sessions. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class CodeSessionsController : ControllerBase Inheritance object ControllerBase CodeSessionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CodeSessionsController(ICodeSessionService, IOrchestrationContext, ILogger<CodeSessionsController>) Provdes methods for managing code sessions. public CodeSessionsController(ICodeSessionService codeSessionService, IOrchestrationContext callContext, ILogger<CodeSessionsController> logger) Parameters codeSessionService ICodeSessionService The ICodeSessionService providing code sessions services. callContext IOrchestrationContext The IOrchestrationContext call context associated with the current request. logger ILogger<CodeSessionsController> The ILogger used for logging. Methods CreateCodeSessions(string, CreateCodeSessionRequest) Creates a new code session. [HttpPost] public Task<IActionResult> CreateCodeSessions(string instanceId, CreateCodeSessionRequest request) Parameters instanceId string The FoundationaLLM instance identifier. request CreateCodeSessionRequest The CreateCodeSessionRequest providing the details of the request. Returns Task<IActionResult> An OkObjectResult containing the CreateCodeSessionResponse response. DownloadFilesFromCodeSession(string, string, CodeSessionFileDownloadRequest) Downloads files from a code session. [HttpPost(\"{sessionId}/downloadFiles\")] public Task<IActionResult> DownloadFilesFromCodeSession(string instanceId, string sessionId, CodeSessionFileDownloadRequest request) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session from where the files must be downloaded. request CodeSessionFileDownloadRequest The CodeSessionFileDownloadRequest providing the details of the request. Returns Task<IActionResult> ExecuteCodeInCodeSession(string, string, CodeSessionCodeExecuteRequest) Executes code in a code session and returns the result of the execution. [HttpPost(\"{sessionId}/executeCode\")] public Task<IActionResult> ExecuteCodeInCodeSession(string instanceId, string sessionId, CodeSessionCodeExecuteRequest codeExecutionRequest) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session where the code must be executed. codeExecutionRequest CodeSessionCodeExecuteRequest The code execution request. Returns Task<IActionResult> The result of the code execution including standard and error outputs. UploadFilesToCodeSession(string, string, CodeSessionFileUploadRequest) Uploads files to a code session. [HttpPost(\"{sessionId}/uploadFiles\")] public Task<IActionResult> UploadFilesToCodeSession(string instanceId, string sessionId, CodeSessionFileUploadRequest request) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session where the files must be uploaded. request CodeSessionFileUploadRequest The CodeSessionFileUploadRequest providing the details of the request. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Context.API.Controllers.FilesController.html": {
    "href": "api/dotnet/FoundationaLLM.Context.API.Controllers.FilesController.html",
    "title": "Class FilesController | FoundationaLLM",
    "summary": "Class FilesController Namespace FoundationaLLM.Context.API.Controllers Assembly FoundationaLLM.Context.API.dll Provdes methods for managing files. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class FilesController : ControllerBase Inheritance object ControllerBase FilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors FilesController(IFileService, IOrchestrationContext, ILogger<FilesController>) Provdes methods for managing files. public FilesController(IFileService fileService, IOrchestrationContext callContext, ILogger<FilesController> logger) Parameters fileService IFileService The IFileService file service. callContext IOrchestrationContext The IOrchestrationContext call context associated with the current request. logger ILogger<FilesController> The ILogger used for logging. Methods DownloadFile(string, string) Downloads a file. [HttpGet(\"files/{fileId}\")] public Task<IActionResult> DownloadFile(string instanceId, string fileId) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The identifier of the file to be downloaded. Returns Task<IActionResult> GetFileRecord(string, string) Retrieves a file record. [HttpGet(\"fileRecords/{fileId}\")] public Task<IActionResult> GetFileRecord(string instanceId, string fileId) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The identifier of the file to be retrieved. Returns Task<IActionResult> UploadFile(string, string) Uploads a file to a conversation. [HttpPost(\"conversations/{conversationId}/files\")] public Task<IActionResult> UploadFile(string instanceId, string conversationId) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The conversation identifier. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Context.API.Controllers.KnowledgeController.html": {
    "href": "api/dotnet/FoundationaLLM.Context.API.Controllers.KnowledgeController.html",
    "title": "Class KnowledgeController | FoundationaLLM",
    "summary": "Class KnowledgeController Namespace FoundationaLLM.Context.API.Controllers Assembly FoundationaLLM.Context.API.dll Provdes methods for managing files. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class KnowledgeController : ControllerBase Inheritance object ControllerBase KnowledgeController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeController(IKnowledgeService, IOrchestrationContext, ILogger<KnowledgeController>) Provdes methods for managing files. public KnowledgeController(IKnowledgeService knowledgeService, IOrchestrationContext callContext, ILogger<KnowledgeController> logger) Parameters knowledgeService IKnowledgeService The IKnowledgeService knowledge service. callContext IOrchestrationContext The IOrchestrationContext call context associated with the current request. logger ILogger<KnowledgeController> The ILogger used for logging. Methods GetKnowledgeSources(string, ContextKnowledgeSourceListRequest) Retrieves the list of knowledge sources. [HttpPost(\"knowledgeSources/list\")] public Task<IActionResult> GetKnowledgeSources(string instanceId, ContextKnowledgeSourceListRequest listRequest) Parameters instanceId string The FoundationaLLM instance identifier. listRequest ContextKnowledgeSourceListRequest The request containing the information used to filter the knowledge sources. Returns Task<IActionResult> QueryKnowledgeSource(string, string, ContextKnowledgeSourceQueryRequest) Queries a knowledge graph. [HttpPost(\"knowledgeSources/{knowledgeSourceId}/query\")] public Task<IActionResult> QueryKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest queryRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string queryRequest ContextKnowledgeSourceQueryRequest Returns Task<IActionResult> RenderKnowledgeSourceGraph(string, string, ContextKnowledgeSourceQueryRequest?) Retrieves the knowledge graph in a format suitable for rendering. [HttpPost(\"knowledgeSources/{knowledgeSourceId}/render-graph\")] public Task<IActionResult> RenderKnowledgeSourceGraph(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest? queryRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string queryRequest ContextKnowledgeSourceQueryRequest Returns Task<IActionResult> UpdateKnowledgeGraph(string, string, ContextKnowledgeSourceUpdateRequest) Updates a knowledge source. [HttpPost(\"knowledgeSources/{knowledgeSourceId}\")] public Task<IActionResult> UpdateKnowledgeGraph(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceUpdateRequest updateRequest) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. updateRequest ContextKnowledgeSourceUpdateRequest The request containing the information used to update the knowledge source. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Context.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Context.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Context.API.Controllers Assembly FoundationaLLM.Context.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StatusController() Provides methods for checking the status of the service. public StatusController() Methods Get(string) Returns the status of the Context API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public Task<ServiceStatusInfo> Get(string instanceId) Parameters instanceId string Returns Task<ServiceStatusInfo> Options() Returns the allowed HTTP methods for the Context API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Context.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Context.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Context.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.API.Controllers Classes CodeSessionsController Provdes methods for managing code sessions. FilesController Provdes methods for managing files. KnowledgeController Provdes methods for managing files. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Context.Constants.CodeSessionProviderNames.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Constants.CodeSessionProviderNames.html",
    "title": "Class CodeSessionProviderNames | FoundationaLLM",
    "summary": "Class CodeSessionProviderNames Namespace FoundationaLLM.Context.Constants Assembly FoundationaLLM.ContextEngine.dll Provides constants for the code session provider names. public static class CodeSessionProviderNames Inheritance object CodeSessionProviderNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AzureContainerAppsCodeInterpreter The Azure Container Apps Dynamic Sessions code interpreter. public const string AzureContainerAppsCodeInterpreter = \"AzureContainerAppsCodeInterpreter\" Field Value string AzureContainerAppsCustomContainer The Azure Container Apps Dynamic Sessions custom container. public const string AzureContainerAppsCustomContainer = \"AzureContainerAppsCustomContainer\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Context.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Constants.html",
    "title": "Namespace FoundationaLLM.Context.Constants | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Constants Classes CodeSessionProviderNames Provides constants for the code session provider names."
  },
  "api/dotnet/FoundationaLLM.Context.Exceptions.ContextServiceException.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Exceptions.ContextServiceException.html",
    "title": "Class ContextServiceException | FoundationaLLM",
    "summary": "Class ContextServiceException Namespace FoundationaLLM.Context.Exceptions Assembly FoundationaLLM.ContextEngine.dll Represents an exception that occurs when a service error occurs in the Context API. public class ContextServiceException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException ContextServiceException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextServiceException() Initializes a new instance of the ContextServiceException class with a default message. public ContextServiceException() ContextServiceException(string?, Exception?, int) Initializes a new instance of the ContextServiceException class with its message set to message. public ContextServiceException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. ContextServiceException(string?, int) Initializes a new instance of the ContextServiceException class with its message set to message. public ContextServiceException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception. Methods ThrowIfNullOrWhiteSpace(string?, string?) Throws an exception if argument is null, empty, or consists only of white-space characters. public static void ThrowIfNullOrWhiteSpace(string? argument, string? paramName = null) Parameters argument string The string argument to validate. paramName string The name of the parameter with which argument corresponds. Exceptions ContextServiceException argument is empty or consists only of white-space characters."
  },
  "api/dotnet/FoundationaLLM.Context.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Exceptions.html",
    "title": "Namespace FoundationaLLM.Context.Exceptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Exceptions Classes ContextServiceException Represents an exception that occurs when a service error occurs in the Context API."
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.IAzureCosmosDBCodeSessionService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.IAzureCosmosDBCodeSessionService.html",
    "title": "Interface IAzureCosmosDBCodeSessionService | FoundationaLLM",
    "summary": "Interface IAzureCosmosDBCodeSessionService Namespace FoundationaLLM.Context.Interfaces Assembly FoundationaLLM.ContextEngine.dll Defines the interface for the Azure Cosmos DB service that services the Context API Code Session service. public interface IAzureCosmosDBCodeSessionService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCodeSessionFileUploadRecord(string, string, string, string) Gets a code session file upload record from the Azure Cosmos DB. Task<ContextCodeSessionFileUploadRecord?> GetCodeSessionFileUploadRecord(string instanceId, string sessionId, string operationId, string userPrincipalName) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session. operationId string The identifier of the code session file upload record. userPrincipalName string The user principal name of the user associated with the code session file upload. Returns Task<ContextCodeSessionFileUploadRecord> The requested code session file upload record. GetCodeSessionRecord(string, string, string) Gets a code session record from the Azure Cosmos DB. Task<ContextCodeSessionRecord?> GetCodeSessionRecord(string instanceId, string sessionId, string userPrincipalName) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session. userPrincipalName string The user principal name of the user associated with the code session. Returns Task<ContextCodeSessionRecord> The requests code session record. UpsertCodeSessionFileUploadRecord(ContextCodeSessionFileUploadRecord) Upserts a code session file upload record in the Azure Cosmos DB. Task UpsertCodeSessionFileUploadRecord(ContextCodeSessionFileUploadRecord codeSessionFileUploadRecord) Parameters codeSessionFileUploadRecord ContextCodeSessionFileUploadRecord The code session file upload record to be upserted. Returns Task UpsertCodeSessionRecord(ContextCodeSessionRecord) Upserts a code session record in the Azure Cosmos DB. Task UpsertCodeSessionRecord(ContextCodeSessionRecord codeSessionRecord) Parameters codeSessionRecord ContextCodeSessionRecord The code session record to be upserted. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.IAzureCosmosDBFileService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.IAzureCosmosDBFileService.html",
    "title": "Interface IAzureCosmosDBFileService | FoundationaLLM",
    "summary": "Interface IAzureCosmosDBFileService Namespace FoundationaLLM.Context.Interfaces Assembly FoundationaLLM.ContextEngine.dll Defines the interface for the Azure Cosmos DB service that services the Context API File service. public interface IAzureCosmosDBFileService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetFileRecord(string, string, string, bool) Gets the file record for a specified file identifier. Task<ContextFileRecord> GetFileRecord(string instanceId, string fileId, string userPrincipalName, bool bypassOwnerCheck) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The idenfier of the file. userPrincipalName string The user principal name of the user associated with the code session. bypassOwnerCheck bool Indicates whether to bypass the owner check for the file record. Returns Task<ContextFileRecord> GetFileRecords(string, string, string, string, bool) Gets the file records matching the specified criteria. Task<List<ContextFileRecord>> GetFileRecords(string instanceId, string conversationId, string fileName, string userPrincipalName, bool bypassOwnerCheck) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The idenfier of the conversation to which the file is associated. fileName string The name of the file. userPrincipalName string The user principal name of the user associated with the code session. bypassOwnerCheck bool Indicates whether to bypass the owner check for the file records. Returns Task<List<ContextFileRecord>> UpsertFileRecord(ContextFileRecord) Upserts a file record in the Azure Cosmos DB. Task UpsertFileRecord(ContextFileRecord fileRecord) Parameters fileRecord ContextFileRecord The file record to be upserted. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.IAzureCosmosDBServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.IAzureCosmosDBServiceBase.html",
    "title": "Interface IAzureCosmosDBServiceBase | FoundationaLLM",
    "summary": "Interface IAzureCosmosDBServiceBase Namespace FoundationaLLM.Context.Interfaces Assembly FoundationaLLM.ContextEngine.dll Defines the interface for the Azure Cosmos DB service that provides core database services. public interface IAzureCosmosDBServiceBase Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContextContainer Gets the context container for the Azure Cosmos DB service. Container ContextContainer { get; } Property Value Container Methods RetrieveItems<T>(QueryDefinition) Retrieves items from Azure Cosmos DB. Task<List<T>> RetrieveItems<T>(QueryDefinition query) Parameters query QueryDefinition The query definition used to retrieve the items. Returns Task<List<T>> The list of retrieved items. Type Parameters T The type of item to retrieve. UpsertItemAsync<T>(string, T, CancellationToken) Upserts an item in Azure Cosmos DB. Task<T> UpsertItemAsync<T>(string partitionKey, T item, CancellationToken cancellationToken = default) Parameters partitionKey string The partition of the item to upsert. item T The item to upsert. cancellationToken CancellationToken The cancellation token used to signal a cancellation request. Returns Task<T> The upserted item. Type Parameters T The type of the item to upsert."
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.ICodeSessionProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.ICodeSessionProviderService.html",
    "title": "Interface ICodeSessionProviderService | FoundationaLLM",
    "summary": "Interface ICodeSessionProviderService Namespace FoundationaLLM.Context.Interfaces Assembly FoundationaLLM.ContextEngine.dll Defines the interface for code session provider services. public interface ICodeSessionProviderService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ProviderName Gets the name of the code session provider. string ProviderName { get; } Property Value string Methods CreateCodeSession(string, string, string, string, string, UnifiedUserIdentity) Creates a new code session. Task<CreateCodeSessionResponse> CreateCodeSession(string instanceId, string agentName, string conversationId, string context, string language, UnifiedUserIdentity userIdentity) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent for which the code execution session is created. conversationId string The unique identifier of the conversation. context string The context in which the code execution session is created. This is usually the name of the agent tool, but it is not limited to that. language string The code session programing language. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CreateCodeSessionResponse> A CreateCodeSessionResponse object with the properties of the code execution session. DeleteCodeSessionFileStoreItems(string, string) Deletes all files from a code session. Task DeleteCodeSessionFileStoreItems(string codeSessionId, string endpoint) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. Returns Task DownloadFileFromCodeSession(string, string, string, string) Downloads a file from a code session. Task<Stream?> DownloadFileFromCodeSession(string codeSessionId, string endpoint, string fileName, string filePath) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. fileName string The name of the file to download. filePath string The path to the file to download. Returns Task<Stream> A stream with the binary content of the file. ExecuteCodeInCodeSession(string, string, string) Executes code in a code session. Task<CodeSessionCodeExecuteResponse> ExecuteCodeInCodeSession(string codeSessionId, string endpoint, string codeToExecute) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. codeToExecute string The code to execute. Returns Task<CodeSessionCodeExecuteResponse> The result of the code execution including standard and error outputs. GetCodeSessionFileStoreItems(string, string) Lists files from a code session. Task<List<CodeSessionFileStoreItem>> GetCodeSessionFileStoreItems(string codeSessionId, string endpoint) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. Returns Task<List<CodeSessionFileStoreItem>> The list of file paths from the code session. UploadFileToCodeSession(string, string, string, Stream) Uploads a file to a code execution session. Task<bool> UploadFileToCodeSession(string codeSessionId, string endpoint, string fileName, Stream fileContent) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. fileName string The name of the file to upload. fileContent Stream The stream containing the binary content of the file to upload. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.ICodeSessionService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.ICodeSessionService.html",
    "title": "Interface ICodeSessionService | FoundationaLLM",
    "summary": "Interface ICodeSessionService Namespace FoundationaLLM.Context.Interfaces Assembly FoundationaLLM.ContextEngine.dll Definest the interface for the FoundationaLLM Code Session service. public interface ICodeSessionService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateCodeSession(string, CreateCodeSessionRequest, UnifiedUserIdentity) Creates a new code session using one of the registered code session providers. Task<CreateCodeSessionResponse> CreateCodeSession(string instanceId, CreateCodeSessionRequest codeSessionRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The unique identifier of the FoundationaLLM instance. codeSessionRequest CreateCodeSessionRequest The CreateCodeSessionRequest providing the details of the request to create the code session. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CreateCodeSessionResponse> The properties of the code execution session. DownloadFilesFromCodeSession(string, string, string, UnifiedUserIdentity) Downloads newly created files from a code session. Task<CodeSessionFileDownloadResponse> DownloadFilesFromCodeSession(string instanceId, string sessionId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session from where the files must be downloaded. operationId string The code session file upload operation identifier. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CodeSessionFileDownloadResponse> The result of downloading the newly created in the form of a dictionary with file names and file identifiers. Remarks By newly created files we mean files that were not uploaded to the code session but were created during the code execution. The operationId is the identifier of the file upload operation that initially uploaded the files. ExecuteCodeInCodeSession(string, string, string, UnifiedUserIdentity) Executes code in a code session and returns the result of the execution. Task<CodeSessionCodeExecuteResponse> ExecuteCodeInCodeSession(string instanceId, string sessionId, string codeToExecute, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session where the code must be executed. codeToExecute string The code to execute. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CodeSessionCodeExecuteResponse> The result of the code execution including standard and error outputs. UploadFilesToCodeSession(string, string, CodeSessionFileUploadRequest, UnifiedUserIdentity) Uploads files to a code session. Task<CodeSessionFileUploadResponse> UploadFilesToCodeSession(string instanceId, string sessionId, CodeSessionFileUploadRequest request, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session where the files must be uploaded. request CodeSessionFileUploadRequest The CodeSessionFileUploadRequest providing the details of the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CodeSessionFileUploadResponse> The result of uploading the files to the code session in the form of a dictionary where the keys are the file names and the values are true/false."
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.IFileService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.IFileService.html",
    "title": "Interface IFileService | FoundationaLLM",
    "summary": "Interface IFileService Namespace FoundationaLLM.Context.Interfaces Assembly FoundationaLLM.ContextEngine.dll Defines the service interface for the FoundationaLLM File service. public interface IFileService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateFile(string, string, string, string, string, Stream, UnifiedUserIdentity, Dictionary<string, string>?) Create a new file. Task<ContextFileRecord> CreateFile(string instanceId, string origin, string conversationId, string fileName, string contentType, Stream content, UnifiedUserIdentity userIdentity, Dictionary<string, string>? metadata = null) Parameters instanceId string The FoundationaLLM instance identifier. origin string The origin of the file. conversationId string The conversation identifier. fileName string The original name of the file. contentType string The content type of the file. content Stream The Stream providing the raw content of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. metadata Dictionary<string, string> Optional metadata dictionary associated with the file. Returns Task<ContextFileRecord> A ContextFileRecord instance with details about the newly created file. GetFileContent(string, string, UnifiedUserIdentity) Get the binary content of a file. Task<ContextFileContent?> GetFileContent(string instanceId, string fileId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The identifier of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Returns Task<ContextFileContent> A ContextFileContent instance with the content of the file. GetFileContent(string, string, string, UnifiedUserIdentity) Get the binary content of a file. Task<ContextFileContent?> GetFileContent(string instanceId, string conversationId, string fileName, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The conversation identifier. fileName string The name of the file to retrieve. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Returns Task<ContextFileContent> A ContextFileContent instance with the content of the file. GetFileRecord(string, string, UnifiedUserIdentity) Get the file record associated with a file. Task<ContextFileRecord?> GetFileRecord(string instanceId, string fileId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The identifier of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Returns Task<ContextFileRecord> A ContextFileRecord with the file record."
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.IKnowledgeService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.IKnowledgeService.html",
    "title": "Interface IKnowledgeService | FoundationaLLM",
    "summary": "Interface IKnowledgeService Namespace FoundationaLLM.Context.Interfaces Assembly FoundationaLLM.ContextEngine.dll Defines the service interface for the FoundationaLLM Knowledge Graph service. public interface IKnowledgeService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetKnowledgeSources(string, ContextKnowledgeSourceListRequest, UnifiedUserIdentity) Retrieves the list of knowledge sources. Task<IEnumerable<KnowledgeSource>> GetKnowledgeSources(string instanceId, ContextKnowledgeSourceListRequest listRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. listRequest ContextKnowledgeSourceListRequest The request containing the information used to filter the knowledge sources. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task<IEnumerable<KnowledgeSource>> QueryKnowledgeSource(string, string, ContextKnowledgeSourceQueryRequest, UnifiedUserIdentity) Queries a knowledge source. Task<ContextKnowledgeSourceQueryResponse> QueryKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest queryRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request containing the details of the query. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task<ContextKnowledgeSourceQueryResponse> RenderKnowledgeSourceGraph(string, string, ContextKnowledgeSourceQueryRequest?, UnifiedUserIdentity) Retrieves the knowledge source's knowledge graph in a format suitable for visualization or further processing. Task<ContextKnowledgeSourceRenderGraphResponse> RenderKnowledgeSourceGraph(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest? queryRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request containing the details of the query. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task<ContextKnowledgeSourceRenderGraphResponse> UpdateKnowledgeSource(string, string, ContextKnowledgeSourceUpdateRequest, UnifiedUserIdentity) Updates a knowledge source. Task UpdateKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceUpdateRequest updateRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source+ identifier. updateRequest ContextKnowledgeSourceUpdateRequest The request containing the information to update the knowledge source. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Context.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Interfaces.html",
    "title": "Namespace FoundationaLLM.Context.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Interfaces Interfaces IAzureCosmosDBCodeSessionService Defines the interface for the Azure Cosmos DB service that services the Context API Code Session service. IAzureCosmosDBFileService Defines the interface for the Azure Cosmos DB service that services the Context API File service. IAzureCosmosDBServiceBase Defines the interface for the Azure Cosmos DB service that provides core database services. ICodeSessionProviderService Defines the interface for code session provider services. ICodeSessionService Definest the interface for the FoundationaLLM Code Session service. IFileService Defines the service interface for the FoundationaLLM File service. IKnowledgeService Defines the service interface for the FoundationaLLM Knowledge Graph service."
  },
  "api/dotnet/FoundationaLLM.Context.Models.CachedKnowledgeGraph.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.CachedKnowledgeGraph.html",
    "title": "Class CachedKnowledgeGraph | FoundationaLLM",
    "summary": "Class CachedKnowledgeGraph Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Represents a knowledge graph with caching capabilities to optimize data retrieval and reduce redundant computations. public class CachedKnowledgeGraph Inheritance object CachedKnowledgeGraph Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Entities Gets or sets the collection of knowledge entities associated with the knowledge graph. public List<KnowledgeEntity> Entities { get; set; } Property Value List<KnowledgeEntity> Index Gets or sets the knowledge graph index used for organizing and retrieving information. public KnowledgeGraphIndex Index { get; set; } Property Value KnowledgeGraphIndex Relationships Gets or sets the collection of relationships associated with the knowledge entity. public List<KnowledgeRelationship> Relationships { get; set; } Property Value List<KnowledgeRelationship>"
  },
  "api/dotnet/FoundationaLLM.Context.Models.CachedKnowledgeSource.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.CachedKnowledgeSource.html",
    "title": "Class CachedKnowledgeSource | FoundationaLLM",
    "summary": "Class CachedKnowledgeSource Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Represents a knowledge source that caches data to improve retrieval performance. public class CachedKnowledgeSource Inheritance object CachedKnowledgeSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingClient Gets or sets the embedding client used for embedding-related operations. public EmbeddingClient EmbeddingClient { get; set; } Property Value EmbeddingClient KnowledgeGraph Gets or sets the cached knowledge graph associated with this knowledge source. public CachedKnowledgeGraph? KnowledgeGraph { get; set; } Property Value CachedKnowledgeGraph SearchService Gets or sets the Azure AI Search service used for performing search operations. public IAzureAISearchService SearchService { get; set; } Property Value IAzureAISearchService"
  },
  "api/dotnet/FoundationaLLM.Context.Models.CodeSessionFileStore.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.CodeSessionFileStore.html",
    "title": "Class CodeSessionFileStore | FoundationaLLM",
    "summary": "Class CodeSessionFileStore Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Represents the files associated with a code session. public class CodeSessionFileStore Inheritance object CodeSessionFileStore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Items Gets or sets the list of items associated with the code session. [JsonPropertyName(\"value\")] public List<CodeSessionFileStoreItem> Items { get; set; } Property Value List<CodeSessionFileStoreItem>"
  },
  "api/dotnet/FoundationaLLM.Context.Models.CodeSessionFileStoreItem.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.CodeSessionFileStoreItem.html",
    "title": "Class CodeSessionFileStoreItem | FoundationaLLM",
    "summary": "Class CodeSessionFileStoreItem Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Represents an file system item in a code session. public class CodeSessionFileStoreItem Inheritance object CodeSessionFileStoreItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ContentType Gets or sets the content of the file system item. [JsonPropertyName(\"contentType\")] public required string ContentType { get; set; } Property Value string LastModifiedAt Gets or sets the last modified date and time of the file system item. [JsonPropertyName(\"lastModifiedAt\")] public required DateTimeOffset LastModifiedAt { get; set; } Property Value DateTimeOffset Name Gets or sets the name of the file system item. [JsonPropertyName(\"name\")] public required string Name { get; set; } Property Value string ParentPath Gets or sets the path of the file system item. [JsonIgnore] public string ParentPath { get; set; } Property Value string SizeInBytes Gets or sets the size of the file system item in bytes. [JsonPropertyName(\"sizeInBytes\")] public required long SizeInBytes { get; set; } Property Value long Type Gets or sets the type of the file system item. [JsonPropertyName(\"type\")] public required string Type { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.AzureContainerAppsCodeInterpreterServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.AzureContainerAppsCodeInterpreterServiceSettings.html",
    "title": "Class AzureContainerAppsCodeInterpreterServiceSettings | FoundationaLLM",
    "summary": "Class AzureContainerAppsCodeInterpreterServiceSettings Namespace FoundationaLLM.Context.Models.Configuration Assembly FoundationaLLM.ContextEngine.dll Provides settings for the Azure Container Apps Dynamic Sessions code interpreter service. public class AzureContainerAppsCodeInterpreterServiceSettings : AzureContainerAppsServiceSettings Inheritance object AzureContainerAppsServiceSettings AzureContainerAppsCodeInterpreterServiceSettings Inherited Members AzureContainerAppsServiceSettings.Endpoints object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.AzureContainerAppsCustomContainerServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.AzureContainerAppsCustomContainerServiceSettings.html",
    "title": "Class AzureContainerAppsCustomContainerServiceSettings | FoundationaLLM",
    "summary": "Class AzureContainerAppsCustomContainerServiceSettings Namespace FoundationaLLM.Context.Models.Configuration Assembly FoundationaLLM.ContextEngine.dll Provides settings for the Azure Container Apps Dynamic Sessions custom container service. public class AzureContainerAppsCustomContainerServiceSettings : AzureContainerAppsServiceSettings Inheritance object AzureContainerAppsServiceSettings AzureContainerAppsCustomContainerServiceSettings Inherited Members AzureContainerAppsServiceSettings.Endpoints object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.AzureContainerAppsServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.AzureContainerAppsServiceSettings.html",
    "title": "Class AzureContainerAppsServiceSettings | FoundationaLLM",
    "summary": "Class AzureContainerAppsServiceSettings Namespace FoundationaLLM.Context.Models.Configuration Assembly FoundationaLLM.ContextEngine.dll Provides settings for an Azure Container Apps Dynamic Sessions service. public class AzureContainerAppsServiceSettings Inheritance object AzureContainerAppsServiceSettings Derived AzureContainerAppsCodeInterpreterServiceSettings AzureContainerAppsCustomContainerServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Endpoints Get or sets the list of Azure Container Apps Dynamic Sessions endpoints grouped by programming language. public Dictionary<string, List<string>> Endpoints { get; set; } Property Value Dictionary<string, List<string>>"
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.ContextServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.ContextServiceSettings.html",
    "title": "Class ContextServiceSettings | FoundationaLLM",
    "summary": "Class ContextServiceSettings Namespace FoundationaLLM.Context.Models.Configuration Assembly FoundationaLLM.ContextEngine.dll Provides settings for the FoundationaLLM Context API. public class ContextServiceSettings Inheritance object ContextServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties FileService Gets or sets the file service settings. public required FileServiceSettings FileService { get; set; } Property Value FileServiceSettings KnowledgeService Gets or sets the knowledge graph service settings. public required KnowledgeServiceSettings KnowledgeService { get; set; } Property Value KnowledgeServiceSettings"
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.EmbeddingSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.EmbeddingSettings.html",
    "title": "Class EmbeddingSettings | FoundationaLLM",
    "summary": "Class EmbeddingSettings Namespace FoundationaLLM.Context.Models.Configuration Assembly FoundationaLLM.ContextEngine.dll Represents configuration settings for embedding operations. public class EmbeddingSettings Inheritance object EmbeddingSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingAPIEndpointConfigurationObjectId Gets or sets the API Endpoint Configuration object identifier for the endpoint used for embedding operations. public required string EmbeddingAPIEndpointConfigurationObjectId { get; set; } Property Value string ModelDeployments Gets or sets a dictionary that maps model names to their corresponding model deployment names. public Dictionary<string, string> ModelDeployments { get; set; } Property Value Dictionary<string, string> Remarks The keys are model names (e.g., text-embedding-3-large) and the values are model deployment names."
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.FileServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.FileServiceSettings.html",
    "title": "Class FileServiceSettings | FoundationaLLM",
    "summary": "Class FileServiceSettings Namespace FoundationaLLM.Context.Models.Configuration Assembly FoundationaLLM.ContextEngine.dll Provides settings for the FoundationaLLM Context API file service. public class FileServiceSettings Inheritance object FileServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CosmosDB Gets or sets the Azure Cosmos DB settings. public required AzureCosmosDBSettings CosmosDB { get; set; } Property Value AzureCosmosDBSettings KnowledgeSearchContextFileExtensions Gets or sets the comma-separated list of file extensions that indicate files that can be directly used in the context of a completion request. public string? KnowledgeSearchContextFileExtensions { get; set; } Property Value string KnowledgeSearchContextFileMaxSizeBytes Gets or sets the maximum size in bytes for files that can be directly used in the context of a completion request. public string? KnowledgeSearchContextFileMaxSizeBytes { get; set; } Property Value string KnowledgeSearchFileExtensions Gets or sets the comma-separated list of file extensions that are subject to knowledge search. public required string KnowledgeSearchFileExtensions { get; set; } Property Value string Storage Gets or sets the storage settings. public required BlobStorageServiceSettings Storage { get; set; } Property Value BlobStorageServiceSettings"
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.KnowledgeServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.KnowledgeServiceSettings.html",
    "title": "Class KnowledgeServiceSettings | FoundationaLLM",
    "summary": "Class KnowledgeServiceSettings Namespace FoundationaLLM.Context.Models.Configuration Assembly FoundationaLLM.ContextEngine.dll Provides settings for the FoundationaLLM Context API knowledge graph service. public class KnowledgeServiceSettings Inheritance object KnowledgeServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Embedding Gets or sets the settings used for embedding operations. public required EmbeddingSettings Embedding { get; set; } Property Value EmbeddingSettings Storage Gets or sets the storage settings. public required BlobStorageServiceSettings Storage { get; set; } Property Value BlobStorageServiceSettings"
  },
  "api/dotnet/FoundationaLLM.Context.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Context.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Models.Configuration Classes AzureContainerAppsCodeInterpreterServiceSettings Provides settings for the Azure Container Apps Dynamic Sessions code interpreter service. AzureContainerAppsCustomContainerServiceSettings Provides settings for the Azure Container Apps Dynamic Sessions custom container service. AzureContainerAppsServiceSettings Provides settings for an Azure Container Apps Dynamic Sessions service. ContextServiceSettings Provides settings for the FoundationaLLM Context API. EmbeddingSettings Represents configuration settings for embedding operations. FileServiceSettings Provides settings for the FoundationaLLM Context API file service. KnowledgeServiceSettings Provides settings for the FoundationaLLM Context API knowledge graph service."
  },
  "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndex.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndex.html",
    "title": "Class KnowledgeGraphIndex | FoundationaLLM",
    "summary": "Class KnowledgeGraphIndex Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Represents an index for organizing and retrieving information in a knowledge graph. public class KnowledgeGraphIndex Inheritance object KnowledgeGraphIndex Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Nodes Gets or sets the collection of nodes in the knowledge graph, indexed by their unique identifiers. public Dictionary<string, KnowledgeGraphIndexNode> Nodes { get; set; } Property Value Dictionary<string, KnowledgeGraphIndexNode> Methods Create(IEnumerable<KnowledgeEntity>, IEnumerable<KnowledgeRelationship>) public static KnowledgeGraphIndex Create(IEnumerable<KnowledgeEntity> entities, IEnumerable<KnowledgeRelationship> relationships) Parameters entities IEnumerable<KnowledgeEntity> relationships IEnumerable<KnowledgeRelationship> Returns KnowledgeGraphIndex"
  },
  "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndexNode.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndexNode.html",
    "title": "Class KnowledgeGraphIndexNode | FoundationaLLM",
    "summary": "Class KnowledgeGraphIndexNode Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Represents a node within a knowledge graph index. public class KnowledgeGraphIndexNode Inheritance object KnowledgeGraphIndexNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Entity Gets or sets the knowledge entity associated with the node. public required KnowledgeEntity Entity { get; set; } Property Value KnowledgeEntity RelatedNodes Gets or sets the collection of related nodes in the knowledge graph. public required List<KnowledgeGraphIndexRelatedNode> RelatedNodes { get; set; } Property Value List<KnowledgeGraphIndexRelatedNode>"
  },
  "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndexRelatedNode.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndexRelatedNode.html",
    "title": "Class KnowledgeGraphIndexRelatedNode | FoundationaLLM",
    "summary": "Class KnowledgeGraphIndexRelatedNode Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Represents a node related to another node within a knowledge graph index. public class KnowledgeGraphIndexRelatedNode Inheritance object KnowledgeGraphIndexRelatedNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RelatedEntity Gets or sets the knowledge entity associated with the node. public required KnowledgeEntity RelatedEntity { get; set; } Property Value KnowledgeEntity Relationship Gets or sets the relationship between this node and the related node. public required KnowledgeRelationship Relationship { get; set; } Property Value KnowledgeRelationship RelationshipStrength Gets or sets the strength of the relationship with the related entity. public int RelationshipStrength { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndexRelatedNodeComparer.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.KnowledgeGraphIndexRelatedNodeComparer.html",
    "title": "Class KnowledgeGraphIndexRelatedNodeComparer | FoundationaLLM",
    "summary": "Class KnowledgeGraphIndexRelatedNodeComparer Namespace FoundationaLLM.Context.Models Assembly FoundationaLLM.ContextEngine.dll Equality comparer for KnowledgeGraphIndexRelatedNode based on the UniqueId of RelatedEntity. public class KnowledgeGraphIndexRelatedNodeComparer : IEqualityComparer<KnowledgeGraphIndexRelatedNode> Inheritance object KnowledgeGraphIndexRelatedNodeComparer Implements IEqualityComparer<KnowledgeGraphIndexRelatedNode> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Equals(KnowledgeGraphIndexRelatedNode?, KnowledgeGraphIndexRelatedNode?) Determines whether the specified objects are equal. public bool Equals(KnowledgeGraphIndexRelatedNode? x, KnowledgeGraphIndexRelatedNode? y) Parameters x KnowledgeGraphIndexRelatedNode The first object of type T to compare. y KnowledgeGraphIndexRelatedNode The second object of type T to compare. Returns bool true if the specified objects are equal; otherwise, false. GetHashCode(KnowledgeGraphIndexRelatedNode) Returns a hash code for the specified object. public int GetHashCode(KnowledgeGraphIndexRelatedNode obj) Parameters obj KnowledgeGraphIndexRelatedNode The object for which a hash code is to be returned. Returns int A hash code for the specified object. Exceptions ArgumentNullException The type of obj is a reference type and obj is null."
  },
  "api/dotnet/FoundationaLLM.Context.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Models.html",
    "title": "Namespace FoundationaLLM.Context.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Models Namespaces FoundationaLLM.Context.Models.Configuration Classes CachedKnowledgeGraph Represents a knowledge graph with caching capabilities to optimize data retrieval and reduce redundant computations. CachedKnowledgeSource Represents a knowledge source that caches data to improve retrieval performance. CodeSessionFileStore Represents the files associated with a code session. CodeSessionFileStoreItem Represents an file system item in a code session. KnowledgeGraphIndex Represents an index for organizing and retrieving information in a knowledge graph. KnowledgeGraphIndexNode Represents a node within a knowledge graph index. KnowledgeGraphIndexRelatedNode Represents a node related to another node within a knowledge graph index. KnowledgeGraphIndexRelatedNodeComparer Equality comparer for KnowledgeGraphIndexRelatedNode based on the UniqueId of RelatedEntity."
  },
  "api/dotnet/FoundationaLLM.Context.ResourceProviders.ContextResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.ResourceProviders.ContextResourceProviderService.html",
    "title": "Class ContextResourceProviderService | FoundationaLLM",
    "summary": "Class ContextResourceProviderService Namespace FoundationaLLM.Context.ResourceProviders Assembly FoundationaLLM.Context.dll Implements the FoundationaLLM.Context resource provider. public class ContextResourceProviderService : ResourceProviderServiceBase<ResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<ResourceReference> ContextResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<ResourceReference>._resourceReferenceStore ResourceProviderServiceBase<ResourceReference>._serviceProvider ResourceProviderServiceBase<ResourceReference>._authorizationServiceClient ResourceProviderServiceBase<ResourceReference>._storageService ResourceProviderServiceBase<ResourceReference>._eventService ResourceProviderServiceBase<ResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<ResourceReference>._validator ResourceProviderServiceBase<ResourceReference>._logger ResourceProviderServiceBase<ResourceReference>._instanceSettings ResourceProviderServiceBase<ResourceReference>._storageContainerName ResourceProviderServiceBase<ResourceReference>._serializerSettings ResourceProviderServiceBase<ResourceReference>.Name ResourceProviderServiceBase<ResourceReference>.IsInitialized ResourceProviderServiceBase<ResourceReference>.InitializationTask ResourceProviderServiceBase<ResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<ResourceReference>.StorageAccountName ResourceProviderServiceBase<ResourceReference>.StorageContainerName ResourceProviderServiceBase<ResourceReference>.Initialize() ResourceProviderServiceBase<ResourceReference>.WaitForInitialization() ResourceProviderServiceBase<ResourceReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync(ResourcePath, string, ResourceProviderFormFile, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<ResourceReference>.HandleCacheResetCommand() ResourceProviderServiceBase<ResourceReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderState() ResourceProviderServiceBase<ResourceReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(ResourceReference) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<ResourceReference>.CreateResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.CreateResource(ResourceReference, Stream, string) ResourceProviderServiceBase<ResourceReference>.CreateResources<T1, T2>(ResourceReference, T1, ResourceReference, T2) ResourceProviderServiceBase<ResourceReference>.SaveResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<ResourceReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<ResourceReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<ResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<ResourceReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Context resource provider. public ContextResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The factory responsible for creating loggers. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Context.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Context.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Context.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.ResourceProviders Classes ContextResourceProviderService Implements the FoundationaLLM.Context resource provider."
  },
  "api/dotnet/FoundationaLLM.Context.Services.AzureContainerAppsCodeInterpreterService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.AzureContainerAppsCodeInterpreterService.html",
    "title": "Class AzureContainerAppsCodeInterpreterService | FoundationaLLM",
    "summary": "Class AzureContainerAppsCodeInterpreterService Namespace FoundationaLLM.Context.Services Assembly FoundationaLLM.ContextEngine.dll Provides a code session service that uses Azure Container Apps Dynamic Sessions to execute code. public class AzureContainerAppsCodeInterpreterService : AzureContainerAppsServiceBase, ICodeSessionProviderService Inheritance object AzureContainerAppsServiceBase AzureContainerAppsCodeInterpreterService Implements ICodeSessionProviderService Inherited Members AzureContainerAppsServiceBase._logger AzureContainerAppsServiceBase.CreateCodeSessionInternal(string, string, string, string, string, UnifiedUserIdentity) AzureContainerAppsServiceBase.CreateHttpClient() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureContainerAppsCodeInterpreterService(IHttpClientFactory, IOptions<AzureContainerAppsCodeInterpreterServiceSettings>, ILogger<AzureContainerAppsCodeInterpreterService>) Provides a code session service that uses Azure Container Apps Dynamic Sessions to execute code. public AzureContainerAppsCodeInterpreterService(IHttpClientFactory httpClientFactory, IOptions<AzureContainerAppsCodeInterpreterServiceSettings> options, ILogger<AzureContainerAppsCodeInterpreterService> logger) Parameters httpClientFactory IHttpClientFactory The factory used to create HttpClient instances. options IOptions<AzureContainerAppsCodeInterpreterServiceSettings> The options for the Azure Container Apps code execution service. logger ILogger<AzureContainerAppsCodeInterpreterService> The logger used for logging. Properties ProviderName Gets the name of the code session provider. public string ProviderName { get; } Property Value string Methods CreateCodeSession(string, string, string, string, string, UnifiedUserIdentity) Creates a new code session. public Task<CreateCodeSessionResponse> CreateCodeSession(string instanceId, string agentName, string conversationId, string context, string language, UnifiedUserIdentity userIdentity) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent for which the code execution session is created. conversationId string The unique identifier of the conversation. context string The context in which the code execution session is created. This is usually the name of the agent tool, but it is not limited to that. language string The code session programing language. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CreateCodeSessionResponse> A CreateCodeSessionResponse object with the properties of the code execution session. DeleteCodeSessionFileStoreItems(string, string) Deletes all files from a code session. public Task DeleteCodeSessionFileStoreItems(string codeSessionId, string endpoint) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. Returns Task DownloadFileFromCodeSession(string, string, string, string) Downloads a file from a code session. public Task<Stream?> DownloadFileFromCodeSession(string codeSessionId, string endpoint, string fileName, string filePath) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. fileName string The name of the file to download. filePath string The path to the file to download. Returns Task<Stream> A stream with the binary content of the file. ExecuteCodeInCodeSession(string, string, string) Executes code in a code session. public Task<CodeSessionCodeExecuteResponse> ExecuteCodeInCodeSession(string codeSessionId, string endpoint, string codeToExecute) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. codeToExecute string The code to execute. Returns Task<CodeSessionCodeExecuteResponse> The result of the code execution including standard and error outputs. GetCodeSessionFileStoreItems(string, string) Lists files from a code session. public Task<List<CodeSessionFileStoreItem>> GetCodeSessionFileStoreItems(string codeSessionId, string endpoint) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. Returns Task<List<CodeSessionFileStoreItem>> The list of file paths from the code session. GetNewSessionId(string, string) Generates a new session identifier based on the conversation identifier and context. protected override string GetNewSessionId(string conversationId, string context) Parameters conversationId string The conversation identifier. context string Additional context for the code session. Returns string Remarks The context is usually the name of the agent tool that requests the code session. UploadFileToCodeSession(string, string, string, Stream) Uploads a file to a code execution session. public Task<bool> UploadFileToCodeSession(string codeSessionId, string endpoint, string fileName, Stream fileContent) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. fileName string The name of the file to upload. fileContent Stream The stream containing the binary content of the file to upload. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Context.Services.AzureContainerAppsCustomContainerService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.AzureContainerAppsCustomContainerService.html",
    "title": "Class AzureContainerAppsCustomContainerService | FoundationaLLM",
    "summary": "Class AzureContainerAppsCustomContainerService Namespace FoundationaLLM.Context.Services Assembly FoundationaLLM.ContextEngine.dll Provides a code session service that uses Azure Container Apps Dynamic Sessions to execute code. public class AzureContainerAppsCustomContainerService : AzureContainerAppsServiceBase, ICodeSessionProviderService Inheritance object AzureContainerAppsServiceBase AzureContainerAppsCustomContainerService Implements ICodeSessionProviderService Inherited Members AzureContainerAppsServiceBase._logger AzureContainerAppsServiceBase.CreateCodeSessionInternal(string, string, string, string, string, UnifiedUserIdentity) AzureContainerAppsServiceBase.CreateHttpClient() AzureContainerAppsServiceBase.GetNewSessionId(string, string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureContainerAppsCustomContainerService(IHttpClientFactory, IOptions<AzureContainerAppsCustomContainerServiceSettings>, ILogger<AzureContainerAppsCodeInterpreterService>) Provides a code session service that uses Azure Container Apps Dynamic Sessions to execute code. public AzureContainerAppsCustomContainerService(IHttpClientFactory httpClientFactory, IOptions<AzureContainerAppsCustomContainerServiceSettings> options, ILogger<AzureContainerAppsCodeInterpreterService> logger) Parameters httpClientFactory IHttpClientFactory The factory used to create HttpClient instances. options IOptions<AzureContainerAppsCustomContainerServiceSettings> The options for the Azure Container Apps code execution service. logger ILogger<AzureContainerAppsCodeInterpreterService> The logger used for logging. Properties ProviderName Gets the name of the code session provider. public string ProviderName { get; } Property Value string Methods CreateCodeSession(string, string, string, string, string, UnifiedUserIdentity) Creates a new code session. public Task<CreateCodeSessionResponse> CreateCodeSession(string instanceId, string agentName, string conversationId, string context, string language, UnifiedUserIdentity userIdentity) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent for which the code execution session is created. conversationId string The unique identifier of the conversation. context string The context in which the code execution session is created. This is usually the name of the agent tool, but it is not limited to that. language string The code session programing language. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CreateCodeSessionResponse> A CreateCodeSessionResponse object with the properties of the code execution session. DeleteCodeSessionFileStoreItems(string, string) Deletes all files from a code session. public Task DeleteCodeSessionFileStoreItems(string codeSessionId, string endpoint) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. Returns Task DownloadFileFromCodeSession(string, string, string, string) Downloads a file from a code session. public Task<Stream?> DownloadFileFromCodeSession(string codeSessionId, string endpoint, string fileName, string filePath) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. fileName string The name of the file to download. filePath string The path to the file to download. Returns Task<Stream> A stream with the binary content of the file. ExecuteCodeInCodeSession(string, string, string) Executes code in a code session. public Task<CodeSessionCodeExecuteResponse> ExecuteCodeInCodeSession(string codeSessionId, string endpoint, string codeToExecute) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. codeToExecute string The code to execute. Returns Task<CodeSessionCodeExecuteResponse> The result of the code execution including standard and error outputs. GetCodeSessionFileStoreItems(string, string) Lists files from a code session. public Task<List<CodeSessionFileStoreItem>> GetCodeSessionFileStoreItems(string codeSessionId, string endpoint) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. Returns Task<List<CodeSessionFileStoreItem>> The list of file paths from the code session. UploadFileToCodeSession(string, string, string, Stream) Uploads a file to a code execution session. public Task<bool> UploadFileToCodeSession(string codeSessionId, string endpoint, string fileName, Stream fileContent) Parameters codeSessionId string The identifier of the code session. endpoint string The endpoint of the code session service. fileName string The name of the file to upload. fileContent Stream The stream containing the binary content of the file to upload. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Context.Services.AzureContainerAppsServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.AzureContainerAppsServiceBase.html",
    "title": "Class AzureContainerAppsServiceBase | FoundationaLLM",
    "summary": "Class AzureContainerAppsServiceBase Namespace FoundationaLLM.Context.Services Assembly FoundationaLLM.ContextEngine.dll Base class for Azure Container Apps Dynamic Sessions services. public class AzureContainerAppsServiceBase Inheritance object AzureContainerAppsServiceBase Derived AzureContainerAppsCodeInterpreterService AzureContainerAppsCustomContainerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureContainerAppsServiceBase(IHttpClientFactory, ILogger) Base class for Azure Container Apps Dynamic Sessions services. public AzureContainerAppsServiceBase(IHttpClientFactory httpClientFactory, ILogger logger) Parameters httpClientFactory IHttpClientFactory The factory used to create HttpClient instances. logger ILogger The logger used for logging. Fields _logger protected readonly ILogger _logger Field Value ILogger Methods CreateCodeSessionInternal(string, string, string, string, string, UnifiedUserIdentity) protected Task<CreateCodeSessionResponse> CreateCodeSessionInternal(string instanceId, string agentName, string conversationId, string context, string sessionEndpoint, UnifiedUserIdentity userIdentity) Parameters instanceId string agentName string conversationId string context string sessionEndpoint string userIdentity UnifiedUserIdentity Returns Task<CreateCodeSessionResponse> CreateHttpClient() protected Task<HttpClient> CreateHttpClient() Returns Task<HttpClient> GetNewSessionId(string, string) Generates a new session identifier based on the conversation identifier and context. protected virtual string GetNewSessionId(string conversationId, string context) Parameters conversationId string The conversation identifier. context string Additional context for the code session. Returns string Remarks The context is usually the name of the agent tool that requests the code session."
  },
  "api/dotnet/FoundationaLLM.Context.Services.CodeSessionService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.CodeSessionService.html",
    "title": "Class CodeSessionService | FoundationaLLM",
    "summary": "Class CodeSessionService Namespace FoundationaLLM.Context.Services Assembly FoundationaLLM.ContextEngine.dll Implements the FoundationaLLM Code Session service. public class CodeSessionService : ICodeSessionService Inheritance object CodeSessionService Implements ICodeSessionService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CodeSessionService(IFileService, IAzureCosmosDBCodeSessionService, IEnumerable<ICodeSessionProviderService>, IResourceValidatorFactory, ILogger<CodeSessionService>) Implements the FoundationaLLM Code Session service. public CodeSessionService(IFileService fileService, IAzureCosmosDBCodeSessionService cosmosDBService, IEnumerable<ICodeSessionProviderService> codeSessionProviderServices, IResourceValidatorFactory resourceValidatorFactory, ILogger<CodeSessionService> logger) Parameters fileService IFileService The file service used for file operations. cosmosDBService IAzureCosmosDBCodeSessionService The Azure Cosmos DB service providing database services. codeSessionProviderServices IEnumerable<ICodeSessionProviderService> The code session provider services. resourceValidatorFactory IResourceValidatorFactory The resource validator factory. logger ILogger<CodeSessionService> The logger used for logging. Methods CreateCodeSession(string, CreateCodeSessionRequest, UnifiedUserIdentity) Creates a new code session using one of the registered code session providers. public Task<CreateCodeSessionResponse> CreateCodeSession(string instanceId, CreateCodeSessionRequest codeSessionRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The unique identifier of the FoundationaLLM instance. codeSessionRequest CreateCodeSessionRequest The CreateCodeSessionRequest providing the details of the request to create the code session. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CreateCodeSessionResponse> The properties of the code execution session. DownloadFilesFromCodeSession(string, string, string, UnifiedUserIdentity) Downloads newly created files from a code session. public Task<CodeSessionFileDownloadResponse> DownloadFilesFromCodeSession(string instanceId, string sessionId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session from where the files must be downloaded. operationId string The code session file upload operation identifier. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CodeSessionFileDownloadResponse> The result of downloading the newly created in the form of a dictionary with file names and file identifiers. Remarks By newly created files we mean files that were not uploaded to the code session but were created during the code execution. The operationId is the identifier of the file upload operation that initially uploaded the files. ExecuteCodeInCodeSession(string, string, string, UnifiedUserIdentity) Executes code in a code session and returns the result of the execution. public Task<CodeSessionCodeExecuteResponse> ExecuteCodeInCodeSession(string instanceId, string sessionId, string codeToExecute, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session where the code must be executed. codeToExecute string The code to execute. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CodeSessionCodeExecuteResponse> The result of the code execution including standard and error outputs. UploadFilesToCodeSession(string, string, CodeSessionFileUploadRequest, UnifiedUserIdentity) Uploads files to a code session. public Task<CodeSessionFileUploadResponse> UploadFilesToCodeSession(string instanceId, string sessionId, CodeSessionFileUploadRequest request, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session where the files must be uploaded. request CodeSessionFileUploadRequest The CodeSessionFileUploadRequest providing the details of the request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing the user identity information. Returns Task<CodeSessionFileUploadResponse> The result of uploading the files to the code session in the form of a dictionary where the keys are the file names and the values are true/false."
  },
  "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.AzureCosmosDBCodeSessionService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.AzureCosmosDBCodeSessionService.html",
    "title": "Class AzureCosmosDBCodeSessionService | FoundationaLLM",
    "summary": "Class AzureCosmosDBCodeSessionService Namespace FoundationaLLM.Context.Services.CosmosDB Assembly FoundationaLLM.ContextEngine.dll Provides the implementation for the Azure Cosmos DB code session service. public class AzureCosmosDBCodeSessionService : IAzureCosmosDBCodeSessionService Inheritance object AzureCosmosDBCodeSessionService Implements IAzureCosmosDBCodeSessionService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBCodeSessionService(IAzureCosmosDBServiceBase, ILogger<AzureCosmosDBCodeSessionService>) Provides the implementation for the Azure Cosmos DB code session service. public AzureCosmosDBCodeSessionService(IAzureCosmosDBServiceBase azureCosmosDBServiceBase, ILogger<AzureCosmosDBCodeSessionService> logger) Parameters azureCosmosDBServiceBase IAzureCosmosDBServiceBase The Azure Cosmos DB service that provides core database services. logger ILogger<AzureCosmosDBCodeSessionService> The ILogger used for logging. Methods GetCodeSessionFileUploadRecord(string, string, string, string) Gets a code session file upload record from the Azure Cosmos DB. public Task<ContextCodeSessionFileUploadRecord?> GetCodeSessionFileUploadRecord(string instanceId, string sessionId, string operationId, string userPrincipalName) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session. operationId string The identifier of the code session file upload record. userPrincipalName string The user principal name of the user associated with the code session file upload. Returns Task<ContextCodeSessionFileUploadRecord> The requested code session file upload record. GetCodeSessionRecord(string, string, string) Gets a code session record from the Azure Cosmos DB. public Task<ContextCodeSessionRecord?> GetCodeSessionRecord(string instanceId, string sessionId, string userPrincipalName) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The identifier of the code session. userPrincipalName string The user principal name of the user associated with the code session. Returns Task<ContextCodeSessionRecord> The requests code session record. UpsertCodeSessionFileUploadRecord(ContextCodeSessionFileUploadRecord) Upserts a code session file upload record in the Azure Cosmos DB. public Task UpsertCodeSessionFileUploadRecord(ContextCodeSessionFileUploadRecord codeSessionFileUploadRecord) Parameters codeSessionFileUploadRecord ContextCodeSessionFileUploadRecord The code session file upload record to be upserted. Returns Task UpsertCodeSessionRecord(ContextCodeSessionRecord) Upserts a code session record in the Azure Cosmos DB. public Task UpsertCodeSessionRecord(ContextCodeSessionRecord codeSessionRecord) Parameters codeSessionRecord ContextCodeSessionRecord The code session record to be upserted. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.AzureCosmosDBFileService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.AzureCosmosDBFileService.html",
    "title": "Class AzureCosmosDBFileService | FoundationaLLM",
    "summary": "Class AzureCosmosDBFileService Namespace FoundationaLLM.Context.Services.CosmosDB Assembly FoundationaLLM.ContextEngine.dll Provides the implementation for the Azure Cosmos DB file service. public class AzureCosmosDBFileService : IAzureCosmosDBFileService Inheritance object AzureCosmosDBFileService Implements IAzureCosmosDBFileService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBFileService(IAzureCosmosDBServiceBase, ILogger<AzureCosmosDBFileService>) Provides the implementation for the Azure Cosmos DB file service. public AzureCosmosDBFileService(IAzureCosmosDBServiceBase azureCosmosDBServiceBase, ILogger<AzureCosmosDBFileService> logger) Parameters azureCosmosDBServiceBase IAzureCosmosDBServiceBase The Azure Cosmos DB service that provides core database services. logger ILogger<AzureCosmosDBFileService> The ILogger used for logging. Methods GetFileRecord(string, string, string, bool) Gets the file record for a specified file identifier. public Task<ContextFileRecord> GetFileRecord(string instanceId, string fileId, string userPrincipalName, bool bypassOwnerCheck) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The idenfier of the file. userPrincipalName string The user principal name of the user associated with the code session. bypassOwnerCheck bool Indicates whether to bypass the owner check for the file record. Returns Task<ContextFileRecord> GetFileRecords(string, string, string, string, bool) Gets the file records matching the specified criteria. public Task<List<ContextFileRecord>> GetFileRecords(string instanceId, string conversationId, string fileName, string userPrincipalName, bool bypassOwnerCheck) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The idenfier of the conversation to which the file is associated. fileName string The name of the file. userPrincipalName string The user principal name of the user associated with the code session. bypassOwnerCheck bool Indicates whether to bypass the owner check for the file records. Returns Task<List<ContextFileRecord>> UpsertFileRecord(ContextFileRecord) Upserts a file record in the Azure Cosmos DB. public Task UpsertFileRecord(ContextFileRecord fileRecord) Parameters fileRecord ContextFileRecord The file record to be upserted. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.AzureCosmosDBServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.AzureCosmosDBServiceBase.html",
    "title": "Class AzureCosmosDBServiceBase | FoundationaLLM",
    "summary": "Class AzureCosmosDBServiceBase Namespace FoundationaLLM.Context.Services.CosmosDB Assembly FoundationaLLM.ContextEngine.dll Provides the base implementation for the Azure Cosmos DB services. public class AzureCosmosDBServiceBase : IAzureCosmosDBServiceBase Inheritance object AzureCosmosDBServiceBase Implements IAzureCosmosDBServiceBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBServiceBase(IOptions<AzureCosmosDBSettings>, ILogger<AzureCosmosDBServiceBase>) Initializes a new instance of the AzureCosmosDBServiceBase class. public AzureCosmosDBServiceBase(IOptions<AzureCosmosDBSettings> options, ILogger<AzureCosmosDBServiceBase> logger) Parameters options IOptions<AzureCosmosDBSettings> The IOptions providing the AzureCosmosDBSettings) with the Azure Cosmos DB settings. logger ILogger<AzureCosmosDBServiceBase> The ILogger used for logging. Fields _contextContainer protected readonly Container _contextContainer Field Value Container _cosmosClient protected readonly CosmosClient _cosmosClient Field Value CosmosClient _logger protected readonly ILogger<AzureCosmosDBServiceBase> _logger Field Value ILogger<AzureCosmosDBServiceBase> _settings protected readonly AzureCosmosDBSettings _settings Field Value AzureCosmosDBSettings Properties ContextContainer Gets the context container for the Azure Cosmos DB service. public Container ContextContainer { get; } Property Value Container Methods RetrieveItems<T>(QueryDefinition) Retrieves items from Azure Cosmos DB. public Task<List<T>> RetrieveItems<T>(QueryDefinition query) Parameters query QueryDefinition The query definition used to retrieve the items. Returns Task<List<T>> The list of retrieved items. Type Parameters T The type of item to retrieve. UpsertItemAsync<T>(string, T, CancellationToken) Upserts an item in Azure Cosmos DB. public Task<T> UpsertItemAsync<T>(string partitionKey, T item, CancellationToken cancellationToken = default) Parameters partitionKey string The partition of the item to upsert. item T The item to upsert. cancellationToken CancellationToken The cancellation token used to signal a cancellation request. Returns Task<T> The upserted item. Type Parameters T The type of the item to upsert."
  },
  "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.CosmosDB.html",
    "title": "Namespace FoundationaLLM.Context.Services.CosmosDB | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Services.CosmosDB Classes AzureCosmosDBCodeSessionService Provides the implementation for the Azure Cosmos DB code session service. AzureCosmosDBFileService Provides the implementation for the Azure Cosmos DB file service. AzureCosmosDBServiceBase Provides the base implementation for the Azure Cosmos DB services."
  },
  "api/dotnet/FoundationaLLM.Context.Services.FileService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.FileService.html",
    "title": "Class FileService | FoundationaLLM",
    "summary": "Class FileService Namespace FoundationaLLM.Context.Services Assembly FoundationaLLM.ContextEngine.dll Provides the implementation for the FoundationaLLM File service. public class FileService : IFileService Inheritance object FileService Implements IFileService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors FileService(IAzureCosmosDBFileService, IStorageService, IAuthorizationServiceClient, FileServiceSettings, ILogger<FileService>) Provides the implementation for the FoundationaLLM File service. public FileService(IAzureCosmosDBFileService cosmosDBService, IStorageService storageService, IAuthorizationServiceClient authorizationServiceClient, FileServiceSettings settings, ILogger<FileService> logger) Parameters cosmosDBService IAzureCosmosDBFileService The Azure Cosmos DB service providing database services. storageService IStorageService The IStorageService providing storage services. authorizationServiceClient IAuthorizationServiceClient The client for the FoundationaLLM Authorization API. settings FileServiceSettings logger ILogger<FileService> The logger used for logging. Methods CreateFile(string, string, string, string, string, Stream, UnifiedUserIdentity, Dictionary<string, string>?) Create a new file. public Task<ContextFileRecord> CreateFile(string instanceId, string origin, string conversationId, string fileName, string contentType, Stream content, UnifiedUserIdentity userIdentity, Dictionary<string, string>? metadata) Parameters instanceId string The FoundationaLLM instance identifier. origin string The origin of the file. conversationId string The conversation identifier. fileName string The original name of the file. contentType string The content type of the file. content Stream The Stream providing the raw content of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. metadata Dictionary<string, string> Optional metadata dictionary associated with the file. Returns Task<ContextFileRecord> A ContextFileRecord instance with details about the newly created file. GetFileContent(string, string, UnifiedUserIdentity) Get the binary content of a file. public Task<ContextFileContent?> GetFileContent(string instanceId, string fileId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The identifier of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Returns Task<ContextFileContent> A ContextFileContent instance with the content of the file. GetFileContent(string, string, string, UnifiedUserIdentity) Get the binary content of a file. public Task<ContextFileContent?> GetFileContent(string instanceId, string conversationId, string fileName, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. conversationId string The conversation identifier. fileName string The name of the file to retrieve. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Returns Task<ContextFileContent> A ContextFileContent instance with the content of the file. GetFileRecord(string, string, UnifiedUserIdentity) Get the file record associated with a file. public Task<ContextFileRecord?> GetFileRecord(string instanceId, string fileId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. fileId string The identifier of the file. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing details about the user identity. Returns Task<ContextFileRecord> A ContextFileRecord with the file record. ShouldBypassOwnerCheck(string, UnifiedUserIdentity) public Task<bool> ShouldBypassOwnerCheck(string instanceId, UnifiedUserIdentity userIdentity) Parameters instanceId string userIdentity UnifiedUserIdentity Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Context.Services.KnowledgeService.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.KnowledgeService.html",
    "title": "Class KnowledgeService | FoundationaLLM",
    "summary": "Class KnowledgeService Namespace FoundationaLLM.Context.Services Assembly FoundationaLLM.ContextEngine.dll Provides the implementation for the FoundationaLLM Knowledge Graph service. public class KnowledgeService : IKnowledgeService Inheritance object KnowledgeService Implements IKnowledgeService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeService(IStorageService, IAuthorizationServiceClient, IResourceProviderService, IResourceProviderService, IHttpClientFactoryService, KnowledgeServiceSettings, ILoggerFactory) Provides the implementation for the FoundationaLLM Knowledge Graph service. public KnowledgeService(IStorageService storageService, IAuthorizationServiceClient authorizationServiceClient, IResourceProviderService configurationResourceProvider, IResourceProviderService vectorResourceProvider, IHttpClientFactoryService httpClientFactory, KnowledgeServiceSettings settings, ILoggerFactory loggerFactory) Parameters storageService IStorageService The IStorageService providing storage services. authorizationServiceClient IAuthorizationServiceClient The client for the FoundationaLLM Authorization API. configurationResourceProvider IResourceProviderService The FoundationaLLM.Configuration resource provider service. vectorResourceProvider IResourceProviderService The FoundationaLLM.Vector resource provider service. httpClientFactory IHttpClientFactoryService The factory for creating HTTP clients. settings KnowledgeServiceSettings The settings for the Knowledge Graph service. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetKnowledgeSources(string, ContextKnowledgeSourceListRequest, UnifiedUserIdentity) Retrieves the list of knowledge sources. public Task<IEnumerable<KnowledgeSource>> GetKnowledgeSources(string instanceId, ContextKnowledgeSourceListRequest listRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. listRequest ContextKnowledgeSourceListRequest The request containing the information used to filter the knowledge sources. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task<IEnumerable<KnowledgeSource>> QueryKnowledgeSource(string, string, ContextKnowledgeSourceQueryRequest, UnifiedUserIdentity) Queries a knowledge source. public Task<ContextKnowledgeSourceQueryResponse> QueryKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest queryRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request containing the details of the query. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task<ContextKnowledgeSourceQueryResponse> RenderKnowledgeSourceGraph(string, string, ContextKnowledgeSourceQueryRequest?, UnifiedUserIdentity) Retrieves the knowledge source's knowledge graph in a format suitable for visualization or further processing. public Task<ContextKnowledgeSourceRenderGraphResponse> RenderKnowledgeSourceGraph(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceQueryRequest? queryRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source identifier. queryRequest ContextKnowledgeSourceQueryRequest The request containing the details of the query. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task<ContextKnowledgeSourceRenderGraphResponse> UpdateKnowledgeSource(string, string, ContextKnowledgeSourceUpdateRequest, UnifiedUserIdentity) Updates a knowledge source. public Task UpdateKnowledgeSource(string instanceId, string knowledgeSourceId, ContextKnowledgeSourceUpdateRequest updateRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. knowledgeSourceId string The knowledge source+ identifier. updateRequest ContextKnowledgeSourceUpdateRequest The request containing the information to update the knowledge source. userIdentity UnifiedUserIdentity The identity of the security principal submitting the request. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Context.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Services.html",
    "title": "Namespace FoundationaLLM.Context.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Services Namespaces FoundationaLLM.Context.Services.CosmosDB Classes AzureContainerAppsCodeInterpreterService Provides a code session service that uses Azure Container Apps Dynamic Sessions to execute code. AzureContainerAppsCustomContainerService Provides a code session service that uses Azure Container Apps Dynamic Sessions to execute code. AzureContainerAppsServiceBase Base class for Azure Container Apps Dynamic Sessions services. CodeSessionService Implements the FoundationaLLM Code Session service. FileService Provides the implementation for the FoundationaLLM File service. KnowledgeService Provides the implementation for the FoundationaLLM Knowledge Graph service."
  },
  "api/dotnet/FoundationaLLM.Context.Validation.KnowledgeSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Validation.KnowledgeSourceValidator.html",
    "title": "Class KnowledgeSourceValidator | FoundationaLLM",
    "summary": "Class KnowledgeSourceValidator Namespace FoundationaLLM.Context.Validation Assembly FoundationaLLM.Context.dll Provides validation methods for knowledge source objects. public class KnowledgeSourceValidator : AbstractValidator<KnowledgeSource>, IValidator<KnowledgeSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<KnowledgeSource> KnowledgeSourceValidator Implements IValidator<KnowledgeSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<KnowledgeSource>.Validate(KnowledgeSource) AbstractValidator<KnowledgeSource>.ValidateAsync(KnowledgeSource, CancellationToken) AbstractValidator<KnowledgeSource>.Validate(ValidationContext<KnowledgeSource>) AbstractValidator<KnowledgeSource>.ValidateAsync(ValidationContext<KnowledgeSource>, CancellationToken) AbstractValidator<KnowledgeSource>.CreateDescriptor() AbstractValidator<KnowledgeSource>.RuleFor<TProperty>(Expression<Func<KnowledgeSource, TProperty>>) AbstractValidator<KnowledgeSource>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<KnowledgeSource>.Transform<TProperty, TTransformed>(Expression<Func<KnowledgeSource, TProperty>>, Func<KnowledgeSource, TProperty, TTransformed>) AbstractValidator<KnowledgeSource>.RuleForEach<TElement>(Expression<Func<KnowledgeSource, IEnumerable<TElement>>>) AbstractValidator<KnowledgeSource>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<KnowledgeSource>.TransformForEach<TElement, TTransformed>(Expression<Func<KnowledgeSource, IEnumerable<TElement>>>, Func<KnowledgeSource, TElement, TTransformed>) AbstractValidator<KnowledgeSource>.RuleSet(string, Action) AbstractValidator<KnowledgeSource>.When(Func<KnowledgeSource, bool>, Action) AbstractValidator<KnowledgeSource>.When(Func<KnowledgeSource, ValidationContext<KnowledgeSource>, bool>, Action) AbstractValidator<KnowledgeSource>.Unless(Func<KnowledgeSource, bool>, Action) AbstractValidator<KnowledgeSource>.Unless(Func<KnowledgeSource, ValidationContext<KnowledgeSource>, bool>, Action) AbstractValidator<KnowledgeSource>.WhenAsync(Func<KnowledgeSource, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeSource>.WhenAsync(Func<KnowledgeSource, ValidationContext<KnowledgeSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeSource>.UnlessAsync(Func<KnowledgeSource, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeSource>.UnlessAsync(Func<KnowledgeSource, ValidationContext<KnowledgeSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<KnowledgeSource>.Include(IValidator<KnowledgeSource>) AbstractValidator<KnowledgeSource>.Include<TValidator>(Func<KnowledgeSource, TValidator>) AbstractValidator<KnowledgeSource>.GetEnumerator() AbstractValidator<KnowledgeSource>.EnsureInstanceNotNull(object) AbstractValidator<KnowledgeSource>.PreValidate(ValidationContext<KnowledgeSource>, ValidationResult) AbstractValidator<KnowledgeSource>.RaiseValidationException(ValidationContext<KnowledgeSource>, ValidationResult) AbstractValidator<KnowledgeSource>.OnRuleAdded(IValidationRule<KnowledgeSource>) AbstractValidator<KnowledgeSource>.CascadeMode AbstractValidator<KnowledgeSource>.ClassLevelCascadeMode AbstractValidator<KnowledgeSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeSourceValidator() Configures the validation rules for the KnowledgeSource model. public KnowledgeSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.Context.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Context.Validation.html",
    "title": "Namespace FoundationaLLM.Context.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context.Validation Classes KnowledgeSourceValidator Provides validation methods for knowledge source objects."
  },
  "api/dotnet/FoundationaLLM.Context.html": {
    "href": "api/dotnet/FoundationaLLM.Context.html",
    "title": "Namespace FoundationaLLM.Context | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Context Namespaces FoundationaLLM.Context.API.Controllers FoundationaLLM.Context.Constants FoundationaLLM.Context.Exceptions FoundationaLLM.Context.Interfaces FoundationaLLM.Context.Models FoundationaLLM.Context.ResourceProviders FoundationaLLM.Context.Services FoundationaLLM.Context.Validation"
  },
  "api/dotnet/FoundationaLLM.Conversation.ResourceProviders.ConversationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Conversation.ResourceProviders.ConversationResourceProviderService.html",
    "title": "Class ConversationResourceProviderService | FoundationaLLM",
    "summary": "Class ConversationResourceProviderService Namespace FoundationaLLM.Conversation.ResourceProviders Assembly FoundationaLLM.Conversation.dll Implements the FoundationaLLM.Conversation resource provider. public class ConversationResourceProviderService : ResourceProviderServiceBase<ResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<ResourceReference> ConversationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<ResourceReference>._resourceReferenceStore ResourceProviderServiceBase<ResourceReference>._serviceProvider ResourceProviderServiceBase<ResourceReference>._authorizationServiceClient ResourceProviderServiceBase<ResourceReference>._storageService ResourceProviderServiceBase<ResourceReference>._eventService ResourceProviderServiceBase<ResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<ResourceReference>._validator ResourceProviderServiceBase<ResourceReference>._logger ResourceProviderServiceBase<ResourceReference>._instanceSettings ResourceProviderServiceBase<ResourceReference>._storageContainerName ResourceProviderServiceBase<ResourceReference>._serializerSettings ResourceProviderServiceBase<ResourceReference>.Name ResourceProviderServiceBase<ResourceReference>.IsInitialized ResourceProviderServiceBase<ResourceReference>.InitializationTask ResourceProviderServiceBase<ResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<ResourceReference>.StorageAccountName ResourceProviderServiceBase<ResourceReference>.StorageContainerName ResourceProviderServiceBase<ResourceReference>.Initialize() ResourceProviderServiceBase<ResourceReference>.WaitForInitialization() ResourceProviderServiceBase<ResourceReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync(ResourcePath, string, ResourceProviderFormFile, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<ResourceReference>.HandleCacheResetCommand() ResourceProviderServiceBase<ResourceReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderState() ResourceProviderServiceBase<ResourceReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(ResourceReference) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<ResourceReference>.CreateResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.CreateResource(ResourceReference, Stream, string) ResourceProviderServiceBase<ResourceReference>.CreateResources<T1, T2>(ResourceReference, T1, ResourceReference, T2) ResourceProviderServiceBase<ResourceReference>.SaveResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<ResourceReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<ResourceReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<ResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<ResourceReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConversationResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IEventService, IResourceValidatorFactory, IAzureCosmosDBService, IServiceProvider, ILogger<ConversationResourceProviderService>) Implements the FoundationaLLM.Conversation resource provider. public ConversationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IAzureCosmosDBService cosmosDBService, IServiceProvider serviceProvider, ILogger<ConversationResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService providing Cosmos DB services. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<ConversationResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) where T : ResourceBase Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task Type Parameters T The type of the resource being deleted. Exceptions NotImplementedException GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object?>, UnifiedUserIdentity) The internal implementation of UpdateResourcePropertiesAsync. Must be overridden in derived classes. protected override Task<TResult> UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, Dictionary<string, object?> propertyValues, UnifiedUserIdentity userIdentity) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath The ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. propertyValues Dictionary<string, object> The dictionary with propery names and values to update. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TResult> Type Parameters T The type of the resource being updated. TResult The type of the result returned. UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.Conversation.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Conversation.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Conversation.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Conversation.ResourceProviders Classes ConversationResourceProviderService Implements the FoundationaLLM.Conversation resource provider."
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.BrandingController.html",
    "title": "Class BrandingController | FoundationaLLM",
    "summary": "Class BrandingController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides branding information for the client. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class BrandingController : ControllerBase Inheritance object ControllerBase BrandingController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors BrandingController(string, IOptions<ClientBrandingConfiguration>) Constructor for the Branding Controller. public BrandingController(string instanceId, IOptions<ClientBrandingConfiguration> settings) Parameters instanceId string The instance ID. settings IOptions<ClientBrandingConfiguration> The branding settings. Methods Index(string) Retrieves the branding information for the client. [AllowAnonymous] [HttpGet(Name = \"GetBranding\")] public IActionResult Index(string instanceId) Parameters instanceId string The instance ID. Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "summary": "Class CompletionsController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing completions. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [Authorize(AuthenticationSchemes = \"AgentAccessToken\", Policy = \"FoundationaLLMAgentAccessToken\")] [ApiController] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Completions Controller. Constructors CompletionsController(ICoreService, IOrchestrationContext, IEnumerable<IResourceProviderService>, IQuotaService, ILogger<CompletionsController>) Methods for orchestration services exposed by the Gatekeeper API service. public CompletionsController(ICoreService coreService, IOrchestrationContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, IQuotaService quotaService, ILogger<CompletionsController> logger) Parameters coreService ICoreService The Core service provides methods for getting completions from the orchestrator. callContext IOrchestrationContext The call context for the request. resourceProviderServices IEnumerable<IResourceProviderService> The list of IResourceProviderService resource provider services. quotaService IQuotaService The quota service. logger ILogger<CompletionsController> The logging interface used to log under the CompletionsController type name. Remarks Constructor for the Orchestration Controller. Methods GetAgents(string) Retrieves a list of global and private agents. [HttpGet(\"completions/agents\", Name = \"GetAgents\")] public Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> GetAgents(string instanceId) Parameters instanceId string The instance ID of the current request. Returns Task<IEnumerable<ResourceProviderGetResult<AgentBase>>> A list of available agents. GetCompletion(string, CompletionRequest) Requests a completion from the downstream APIs. [HttpPost(\"completions\", Name = \"GetCompletion\")] public Task<IActionResult> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The instance ID of the current request. completionRequest CompletionRequest The user prompt for which to generate a completion. Returns Task<IActionResult> StartCompletionOperation(string, CompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.CompletionsStatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.CompletionsStatusController.html",
    "title": "Class CompletionsStatusController | FoundationaLLM",
    "summary": "Class CompletionsStatusController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing completions. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [Authorize(AuthenticationSchemes = \"AgentAccessToken\", Policy = \"FoundationaLLMAgentAccessToken\")] [ApiController] [Route(\"instances/{instanceId}\")] public class CompletionsStatusController : ControllerBase Inheritance object ControllerBase CompletionsStatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Completions Controller. Constructors CompletionsStatusController(ICoreService, IOrchestrationContext, IEnumerable<IResourceProviderService>, IQuotaService, ILogger<CompletionsController>) Methods for orchestration services exposed by the Gatekeeper API service. public CompletionsStatusController(ICoreService coreService, IOrchestrationContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, IQuotaService quotaService, ILogger<CompletionsController> logger) Parameters coreService ICoreService The Core service provides methods for getting completions from the orchestrator. callContext IOrchestrationContext The call context for the request. resourceProviderServices IEnumerable<IResourceProviderService> The list of IResourceProviderService resource provider services. quotaService IQuotaService The quota service. logger ILogger<CompletionsController> The logging interface used to log under the CompletionsController type name. Remarks Constructor for the Orchestration Controller. Methods GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns a LongRunningOperation object containing the OperationId, Status, and result."
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.ConfigurationController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.ConfigurationController.html",
    "title": "Class ConfigurationController | FoundationaLLM",
    "summary": "Class ConfigurationController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing configuration. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class ConfigurationController : ControllerBase Inheritance object ControllerBase ConfigurationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ConfigurationController(IOrchestrationContext, IOptions<InstanceSettings>, ICoreService, ILogger<FilesController>) The controller for managing files. public ConfigurationController(IOrchestrationContext callContext, IOptions<InstanceSettings> instanceOptions, ICoreService coreService, ILogger<FilesController> logger) Parameters callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. coreService ICoreService The ICoreService core service. logger ILogger<FilesController> Exceptions ResourceProviderException Methods GetCoreConfiguration(string) Returns the core configuration. [HttpGet] public Task<IActionResult> GetCoreConfiguration(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.FilesController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.FilesController.html",
    "title": "Class FilesController | FoundationaLLM",
    "summary": "Class FilesController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing files. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [Authorize(AuthenticationSchemes = \"AgentAccessToken\", Policy = \"FoundationaLLMAgentAccessToken\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class FilesController : ControllerBase Inheritance object ControllerBase FilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors FilesController(IOrchestrationContext, IOptions<InstanceSettings>, ICoreService, ILogger<FilesController>) The controller for managing files. public FilesController(IOrchestrationContext callContext, IOptions<InstanceSettings> instanceOptions, ICoreService coreService, ILogger<FilesController> logger) Parameters callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. coreService ICoreService The ICoreService core service. logger ILogger<FilesController> Exceptions ResourceProviderException Methods Delete(string, List<string>) Deletes the specified file(s). [HttpPost(\"delete\")] public Task<IActionResult> Delete(string instanceId, List<string> resourcePaths) Parameters instanceId string The instance ID. resourcePaths List<string> The list of object identifiers to be deleted. Returns Task<IActionResult> Download(string, string, string) Downloads a file. [HttpGet(\"{fileProvider}/{fileId}\")] public Task<IActionResult> Download(string instanceId, string fileProvider, string fileId) Parameters instanceId string The instance ID. fileProvider string The name of the file provider. fileId string The identifier of the file. Returns Task<IActionResult> The file content. Remarks The following file providers are supported: FoundationaLLM.Attachments FoundationaLLM.AzureOpenAI Upload(string, string, string, IFormFile) Uploads an attachment. [HttpPost(\"upload\")] public Task<IActionResult> Upload(string instanceId, string sessionId, string agentName, IFormFile file) Parameters instanceId string The instance ID. sessionId string The session ID from which the file is uploaded. agentName string The agent name. file IFormFile The file sent with the HTTP request. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.OneDriveWorkSchoolController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.OneDriveWorkSchoolController.html",
    "title": "Class OneDriveWorkSchoolController | FoundationaLLM",
    "summary": "Class OneDriveWorkSchoolController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for OneDrive integration. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class OneDriveWorkSchoolController : ControllerBase Inheritance object ControllerBase OneDriveWorkSchoolController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OneDriveWorkSchoolController(IOrchestrationContext, IOneDriveWorkSchoolService) The controller for OneDrive integration. public OneDriveWorkSchoolController(IOrchestrationContext callContext, IOneDriveWorkSchoolService oneDriveWorkSchoolService) Parameters callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. oneDriveWorkSchoolService IOneDriveWorkSchoolService The IOneDriveWorkSchoolService OneDrive service. Exceptions ResourceProviderException Methods Connect(string) Connects to user's OneDrive work or school account. [HttpPost(\"connect\")] public Task<IActionResult> Connect(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns Task<IActionResult> Disconnect(string) Disconnect from user's OneDrive work or school account. [HttpPost(\"disconnect\")] public Task<IActionResult> Disconnect(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns Task<IActionResult> Download(string, string, string, OneDriveWorkSchoolItem) Downloads a file from the user's connected OneDrive work or school account. [HttpPost(\"download\")] public Task<IActionResult> Download(string instanceId, string sessionId, string agentName, OneDriveWorkSchoolItem oneDriveWorkSchool) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The session ID from which the file is uploaded. agentName string The agent name. oneDriveWorkSchool OneDriveWorkSchoolItem The OneDrive work or school item. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.SessionsController.html",
    "title": "Class SessionsController | FoundationaLLM",
    "summary": "Class SessionsController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing sessions. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [Authorize(AuthenticationSchemes = \"AgentAccessToken\", Policy = \"FoundationaLLMAgentAccessToken\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class SessionsController : ControllerBase Inheritance object ControllerBase SessionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Sessions Controller. Constructors SessionsController(ICoreService, ILogger<SessionsController>) Provides methods for retrieving and managing sessions. public SessionsController(ICoreService coreService, ILogger<SessionsController> logger) Parameters coreService ICoreService The Core service provides methods for managing chat sessions and messages, and for getting completions from the orchestrator. logger ILogger<SessionsController> The logging interface used to log under the SessionsController type name. Remarks Constructor for the Sessions Controller. Methods CreateNewChatSession(string, ChatSessionProperties) Creates a new chat session. [HttpPost(Name = \"CreateNewChatSession\")] public Task<Conversation> CreateNewChatSession(string instanceId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The id of the instance. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Conversation> DeleteChatSession(string, string) Delete a chat session and related messages. [HttpDelete(\"{sessionId}\", Name = \"DeleteChatSession\")] public Task DeleteChatSession(string instanceId, string sessionId) Parameters instanceId string The id of the instance. sessionId string The session id to delete. Returns Task GetAllChatSessions(string) Returns list of chat session ids and names. [HttpGet(Name = \"GetAllChatSessions\")] public Task<IEnumerable<Conversation>> GetAllChatSessions(string instanceId) Parameters instanceId string The id of the instance. Returns Task<IEnumerable<Conversation>> GetChatSessionMessages(string, string) Returns the chat messages related to an existing session. [HttpGet(\"{sessionId}/messages\", Name = \"GetChatSessionMessages\")] public Task<IEnumerable<Message>> GetChatSessionMessages(string instanceId, string sessionId) Parameters instanceId string The id of the instance. sessionId string The id of the session for which to retrieve chat messages. Returns Task<IEnumerable<Message>> GetCompletionPrompt(string, string, string) Returns the completion prompt for a given session and completion prompt id. [HttpGet(\"{sessionId}/completionprompts/{completionPromptId}\", Name = \"GetCompletionPrompt\")] public Task<CompletionPrompt> GetCompletionPrompt(string instanceId, string sessionId, string completionPromptId) Parameters instanceId string The id of the instance. sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> RateMessage(string, string, string, MessageRatingRequest) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. [HttpPost(\"{sessionId}/message/{messageId}/rate\", Name = \"RateMessage\")] public Task RateMessage(string instanceId, string messageId, string sessionId, MessageRatingRequest ratingRequest) Parameters instanceId string The id of the instance. messageId string The id of the message to rate. sessionId string The id of the session to which the message belongs. ratingRequest MessageRatingRequest The rating and optional comments to assign to the message. Returns Task RenameChatSession(string, string, ChatSessionProperties) Rename the chat session. [HttpPost(\"{sessionId}/rename\", Name = \"RenameChatSession\")] public Task<Conversation> RenameChatSession(string instanceId, string sessionId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The id of the instance. sessionId string The id of the session to rename. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Conversation>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for checking the status of the service. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus(string) Returns OK if the requester is authenticated and allowed to execute requests against this service. [HttpGet(\"auth\", Name = \"GetAuthStatus\")] public IActionResult GetAuthStatus(string instanceId) Parameters instanceId string The id of the instance. Returns IActionResult GetServiceStatus(string) Returns the status of the Core API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus(string instanceId) Parameters instanceId string The id of the instance. Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.UserProfilesController.html",
    "title": "Class UserProfilesController | FoundationaLLM",
    "summary": "Class UserProfilesController Namespace FoundationaLLM.Core.API.Controllers Assembly FoundationaLLM.Core.API.dll Provides methods for retrieving and managing user profiles. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class UserProfilesController : ControllerBase Inheritance object ControllerBase UserProfilesController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the UserProfiles Controller. Constructors UserProfilesController(IUserProfileService) Provides methods for retrieving and managing user profiles. public UserProfilesController(IUserProfileService userProfileService) Parameters userProfileService IUserProfileService Service that provides methods for managing the user profile. Remarks Constructor for the UserProfiles Controller. Methods Index(string) Retrieves user profiles. [HttpGet(Name = \"GetUserProfile\")] public Task<IActionResult> Index(string instanceId) Parameters instanceId string The instance identifier. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Core.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Core.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.API.Controllers Classes BrandingController Provides branding information for the client. CompletionsController Provides methods for retrieving and managing completions. CompletionsStatusController Provides methods for retrieving and managing completions. ConfigurationController Provides methods for retrieving and managing configuration. FilesController Provides methods for retrieving and managing files. OneDriveWorkSchoolController Provides methods for OneDrive integration. SessionsController Provides methods for retrieving and managing sessions. StatusController Provides methods for checking the status of the service. UserProfilesController Provides methods for retrieving and managing user profiles."
  },
  "api/dotnet/FoundationaLLM.Core.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "summary": "Class Program Namespace FoundationaLLM.Core.API Assembly FoundationaLLM.Core.API.dll Main entry point for the Core API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Core API service configuration. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Core.API.html": {
    "href": "api/dotnet/FoundationaLLM.Core.API.html",
    "title": "Namespace FoundationaLLM.Core.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.API Namespaces FoundationaLLM.Core.API.Controllers Classes Program Main entry point for the Core API."
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICoreService.html",
    "title": "Interface ICoreService | FoundationaLLM",
    "summary": "Interface ICoreService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. public interface ICoreService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateConversationAsync(string, ChatSessionProperties) Creates a new chat session. Task<Conversation> CreateConversationAsync(string instanceId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance Id. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Conversation> DeleteAttachments(string, List<string>) Deletes one or more attachments. Task<Dictionary<string, ResourceProviderDeleteResult?>> DeleteAttachments(string instanceId, List<string> resourcePaths) Parameters instanceId string The FoundationaLLM instance id. resourcePaths List<string> The list of resources to be deleted. Returns Task<Dictionary<string, ResourceProviderDeleteResult>> A dictionary with the delete operation result for each resource path. DeleteConversationAsync(string, string) Delete a chat session and related messages. Task DeleteConversationAsync(string instanceId, string sessionId) Parameters instanceId string The instance id. sessionId string The session id to delete. Returns Task DownloadAttachment(string, string, string) Downloads an attachment. Task<AttachmentFile?> DownloadAttachment(string instanceId, string fileProvider, string fileId) Parameters instanceId string The FoundationaLLM instance id. fileProvider string The name of the file provider. fileId string The identifier of the file. Returns Task<AttachmentFile> An AttachmentFile object with the properties and the content of the attachment. Remarks The following file providers are supported: FoundationaLLM.Attachments FoundationaLLM.AzureOpenAI GetAllConversationsAsync(string) Returns list of chat session ids and names. Task<List<Conversation>> GetAllConversationsAsync(string instanceId) Parameters instanceId string The instance id for which to retrieve chat sessions. Returns Task<List<Conversation>> GetChatCompletionAsync(string, CompletionRequest) Receive a prompt from a user, retrieve the message history from the related session, generate a completion response, and log full completion results. Task<Message> GetChatCompletionAsync(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The instance id. completionRequest CompletionRequest The completion request. Returns Task<Message> GetChatSessionMessagesAsync(string, string) Returns the chat messages related to an existing session. Task<List<Message>> GetChatSessionMessagesAsync(string instanceId, string sessionId) Parameters instanceId string The instance id for which to retrieve chat messages. sessionId string The session id for which to retrieve chat messages. Returns Task<List<Message>> GetCompletionAsync(string, CompletionRequest) Provides a completion for a user prompt, without a session. Task<Message> GetCompletionAsync(string instanceId, CompletionRequest directCompletionRequest) Parameters instanceId string The instance id. directCompletionRequest CompletionRequest The completion request. Returns Task<Message> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns a LongRunningOperation object containing the OperationId, Status, and result. GetCompletionPrompt(string, string, string) Returns the completion prompt for a given session and completion prompt id. Task<CompletionPrompt> GetCompletionPrompt(string instanceId, string sessionId, string completionPromptId) Parameters instanceId string The instance Id. sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetCoreConfiguration(string) Gets the file store configuration for the given instance. Task<CoreConfiguration> GetCoreConfiguration(string instanceId) Parameters instanceId string The FoundationaLLM instance id. Returns Task<CoreConfiguration> The file store configuration. RateMessageAsync(string, string, string, MessageRatingRequest) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. Task RateMessageAsync(string instanceId, string id, string sessionId, MessageRatingRequest rating) Parameters instanceId string The instance id. id string The message id to rate. sessionId string The session id to which the message belongs. rating MessageRatingRequest The rating and optional comments to assign to the message. Returns Task RenameConversationAsync(string, string, ChatSessionProperties) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. Task<Conversation> RenameConversationAsync(string instanceId, string sessionId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance id. sessionId string The session id to rename. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Conversation> StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. UploadAttachment(string, string, AttachmentFile, string) Uploads an attachment. Task<ResourceProviderUpsertResult<AttachmentFile>> UploadAttachment(string instanceId, string sessionId, AttachmentFile attachmentFile, string agentName) Parameters instanceId string The FoundationaLLM instance id. sessionId string The session id from which the attachment is uploaded. attachmentFile AttachmentFile The AttachmentFile object containing the attachment file data. agentName string The name of the agent. Returns Task<ResourceProviderUpsertResult<AttachmentFile>> A ResourceProviderUpsertResult<T> object with the FoundationaLLM.Attachment resource provider object id."
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.ICosmosDbChangeFeedService.html",
    "title": "Interface ICosmosDbChangeFeedService | FoundationaLLM",
    "summary": "Interface ICosmosDbChangeFeedService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains Azure Cosmos DB change feed methods. public interface ICosmosDbChangeFeedService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IsInitialized Indicates whether the Azure Cosmos DB change feed is initialized. bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IGatekeeperAPIService.html",
    "title": "Interface IGatekeeperAPIService | FoundationaLLM",
    "summary": "Interface IGatekeeperAPIService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public interface IGatekeeperAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(string, CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.IOneDriveWorkSchoolService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.IOneDriveWorkSchoolService.html",
    "title": "Interface IOneDriveWorkSchoolService | FoundationaLLM",
    "summary": "Interface IOneDriveWorkSchoolService Namespace FoundationaLLM.Core.Interfaces Assembly FoundationaLLM.Core.dll Interface for OneDrive integration. public interface IOneDriveWorkSchoolService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Connect(string) Connects to user's OneDrive work or school account. Task Connect(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns Task Disconnect(string) Disconnect from user's OneDrive work or school account. Task Disconnect(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns Task Download(string, string, string, OneDriveWorkSchoolItem, UnifiedUserIdentity) Downloads a file from the user's connected OneDrive work or school account. Task<OneDriveWorkSchoolItem> Download(string instanceId, string sessionId, string agentName, OneDriveWorkSchoolItem oneDriveItem, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The session ID from which the file is uploaded. agentName string The agent name. oneDriveItem OneDriveWorkSchoolItem The OneDrive work or school item. userIdentity UnifiedUserIdentity The user's identity. Returns Task<OneDriveWorkSchoolItem>"
  },
  "api/dotnet/FoundationaLLM.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Core.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.Interfaces Interfaces ICoreService Contains methods for managing chat sessions and messages, and for getting completions from the orchestrator. ICosmosDbChangeFeedService Contains Azure Cosmos DB change feed methods. IGatekeeperAPIService Contains methods for interacting with the Gatekeeper API. IOneDriveWorkSchoolService Interface for OneDrive integration."
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.ChatSessionNameSummarizationType.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.ChatSessionNameSummarizationType.html",
    "title": "Enum ChatSessionNameSummarizationType | FoundationaLLM",
    "summary": "Enum ChatSessionNameSummarizationType Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Types of summarization for chat session names. public enum ChatSessionNameSummarizationType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields LLM = 1 Name summarization produced by a LLM via a completion requesting summarization. Timestamp = 0 Name summarization containing the UTC time of the creation of the chat session."
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.CoreServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.CoreServiceSettings.html",
    "title": "Class CoreServiceSettings | FoundationaLLM",
    "summary": "Class CoreServiceSettings Namespace FoundationaLLM.Core.Models.Configuration Assembly FoundationaLLM.Core.dll Provides settings for the CoreService. public class CoreServiceSettings Inheritance object CoreServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AzureAIAgentsFileSearchFileExtensions The comma-separated list file extensions that are supported by the Azure AI Agent Service file search tool. public required string AzureAIAgentsFileSearchFileExtensions { get; set; } Property Value string AzureOpenAIAssistantsFileSearchFileExtensions The comma-separated list file extensions that are supported by the Azure OpenAI Assistants file search tool. public required string AzureOpenAIAssistantsFileSearchFileExtensions { get; set; } Property Value string BypassGatekeeper Controls whether the Gatekeeper API will be invoked or not. public required bool BypassGatekeeper { get; set; } Property Value bool SessionSummarization The type of summarization for chat session names. public required ChatSessionNameSummarizationType SessionSummarization { get; set; } Property Value ChatSessionNameSummarizationType"
  },
  "api/dotnet/FoundationaLLM.Core.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Core.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.Models.Configuration Classes CoreServiceSettings Provides settings for the CoreService. Enums ChatSessionNameSummarizationType Types of summarization for chat session names."
  },
  "api/dotnet/FoundationaLLM.Core.Models.OneDriveWorkSchoolItem.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.OneDriveWorkSchoolItem.html",
    "title": "Class OneDriveWorkSchoolItem | FoundationaLLM",
    "summary": "Class OneDriveWorkSchoolItem Namespace FoundationaLLM.Core.Models Assembly FoundationaLLM.Core.dll OneDriveWorkSchool object. public class OneDriveWorkSchoolItem Inheritance object OneDriveWorkSchoolItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccessToken The access token required to fetch the item contents. [JsonPropertyName(\"access_token\")] public string? AccessToken { get; set; } Property Value string DriveId The drive unique identifier. [JsonPropertyName(\"driveId\")] public string? DriveId { get; set; } Property Value string Id The item unique identifier. [JsonPropertyName(\"id\")] public required string Id { get; set; } Property Value string MimeType The OneDrive file mime type. [JsonPropertyName(\"mimeType\")] public string? MimeType { get; set; } Property Value string Name The item name. [JsonPropertyName(\"name\")] public string? Name { get; set; } Property Value string ObjectId The id of the object that was created or updated. public string? ObjectId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Models.html",
    "title": "Namespace FoundationaLLM.Core.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.Models Namespaces FoundationaLLM.Core.Models.Configuration Classes OneDriveWorkSchoolItem OneDriveWorkSchool object."
  },
  "api/dotnet/FoundationaLLM.Core.Services.AzureCosmosDBChangeFeedService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.AzureCosmosDBChangeFeedService.html",
    "title": "Class AzureCosmosDBChangeFeedService | FoundationaLLM",
    "summary": "Class AzureCosmosDBChangeFeedService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. public class AzureCosmosDBChangeFeedService : ICosmosDbChangeFeedService Inheritance object AzureCosmosDBChangeFeedService Implements ICosmosDbChangeFeedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBChangeFeedService(ILogger<AzureCosmosDBChangeFeedService>, IAzureCosmosDBService, IOptions<AzureCosmosDBSettings>) Initializes a new instance of the AzureCosmosDBChangeFeedService class. public AzureCosmosDBChangeFeedService(ILogger<AzureCosmosDBChangeFeedService> logger, IAzureCosmosDBService cosmosDBService, IOptions<AzureCosmosDBSettings> settings) Parameters logger ILogger<AzureCosmosDBChangeFeedService> The logging interface used to log under the AzureCosmosDBChangeFeedService type name. cosmosDBService IAzureCosmosDBService Contains standard methods for managing data stored within the Azure Cosmos DB workspace. settings IOptions<AzureCosmosDBSettings> The AzureCosmosDBSettings settings retrieved by the injected IOptions<TOptions>. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Properties IsInitialized Gets a value indicating whether the change feeds have been initialized. public bool IsInitialized { get; } Property Value bool Methods StartChangeFeedProcessorsAsync() Initializes the change feed processors and starts listening for changes. public Task StartChangeFeedProcessorsAsync() Returns Task StopChangeFeedProcessorAsync() Stops the change feed processors. public Task StopChangeFeedProcessorAsync() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.CoreService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.CoreService.html",
    "title": "Class CoreService | FoundationaLLM",
    "summary": "Class CoreService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Initializes a new instance of the CoreService class. public class CoreService : ICoreService Inheritance object CoreService Implements ICoreService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CoreService(IAzureCosmosDBService, IEnumerable<IDownstreamAPIService>, ILogger<CoreService>, IOptions<ClientBrandingConfiguration>, IOptions<CoreServiceSettings>, IOrchestrationContext, IEnumerable<IResourceProviderService>, IConfiguration, IHttpClientFactoryService, IContextServiceClient) Initializes a new instance of the CoreService class. public CoreService(IAzureCosmosDBService cosmosDBService, IEnumerable<IDownstreamAPIService> downstreamAPIServices, ILogger<CoreService> logger, IOptions<ClientBrandingConfiguration> brandingSettings, IOptions<CoreServiceSettings> settings, IOrchestrationContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IHttpClientFactoryService httpClientFactory, IContextServiceClient contextServiceClient) Parameters cosmosDBService IAzureCosmosDBService The Azure Cosmos DB service that contains chat sessions and messages. downstreamAPIServices IEnumerable<IDownstreamAPIService> The services used to make calls to the downstream APIs. logger ILogger<CoreService> The logging interface used to log under the CoreService type name. brandingSettings IOptions<ClientBrandingConfiguration> The ClientBrandingConfiguration settings retrieved by the injected IOptions<TOptions>. settings IOptions<CoreServiceSettings> The CoreServiceSettings settings for the service. callContext IOrchestrationContext Contains contextual data for the calling service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. configuration IConfiguration The IConfiguration service providing configuration settings. httpClientFactory IHttpClientFactoryService The IHttpClientFactory used to build HTTP clients. contextServiceClient IContextServiceClient The IContextServiceClient used to interact with the Context API. Methods CreateConversationAsync(string, ChatSessionProperties) Creates a new chat session. public Task<Conversation> CreateConversationAsync(string instanceId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance Id. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Conversation> DeleteAttachments(string, List<string>) Deletes one or more attachments. public Task<Dictionary<string, ResourceProviderDeleteResult?>> DeleteAttachments(string instanceId, List<string> resourcePaths) Parameters instanceId string The FoundationaLLM instance id. resourcePaths List<string> The list of resources to be deleted. Returns Task<Dictionary<string, ResourceProviderDeleteResult>> A dictionary with the delete operation result for each resource path. DeleteConversationAsync(string, string) Delete a chat session and related messages. public Task DeleteConversationAsync(string instanceId, string sessionId) Parameters instanceId string The instance id. sessionId string The session id to delete. Returns Task DownloadAttachment(string, string, string) Downloads an attachment. public Task<AttachmentFile?> DownloadAttachment(string instanceId, string fileProvider, string fileId) Parameters instanceId string The FoundationaLLM instance id. fileProvider string The name of the file provider. fileId string The identifier of the file. Returns Task<AttachmentFile> An AttachmentFile object with the properties and the content of the attachment. Remarks The following file providers are supported: FoundationaLLM.Attachments FoundationaLLM.AzureOpenAI GetAllConversationsAsync(string) Returns list of chat session ids and names. public Task<List<Conversation>> GetAllConversationsAsync(string instanceId) Parameters instanceId string The instance id for which to retrieve chat sessions. Returns Task<List<Conversation>> GetChatCompletionAsync(string, CompletionRequest) Receive a prompt from a user, retrieve the message history from the related session, generate a completion response, and log full completion results. public Task<Message> GetChatCompletionAsync(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The instance id. completionRequest CompletionRequest The completion request. Returns Task<Message> GetChatSessionMessagesAsync(string, string) Returns the chat messages related to an existing session. public Task<List<Message>> GetChatSessionMessagesAsync(string instanceId, string sessionId) Parameters instanceId string The instance id for which to retrieve chat messages. sessionId string The session id for which to retrieve chat messages. Returns Task<List<Message>> GetCompletionAsync(string, CompletionRequest) Provides a completion for a user prompt, without a session. public Task<Message> GetCompletionAsync(string instanceId, CompletionRequest directCompletionRequest) Parameters instanceId string The instance id. directCompletionRequest CompletionRequest The completion request. Returns Task<Message> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns a LongRunningOperation object containing the OperationId, Status, and result. GetCompletionPrompt(string, string, string) Returns the completion prompt for a given session and completion prompt id. public Task<CompletionPrompt> GetCompletionPrompt(string instanceId, string sessionId, string completionPromptId) Parameters instanceId string The instance Id. sessionId string The session id from which to retrieve the completion prompt. completionPromptId string The id of the completion prompt to retrieve. Returns Task<CompletionPrompt> GetCoreConfiguration(string) Gets the file store configuration for the given instance. public Task<CoreConfiguration> GetCoreConfiguration(string instanceId) Parameters instanceId string The FoundationaLLM instance id. Returns Task<CoreConfiguration> The file store configuration. RateMessageAsync(string, string, string, MessageRatingRequest) Rate an assistant message. This can be used to discover useful AI responses for training, discoverability, and other benefits down the road. public Task RateMessageAsync(string instanceId, string id, string sessionId, MessageRatingRequest rating) Parameters instanceId string The instance id. id string The message id to rate. sessionId string The session id to which the message belongs. rating MessageRatingRequest The rating and optional comments to assign to the message. Returns Task RenameConversationAsync(string, string, ChatSessionProperties) Rename the chat session from its default (eg., \"New Chat\") to the summary provided by OpenAI. public Task<Conversation> RenameConversationAsync(string instanceId, string sessionId, ChatSessionProperties chatSessionProperties) Parameters instanceId string The instance id. sessionId string The session id to rename. chatSessionProperties ChatSessionProperties The session properties. Returns Task<Conversation> StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. UploadAttachment(string, string, AttachmentFile, string) Uploads an attachment. public Task<ResourceProviderUpsertResult<AttachmentFile>> UploadAttachment(string instanceId, string sessionId, AttachmentFile attachmentFile, string agentName) Parameters instanceId string The FoundationaLLM instance id. sessionId string The session id from which the attachment is uploaded. attachmentFile AttachmentFile The AttachmentFile object containing the attachment file data. agentName string The name of the agent. Returns Task<ResourceProviderUpsertResult<AttachmentFile>> A ResourceProviderUpsertResult<T> object with the FoundationaLLM.Attachment resource provider object id."
  },
  "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.GatekeeperAPIService.html",
    "title": "Class GatekeeperAPIService | FoundationaLLM",
    "summary": "Class GatekeeperAPIService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperAPIService : IGatekeeperAPIService Inheritance object GatekeeperAPIService Implements IGatekeeperAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperAPIService(IOrchestrationContext, IHttpClientFactoryService) Initializes a new instance of the GatekeeperAPIService class. public GatekeeperAPIService(IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gateway API requests. Methods AddMemory(object, string, Action<object, float[]>) Adds the entity to the orchestrator's memory used by the RAG service. public Task AddMemory(object item, string itemName, Action<object, float[]> vectorizer) Parameters item object The entity to add to memory. itemName string The type name of the entity. vectorizer Action<object, float[]> The embedded entity and its vector. Returns Task GetCompletion(string, CompletionRequest) Requests a completion from the downstream APIs via the Gatekeeper API. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request object. Returns Task<CompletionResponse> RemoveMemory(object) Removes the entity from the orchestrator's memory used by the RAG service. public Task RemoveMemory(object item) Parameters item object The entity to remove from memory. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Services.OneDriveWorkSchoolService.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.OneDriveWorkSchoolService.html",
    "title": "Class OneDriveWorkSchoolService | FoundationaLLM",
    "summary": "Class OneDriveWorkSchoolService Namespace FoundationaLLM.Core.Services Assembly FoundationaLLM.Core.dll Implements IOneDriveWorkSchoolService. public class OneDriveWorkSchoolService : IOneDriveWorkSchoolService Inheritance object OneDriveWorkSchoolService Implements IOneDriveWorkSchoolService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OneDriveWorkSchoolService(ICoreService, IUserProfileService, IHttpClientFactory) Contructor for OneDrive service. public OneDriveWorkSchoolService(ICoreService coreService, IUserProfileService userProfileService, IHttpClientFactory httpClientFactory) Parameters coreService ICoreService The core API service. userProfileService IUserProfileService The user profile service. httpClientFactory IHttpClientFactory The HTTP client factory. Methods Connect(string) Connects to user's OneDrive work or school account. public Task Connect(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns Task Disconnect(string) Disconnect from user's OneDrive work or school account. public Task Disconnect(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns Task Download(string, string, string, OneDriveWorkSchoolItem, UnifiedUserIdentity) Downloads a file from the user's connected OneDrive work or school account. public Task<OneDriveWorkSchoolItem> Download(string instanceId, string sessionId, string agentName, OneDriveWorkSchoolItem oneDriveItem, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. sessionId string The session ID from which the file is uploaded. agentName string The agent name. oneDriveItem OneDriveWorkSchoolItem The OneDrive work or school item. userIdentity UnifiedUserIdentity The user's identity. Returns Task<OneDriveWorkSchoolItem>"
  },
  "api/dotnet/FoundationaLLM.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Services.html",
    "title": "Namespace FoundationaLLM.Core.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.Services Classes AzureCosmosDBChangeFeedService Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy. CoreService Initializes a new instance of the CoreService class. GatekeeperAPIService Contains methods for interacting with the Gatekeeper API. OneDriveWorkSchoolService Implements IOneDriveWorkSchoolService."
  },
  "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.ObjectExtensions.html",
    "title": "Class ObjectExtensions | FoundationaLLM",
    "summary": "Class ObjectExtensions Namespace FoundationaLLM.Core.Utils Assembly FoundationaLLM.Core.dll Contains extension methods for objects. public static class ObjectExtensions Inheritance object ObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPropertyValues(object, List<string>) Gets the values of a specified set of properties of an object. public static List<string?> GetPropertyValues(this object obj, List<string> propertyNames) Parameters obj object The object instance. propertyNames List<string> The list of property names. Returns List<string>"
  },
  "api/dotnet/FoundationaLLM.Core.Utils.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Utils.html",
    "title": "Namespace FoundationaLLM.Core.Utils | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.Utils Classes ObjectExtensions Contains extension methods for objects."
  },
  "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.ChangeFeedWorker.html",
    "title": "Class ChangeFeedWorker | FoundationaLLM",
    "summary": "Class ChangeFeedWorker Namespace FoundationaLLM.Core.Worker Assembly FoundationaLLM.Core.Worker.dll Background service that runs the Change Feed Processor. public class ChangeFeedWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService ChangeFeedWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ChangeFeedWorker(ILogger<ChangeFeedWorker>, TelemetryClient, ICosmosDbChangeFeedService) Instantiates a new instance of the ChangeFeedWorker. public ChangeFeedWorker(ILogger<ChangeFeedWorker> logger, TelemetryClient telemetryClient, ICosmosDbChangeFeedService cosmosDbChangeFeedService) Parameters logger ILogger<ChangeFeedWorker> The logging interface used to log under the ChangeFeedWorker type name. telemetryClient TelemetryClient The telemetry client sends events, metrics, and other telemetry to the App Insights service. cosmosDbChangeFeedService ICosmosDbChangeFeedService The Cosmos DB change feed processor that performs the event processing tasks for the worker. Methods ExecuteAsync(CancellationToken) Executes the Change Feed Processor. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Returns Task"
  },
  "api/dotnet/FoundationaLLM.Core.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Core.Worker.html",
    "title": "Namespace FoundationaLLM.Core.Worker | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core.Worker Classes ChangeFeedWorker Background service that runs the Change Feed Processor."
  },
  "api/dotnet/FoundationaLLM.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Core.html",
    "title": "Namespace FoundationaLLM.Core | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Core Namespaces FoundationaLLM.Core.API FoundationaLLM.Core.Interfaces FoundationaLLM.Core.Models FoundationaLLM.Core.Services FoundationaLLM.Core.Utils FoundationaLLM.Core.Worker"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.API.Controllers.DataPipelineRunsController.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.API.Controllers.DataPipelineRunsController.html",
    "title": "Class DataPipelineRunsController | FoundationaLLM",
    "summary": "Class DataPipelineRunsController Namespace FoundationaLLM.DataPipeline.API.Controllers Assembly FoundationaLLM.DataPipeline.API.dll Provides the routes for the Data Pipelines API data pipelines controller. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class DataPipelineRunsController : ControllerBase Inheritance object ControllerBase DataPipelineRunsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineRunsController(IDataPipelineService, IOrchestrationContext, ILogger<DataPipelineRunsController>) Provides the routes for the Data Pipelines API data pipelines controller. public DataPipelineRunsController(IDataPipelineService dataPipelineService, IOrchestrationContext orchestrationContext, ILogger<DataPipelineRunsController> logger) Parameters dataPipelineService IDataPipelineService The service used to manage data pipeline runs. orchestrationContext IOrchestrationContext The orchestration context that provides FoundationaLLM context information logger ILogger<DataPipelineRunsController> The ILogger used for logging. Methods CreateDataPipelineRun(string, DataPipelineRun) Creates a new data pipeline run. [HttpPost(\"datapipelineruns\")] public Task<IActionResult> CreateDataPipelineRun(string instanceId, DataPipelineRun dataPipelineRun) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The object with the properties of the new data pipeline run. Returns Task<IActionResult> The newly created data pipeline run. GetDataPipelineRun(string, string, string) Retrieves a data pipeline run by its name. [HttpGet(\"datapipelines/{dataPipelineName}/datapipelineruns/{runId}\")] public Task<IActionResult> GetDataPipelineRun(string instanceId, string dataPipelineName, string runId) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineName string The name of the data pipeline. runId string The identifier of the data pipeline run. Returns Task<IActionResult> The data pipeline run identified by the provided identifier. GetDataPipelineRuns(string, DataPipelineRunFilter) Retrieves a list of data pipeline runs filtered by the provided filter criteria. [HttpPost(\"datapipelineruns/filter\")] public Task<IActionResult> GetDataPipelineRuns(string instanceId, DataPipelineRunFilter dataPipelineRunFilter) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRunFilter DataPipelineRunFilter The definition of the filter criteria. Returns Task<IActionResult> The requested list of data pipeline run objects."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.DataPipeline.API.Controllers Assembly FoundationaLLM.DataPipeline.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StatusController() Provides methods for checking the status of the service. public StatusController() Methods Get(string) Returns the status of the Data Pipeline API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public Task<ServiceStatusInfo> Get(string instanceId) Parameters instanceId string Returns Task<ServiceStatusInfo> Options() Returns the allowed HTTP methods for the Data Pipeline API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.API.Controllers.html",
    "title": "Namespace FoundationaLLM.DataPipeline.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.API.Controllers Classes DataPipelineRunsController Provides the routes for the Data Pipelines API data pipelines controller. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.BackendWorker.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.BackendWorker.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.DataPipeline.BackendWorker.Controllers Assembly FoundationaLLM.DataPipeline.BackendWorker.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StatusController() Provides methods for checking the status of the service. public StatusController() Methods Get(string) Returns the status of the Orchestration API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public Task<ServiceStatusInfo> Get(string instanceId) Parameters instanceId string Returns Task<ServiceStatusInfo> Options() Returns the allowed HTTP methods for the Orchestration API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.BackendWorker.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.BackendWorker.Controllers.html",
    "title": "Namespace FoundationaLLM.DataPipeline.BackendWorker.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.BackendWorker.Controllers Classes StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Clients.RemoteDataPipelineServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Clients.RemoteDataPipelineServiceClient.html",
    "title": "Class RemoteDataPipelineServiceClient | FoundationaLLM",
    "summary": "Class RemoteDataPipelineServiceClient Namespace FoundationaLLM.DataPipeline.Clients Assembly FoundationaLLM.DataPipeline.dll Remote client for the Data Pipeline API. public class RemoteDataPipelineServiceClient : IDataPipelineServiceClient, IResourceProviderClient Inheritance object RemoteDataPipelineServiceClient Implements IDataPipelineServiceClient IResourceProviderClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RemoteDataPipelineServiceClient(IHttpClientFactoryService, ILogger<RemoteDataPipelineServiceClient>) Initializes the remote client for the Data Pipeline API. public RemoteDataPipelineServiceClient(IHttpClientFactoryService httpClientFactoryService, ILogger<RemoteDataPipelineServiceClient> logger) Parameters httpClientFactoryService IHttpClientFactoryService The HTTP client factory used to create HTTP clients. logger ILogger<RemoteDataPipelineServiceClient> The logger used for logging. Properties ResourceProviders Sets the resource providers collection. public IEnumerable<IResourceProviderService> ResourceProviders { set; } Property Value IEnumerable<IResourceProviderService> Remarks This property must be exposed by services that cannot be injected with the resource providers. These are background services that both provide and consume services to and from the resource providers. Methods CreateDataPipelineRunAsync(string, DataPipelineRun, DataPipelineDefinitionSnapshot, UnifiedUserIdentity) Creates a new data pipeline run. public Task<DataPipelineRun?> CreateDataPipelineRunAsync(string instanceId, DataPipelineRun dataPipelineRun, DataPipelineDefinitionSnapshot dataPipelineSnapshot, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The data pipeline run to create. dataPipelineSnapshot DataPipelineDefinitionSnapshot The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The newly created data pipeline run. GetDataPipelineRunAsync(string, string, string, UnifiedUserIdentity) Gets a data pipeline run by its identifier. public Task<DataPipelineRun?> GetDataPipelineRunAsync(string instanceId, string dataPipelineName, string runId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineName string The name of the data pipeline. runId string The data pipeline run identifier. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The requested data pipeline run object. GetDataPipelineRunsAsync(string, DataPipelineRunFilter, UnifiedUserIdentity) Retrieves a list of data pipeline runs filtered by the provided filter criteria. public Task<List<DataPipelineRun>> GetDataPipelineRunsAsync(string instanceId, DataPipelineRunFilter dataPipelineRunFilter, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRunFilter DataPipelineRunFilter The definition of the filter criteria. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<List<DataPipelineRun>> The requested list of data pipeline run objects. GetServiceStateAsync() Retrieves the current state of the Data Pipeline service. public Task<BinaryData> GetServiceStateAsync() Returns Task<BinaryData> The state of the service in binary format."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Clients.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Clients.html",
    "title": "Namespace FoundationaLLM.DataPipeline.Clients | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.Clients Classes RemoteDataPipelineServiceClient Remote client for the Data Pipeline API."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.FrontendWorker.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.FrontendWorker.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.DataPipeline.FrontendWorker.Controllers Assembly FoundationaLLM.DataPipeline.FrontendWorker.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StatusController() Provides methods for checking the status of the service. public StatusController() Methods Get(string) Returns the status of the Orchestration API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public Task<ServiceStatusInfo> Get(string instanceId) Parameters instanceId string Returns Task<ServiceStatusInfo> Options() Returns the allowed HTTP methods for the Orchestration API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.FrontendWorker.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.FrontendWorker.Controllers.html",
    "title": "Namespace FoundationaLLM.DataPipeline.FrontendWorker.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.FrontendWorker.Controllers Classes StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Interfaces.IDataPipelineServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Interfaces.IDataPipelineServiceClient.html",
    "title": "Interface IDataPipelineServiceClient | FoundationaLLM",
    "summary": "Interface IDataPipelineServiceClient Namespace FoundationaLLM.DataPipeline.Interfaces Assembly FoundationaLLM.DataPipeline.dll Defines the interface for Data Pipeline API clients. public interface IDataPipelineServiceClient : IResourceProviderClient Inherited Members IResourceProviderClient.ResourceProviders Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateDataPipelineRunAsync(string, DataPipelineRun, DataPipelineDefinitionSnapshot, UnifiedUserIdentity) Creates a new data pipeline run. Task<DataPipelineRun?> CreateDataPipelineRunAsync(string instanceId, DataPipelineRun dataPipelineRun, DataPipelineDefinitionSnapshot dataPipelineSnapshot, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The data pipeline run to create. dataPipelineSnapshot DataPipelineDefinitionSnapshot The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The newly created data pipeline run. GetDataPipelineRunAsync(string, string, string, UnifiedUserIdentity) Gets a data pipeline run by its identifier. Task<DataPipelineRun?> GetDataPipelineRunAsync(string instanceId, string dataPipelineName, string runId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineName string The name of the data pipeline. runId string The data pipeline run identifier. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The requested data pipeline run object. GetDataPipelineRunsAsync(string, DataPipelineRunFilter, UnifiedUserIdentity) Retrieves a list of data pipeline runs filtered by the provided filter criteria. Task<List<DataPipelineRun>> GetDataPipelineRunsAsync(string instanceId, DataPipelineRunFilter dataPipelineRunFilter, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRunFilter DataPipelineRunFilter The definition of the filter criteria. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<List<DataPipelineRun>> The requested list of data pipeline run objects. GetServiceStateAsync() Retrieves the current state of the Data Pipeline service. Task<BinaryData> GetServiceStateAsync() Returns Task<BinaryData> The state of the service in binary format."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Interfaces.html",
    "title": "Namespace FoundationaLLM.DataPipeline.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.Interfaces Interfaces IDataPipelineServiceClient Defines the interface for Data Pipeline API clients."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Models.DataPipelineReference.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Models.DataPipelineReference.html",
    "title": "Class DataPipelineReference | FoundationaLLM",
    "summary": "Class DataPipelineReference Namespace FoundationaLLM.DataPipeline.Models Assembly FoundationaLLM.DataPipeline.dll Provides a reference to a resource managed by the FoundationaLLM.DataPipeline resource provider. public class DataPipelineReference : ResourceReference Inheritance object ResourceReference DataPipelineReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the data pipeline. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Models.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Models.html",
    "title": "Namespace FoundationaLLM.DataPipeline.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.Models Classes DataPipelineReference Provides a reference to a resource managed by the FoundationaLLM.DataPipeline resource provider."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.ResourceProviders.DataPipelineResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.ResourceProviders.DataPipelineResourceProviderService.html",
    "title": "Class DataPipelineResourceProviderService | FoundationaLLM",
    "summary": "Class DataPipelineResourceProviderService Namespace FoundationaLLM.DataPipeline.ResourceProviders Assembly FoundationaLLM.DataPipeline.dll Implements the FoundationaLLM.DataPipeline resource provider. public class DataPipelineResourceProviderService : ResourceProviderServiceBase<DataPipelineReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<DataPipelineReference> DataPipelineResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<DataPipelineReference>._resourceReferenceStore ResourceProviderServiceBase<DataPipelineReference>._serviceProvider ResourceProviderServiceBase<DataPipelineReference>._authorizationServiceClient ResourceProviderServiceBase<DataPipelineReference>._storageService ResourceProviderServiceBase<DataPipelineReference>._eventService ResourceProviderServiceBase<DataPipelineReference>._resourceValidatorFactory ResourceProviderServiceBase<DataPipelineReference>._validator ResourceProviderServiceBase<DataPipelineReference>._logger ResourceProviderServiceBase<DataPipelineReference>._instanceSettings ResourceProviderServiceBase<DataPipelineReference>._storageContainerName ResourceProviderServiceBase<DataPipelineReference>._serializerSettings ResourceProviderServiceBase<DataPipelineReference>.Name ResourceProviderServiceBase<DataPipelineReference>.IsInitialized ResourceProviderServiceBase<DataPipelineReference>.InitializationTask ResourceProviderServiceBase<DataPipelineReference>.AllowedResourceTypes ResourceProviderServiceBase<DataPipelineReference>.StorageAccountName ResourceProviderServiceBase<DataPipelineReference>.StorageContainerName ResourceProviderServiceBase<DataPipelineReference>.Initialize() ResourceProviderServiceBase<DataPipelineReference>.WaitForInitialization() ResourceProviderServiceBase<DataPipelineReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataPipelineReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataPipelineReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataPipelineReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataPipelineReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<DataPipelineReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<DataPipelineReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<DataPipelineReference>.HandleCacheResetCommand() ResourceProviderServiceBase<DataPipelineReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<DataPipelineReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<DataPipelineReference, bool, Task<T>>) ResourceProviderServiceBase<DataPipelineReference>.LoadResource<T>(DataPipelineReference) ResourceProviderServiceBase<DataPipelineReference>.LoadResource<T>(string) ResourceProviderServiceBase<DataPipelineReference>.CreateResource<T>(DataPipelineReference, T) ResourceProviderServiceBase<DataPipelineReference>.CreateResource(DataPipelineReference, Stream, string) ResourceProviderServiceBase<DataPipelineReference>.CreateResources<T1, T2>(DataPipelineReference, T1, DataPipelineReference, T2) ResourceProviderServiceBase<DataPipelineReference>.SaveResource<T>(DataPipelineReference, T) ResourceProviderServiceBase<DataPipelineReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<DataPipelineReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<DataPipelineReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<DataPipelineReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<DataPipelineReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<DataPipelineReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<DataPipelineReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<DataPipelineReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<DataPipelineReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<DataPipelineReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<DataPipelineReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<DataPipelineReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<DataPipelineReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.DataPipeline resource provider. public DataPipelineResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The factory responsible for creating loggers. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) The internal implementation of ExecuteResourceActionAsync. Must be overridden in derived classes. protected override Task<TResult> ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, TAction actionPayload, UnifiedUserIdentity userIdentity) where T : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. actionPayload TAction The TAction object containing details about the action to be executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> A TResult object with the result of the action. Type Parameters T TAction TResult Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceProviderState() Gets the resource provider state. protected override Task<BinaryData> GetResourceProviderState() Returns Task<BinaryData> The resource provider state in binary format. GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.DataPipeline.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.ResourceProviders Classes DataPipelineResourceProviderService Implements the FoundationaLLM.DataPipeline resource provider."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Validation.DataPipelineDefinitionValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Validation.DataPipelineDefinitionValidator.html",
    "title": "Class DataPipelineDefinitionValidator | FoundationaLLM",
    "summary": "Class DataPipelineDefinitionValidator Namespace FoundationaLLM.DataPipeline.Validation Assembly FoundationaLLM.DataPipeline.dll Validator for the DataPipelineDefinition model. public class DataPipelineDefinitionValidator : AbstractValidator<DataPipelineDefinition>, IValidator<DataPipelineDefinition>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DataPipelineDefinition> DataPipelineDefinitionValidator Implements IValidator<DataPipelineDefinition> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DataPipelineDefinition>.Validate(DataPipelineDefinition) AbstractValidator<DataPipelineDefinition>.ValidateAsync(DataPipelineDefinition, CancellationToken) AbstractValidator<DataPipelineDefinition>.Validate(ValidationContext<DataPipelineDefinition>) AbstractValidator<DataPipelineDefinition>.ValidateAsync(ValidationContext<DataPipelineDefinition>, CancellationToken) AbstractValidator<DataPipelineDefinition>.CreateDescriptor() AbstractValidator<DataPipelineDefinition>.RuleFor<TProperty>(Expression<Func<DataPipelineDefinition, TProperty>>) AbstractValidator<DataPipelineDefinition>.Transform<TProperty, TTransformed>(Expression<Func<DataPipelineDefinition, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DataPipelineDefinition>.Transform<TProperty, TTransformed>(Expression<Func<DataPipelineDefinition, TProperty>>, Func<DataPipelineDefinition, TProperty, TTransformed>) AbstractValidator<DataPipelineDefinition>.RuleForEach<TElement>(Expression<Func<DataPipelineDefinition, IEnumerable<TElement>>>) AbstractValidator<DataPipelineDefinition>.TransformForEach<TElement, TTransformed>(Expression<Func<DataPipelineDefinition, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DataPipelineDefinition>.TransformForEach<TElement, TTransformed>(Expression<Func<DataPipelineDefinition, IEnumerable<TElement>>>, Func<DataPipelineDefinition, TElement, TTransformed>) AbstractValidator<DataPipelineDefinition>.RuleSet(string, Action) AbstractValidator<DataPipelineDefinition>.When(Func<DataPipelineDefinition, bool>, Action) AbstractValidator<DataPipelineDefinition>.When(Func<DataPipelineDefinition, ValidationContext<DataPipelineDefinition>, bool>, Action) AbstractValidator<DataPipelineDefinition>.Unless(Func<DataPipelineDefinition, bool>, Action) AbstractValidator<DataPipelineDefinition>.Unless(Func<DataPipelineDefinition, ValidationContext<DataPipelineDefinition>, bool>, Action) AbstractValidator<DataPipelineDefinition>.WhenAsync(Func<DataPipelineDefinition, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineDefinition>.WhenAsync(Func<DataPipelineDefinition, ValidationContext<DataPipelineDefinition>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineDefinition>.UnlessAsync(Func<DataPipelineDefinition, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineDefinition>.UnlessAsync(Func<DataPipelineDefinition, ValidationContext<DataPipelineDefinition>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineDefinition>.Include(IValidator<DataPipelineDefinition>) AbstractValidator<DataPipelineDefinition>.Include<TValidator>(Func<DataPipelineDefinition, TValidator>) AbstractValidator<DataPipelineDefinition>.GetEnumerator() AbstractValidator<DataPipelineDefinition>.EnsureInstanceNotNull(object) AbstractValidator<DataPipelineDefinition>.PreValidate(ValidationContext<DataPipelineDefinition>, ValidationResult) AbstractValidator<DataPipelineDefinition>.RaiseValidationException(ValidationContext<DataPipelineDefinition>, ValidationResult) AbstractValidator<DataPipelineDefinition>.OnRuleAdded(IValidationRule<DataPipelineDefinition>) AbstractValidator<DataPipelineDefinition>.CascadeMode AbstractValidator<DataPipelineDefinition>.ClassLevelCascadeMode AbstractValidator<DataPipelineDefinition>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineDefinitionValidator() Configures the validation rules for the DataPipelineDefinition model. public DataPipelineDefinitionValidator()"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Validation.DataPipelineRunValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Validation.DataPipelineRunValidator.html",
    "title": "Class DataPipelineRunValidator | FoundationaLLM",
    "summary": "Class DataPipelineRunValidator Namespace FoundationaLLM.DataPipeline.Validation Assembly FoundationaLLM.DataPipeline.dll Validator for the DataPipelineRun model. public class DataPipelineRunValidator : AbstractValidator<DataPipelineRun>, IValidator<DataPipelineRun>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DataPipelineRun> DataPipelineRunValidator Implements IValidator<DataPipelineRun> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DataPipelineRun>.Validate(DataPipelineRun) AbstractValidator<DataPipelineRun>.ValidateAsync(DataPipelineRun, CancellationToken) AbstractValidator<DataPipelineRun>.Validate(ValidationContext<DataPipelineRun>) AbstractValidator<DataPipelineRun>.ValidateAsync(ValidationContext<DataPipelineRun>, CancellationToken) AbstractValidator<DataPipelineRun>.CreateDescriptor() AbstractValidator<DataPipelineRun>.RuleFor<TProperty>(Expression<Func<DataPipelineRun, TProperty>>) AbstractValidator<DataPipelineRun>.Transform<TProperty, TTransformed>(Expression<Func<DataPipelineRun, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DataPipelineRun>.Transform<TProperty, TTransformed>(Expression<Func<DataPipelineRun, TProperty>>, Func<DataPipelineRun, TProperty, TTransformed>) AbstractValidator<DataPipelineRun>.RuleForEach<TElement>(Expression<Func<DataPipelineRun, IEnumerable<TElement>>>) AbstractValidator<DataPipelineRun>.TransformForEach<TElement, TTransformed>(Expression<Func<DataPipelineRun, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DataPipelineRun>.TransformForEach<TElement, TTransformed>(Expression<Func<DataPipelineRun, IEnumerable<TElement>>>, Func<DataPipelineRun, TElement, TTransformed>) AbstractValidator<DataPipelineRun>.RuleSet(string, Action) AbstractValidator<DataPipelineRun>.When(Func<DataPipelineRun, bool>, Action) AbstractValidator<DataPipelineRun>.When(Func<DataPipelineRun, ValidationContext<DataPipelineRun>, bool>, Action) AbstractValidator<DataPipelineRun>.Unless(Func<DataPipelineRun, bool>, Action) AbstractValidator<DataPipelineRun>.Unless(Func<DataPipelineRun, ValidationContext<DataPipelineRun>, bool>, Action) AbstractValidator<DataPipelineRun>.WhenAsync(Func<DataPipelineRun, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineRun>.WhenAsync(Func<DataPipelineRun, ValidationContext<DataPipelineRun>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineRun>.UnlessAsync(Func<DataPipelineRun, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineRun>.UnlessAsync(Func<DataPipelineRun, ValidationContext<DataPipelineRun>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineRun>.Include(IValidator<DataPipelineRun>) AbstractValidator<DataPipelineRun>.Include<TValidator>(Func<DataPipelineRun, TValidator>) AbstractValidator<DataPipelineRun>.GetEnumerator() AbstractValidator<DataPipelineRun>.EnsureInstanceNotNull(object) AbstractValidator<DataPipelineRun>.PreValidate(ValidationContext<DataPipelineRun>, ValidationResult) AbstractValidator<DataPipelineRun>.RaiseValidationException(ValidationContext<DataPipelineRun>, ValidationResult) AbstractValidator<DataPipelineRun>.OnRuleAdded(IValidationRule<DataPipelineRun>) AbstractValidator<DataPipelineRun>.CascadeMode AbstractValidator<DataPipelineRun>.ClassLevelCascadeMode AbstractValidator<DataPipelineRun>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineRunValidator() Configures the validation rules for the DataPipelineDefinition model. public DataPipelineRunValidator()"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Validation.DataPipelineTriggerValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Validation.DataPipelineTriggerValidator.html",
    "title": "Class DataPipelineTriggerValidator | FoundationaLLM",
    "summary": "Class DataPipelineTriggerValidator Namespace FoundationaLLM.DataPipeline.Validation Assembly FoundationaLLM.DataPipeline.dll Validator for the DataPipelineTrigger model. public class DataPipelineTriggerValidator : AbstractValidator<DataPipelineTrigger>, IValidator<DataPipelineTrigger>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DataPipelineTrigger> DataPipelineTriggerValidator Implements IValidator<DataPipelineTrigger> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DataPipelineTrigger>.Validate(DataPipelineTrigger) AbstractValidator<DataPipelineTrigger>.ValidateAsync(DataPipelineTrigger, CancellationToken) AbstractValidator<DataPipelineTrigger>.Validate(ValidationContext<DataPipelineTrigger>) AbstractValidator<DataPipelineTrigger>.ValidateAsync(ValidationContext<DataPipelineTrigger>, CancellationToken) AbstractValidator<DataPipelineTrigger>.CreateDescriptor() AbstractValidator<DataPipelineTrigger>.RuleFor<TProperty>(Expression<Func<DataPipelineTrigger, TProperty>>) AbstractValidator<DataPipelineTrigger>.Transform<TProperty, TTransformed>(Expression<Func<DataPipelineTrigger, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DataPipelineTrigger>.Transform<TProperty, TTransformed>(Expression<Func<DataPipelineTrigger, TProperty>>, Func<DataPipelineTrigger, TProperty, TTransformed>) AbstractValidator<DataPipelineTrigger>.RuleForEach<TElement>(Expression<Func<DataPipelineTrigger, IEnumerable<TElement>>>) AbstractValidator<DataPipelineTrigger>.TransformForEach<TElement, TTransformed>(Expression<Func<DataPipelineTrigger, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DataPipelineTrigger>.TransformForEach<TElement, TTransformed>(Expression<Func<DataPipelineTrigger, IEnumerable<TElement>>>, Func<DataPipelineTrigger, TElement, TTransformed>) AbstractValidator<DataPipelineTrigger>.RuleSet(string, Action) AbstractValidator<DataPipelineTrigger>.When(Func<DataPipelineTrigger, bool>, Action) AbstractValidator<DataPipelineTrigger>.When(Func<DataPipelineTrigger, ValidationContext<DataPipelineTrigger>, bool>, Action) AbstractValidator<DataPipelineTrigger>.Unless(Func<DataPipelineTrigger, bool>, Action) AbstractValidator<DataPipelineTrigger>.Unless(Func<DataPipelineTrigger, ValidationContext<DataPipelineTrigger>, bool>, Action) AbstractValidator<DataPipelineTrigger>.WhenAsync(Func<DataPipelineTrigger, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineTrigger>.WhenAsync(Func<DataPipelineTrigger, ValidationContext<DataPipelineTrigger>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineTrigger>.UnlessAsync(Func<DataPipelineTrigger, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineTrigger>.UnlessAsync(Func<DataPipelineTrigger, ValidationContext<DataPipelineTrigger>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataPipelineTrigger>.Include(IValidator<DataPipelineTrigger>) AbstractValidator<DataPipelineTrigger>.Include<TValidator>(Func<DataPipelineTrigger, TValidator>) AbstractValidator<DataPipelineTrigger>.GetEnumerator() AbstractValidator<DataPipelineTrigger>.EnsureInstanceNotNull(object) AbstractValidator<DataPipelineTrigger>.PreValidate(ValidationContext<DataPipelineTrigger>, ValidationResult) AbstractValidator<DataPipelineTrigger>.RaiseValidationException(ValidationContext<DataPipelineTrigger>, ValidationResult) AbstractValidator<DataPipelineTrigger>.OnRuleAdded(IValidationRule<DataPipelineTrigger>) AbstractValidator<DataPipelineTrigger>.CascadeMode AbstractValidator<DataPipelineTrigger>.ClassLevelCascadeMode AbstractValidator<DataPipelineTrigger>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineTriggerValidator() public DataPipelineTriggerValidator()"
  },
  "api/dotnet/FoundationaLLM.DataPipeline.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.Validation.html",
    "title": "Namespace FoundationaLLM.DataPipeline.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline.Validation Classes DataPipelineDefinitionValidator Validator for the DataPipelineDefinition model. DataPipelineRunValidator Validator for the DataPipelineRun model. DataPipelineTriggerValidator Validator for the DataPipelineTrigger model."
  },
  "api/dotnet/FoundationaLLM.DataPipeline.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipeline.html",
    "title": "Namespace FoundationaLLM.DataPipeline | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipeline Namespaces FoundationaLLM.DataPipeline.API.Controllers FoundationaLLM.DataPipeline.BackendWorker.Controllers FoundationaLLM.DataPipeline.Clients FoundationaLLM.DataPipeline.FrontendWorker.Controllers FoundationaLLM.DataPipeline.Interfaces FoundationaLLM.DataPipeline.Models FoundationaLLM.DataPipeline.ResourceProviders FoundationaLLM.DataPipeline.Validation"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Clients.LocalDataPipelineServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Clients.LocalDataPipelineServiceClient.html",
    "title": "Class LocalDataPipelineServiceClient | FoundationaLLM",
    "summary": "Class LocalDataPipelineServiceClient Namespace FoundationaLLM.DataPipelineEngine.Clients Assembly FoundationaLLM.DataPipelineEngine.dll Local client for the Data Pipeline API. public class LocalDataPipelineServiceClient : IDataPipelineServiceClient, IResourceProviderClient Inheritance object LocalDataPipelineServiceClient Implements IDataPipelineServiceClient IResourceProviderClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LocalDataPipelineServiceClient(IEnumerable<IHostedService>, IDataPipelineStateService) Local client for the Data Pipeline API. public LocalDataPipelineServiceClient(IEnumerable<IHostedService> hostedServices, IDataPipelineStateService dataPipelineStateService) Parameters hostedServices IEnumerable<IHostedService> dataPipelineStateService IDataPipelineStateService Properties ResourceProviders Sets the resource providers collection. public IEnumerable<IResourceProviderService> ResourceProviders { set; } Property Value IEnumerable<IResourceProviderService> Remarks This property must be exposed by services that cannot be injected with the resource providers. These are background services that both provide and consume services to and from the resource providers. Methods CreateDataPipelineRunAsync(string, DataPipelineRun, DataPipelineDefinitionSnapshot, UnifiedUserIdentity) Creates a new data pipeline run. public Task<DataPipelineRun?> CreateDataPipelineRunAsync(string instanceId, DataPipelineRun dataPipelineRun, DataPipelineDefinitionSnapshot dataPipelineSnapshot, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The data pipeline run to create. dataPipelineSnapshot DataPipelineDefinitionSnapshot The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The newly created data pipeline run. GetDataPipelineRunAsync(string, string, string, UnifiedUserIdentity) Gets a data pipeline run by its identifier. public Task<DataPipelineRun?> GetDataPipelineRunAsync(string instanceId, string dataPipelineName, string runId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineName string The name of the data pipeline. runId string The data pipeline run identifier. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The requested data pipeline run object. GetDataPipelineRunsAsync(string, DataPipelineRunFilter, UnifiedUserIdentity) Retrieves a list of data pipeline runs filtered by the provided filter criteria. public Task<List<DataPipelineRun>> GetDataPipelineRunsAsync(string instanceId, DataPipelineRunFilter dataPipelineRunFilter, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRunFilter DataPipelineRunFilter The definition of the filter criteria. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<List<DataPipelineRun>> The requested list of data pipeline run objects. GetServiceStateAsync() Retrieves the current state of the Data Pipeline service. public Task<BinaryData> GetServiceStateAsync() Returns Task<BinaryData> The state of the service in binary format."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Clients.NullDataPipelineServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Clients.NullDataPipelineServiceClient.html",
    "title": "Class NullDataPipelineServiceClient | FoundationaLLM",
    "summary": "Class NullDataPipelineServiceClient Namespace FoundationaLLM.DataPipelineEngine.Clients Assembly FoundationaLLM.DataPipelineEngine.dll Implements a no-operation client. public class NullDataPipelineServiceClient : IDataPipelineServiceClient, IResourceProviderClient Inheritance object NullDataPipelineServiceClient Implements IDataPipelineServiceClient IResourceProviderClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceProviders Sets the resource providers collection. public IEnumerable<IResourceProviderService> ResourceProviders { set; } Property Value IEnumerable<IResourceProviderService> Remarks This property must be exposed by services that cannot be injected with the resource providers. These are background services that both provide and consume services to and from the resource providers. Methods CreateDataPipelineRunAsync(string, DataPipelineRun, DataPipelineDefinitionSnapshot, UnifiedUserIdentity) Creates a new data pipeline run. public Task<DataPipelineRun?> CreateDataPipelineRunAsync(string instanceId, DataPipelineRun dataPipelineRun, DataPipelineDefinitionSnapshot dataPipelineSnapshot, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The data pipeline run to create. dataPipelineSnapshot DataPipelineDefinitionSnapshot The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The newly created data pipeline run. GetDataPipelineRunAsync(string, string, string, UnifiedUserIdentity) Gets a data pipeline run by its identifier. public Task<DataPipelineRun?> GetDataPipelineRunAsync(string instanceId, string dataPipelineName, string runId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineName string The name of the data pipeline. runId string The data pipeline run identifier. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The requested data pipeline run object. GetDataPipelineRunsAsync(string, DataPipelineRunFilter, UnifiedUserIdentity) Retrieves a list of data pipeline runs filtered by the provided filter criteria. public Task<List<DataPipelineRun>> GetDataPipelineRunsAsync(string instanceId, DataPipelineRunFilter dataPipelineRunFilter, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRunFilter DataPipelineRunFilter The definition of the filter criteria. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<List<DataPipelineRun>> The requested list of data pipeline run objects. GetServiceStateAsync() Retrieves the current state of the Data Pipeline service. public Task<BinaryData> GetServiceStateAsync() Returns Task<BinaryData> The state of the service in binary format."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Clients.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Clients.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Clients | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Clients Classes LocalDataPipelineServiceClient Local client for the Data Pipeline API. NullDataPipelineServiceClient Implements a no-operation client."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Exceptions.DataPipelineServiceException.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Exceptions.DataPipelineServiceException.html",
    "title": "Class DataPipelineServiceException | FoundationaLLM",
    "summary": "Class DataPipelineServiceException Namespace FoundationaLLM.DataPipelineEngine.Exceptions Assembly FoundationaLLM.DataPipelineEngine.dll Represents an exception that occurs when a service error occurs in the Context API. public class DataPipelineServiceException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException DataPipelineServiceException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineServiceException() Initializes a new instance of the DataPipelineServiceException class with a default message. public DataPipelineServiceException() DataPipelineServiceException(string?, Exception?, int) Initializes a new instance of the DataPipelineServiceException class with its message set to message. public DataPipelineServiceException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. DataPipelineServiceException(string?, int) Initializes a new instance of the DataPipelineServiceException class with its message set to message. public DataPipelineServiceException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception. Methods ThrowIfNullOrWhiteSpace(string?, string?) Throws an exception if argument is null, empty, or consists only of white-space characters. public static void ThrowIfNullOrWhiteSpace(string? argument, string? paramName = null) Parameters argument string The string argument to validate. paramName string The name of the parameter with which argument corresponds. Exceptions DataPipelineServiceException argument is empty or consists only of white-space characters."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Exceptions.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Exceptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Exceptions Classes DataPipelineServiceException Represents an exception that occurs when a service error occurs in the Context API."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IAzureCosmosDBDataPipelineService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IAzureCosmosDBDataPipelineService.html",
    "title": "Interface IAzureCosmosDBDataPipelineService | FoundationaLLM",
    "summary": "Interface IAzureCosmosDBDataPipelineService Namespace FoundationaLLM.DataPipelineEngine.Interfaces Assembly FoundationaLLM.DataPipelineEngine.dll Defines the interface for the Azure Cosmos DB data pipeline service. public interface IAzureCosmosDBDataPipelineService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetDataPipelineContentItem(string, string) Get a data pipeline content item by its canonical identifier. Task<DataPipelineContentItem> GetDataPipelineContentItem(string dataPipelineRunId, string contentItemCanonicalId) Parameters dataPipelineRunId string Thje data pipeine run identifier. contentItemCanonicalId string The canonical identifier of the content item run. Returns Task<DataPipelineContentItem> GetDataPipelineRuns(DataPipelineRunFilter) Gets a list of data pipeline runs filtered by the provided filter criteria. Task<List<DataPipelineRun>> GetDataPipelineRuns(DataPipelineRunFilter dataPipelineRunFilter) Parameters dataPipelineRunFilter DataPipelineRunFilter The filter criteria used to filter data pipeline runs. Returns Task<List<DataPipelineRun>> The list of requests data pipeline runs. PatchDataPipelineRunWorkItemsStatusAsync(List<DataPipelineRunWorkItem>) Patches the status of data pipeline run work items in Azure Cosmos DB. Task<bool> PatchDataPipelineRunWorkItemsStatusAsync(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> The list of data pipeline work items that need the status update. Returns Task<bool> true if the batch is successfully processed. PatchItemPropertiesAsync<T>(string, string, Dictionary<string, object?>, CancellationToken) Patches the specified properties of an item in Azure Cosmos DB. Task<T> PatchItemPropertiesAsync<T>(string partitionKey, string id, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters partitionKey string The partition key of the item. id string The identifier of the item. propertyValues Dictionary<string, object> Dictionary of the property names and values to patch. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The patched object of type . Type Parameters T The type of the item to patch. RetrieveItem<T>(string, string) Retrieves an item from Azure Cosmos DB. Task<T> RetrieveItem<T>(string id, string partitionKey) Parameters id string The identifier of the item. partitionKey string The partition key of the item. Returns Task<T> Type Parameters T The type of the item to retrieve. RetrieveItemsAsync<T>(QueryDefinition) Retrieves items from Azure Cosmos DB. Task<List<T>> RetrieveItemsAsync<T>(QueryDefinition query) Parameters query QueryDefinition The query definition used to retrieve the items. Returns Task<List<T>> The list of retrieved items. Type Parameters T The type of the items to retrieve. StartChangeFeedProcessorAsync(Func<DataPipelineRunWorkItem, Task>) Starts the change feed processor for the data pipeline run work items. Task<bool> StartChangeFeedProcessorAsync(Func<DataPipelineRunWorkItem, Task> dataPipelineRunWorkItemProcessor) Parameters dataPipelineRunWorkItemProcessor Func<DataPipelineRunWorkItem, Task> The asynchronous delegate that is invoked for each data pipeline run work item. Returns Task<bool> true if the change feed processor is successfully started. StopChangeFeedProcessorAsync() Stops the change feed processor for the data pipeline run work items. Task StopChangeFeedProcessorAsync() Returns Task UpsertDataPipelineRunBatchAsync(params dynamic[]) Batch create or update data pipeline run items. Task<bool> UpsertDataPipelineRunBatchAsync(params dynamic[] dataPipelineRunItems) Parameters dataPipelineRunItems dynamic[] Data pipeline run items to create or replace. Returns Task<bool> true if the batch is successfully processed. UpsertItemAsync<T>(string, T, CancellationToken) Upserts an item in Azure Cosmos DB. Task<T> UpsertItemAsync<T>(string partitionKey, T item, CancellationToken cancellationToken = default) Parameters partitionKey string The partition of the item to upsert. item T The item to upsert. cancellationToken CancellationToken The cancellation token used to signal a cancellation request. Returns Task<T> The upserted item. Type Parameters T The type of the item to upsert."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IDataPipelineRunnerService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IDataPipelineRunnerService.html",
    "title": "Interface IDataPipelineRunnerService | FoundationaLLM",
    "summary": "Interface IDataPipelineRunnerService Namespace FoundationaLLM.DataPipelineEngine.Interfaces Assembly FoundationaLLM.DataPipelineEngine.dll Defines the interface for the data pipeline runner service. public interface IDataPipelineRunnerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CurrentRunners Gets the current data pipeline runners that are processing runs. Dictionary<string, DataPipelineRunner> CurrentRunners { get; } Property Value Dictionary<string, DataPipelineRunner> Methods StartRun(DataPipelineRun, List<DataPipelineContentItem>, DataPipelineDefinition, UnifiedUserIdentity) Starts a data pipeline run. Task<DataPipelineRun> StartRun(DataPipelineRun dataPipelineRun, List<DataPipelineContentItem> contentItems, DataPipelineDefinition dataPipelineDefinition, UnifiedUserIdentity userIdentity) Parameters dataPipelineRun DataPipelineRun The data pipeline run to start. contentItems List<DataPipelineContentItem> The list of content items to process. dataPipelineDefinition DataPipelineDefinition The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<DataPipelineRun> The started data pipeline run."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IDataPipelineService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IDataPipelineService.html",
    "title": "Interface IDataPipelineService | FoundationaLLM",
    "summary": "Interface IDataPipelineService Namespace FoundationaLLM.DataPipelineEngine.Interfaces Assembly FoundationaLLM.DataPipelineEngine.dll Interface for the Data Pipeline Service. public interface IDataPipelineService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateDataPipelineRun(string, DataPipelineRun, UnifiedUserIdentity) Creates a new data pipeline run. Task<DataPipelineRun> CreateDataPipelineRun(string instanceId, DataPipelineRun dataPipelineRun, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The object with the properties of the new data pipeline run. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The newly created data pipeline run. GetDataPipelineRun(string, string, string, UnifiedUserIdentity) Retrieves a data pipeline run by its name. Task<DataPipelineRun> GetDataPipelineRun(string instanceId, string dataPipelineName, string runId, UnifiedUserIdentity userIdentiy) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineName string The name of the data pipeline. runId string The identifier of the data pipeline run. userIdentiy UnifiedUserIdentity The identity of the user running the operation. Returns Task<DataPipelineRun> The data pipeline run identified by the provided identifier. GetDataPipelineRuns(string, DataPipelineRunFilter, UnifiedUserIdentity) Retrieves a list of data pipeline runs filtered by the provided filter criteria. Task<List<DataPipelineRun>> GetDataPipelineRuns(string instanceId, DataPipelineRunFilter dataPipelineRunFilter, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRunFilter DataPipelineRunFilter The definition of the filter criteria. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<List<DataPipelineRun>> The requested list of data pipeline run objects."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IDataPipelineTriggerService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.IDataPipelineTriggerService.html",
    "title": "Interface IDataPipelineTriggerService | FoundationaLLM",
    "summary": "Interface IDataPipelineTriggerService Namespace FoundationaLLM.DataPipelineEngine.Interfaces Assembly FoundationaLLM.DataPipelineEngine.dll Defines the interface for the Data Pipeline Trigger service. public interface IDataPipelineTriggerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods TriggerDataPipeline(string, DataPipelineRun, DataPipelineDefinitionSnapshot, UnifiedUserIdentity) Creates a new data pipeline run. Task<DataPipelineRun?> TriggerDataPipeline(string instanceId, DataPipelineRun dataPipelineRun, DataPipelineDefinitionSnapshot dataPipelineSnapshot, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The data pipeline run to create. dataPipelineSnapshot DataPipelineDefinitionSnapshot The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<DataPipelineRun> The newly created data pipeline run."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Interfaces.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Interfaces Interfaces IAzureCosmosDBDataPipelineService Defines the interface for the Azure Cosmos DB data pipeline service. IDataPipelineRunnerService Defines the interface for the data pipeline runner service. IDataPipelineService Interface for the Data Pipeline Service. IDataPipelineTriggerService Defines the interface for the Data Pipeline Trigger service."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineServiceSettings.html",
    "title": "Class DataPipelineServiceSettings | FoundationaLLM",
    "summary": "Class DataPipelineServiceSettings Namespace FoundationaLLM.DataPipelineEngine.Models.Configuration Assembly FoundationaLLM.DataPipelineEngine.dll Provides the settings for the Data Pipeline service. public class DataPipelineServiceSettings : DataPipelineServiceSettingsBase Inheritance object DataPipelineServiceSettingsBase DataPipelineServiceSettings Inherited Members DataPipelineServiceSettingsBase.Storage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties BackendWorkerQueue Gets or sets the queue used to submit data pipeline work items for the Data Pipeline Backend Worker service. public required string BackendWorkerQueue { get; set; } Property Value string FrontendWorkerQueue Gets or sets the queue used to submit data pipeline work items for the Data Pipeline Frontend Worker service. public required string FrontendWorkerQueue { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineServiceSettingsBase.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineServiceSettingsBase.html",
    "title": "Class DataPipelineServiceSettingsBase | FoundationaLLM",
    "summary": "Class DataPipelineServiceSettingsBase Namespace FoundationaLLM.DataPipelineEngine.Models.Configuration Assembly FoundationaLLM.DataPipelineEngine.dll Provides the base settings for Data Pipeline services. public class DataPipelineServiceSettingsBase Inheritance object DataPipelineServiceSettingsBase Derived DataPipelineServiceSettings DataPipelineStateServiceSettings DataPipelineWorkerServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Storage Gets or sets the storage settings. public required BlobStorageServiceSettings Storage { get; set; } Property Value BlobStorageServiceSettings"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineStateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineStateServiceSettings.html",
    "title": "Class DataPipelineStateServiceSettings | FoundationaLLM",
    "summary": "Class DataPipelineStateServiceSettings Namespace FoundationaLLM.DataPipelineEngine.Models.Configuration Assembly FoundationaLLM.DataPipelineEngine.dll Provides the settings for the Data Pipeline State service. public class DataPipelineStateServiceSettings : DataPipelineServiceSettingsBase Inheritance object DataPipelineServiceSettingsBase DataPipelineStateServiceSettings Inherited Members DataPipelineServiceSettingsBase.Storage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CosmosDB Gets or sets the Azure Cosmos DB settings. public required AzureCosmosDBSettings CosmosDB { get; set; } Property Value AzureCosmosDBSettings"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineWorkerServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.DataPipelineWorkerServiceSettings.html",
    "title": "Class DataPipelineWorkerServiceSettings | FoundationaLLM",
    "summary": "Class DataPipelineWorkerServiceSettings Namespace FoundationaLLM.DataPipelineEngine.Models.Configuration Assembly FoundationaLLM.DataPipelineEngine.dll Provides the settings for the Data Pipeline Worker service. public class DataPipelineWorkerServiceSettings : DataPipelineServiceSettingsBase Inheritance object DataPipelineServiceSettingsBase DataPipelineWorkerServiceSettings Inherited Members DataPipelineServiceSettingsBase.Storage object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ParallelProcessorsCount Gets or sets the number of parallel processors to use for processing data pipeline run work items. public int ParallelProcessorsCount { get; set; } Property Value int Queue Gets or sets the name of the queue used for processing data pipeline work items. public required string Queue { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Models.Configuration Classes DataPipelineServiceSettings Provides the settings for the Data Pipeline service. DataPipelineServiceSettingsBase Provides the base settings for Data Pipeline services. DataPipelineStateServiceSettings Provides the settings for the Data Pipeline State service. DataPipelineWorkerServiceSettings Provides the settings for the Data Pipeline Worker service."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.DataPipelineRunWorkItemMessage.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.DataPipelineRunWorkItemMessage.html",
    "title": "Class DataPipelineRunWorkItemMessage | FoundationaLLM",
    "summary": "Class DataPipelineRunWorkItemMessage Namespace FoundationaLLM.DataPipelineEngine.Models Assembly FoundationaLLM.DataPipelineEngine.dll Represents a queue message for a data pipeline run work item. public class DataPipelineRunWorkItemMessage Inheritance object DataPipelineRunWorkItemMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RunId Gets or sets the identifier of the data pipeline run. public required string RunId { get; set; } Property Value string WorkItemId Gets or set the identifier of the data pipeline run work item. public required string WorkItemId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.DequeuedMessage.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.DequeuedMessage.html",
    "title": "Class DequeuedMessage | FoundationaLLM",
    "summary": "Class DequeuedMessage Namespace FoundationaLLM.DataPipelineEngine.Models Assembly FoundationaLLM.DataPipelineEngine.dll Represents a dequeued message from a data pipeline worker queue. public class DequeuedMessage Inheritance object DequeuedMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DequeueCount Gets or sets the number of times the message has been dequeued. public long DequeueCount { get; set; } Property Value long Message Gets or sets the data pipeline run work item queue message. public required DataPipelineRunWorkItemMessage Message { get; set; } Property Value DataPipelineRunWorkItemMessage MessageId Gets or sets the queue message identifier. public required string MessageId { get; set; } Property Value string PopReceipt Gets or sets the queue pop receipt. public required string PopReceipt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Models.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Models Namespaces FoundationaLLM.DataPipelineEngine.Models.Configuration Classes DataPipelineRunWorkItemMessage Represents a queue message for a data pipeline run work item. DequeuedMessage Represents a dequeued message from a data pipeline worker queue."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.CosmosDB.AzureCosmosDBDataPipelineService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.CosmosDB.AzureCosmosDBDataPipelineService.html",
    "title": "Class AzureCosmosDBDataPipelineService | FoundationaLLM",
    "summary": "Class AzureCosmosDBDataPipelineService Namespace FoundationaLLM.DataPipelineEngine.Services.CosmosDB Assembly FoundationaLLM.DataPipelineEngine.dll Provides the implementation for the Azure Cosmos DB data pipeline service. public class AzureCosmosDBDataPipelineService : IAzureCosmosDBDataPipelineService Inheritance object AzureCosmosDBDataPipelineService Implements IAzureCosmosDBDataPipelineService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBDataPipelineService(IOptions<AzureCosmosDBSettings>, ILogger<AzureCosmosDBDataPipelineService>) Initializes a new instance of the AzureCosmosDBDataPipelineService class. public AzureCosmosDBDataPipelineService(IOptions<AzureCosmosDBSettings> options, ILogger<AzureCosmosDBDataPipelineService> logger) Parameters options IOptions<AzureCosmosDBSettings> The IOptions providing the AzureCosmosDBSettings) with the Azure Cosmos DB settings. logger ILogger<AzureCosmosDBDataPipelineService> The ILogger used for logging. Fields _cosmosClient protected readonly CosmosClient _cosmosClient Field Value CosmosClient _dataPipelineContainer protected readonly Container _dataPipelineContainer Field Value Container _leasesContainer protected readonly Container _leasesContainer Field Value Container _logger protected readonly ILogger<AzureCosmosDBDataPipelineService> _logger Field Value ILogger<AzureCosmosDBDataPipelineService> _settings protected readonly AzureCosmosDBSettings _settings Field Value AzureCosmosDBSettings Methods GetDataPipelineContentItem(string, string) Get a data pipeline content item by its canonical identifier. public Task<DataPipelineContentItem> GetDataPipelineContentItem(string dataPipelineRunId, string contentItemCanonicalId) Parameters dataPipelineRunId string Thje data pipeine run identifier. contentItemCanonicalId string The canonical identifier of the content item run. Returns Task<DataPipelineContentItem> GetDataPipelineRuns(DataPipelineRunFilter) Gets a list of data pipeline runs filtered by the provided filter criteria. public Task<List<DataPipelineRun>> GetDataPipelineRuns(DataPipelineRunFilter dataPipelineRunFilter) Parameters dataPipelineRunFilter DataPipelineRunFilter The filter criteria used to filter data pipeline runs. Returns Task<List<DataPipelineRun>> The list of requests data pipeline runs. PatchDataPipelineRunWorkItemsStatusAsync(List<DataPipelineRunWorkItem>) Patches the status of data pipeline run work items in Azure Cosmos DB. public Task<bool> PatchDataPipelineRunWorkItemsStatusAsync(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> The list of data pipeline work items that need the status update. Returns Task<bool> true if the batch is successfully processed. PatchItemPropertiesAsync<T>(string, string, Dictionary<string, object?>, CancellationToken) Patches the specified properties of an item in Azure Cosmos DB. public Task<T> PatchItemPropertiesAsync<T>(string partitionKey, string id, Dictionary<string, object?> propertyValues, CancellationToken cancellationToken = default) Parameters partitionKey string The partition key of the item. id string The identifier of the item. propertyValues Dictionary<string, object> Dictionary of the property names and values to patch. cancellationToken CancellationToken Cancellation token for async calls. Returns Task<T> The patched object of type . Type Parameters T The type of the item to patch. RetrieveItem<T>(string, string) Retrieves an item from Azure Cosmos DB. public Task<T> RetrieveItem<T>(string id, string partitionKey) Parameters id string The identifier of the item. partitionKey string The partition key of the item. Returns Task<T> Type Parameters T The type of the item to retrieve. RetrieveItemsAsync<T>(QueryDefinition) Retrieves items from Azure Cosmos DB. public Task<List<T>> RetrieveItemsAsync<T>(QueryDefinition query) Parameters query QueryDefinition The query definition used to retrieve the items. Returns Task<List<T>> The list of retrieved items. Type Parameters T The type of the items to retrieve. StartChangeFeedProcessorAsync(Func<DataPipelineRunWorkItem, Task>) Starts the change feed processor for the data pipeline run work items. public Task<bool> StartChangeFeedProcessorAsync(Func<DataPipelineRunWorkItem, Task> dataPipelineRunWorkItemProcessor) Parameters dataPipelineRunWorkItemProcessor Func<DataPipelineRunWorkItem, Task> The asynchronous delegate that is invoked for each data pipeline run work item. Returns Task<bool> true if the change feed processor is successfully started. StopChangeFeedProcessorAsync() Stops the change feed processor for the data pipeline run work items. public Task StopChangeFeedProcessorAsync() Returns Task UpsertDataPipelineRunBatchAsync(params dynamic[]) Batch create or update data pipeline run items. public Task<bool> UpsertDataPipelineRunBatchAsync(params dynamic[] dataPipelineRunItems) Parameters dataPipelineRunItems dynamic[] Data pipeline run items to create or replace. Returns Task<bool> true if the batch is successfully processed. UpsertItemAsync<T>(string, T, CancellationToken) Upserts an item in Azure Cosmos DB. public Task<T> UpsertItemAsync<T>(string partitionKey, T item, CancellationToken cancellationToken = default) Parameters partitionKey string The partition of the item to upsert. item T The item to upsert. cancellationToken CancellationToken The cancellation token used to signal a cancellation request. Returns Task<T> The upserted item. Type Parameters T The type of the item to upsert."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.CosmosDB.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.CosmosDB.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Services.CosmosDB | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Services.CosmosDB Classes AzureCosmosDBDataPipelineService Provides the implementation for the Azure Cosmos DB data pipeline service."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineBackgroundService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineBackgroundService.html",
    "title": "Class DataPipelineBackgroundService | FoundationaLLM",
    "summary": "Class DataPipelineBackgroundService Namespace FoundationaLLM.DataPipelineEngine.Services Assembly FoundationaLLM.DataPipelineEngine.dll Provides capabilities for data pipeline services that run in the background. public class DataPipelineBackgroundService : BackgroundService, IHostedService, IDisposable, IResourceProviderClient Inheritance object BackgroundService DataPipelineBackgroundService Implements IHostedService IDisposable IResourceProviderClient Derived DataPipelineRunnerService DataPipelineTriggerService Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineBackgroundService(TimeSpan, IServiceProvider, ILogger) Provides capabilities for data pipeline services that run in the background. public DataPipelineBackgroundService(TimeSpan executionCycleInterval, IServiceProvider serviceProvider, ILogger logger) Parameters executionCycleInterval TimeSpan The time interval between two successive execution cycles. serviceProvider IServiceProvider The service collection provided by the dependency injection container. logger ILogger The logger used for logging. Fields _dataPipelineResourceProvider protected IResourceProviderService _dataPipelineResourceProvider Field Value IResourceProviderService _initializationTask protected Task<bool> _initializationTask Field Value Task<bool> _logger protected readonly ILogger _logger Field Value ILogger _pluginService protected IPluginService _pluginService Field Value IPluginService _serviceProvider protected readonly IServiceProvider _serviceProvider Field Value IServiceProvider Properties ResourceProviders Sets the resource providers collection. public IEnumerable<IResourceProviderService> ResourceProviders { set; } Property Value IEnumerable<IResourceProviderService> Remarks This property must be exposed by services that cannot be injected with the resource providers. These are background services that both provide and consume services to and from the resource providers. ServiceName protected virtual string ServiceName { get; } Property Value string Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. ExecuteAsyncInternal(CancellationToken) Executes the background service's main logic. protected virtual Task ExecuteAsyncInternal(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken The cancellation token used to signal a request to stop the service. Returns Task InitializeAsyncInternal(CancellationToken) Performs additional initialization for the background service. protected virtual Task InitializeAsyncInternal(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken The cancellation token used to signal a request to stop the service. Returns Task SetResourceProviders(IEnumerable<IResourceProviderService>) Implements additional resource provider initialization. protected virtual void SetResourceProviders(IEnumerable<IResourceProviderService> resourceProviders) Parameters resourceProviders IEnumerable<IResourceProviderService> The collection of resource providers available in the main dependency injection container."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineRunnerService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineRunnerService.html",
    "title": "Class DataPipelineRunnerService | FoundationaLLM",
    "summary": "Class DataPipelineRunnerService Namespace FoundationaLLM.DataPipelineEngine.Services Assembly FoundationaLLM.DataPipelineEngine.dll Provides capabilities for running data pipelines. public class DataPipelineRunnerService : DataPipelineBackgroundService, IHostedService, IDisposable, IResourceProviderClient, IDataPipelineRunnerService Inheritance object BackgroundService DataPipelineBackgroundService DataPipelineRunnerService Implements IHostedService IDisposable IResourceProviderClient IDataPipelineRunnerService Inherited Members DataPipelineBackgroundService._serviceProvider DataPipelineBackgroundService._logger DataPipelineBackgroundService._initializationTask DataPipelineBackgroundService._pluginService DataPipelineBackgroundService._dataPipelineResourceProvider DataPipelineBackgroundService.ResourceProviders DataPipelineBackgroundService.SetResourceProviders(IEnumerable<IResourceProviderService>) DataPipelineBackgroundService.ExecuteAsync(CancellationToken) BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineRunnerService(IDataPipelineStateService, IServiceProvider, IOptions<DataPipelineServiceSettings>, ILogger<DataPipelineRunnerService>) Initializes a new instance of the service. public DataPipelineRunnerService(IDataPipelineStateService stateService, IServiceProvider serviceProvider, IOptions<DataPipelineServiceSettings> options, ILogger<DataPipelineRunnerService> logger) Parameters stateService IDataPipelineStateService The Data Pipeline State service providing state management services. serviceProvider IServiceProvider The service collection provided by the dependency injection container. options IOptions<DataPipelineServiceSettings> logger ILogger<DataPipelineRunnerService> The logger used for logging. Properties CurrentRunners public Dictionary<string, DataPipelineRunner> CurrentRunners { get; } Property Value Dictionary<string, DataPipelineRunner> ServiceName protected override string ServiceName { get; } Property Value string Methods ExecuteAsyncInternal(CancellationToken) Executes the background service's main logic. protected override Task ExecuteAsyncInternal(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken The cancellation token used to signal a request to stop the service. Returns Task InitializeAsyncInternal(CancellationToken) Performs additional initialization for the background service. protected override Task InitializeAsyncInternal(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken The cancellation token used to signal a request to stop the service. Returns Task StartRun(DataPipelineRun, List<DataPipelineContentItem>, DataPipelineDefinition, UnifiedUserIdentity) Starts a data pipeline run. public Task<DataPipelineRun> StartRun(DataPipelineRun dataPipelineRun, List<DataPipelineContentItem> contentItems, DataPipelineDefinition dataPipelineDefinition, UnifiedUserIdentity userIdentity) Parameters dataPipelineRun DataPipelineRun The data pipeline run to start. contentItems List<DataPipelineContentItem> The list of content items to process. dataPipelineDefinition DataPipelineDefinition The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<DataPipelineRun> The started data pipeline run. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineService.html",
    "title": "Class DataPipelineService | FoundationaLLM",
    "summary": "Class DataPipelineService Namespace FoundationaLLM.DataPipelineEngine.Services Assembly FoundationaLLM.DataPipelineEngine.dll Provides services for managing data pipelines. public class DataPipelineService : IDataPipelineService Inheritance object DataPipelineService Implements IDataPipelineService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineService(IEnumerable<IResourceProviderService>, DataPipelineServiceSettings, ILogger<DataPipelineService>) Provides services for managing data pipelines. public DataPipelineService(IEnumerable<IResourceProviderService> resourceProviders, DataPipelineServiceSettings settings, ILogger<DataPipelineService> logger) Parameters resourceProviders IEnumerable<IResourceProviderService> The FoundationaLLM resource providers. settings DataPipelineServiceSettings The settings for the service. logger ILogger<DataPipelineService> The logger used for logging. Methods CreateDataPipelineRun(string, DataPipelineRun, UnifiedUserIdentity) Creates a new data pipeline run. public Task<DataPipelineRun> CreateDataPipelineRun(string instanceId, DataPipelineRun dataPipelineRun, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The object with the properties of the new data pipeline run. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The newly created data pipeline run. GetDataPipelineRun(string, string, string, UnifiedUserIdentity) Retrieves a data pipeline run by its name. public Task<DataPipelineRun> GetDataPipelineRun(string instanceId, string dataPipelineName, string runId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineName string The name of the data pipeline. runId string The identifier of the data pipeline run. userIdentity UnifiedUserIdentity Returns Task<DataPipelineRun> The data pipeline run identified by the provided identifier. GetDataPipelineRuns(string, DataPipelineRunFilter, UnifiedUserIdentity) Retrieves a list of data pipeline runs filtered by the provided filter criteria. public Task<List<DataPipelineRun>> GetDataPipelineRuns(string instanceId, DataPipelineRunFilter dataPipelineRunFilter, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRunFilter DataPipelineRunFilter The definition of the filter criteria. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<List<DataPipelineRun>> The requested list of data pipeline run objects."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineStateService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineStateService.html",
    "title": "Class DataPipelineStateService | FoundationaLLM",
    "summary": "Class DataPipelineStateService Namespace FoundationaLLM.DataPipelineEngine.Services Assembly FoundationaLLM.DataPipelineEngine.dll Provides capabilities for data pipeline state management. public class DataPipelineStateService : IDataPipelineStateService Inheritance object DataPipelineStateService Implements IDataPipelineStateService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineStateService(IAzureCosmosDBDataPipelineService, IStorageService, ILogger<DataPipelineStateService>) Provides capabilities for data pipeline state management. public DataPipelineStateService(IAzureCosmosDBDataPipelineService cosmosDBService, IStorageService storageService, ILogger<DataPipelineStateService> logger) Parameters cosmosDBService IAzureCosmosDBDataPipelineService The Azure Cosmos DB service providing database services. storageService IStorageService The storage service providing blob storage capabilities. logger ILogger<DataPipelineStateService> The logger used for logging. Methods GetActiveDataPipelineRuns() Gets a list of active data pipeline runs. public Task<List<DataPipelineRun>> GetActiveDataPipelineRuns() Returns Task<List<DataPipelineRun>> The list of active data pipeline runs. GetDataPipelineContentItem(DataPipelineRunWorkItem) Gets a data pipeline content item associated with a data pipeline run work item. public Task<DataPipelineContentItem> GetDataPipelineContentItem(DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline work item that references the content item. Returns Task<DataPipelineContentItem> The content item referenced by the work item. GetDataPipelineRun(string) Gets a data pipeline run by its identifier. public Task<DataPipelineRun?> GetDataPipelineRun(string runId) Parameters runId string The data pipeline run identifier. Returns Task<DataPipelineRun> The requested data pipeline run object. GetDataPipelineRunArtifactsPath(DataPipelineDefinition, DataPipelineRun) Gets the path to the artifacts directory for a data pipeline run. public string GetDataPipelineRunArtifactsPath(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run. Returns string The path of the artifacts directory. GetDataPipelineRunStageWorkItems(string, string) Gets the list of data pipeline run work items associated with a specified stage of a run. public Task<List<DataPipelineRunWorkItem>> GetDataPipelineRunStageWorkItems(string runId, string stage) Parameters runId string The data pipeline run identifier. stage string The stage of the data pipeline run. Returns Task<List<DataPipelineRunWorkItem>> The list of data pipeline run work items associated with the specified stage of the run. GetDataPipelineRunWorkItem(string, string) Gets a data pipeline run work item by its identifier. public Task<DataPipelineRunWorkItem?> GetDataPipelineRunWorkItem(string workItemId, string runId) Parameters workItemId string The data pipeline run work item identifier. runId string The data pipeline run identifier. Returns Task<DataPipelineRunWorkItem> The requests data pipeline run work item object. GetDataPipelineRuns(DataPipelineRunFilter) Gets a list of data pipeline runs filtered by the provided filter criteria. public Task<List<DataPipelineRun>> GetDataPipelineRuns(DataPipelineRunFilter dataPipelineRunFilter) Parameters dataPipelineRunFilter DataPipelineRunFilter The filter criteria used to filter data pipeline runs. Returns Task<List<DataPipelineRun>> The list of requests data pipeline runs. InitializeDataPipelineRunState(DataPipelineDefinition, DataPipelineRun, List<DataPipelineContentItem>) Initializes the state of a data pipeline run. public Task<bool> InitializeDataPipelineRunState(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, List<DataPipelineContentItem> contentItems) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition used to initialize the run state. dataPipelineRun DataPipelineRun The details of the data pipeline run. contentItems List<DataPipelineContentItem> The list of content items to be processed by the data pipeline run. Returns Task<bool> true if the initialization is successful. LoadDataPipelineRunParts<T>(DataPipelineDefinition, DataPipelineRun, string) Loads the parts associated with a data pipeline run. public Task<IEnumerable<T>> LoadDataPipelineRunParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, string filePath) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run . filePath string The name of the file that contains the data pipeline run parts. Returns Task<IEnumerable<T>> A list with the parts associated with the data pipeline run. Type Parameters T The type of the data pipeline run part to be loaded. Remarks The filePath parameter must contain a path that is relative to the path of the data pipeline run artifacts directory. LoadDataPipelineRunWorkItemArtifacts(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, string) Loads the artifacts associated with a data pipeline run work item. public Task<List<DataPipelineStateArtifact>> LoadDataPipelineRunWorkItemArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, string artifactsNameFilter) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. artifactsNameFilter string The name pattern used to identify a subset of the artifacts. Returns Task<List<DataPipelineStateArtifact>> A list with the binary contents of the artifacts. LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, string) Loads the content item parts associated with a data pipeline run work item. public Task<IEnumerable<T>> LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, string fileName) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. fileName string The name of the file that contains the content item parts. Returns Task<IEnumerable<T>> A list with the content item parts associated with the data pipeline run work item. Type Parameters T The type of the content item parts to be loaded. LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition, DataPipelineRun, string, string) Loads the content item parts associated with a data pipeline run work item. public Task<IEnumerable<T>> LoadDataPipelineRunWorkItemParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, string contentItemCanonicalId, string fileName) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. contentItemCanonicalId string The content item canonical identifier. fileName string The name of the file that contains the content item parts. Returns Task<IEnumerable<T>> A list with the content item parts associated with the data pipeline run work item. Type Parameters T The type of the content item parts to be loaded. PersistDataPipelineRunWorkItems(List<DataPipelineRunWorkItem>) Persists a list of data pipeline run work items. public Task<bool> PersistDataPipelineRunWorkItems(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> The list of data pipeline work items to be persisted. Returns Task<bool> true if the items are successfully persisted. SaveDataPipelineRunArtifacts(DataPipelineDefinition, DataPipelineRun, List<DataPipelineStateArtifact>) Saves the artifacts associated with a data pipeline run. public Task SaveDataPipelineRunArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, List<DataPipelineStateArtifact> artifacts) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run. artifacts List<DataPipelineStateArtifact> The list of artifacts to be saved. Returns Task SaveDataPipelineRunParts<T>(DataPipelineDefinition, DataPipelineRun, IEnumerable<T>, string) Saves the parts associated with a data pipeline run. public Task SaveDataPipelineRunParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, IEnumerable<T> dataPipelineRunParts, string filePath) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the run. dataPipelineRun DataPipelineRun The data pipeline run. dataPipelineRunParts IEnumerable<T> The list of data pipeline run parts. filePath string The path of the file that contains the data pipeline run parts. Returns Task Type Parameters T The type of the data pipeline part to be saved. Remarks The filePath parameter must contain a path that is relative to the path of the data pipeline run artifacts directory. SaveDataPipelineRunWorkItemArtifacts(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, List<DataPipelineStateArtifact>) Saves the artifacts associated with a data pipeline run work item. public Task SaveDataPipelineRunWorkItemArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, List<DataPipelineStateArtifact> artifacts) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. artifacts List<DataPipelineStateArtifact> The list with the binary contents of the artifacts. Returns Task SaveDataPipelineRunWorkItemParts<T>(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem, IEnumerable<T>, string) Saves the content item parts associated with a data pipeline run work item. public Task SaveDataPipelineRunWorkItemParts<T>(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem, IEnumerable<T> contentItemParts, string fileName) where T : class, new() Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item. contentItemParts IEnumerable<T> The list with the content item parts. fileName string The name of the file that contains the content item parts. Returns Task Type Parameters T The type of the content item parts to be saved. StartDataPipelineRunWorkItemProcessing(Func<DataPipelineRunWorkItem, Task>) Starts processing data pipeline run work items. public Task<bool> StartDataPipelineRunWorkItemProcessing(Func<DataPipelineRunWorkItem, Task> processWorkItem) Parameters processWorkItem Func<DataPipelineRunWorkItem, Task> The asynchronous delegate that is invoked for each data pipeline run work item. Returns Task<bool> true if the processing is successfully started. StopDataPipelineRunWorkItemProcessing() Stops processing data pipeline run work items. public Task StopDataPipelineRunWorkItemProcessing() Returns Task TryLoadDataPipelineRunArtifacts(DataPipelineDefinition, DataPipelineRun, string) Tries to load the artifacts associated with a data pipeline run. public Task<(bool Success, List<DataPipelineStateArtifact> Artifacts)> TryLoadDataPipelineRunArtifacts(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, string artifactsNameFilter) Parameters dataPipelineDefinition DataPipelineDefinition The data pipeline definition associated with the work item. dataPipelineRun DataPipelineRun The data pipeline run item associated with the work item. artifactsNameFilter string The name pattern used to identify the artifacts to load. Returns Task<(bool Success, List<DataPipelineStateArtifact> Artifacts)> A boolean indicating whether the operation was successful or not and the list with the details of the artifacts if the operation is successful. UpdateDataPipelineRunStatus(DataPipelineRun) Updates the status of a data pipeline run. public Task<bool> UpdateDataPipelineRunStatus(DataPipelineRun dataPipelineRun) Parameters dataPipelineRun DataPipelineRun The data pipeline run whose status is to be updated. Returns Task<bool> true if the status update is successful. UpdateDataPipelineRunWorkItem(DataPipelineRunWorkItem) Updates a data pipeline run work item. public Task<bool> UpdateDataPipelineRunWorkItem(DataPipelineRunWorkItem workItem) Parameters workItem DataPipelineRunWorkItem The data pipeline run work item to be updated. Returns Task<bool> true if the data pipeline run work item is successfully updated. UpdateDataPipelineRunWorkItemsStatus(List<DataPipelineRunWorkItem>) Updates the status of data pipeline run work items. public Task<bool> UpdateDataPipelineRunWorkItemsStatus(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> The list of data pipeline work items whose status must be updated. Returns Task<bool> true if the items statuses are successfully updated."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineTriggerService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineTriggerService.html",
    "title": "Class DataPipelineTriggerService | FoundationaLLM",
    "summary": "Class DataPipelineTriggerService Namespace FoundationaLLM.DataPipelineEngine.Services Assembly FoundationaLLM.DataPipelineEngine.dll Provides capabilities for triggering data pipeline runs. public class DataPipelineTriggerService : DataPipelineBackgroundService, IHostedService, IDisposable, IResourceProviderClient, IDataPipelineTriggerService Inheritance object BackgroundService DataPipelineBackgroundService DataPipelineTriggerService Implements IHostedService IDisposable IResourceProviderClient IDataPipelineTriggerService Inherited Members DataPipelineBackgroundService._serviceProvider DataPipelineBackgroundService._logger DataPipelineBackgroundService._initializationTask DataPipelineBackgroundService._pluginService DataPipelineBackgroundService._dataPipelineResourceProvider DataPipelineBackgroundService.ResourceProviders DataPipelineBackgroundService.InitializeAsyncInternal(CancellationToken) DataPipelineBackgroundService.ExecuteAsync(CancellationToken) BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineTriggerService(IResourceValidatorFactory, IServiceProvider, ILogger<DataPipelineTriggerService>) Provides capabilities for triggering data pipeline runs. public DataPipelineTriggerService(IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILogger<DataPipelineTriggerService> logger) Parameters resourceValidatorFactory IResourceValidatorFactory The factory used to create resource validators. serviceProvider IServiceProvider The service collection provided by the dependency injection container. logger ILogger<DataPipelineTriggerService> The logger used for logging. Properties ServiceName protected override string ServiceName { get; } Property Value string Methods ExecuteAsyncInternal(CancellationToken) Executes the background service's main logic. protected override Task ExecuteAsyncInternal(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken The cancellation token used to signal a request to stop the service. Returns Task SetResourceProviders(IEnumerable<IResourceProviderService>) Implements additional resource provider initialization. protected override void SetResourceProviders(IEnumerable<IResourceProviderService> resourceProviders) Parameters resourceProviders IEnumerable<IResourceProviderService> The collection of resource providers available in the main dependency injection container. TriggerDataPipeline(string, DataPipelineRun, DataPipelineDefinitionSnapshot, UnifiedUserIdentity) Creates a new data pipeline run. public Task<DataPipelineRun?> TriggerDataPipeline(string instanceId, DataPipelineRun dataPipelineRun, DataPipelineDefinitionSnapshot dataPipelineSnapshot, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. dataPipelineRun DataPipelineRun The data pipeline run to create. dataPipelineSnapshot DataPipelineDefinitionSnapshot The snapshot of the definition of the data pipeline at the time the run was triggered. userIdentity UnifiedUserIdentity The identity of the user running the operation. Returns Task<DataPipelineRun> The newly created data pipeline run."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineWorkerService.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.DataPipelineWorkerService.html",
    "title": "Class DataPipelineWorkerService | FoundationaLLM",
    "summary": "Class DataPipelineWorkerService Namespace FoundationaLLM.DataPipelineEngine.Services Assembly FoundationaLLM.DataPipelineEngine.dll Provides capabilites for background processing of data pipeline work items. public class DataPipelineWorkerService : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService DataPipelineWorkerService Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineWorkerService(IDataPipelineStateService, IEnumerable<IResourceProviderService>, IOptions<DataPipelineWorkerServiceSettings>, IServiceProvider, ILogger<DataPipelineWorkerService>) Initializes a new instance of the service. public DataPipelineWorkerService(IDataPipelineStateService stateService, IEnumerable<IResourceProviderService> resourceProviderServices, IOptions<DataPipelineWorkerServiceSettings> options, IServiceProvider serviceProvider, ILogger<DataPipelineWorkerService> logger) Parameters stateService IDataPipelineStateService The Data Pipeline State service providing state management services. resourceProviderServices IEnumerable<IResourceProviderService> The FoundationaLLM resource provider services. options IOptions<DataPipelineWorkerServiceSettings> The options with the service settings. serviceProvider IServiceProvider The service collection provided by the dependency injection container. logger ILogger<DataPipelineWorkerService> The logger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.DataPipelineRunWorkItemStatus.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.DataPipelineRunWorkItemStatus.html",
    "title": "Class DataPipelineRunWorkItemStatus | FoundationaLLM",
    "summary": "Class DataPipelineRunWorkItemStatus Namespace FoundationaLLM.DataPipelineEngine.Services.Runners Assembly FoundationaLLM.DataPipelineEngine.dll Represents the status of a work item in a data pipeline run. public class DataPipelineRunWorkItemStatus Inheritance object DataPipelineRunWorkItemStatus Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Changed Gets or sets a value indicating whether the work item status has been modified. public bool Changed { get; set; } Property Value bool Completed Gets or sets the indicator of whether the work item is completed. public bool Completed { get; set; } Property Value bool ContentItemCanonicalId The canonical identifier of the content item referenced by the work item. public required string ContentItemCanonicalId { get; set; } Property Value string Successful Gets or sets the indicator of whether the work item was completed successfully. public bool Successful { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.DataPipelineRunner.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.DataPipelineRunner.html",
    "title": "Class DataPipelineRunner | FoundationaLLM",
    "summary": "Class DataPipelineRunner Namespace FoundationaLLM.DataPipelineEngine.Services.Runners Assembly FoundationaLLM.DataPipelineEngine.dll Provides capabilities for running data pipelines. public class DataPipelineRunner Inheritance object DataPipelineRunner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineRunner(IDataPipelineStateService, IPluginService, QueueClient, IServiceProvider) Provides capabilities for running data pipelines. public DataPipelineRunner(IDataPipelineStateService stateService, IPluginService pluginService, QueueClient queueClient, IServiceProvider serviceProvider) Parameters stateService IDataPipelineStateService The Data Pipeline State service. pluginService IPluginService The plugin service providing access to registered plugins. queueClient QueueClient The queue client used for interacting with Azure Storage Queues. serviceProvider IServiceProvider The service collection provided by the dependency injection container. Properties CurrentStageRunners public Dictionary<string, DataPipelineStageRunner> CurrentStageRunners { get; } Property Value Dictionary<string, DataPipelineStageRunner> Methods Completed() public Task<bool> Completed() Returns Task<bool> InitializeExisting(DataPipelineDefinition, DataPipelineRun) public Task InitializeExisting(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun) Parameters dataPipelineDefinition DataPipelineDefinition dataPipelineRun DataPipelineRun Returns Task InitializeNew(DataPipelineRun, List<DataPipelineContentItem>, DataPipelineDefinition, UnifiedUserIdentity) public Task InitializeNew(DataPipelineRun dataPipelineRun, List<DataPipelineContentItem> contentItems, DataPipelineDefinition dataPipelineDefinition, UnifiedUserIdentity userIdentity) Parameters dataPipelineRun DataPipelineRun contentItems List<DataPipelineContentItem> dataPipelineDefinition DataPipelineDefinition userIdentity UnifiedUserIdentity Returns Task ProcessDataPipelineRunWorkItem(DataPipelineRunWorkItem) public Task ProcessDataPipelineRunWorkItem(DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineRunWorkItem DataPipelineRunWorkItem Returns Task"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.DataPipelineStageRunner.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.DataPipelineStageRunner.html",
    "title": "Class DataPipelineStageRunner | FoundationaLLM",
    "summary": "Class DataPipelineStageRunner Namespace FoundationaLLM.DataPipelineEngine.Services.Runners Assembly FoundationaLLM.DataPipelineEngine.dll Provides capabilities for running data pipelines. public class DataPipelineStageRunner Inheritance object DataPipelineStageRunner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataPipelineStageRunner(string, IDataPipelineStateService, ILogger<DataPipelineStageRunner>) Provides capabilities for running data pipelines. public DataPipelineStageRunner(string stageName, IDataPipelineStateService stateService, ILogger<DataPipelineStageRunner> logger) Parameters stageName string The name of the data pipeline stage that is run. stateService IDataPipelineStateService The Data Pipeline State service. logger ILogger<DataPipelineStageRunner> The logger used for logging. Properties Changed public bool Changed { get; } Property Value bool Completed public bool Completed { get; } Property Value bool CompletedWorkItemsCount public int CompletedWorkItemsCount { get; } Property Value int ContentItemsCanonicalIds public List<string> ContentItemsCanonicalIds { get; } Property Value List<string> StageName public string StageName { get; } Property Value string Successful public bool Successful { get; } Property Value bool SuccessfulWorkItemsCount public int SuccessfulWorkItemsCount { get; } Property Value int WorkItemsCount public int WorkItemsCount { get; } Property Value int Methods InitializeExisting(List<DataPipelineRunWorkItem>) public void InitializeExisting(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> InitializeNew(List<DataPipelineRunWorkItem>) public Task InitializeNew(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> Returns Task ProcessDataPipelineRunWorkItem(DataPipelineRunWorkItem) public Task ProcessDataPipelineRunWorkItem(DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineRunWorkItem DataPipelineRunWorkItem Returns Task ResetChanged() public void ResetChanged() SetFailedWorkItems(List<DataPipelineRunWorkItem>) public Task SetFailedWorkItems(List<DataPipelineRunWorkItem> workItems) Parameters workItems List<DataPipelineRunWorkItem> Returns Task"
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.Runners.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Services.Runners | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Services.Runners Classes DataPipelineRunWorkItemStatus Represents the status of a work item in a data pipeline run. DataPipelineRunner Provides capabilities for running data pipelines. DataPipelineStageRunner Provides capabilities for running data pipelines."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.Services.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine.Services Namespaces FoundationaLLM.DataPipelineEngine.Services.CosmosDB FoundationaLLM.DataPipelineEngine.Services.Runners Classes DataPipelineBackgroundService Provides capabilities for data pipeline services that run in the background. DataPipelineRunnerService Provides capabilities for running data pipelines. DataPipelineService Provides services for managing data pipelines. DataPipelineStateService Provides capabilities for data pipeline state management. DataPipelineTriggerService Provides capabilities for triggering data pipeline runs. DataPipelineWorkerService Provides capabilites for background processing of data pipeline work items."
  },
  "api/dotnet/FoundationaLLM.DataPipelineEngine.html": {
    "href": "api/dotnet/FoundationaLLM.DataPipelineEngine.html",
    "title": "Namespace FoundationaLLM.DataPipelineEngine | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataPipelineEngine Namespaces FoundationaLLM.DataPipelineEngine.Clients FoundationaLLM.DataPipelineEngine.Exceptions FoundationaLLM.DataPipelineEngine.Interfaces FoundationaLLM.DataPipelineEngine.Models FoundationaLLM.DataPipelineEngine.Services"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReference.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.DataSourceReference.html",
    "title": "Class DataSourceReference | FoundationaLLM",
    "summary": "Class DataSourceReference Namespace FoundationaLLM.DataSource.Models Assembly FoundationaLLM.DataSource.dll Contains a reference to a data source.. public class DataSourceReference : ResourceReference Inheritance object ResourceReference DataSourceReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the data source. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.DataSource.Models.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Models.html",
    "title": "Namespace FoundationaLLM.DataSource.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataSource.Models Classes DataSourceReference Contains a reference to a data source.."
  },
  "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.DataSourceResourceProviderService.html",
    "title": "Class DataSourceResourceProviderService | FoundationaLLM",
    "summary": "Class DataSourceResourceProviderService Namespace FoundationaLLM.DataSource.ResourceProviders Assembly FoundationaLLM.DataSource.dll Implements the FoundationaLLM.DataSource resource provider. public class DataSourceResourceProviderService : ResourceProviderServiceBase<DataSourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<DataSourceReference> DataSourceResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<DataSourceReference>._resourceReferenceStore ResourceProviderServiceBase<DataSourceReference>._serviceProvider ResourceProviderServiceBase<DataSourceReference>._authorizationServiceClient ResourceProviderServiceBase<DataSourceReference>._storageService ResourceProviderServiceBase<DataSourceReference>._eventService ResourceProviderServiceBase<DataSourceReference>._resourceValidatorFactory ResourceProviderServiceBase<DataSourceReference>._validator ResourceProviderServiceBase<DataSourceReference>._logger ResourceProviderServiceBase<DataSourceReference>._instanceSettings ResourceProviderServiceBase<DataSourceReference>._storageContainerName ResourceProviderServiceBase<DataSourceReference>._serializerSettings ResourceProviderServiceBase<DataSourceReference>.Name ResourceProviderServiceBase<DataSourceReference>.IsInitialized ResourceProviderServiceBase<DataSourceReference>.InitializationTask ResourceProviderServiceBase<DataSourceReference>.AllowedResourceTypes ResourceProviderServiceBase<DataSourceReference>.StorageAccountName ResourceProviderServiceBase<DataSourceReference>.StorageContainerName ResourceProviderServiceBase<DataSourceReference>.Initialize() ResourceProviderServiceBase<DataSourceReference>.WaitForInitialization() ResourceProviderServiceBase<DataSourceReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataSourceReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataSourceReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataSourceReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<DataSourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<DataSourceReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<DataSourceReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<DataSourceReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<DataSourceReference>.HandleCacheResetCommand() ResourceProviderServiceBase<DataSourceReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<DataSourceReference>.GetResourceProviderState() ResourceProviderServiceBase<DataSourceReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<DataSourceReference, bool, Task<T>>) ResourceProviderServiceBase<DataSourceReference>.LoadResource<T>(DataSourceReference) ResourceProviderServiceBase<DataSourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<DataSourceReference>.CreateResource<T>(DataSourceReference, T) ResourceProviderServiceBase<DataSourceReference>.CreateResource(DataSourceReference, Stream, string) ResourceProviderServiceBase<DataSourceReference>.CreateResources<T1, T2>(DataSourceReference, T1, DataSourceReference, T2) ResourceProviderServiceBase<DataSourceReference>.SaveResource<T>(DataSourceReference, T) ResourceProviderServiceBase<DataSourceReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<DataSourceReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<DataSourceReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<DataSourceReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<DataSourceReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<DataSourceReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<DataSourceReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<DataSourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<DataSourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<DataSourceReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<DataSourceReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<DataSourceReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<DataSourceReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataSourceResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.DataSource resource provider. public DataSourceResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to provide loggers for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.DataSource.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataSource.ResourceProviders Classes DataSourceResourceProviderService Implements the FoundationaLLM.DataSource resource provider."
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.AzureDataLakeDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.AzureDataLakeDataSourceValidator.html",
    "title": "Class AzureDataLakeDataSourceValidator | FoundationaLLM",
    "summary": "Class AzureDataLakeDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the AzureDataLakeDataSource model. public class AzureDataLakeDataSourceValidator : DataSourceValidator<AzureDataLakeDataSource>, IValidator<AzureDataLakeDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AzureDataLakeDataSource> DataSourceValidator<AzureDataLakeDataSource> AzureDataLakeDataSourceValidator Implements IValidator<AzureDataLakeDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<AzureDataLakeDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<AzureDataLakeDataSource>.Validate(AzureDataLakeDataSource) AbstractValidator<AzureDataLakeDataSource>.ValidateAsync(AzureDataLakeDataSource, CancellationToken) AbstractValidator<AzureDataLakeDataSource>.Validate(ValidationContext<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.ValidateAsync(ValidationContext<AzureDataLakeDataSource>, CancellationToken) AbstractValidator<AzureDataLakeDataSource>.CreateDescriptor() AbstractValidator<AzureDataLakeDataSource>.RuleFor<TProperty>(Expression<Func<AzureDataLakeDataSource, TProperty>>) AbstractValidator<AzureDataLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureDataLakeDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureDataLakeDataSource, TProperty>>, Func<AzureDataLakeDataSource, TProperty, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.RuleForEach<TElement>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>) AbstractValidator<AzureDataLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureDataLakeDataSource, IEnumerable<TElement>>>, Func<AzureDataLakeDataSource, TElement, TTransformed>) AbstractValidator<AzureDataLakeDataSource>.RuleSet(string, Action) AbstractValidator<AzureDataLakeDataSource>.When(Func<AzureDataLakeDataSource, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.When(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.Unless(Func<AzureDataLakeDataSource, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.Unless(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, bool>, Action) AbstractValidator<AzureDataLakeDataSource>.WhenAsync(Func<AzureDataLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.WhenAsync(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.UnlessAsync(Func<AzureDataLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.UnlessAsync(Func<AzureDataLakeDataSource, ValidationContext<AzureDataLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureDataLakeDataSource>.Include(IValidator<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.Include<TValidator>(Func<AzureDataLakeDataSource, TValidator>) AbstractValidator<AzureDataLakeDataSource>.GetEnumerator() AbstractValidator<AzureDataLakeDataSource>.EnsureInstanceNotNull(object) AbstractValidator<AzureDataLakeDataSource>.PreValidate(ValidationContext<AzureDataLakeDataSource>, ValidationResult) AbstractValidator<AzureDataLakeDataSource>.RaiseValidationException(ValidationContext<AzureDataLakeDataSource>, ValidationResult) AbstractValidator<AzureDataLakeDataSource>.OnRuleAdded(IValidationRule<AzureDataLakeDataSource>) AbstractValidator<AzureDataLakeDataSource>.CascadeMode AbstractValidator<AzureDataLakeDataSource>.ClassLevelCascadeMode AbstractValidator<AzureDataLakeDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSourceValidator() Configures the validation rules for the AzureDataLakeDataSource model. public AzureDataLakeDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.AzureSQLDatabaseDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.AzureSQLDatabaseDataSourceValidator.html",
    "title": "Class AzureSQLDatabaseDataSourceValidator | FoundationaLLM",
    "summary": "Class AzureSQLDatabaseDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the AzureSQLDatabaseDataSource model. public class AzureSQLDatabaseDataSourceValidator : DataSourceValidator<AzureSQLDatabaseDataSource>, IValidator<AzureSQLDatabaseDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<AzureSQLDatabaseDataSource> DataSourceValidator<AzureSQLDatabaseDataSource> AzureSQLDatabaseDataSourceValidator Implements IValidator<AzureSQLDatabaseDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<AzureSQLDatabaseDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<AzureSQLDatabaseDataSource>.Validate(AzureSQLDatabaseDataSource) AbstractValidator<AzureSQLDatabaseDataSource>.ValidateAsync(AzureSQLDatabaseDataSource, CancellationToken) AbstractValidator<AzureSQLDatabaseDataSource>.Validate(ValidationContext<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.ValidateAsync(ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken) AbstractValidator<AzureSQLDatabaseDataSource>.CreateDescriptor() AbstractValidator<AzureSQLDatabaseDataSource>.RuleFor<TProperty>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>) AbstractValidator<AzureSQLDatabaseDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.Transform<TProperty, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, TProperty>>, Func<AzureSQLDatabaseDataSource, TProperty, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.RuleForEach<TElement>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>) AbstractValidator<AzureSQLDatabaseDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<AzureSQLDatabaseDataSource, IEnumerable<TElement>>>, Func<AzureSQLDatabaseDataSource, TElement, TTransformed>) AbstractValidator<AzureSQLDatabaseDataSource>.RuleSet(string, Action) AbstractValidator<AzureSQLDatabaseDataSource>.When(Func<AzureSQLDatabaseDataSource, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.When(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Unless(Func<AzureSQLDatabaseDataSource, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Unless(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, bool>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.WhenAsync(Func<AzureSQLDatabaseDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.WhenAsync(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.UnlessAsync(Func<AzureSQLDatabaseDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.UnlessAsync(Func<AzureSQLDatabaseDataSource, ValidationContext<AzureSQLDatabaseDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<AzureSQLDatabaseDataSource>.Include(IValidator<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.Include<TValidator>(Func<AzureSQLDatabaseDataSource, TValidator>) AbstractValidator<AzureSQLDatabaseDataSource>.GetEnumerator() AbstractValidator<AzureSQLDatabaseDataSource>.EnsureInstanceNotNull(object) AbstractValidator<AzureSQLDatabaseDataSource>.PreValidate(ValidationContext<AzureSQLDatabaseDataSource>, ValidationResult) AbstractValidator<AzureSQLDatabaseDataSource>.RaiseValidationException(ValidationContext<AzureSQLDatabaseDataSource>, ValidationResult) AbstractValidator<AzureSQLDatabaseDataSource>.OnRuleAdded(IValidationRule<AzureSQLDatabaseDataSource>) AbstractValidator<AzureSQLDatabaseDataSource>.CascadeMode AbstractValidator<AzureSQLDatabaseDataSource>.ClassLevelCascadeMode AbstractValidator<AzureSQLDatabaseDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSourceValidator() Configures the validation rules for the AzureSQLDatabaseDataSource model. public AzureSQLDatabaseDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceBaseValidator.html",
    "title": "Class DataSourceBaseValidator | FoundationaLLM",
    "summary": "Class DataSourceBaseValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the DataSourceBase model. public class DataSourceBaseValidator : AbstractValidator<DataSourceBase>, IValidator<DataSourceBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<DataSourceBase> DataSourceBaseValidator Implements IValidator<DataSourceBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<DataSourceBase>.Validate(DataSourceBase) AbstractValidator<DataSourceBase>.ValidateAsync(DataSourceBase, CancellationToken) AbstractValidator<DataSourceBase>.Validate(ValidationContext<DataSourceBase>) AbstractValidator<DataSourceBase>.ValidateAsync(ValidationContext<DataSourceBase>, CancellationToken) AbstractValidator<DataSourceBase>.CreateDescriptor() AbstractValidator<DataSourceBase>.RuleFor<TProperty>(Expression<Func<DataSourceBase, TProperty>>) AbstractValidator<DataSourceBase>.Transform<TProperty, TTransformed>(Expression<Func<DataSourceBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<DataSourceBase>.Transform<TProperty, TTransformed>(Expression<Func<DataSourceBase, TProperty>>, Func<DataSourceBase, TProperty, TTransformed>) AbstractValidator<DataSourceBase>.RuleForEach<TElement>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>) AbstractValidator<DataSourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<DataSourceBase>.TransformForEach<TElement, TTransformed>(Expression<Func<DataSourceBase, IEnumerable<TElement>>>, Func<DataSourceBase, TElement, TTransformed>) AbstractValidator<DataSourceBase>.RuleSet(string, Action) AbstractValidator<DataSourceBase>.When(Func<DataSourceBase, bool>, Action) AbstractValidator<DataSourceBase>.When(Func<DataSourceBase, ValidationContext<DataSourceBase>, bool>, Action) AbstractValidator<DataSourceBase>.Unless(Func<DataSourceBase, bool>, Action) AbstractValidator<DataSourceBase>.Unless(Func<DataSourceBase, ValidationContext<DataSourceBase>, bool>, Action) AbstractValidator<DataSourceBase>.WhenAsync(Func<DataSourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.WhenAsync(Func<DataSourceBase, ValidationContext<DataSourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.UnlessAsync(Func<DataSourceBase, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.UnlessAsync(Func<DataSourceBase, ValidationContext<DataSourceBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<DataSourceBase>.Include(IValidator<DataSourceBase>) AbstractValidator<DataSourceBase>.Include<TValidator>(Func<DataSourceBase, TValidator>) AbstractValidator<DataSourceBase>.GetEnumerator() AbstractValidator<DataSourceBase>.EnsureInstanceNotNull(object) AbstractValidator<DataSourceBase>.PreValidate(ValidationContext<DataSourceBase>, ValidationResult) AbstractValidator<DataSourceBase>.RaiseValidationException(ValidationContext<DataSourceBase>, ValidationResult) AbstractValidator<DataSourceBase>.OnRuleAdded(IValidationRule<DataSourceBase>) AbstractValidator<DataSourceBase>.CascadeMode AbstractValidator<DataSourceBase>.ClassLevelCascadeMode AbstractValidator<DataSourceBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataSourceBaseValidator() Configures the validation rules for the DataSourceBase model. public DataSourceBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceValidator-1.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.DataSourceValidator-1.html",
    "title": "Class DataSourceValidator<T> | FoundationaLLM",
    "summary": "Class DataSourceValidator<T> Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Base validator for data sources. public class DataSourceValidator<T> : AbstractValidator<T>, IValidator<T>, IValidator, IEnumerable<IValidationRule>, IEnumerable where T : DataSourceBase Type Parameters T The type of data source to validate. Inheritance object AbstractValidator<T> DataSourceValidator<T> Implements IValidator<T> IValidator IEnumerable<IValidationRule> IEnumerable Derived AzureDataLakeDataSourceValidator AzureSQLDatabaseDataSourceValidator OneLakeDataSourceValidator SharePointOnlineSiteDataSourceValidator Inherited Members AbstractValidator<T>.Validate(T) AbstractValidator<T>.ValidateAsync(T, CancellationToken) AbstractValidator<T>.Validate(ValidationContext<T>) AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken) AbstractValidator<T>.CreateDescriptor() AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>) AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>) AbstractValidator<T>.RuleSet(string, Action) AbstractValidator<T>.When(Func<T, bool>, Action) AbstractValidator<T>.When(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.Unless(Func<T, bool>, Action) AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, bool>, Action) AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<bool>>, Action) AbstractValidator<T>.Include(IValidator<T>) AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>) AbstractValidator<T>.GetEnumerator() AbstractValidator<T>.EnsureInstanceNotNull(object) AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult) AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult) AbstractValidator<T>.OnRuleAdded(IValidationRule<T>) AbstractValidator<T>.CascadeMode AbstractValidator<T>.ClassLevelCascadeMode AbstractValidator<T>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ValidConfigurationReference(DataSourceBase, string) Validates the value of a specified configuration reference. protected bool ValidConfigurationReference(DataSourceBase dataSource, string configurationKey) Parameters dataSource DataSourceBase The data source object being validated. configurationKey string The name of the configuration reference being validated. Returns bool True if the value of the configuration reference is valid, False otherwise."
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.OneLakeDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.OneLakeDataSourceValidator.html",
    "title": "Class OneLakeDataSourceValidator | FoundationaLLM",
    "summary": "Class OneLakeDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the OneLakeDataSource model. public class OneLakeDataSourceValidator : DataSourceValidator<OneLakeDataSource>, IValidator<OneLakeDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<OneLakeDataSource> DataSourceValidator<OneLakeDataSource> OneLakeDataSourceValidator Implements IValidator<OneLakeDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<OneLakeDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<OneLakeDataSource>.Validate(OneLakeDataSource) AbstractValidator<OneLakeDataSource>.ValidateAsync(OneLakeDataSource, CancellationToken) AbstractValidator<OneLakeDataSource>.Validate(ValidationContext<OneLakeDataSource>) AbstractValidator<OneLakeDataSource>.ValidateAsync(ValidationContext<OneLakeDataSource>, CancellationToken) AbstractValidator<OneLakeDataSource>.CreateDescriptor() AbstractValidator<OneLakeDataSource>.RuleFor<TProperty>(Expression<Func<OneLakeDataSource, TProperty>>) AbstractValidator<OneLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<OneLakeDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<OneLakeDataSource>.Transform<TProperty, TTransformed>(Expression<Func<OneLakeDataSource, TProperty>>, Func<OneLakeDataSource, TProperty, TTransformed>) AbstractValidator<OneLakeDataSource>.RuleForEach<TElement>(Expression<Func<OneLakeDataSource, IEnumerable<TElement>>>) AbstractValidator<OneLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<OneLakeDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<OneLakeDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<OneLakeDataSource, IEnumerable<TElement>>>, Func<OneLakeDataSource, TElement, TTransformed>) AbstractValidator<OneLakeDataSource>.RuleSet(string, Action) AbstractValidator<OneLakeDataSource>.When(Func<OneLakeDataSource, bool>, Action) AbstractValidator<OneLakeDataSource>.When(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, bool>, Action) AbstractValidator<OneLakeDataSource>.Unless(Func<OneLakeDataSource, bool>, Action) AbstractValidator<OneLakeDataSource>.Unless(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, bool>, Action) AbstractValidator<OneLakeDataSource>.WhenAsync(Func<OneLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.WhenAsync(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.UnlessAsync(Func<OneLakeDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.UnlessAsync(Func<OneLakeDataSource, ValidationContext<OneLakeDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<OneLakeDataSource>.Include(IValidator<OneLakeDataSource>) AbstractValidator<OneLakeDataSource>.Include<TValidator>(Func<OneLakeDataSource, TValidator>) AbstractValidator<OneLakeDataSource>.GetEnumerator() AbstractValidator<OneLakeDataSource>.EnsureInstanceNotNull(object) AbstractValidator<OneLakeDataSource>.PreValidate(ValidationContext<OneLakeDataSource>, ValidationResult) AbstractValidator<OneLakeDataSource>.RaiseValidationException(ValidationContext<OneLakeDataSource>, ValidationResult) AbstractValidator<OneLakeDataSource>.OnRuleAdded(IValidationRule<OneLakeDataSource>) AbstractValidator<OneLakeDataSource>.CascadeMode AbstractValidator<OneLakeDataSource>.ClassLevelCascadeMode AbstractValidator<OneLakeDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OneLakeDataSourceValidator() Configures the validation rules for the OneLakeDataSource model. public OneLakeDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.SharePointOnlineSiteDataSourceValidator.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.SharePointOnlineSiteDataSourceValidator.html",
    "title": "Class SharePointOnlineSiteDataSourceValidator | FoundationaLLM",
    "summary": "Class SharePointOnlineSiteDataSourceValidator Namespace FoundationaLLM.DataSource.Validation Assembly FoundationaLLM.DataSource.dll Validator for the SharePointOnlineSiteDataSource model. public class SharePointOnlineSiteDataSourceValidator : DataSourceValidator<SharePointOnlineSiteDataSource>, IValidator<SharePointOnlineSiteDataSource>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<SharePointOnlineSiteDataSource> DataSourceValidator<SharePointOnlineSiteDataSource> SharePointOnlineSiteDataSourceValidator Implements IValidator<SharePointOnlineSiteDataSource> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members DataSourceValidator<SharePointOnlineSiteDataSource>.ValidConfigurationReference(DataSourceBase, string) AbstractValidator<SharePointOnlineSiteDataSource>.Validate(SharePointOnlineSiteDataSource) AbstractValidator<SharePointOnlineSiteDataSource>.ValidateAsync(SharePointOnlineSiteDataSource, CancellationToken) AbstractValidator<SharePointOnlineSiteDataSource>.Validate(ValidationContext<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.ValidateAsync(ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken) AbstractValidator<SharePointOnlineSiteDataSource>.CreateDescriptor() AbstractValidator<SharePointOnlineSiteDataSource>.RuleFor<TProperty>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>) AbstractValidator<SharePointOnlineSiteDataSource>.Transform<TProperty, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.Transform<TProperty, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, TProperty>>, Func<SharePointOnlineSiteDataSource, TProperty, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.RuleForEach<TElement>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>) AbstractValidator<SharePointOnlineSiteDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.TransformForEach<TElement, TTransformed>(Expression<Func<SharePointOnlineSiteDataSource, IEnumerable<TElement>>>, Func<SharePointOnlineSiteDataSource, TElement, TTransformed>) AbstractValidator<SharePointOnlineSiteDataSource>.RuleSet(string, Action) AbstractValidator<SharePointOnlineSiteDataSource>.When(Func<SharePointOnlineSiteDataSource, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.When(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Unless(Func<SharePointOnlineSiteDataSource, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Unless(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, bool>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.WhenAsync(Func<SharePointOnlineSiteDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.WhenAsync(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.UnlessAsync(Func<SharePointOnlineSiteDataSource, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.UnlessAsync(Func<SharePointOnlineSiteDataSource, ValidationContext<SharePointOnlineSiteDataSource>, CancellationToken, Task<bool>>, Action) AbstractValidator<SharePointOnlineSiteDataSource>.Include(IValidator<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.Include<TValidator>(Func<SharePointOnlineSiteDataSource, TValidator>) AbstractValidator<SharePointOnlineSiteDataSource>.GetEnumerator() AbstractValidator<SharePointOnlineSiteDataSource>.EnsureInstanceNotNull(object) AbstractValidator<SharePointOnlineSiteDataSource>.PreValidate(ValidationContext<SharePointOnlineSiteDataSource>, ValidationResult) AbstractValidator<SharePointOnlineSiteDataSource>.RaiseValidationException(ValidationContext<SharePointOnlineSiteDataSource>, ValidationResult) AbstractValidator<SharePointOnlineSiteDataSource>.OnRuleAdded(IValidationRule<SharePointOnlineSiteDataSource>) AbstractValidator<SharePointOnlineSiteDataSource>.CascadeMode AbstractValidator<SharePointOnlineSiteDataSource>.ClassLevelCascadeMode AbstractValidator<SharePointOnlineSiteDataSource>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineSiteDataSourceValidator() Configures the validation rules for the SharePointOnlineSiteDataSource model. public SharePointOnlineSiteDataSourceValidator()"
  },
  "api/dotnet/FoundationaLLM.DataSource.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.Validation.html",
    "title": "Namespace FoundationaLLM.DataSource.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataSource.Validation Classes AzureDataLakeDataSourceValidator Validator for the AzureDataLakeDataSource model. AzureSQLDatabaseDataSourceValidator Validator for the AzureSQLDatabaseDataSource model. DataSourceBaseValidator Validator for the DataSourceBase model. DataSourceValidator<T> Base validator for data sources. OneLakeDataSourceValidator Validator for the OneLakeDataSource model. SharePointOnlineSiteDataSourceValidator Validator for the SharePointOnlineSiteDataSource model."
  },
  "api/dotnet/FoundationaLLM.DataSource.html": {
    "href": "api/dotnet/FoundationaLLM.DataSource.html",
    "title": "Namespace FoundationaLLM.DataSource | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.DataSource Namespaces FoundationaLLM.DataSource.Models FoundationaLLM.DataSource.ResourceProviders FoundationaLLM.DataSource.Validation"
  },
  "api/dotnet/FoundationaLLM.DependencyInjection.html": {
    "href": "api/dotnet/FoundationaLLM.DependencyInjection.html",
    "title": "Class DependencyInjection | FoundationaLLM",
    "summary": "Class DependencyInjection Namespace FoundationaLLM Assembly FoundationaLLM.DataPipelineEngine.dll Provides dependency injection extensions for the FoundationaLLM Data Pipeline service. public static class DependencyInjection Inheritance object DependencyInjection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAIModelResourceProvider(IHostApplicationBuilder) Add the AIModel resource provider and its related services the the dependency injection container. public static void AddAIModelResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAIModelResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.AIModel resource provider. public static void AddAIModelResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddAIModelResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.AIModel resource provider. public static void AddAIModelResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAgentResourceProvider(IHostApplicationBuilder) Add the Agent resource provider and its related services the the dependency injection container. public static void AddAgentResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAgentResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.Agent resource provider. public static void AddAgentResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddAgentResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Agent resource provider. public static void AddAgentResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAttachmentResourceProvider(IHostApplicationBuilder) Add the Attachment resource provider and its related services the the dependency injection container. public static void AddAttachmentResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAttachmentResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.Attachment resource provider. public static void AddAttachmentResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddAttachmentResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Attachment resource provider. public static void AddAttachmentResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAuthorizationCore(IHostApplicationBuilder) Adds the Authorization Core service to the dependency injection container (used by the Authorization API). public static void AddAuthorizationCore(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddAuthorizationResourceProvider(IHostApplicationBuilder) Register the FoundationaLLM.Authorization resource provider with the dependency injection container. public static void AddAuthorizationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder Application builder. AddAuthorizationServiceClient(IServiceCollection, IConfiguration) Adds the authorization service client to the dependency injection container (used by all resource providers). public static void AddAuthorizationServiceClient(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration manager. AddAuthorizationServiceClient(IHostApplicationBuilder) Adds the authorization service client to the dependency injection container (used by all resource providers). public static void AddAuthorizationServiceClient(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddAzureAIResourceProvider(IHostApplicationBuilder) Registers the FoundationaLLM.AzureAI resource provider as a singleton service. public static void AddAzureAIResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. Remarks Requires an GatewayServiceClient service to be also registered with the dependency injection container. AddAzureAIResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.AzureAI resource provider. public static void AddAzureAIResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddAzureAIResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.AzureAI resource provider. public static void AddAzureAIResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddAzureContainerAppsCodeSessionProviderServices(IServiceCollection, IConfiguration) Registers the ICodeSessionProviderService implementations with the dependency injection container. public static void AddAzureContainerAppsCodeSessionProviderServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddAzureContainerAppsCodeSessionProviderServices(IHostApplicationBuilder) Registers the ICodeSessionProviderService implementations with the dependency injection container. public static void AddAzureContainerAppsCodeSessionProviderServices(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddAzureCosmosDBContextServices(IServiceCollection, IConfiguration) Registers the Azure Cosmos DB services used by the Context API to the dependency injection container. public static void AddAzureCosmosDBContextServices(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddAzureCosmosDBContextServices(IHostApplicationBuilder) Registers the Azure Cosmos DB services used by the Context API to the dependency injection container. public static void AddAzureCosmosDBContextServices(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddAzureCosmosDBService(IServiceCollection, IConfigurationManager) Registers the IAzureCosmosDBService implementation with the dependency injection container. public static void AddAzureCosmosDBService(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddAzureCosmosDBService(IHostApplicationBuilder) Registers the IAzureCosmosDBService implementation with the dependency injection container. public static void AddAzureCosmosDBService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddAzureEventGridEvents(IServiceCollection, IConfiguration, string) Register the dependencies required to support Azure Event Grid events. public static void AddAzureEventGridEvents(this IServiceCollection services, IConfiguration configuration, string eventGridProfileSection) Parameters services IServiceCollection Application builder service collection. configuration IConfiguration The IConfiguration providing access to configuration. eventGridProfileSection string The name of the configuration section that contains the Event Grid profile to load. AddAzureKeyVaultService(IServiceCollection, IConfiguration, string) Registers the AzureKeyVaultService service with the dependency injection container. public static void AddAzureKeyVaultService(this IServiceCollection services, IConfiguration configuration, string keyVaultUriConfigurationKeyName) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. keyVaultUriConfigurationKeyName string The name of the configuration key that provides the URI of the Azure Key Vault service. AddAzureKeyVaultService(IHostApplicationBuilder, string) Registers the AzureKeyVaultService with the dependency injection container. public static void AddAzureKeyVaultService(this IHostApplicationBuilder builder, string keyVaultUriConfigurationKeyName) Parameters builder IHostApplicationBuilder The host application builder. keyVaultUriConfigurationKeyName string The name of the configuration key that provides the URI of the Azure Key Vault service. AddAzureOpenAIResourceProvider(IServiceCollection, IConfigurationManager) Registers the FoundationaLLM.AzureOpenAI resource provider as a singleton service. public static void AddAzureOpenAIResourceProvider(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationRoot configuration manager. Remarks Requires a GatewayServiceClient service to be also registered with the dependency injection container. AddAzureOpenAIResourceProvider(IHostApplicationBuilder) Registers the FoundationaLLM.AzureOpenAI resource provider as a singleton service. public static void AddAzureOpenAIResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. Remarks Requires a GatewayServiceClient service to be also registered with the dependency injection container. AddAzureResourceManager(IServiceCollection) Registers the IAzureResourceManagerService implementation with the dependency injection container. public static void AddAzureResourceManager(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddAzureResourceManager(IHostApplicationBuilder) Registers the IAzureResourceManagerService implementation with the dependency injection container. public static void AddAzureResourceManager(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddCodeSessionService(IServiceCollection, IConfiguration) Registers the ICodeSessionService implementation with the dependency injection container. public static void AddCodeSessionService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddCodeSessionService(IHostApplicationBuilder) Registers the ICodeSessionService implementation with the dependency injection container. public static void AddCodeSessionService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddConfigurationResourceProvider(IServiceCollection, IConfiguration) Registers the FoundationaLLM.Configuration resource provider with the dependency injection container. public static void AddConfigurationResourceProvider(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddConfigurationResourceProvider(IHostApplicationBuilder) Register the FoundationaLLM.Configuration resource provider with the dependency injection container. public static void AddConfigurationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder Application builder. AddConfigurationResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.Configuration resource provider. public static void AddConfigurationResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddConfigurationResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Configuration resource provider. public static void AddConfigurationResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddContextResourceProvider(IServiceCollection, IConfiguration) Registers the FoundationaLLM.Context resource provider with the dependency injection container. public static void AddContextResourceProvider(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddContextResourceProvider(IHostApplicationBuilder) Register the FoundationaLLM.Context resource provider with the Dependency Injection container. public static void AddContextResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddContextServiceClient(IServiceCollection, IConfiguration) Adds the authorization service to the dependency injection container (used by all resource providers). public static void AddContextServiceClient(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration manager. AddContextServiceClient(IHostApplicationBuilder) Adds the context service client to the dependency injection container. public static void AddContextServiceClient(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddConversationResourceProvider(IServiceCollection, IConfigurationManager) Registers the FoundationaLLM.Conversation resource provider as a singleton service. public static void AddConversationResourceProvider(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationRoot configuration manager. Remarks Requires an IAzureCosmosDBService service to be also registered with the dependency injection container. AddConversationResourceProvider(IHostApplicationBuilder) Registers the FoundationaLLM.Conversation resource provider as a singleton service. public static void AddConversationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. Remarks Requires an IAzureCosmosDBService service to be also registered with the dependency injection container. AddCoreClient(IServiceCollection, string, TokenCredential, string, APIClientSettings?) Add the Core Client and its related dependencies to the dependency injection container. public static void AddCoreClient(this IServiceCollection services, string coreUri, TokenCredential credential, string instanceId, APIClientSettings? options = null) Parameters services IServiceCollection The IServiceCollection this method extends to add the Core Client. coreUri string The base URI of the Core API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. AddCorsPolicies(IHostApplicationBuilder) Adds CORS policies the the dependency injection container. public static void AddCorsPolicies(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddDIContainerSettings(IServiceCollection, DependencyInjectionContainerSettings?) Registers an instance of DependencyInjectionContainerSettings with default settings to the dependency injection container. public static void AddDIContainerSettings(this IServiceCollection services, DependencyInjectionContainerSettings? settings = null) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. settings DependencyInjectionContainerSettings An optional DependencyInjectionContainerSettings instance that overrides the default settings. AddDIContainerSettings(IHostApplicationBuilder, DependencyInjectionContainerSettings?) Registers an instance of DependencyInjectionContainerSettings with default settings to the dependency injection container. public static void AddDIContainerSettings(this IHostApplicationBuilder builder, DependencyInjectionContainerSettings? settings = null) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. settings DependencyInjectionContainerSettings An optional DependencyInjectionContainerSettings instance that overrides the default settings. AddDataPipelineBackendWorkerService(IServiceCollection, IConfiguration) Registers the Data Pipeline Backend Worker service to the dependency injection container. public static void AddDataPipelineBackendWorkerService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddDataPipelineBackendWorkerService(IHostApplicationBuilder) Registers the Data Pipeline Backend Worker service to the dependency injection container. public static void AddDataPipelineBackendWorkerService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddDataPipelineFrontendWorkerService(IServiceCollection, IConfiguration) Registers the Data Pipeline Frontend Worker service to the dependency injection container. public static void AddDataPipelineFrontendWorkerService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddDataPipelineFrontendWorkerService(IHostApplicationBuilder) Registers the Data Pipeline Frontend Worker service to the dependency injection container. public static void AddDataPipelineFrontendWorkerService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddDataPipelineResourceProvider(IServiceCollection, IConfiguration) Registers the FoundationaLLM.DataPipeline resource provider with the dependency injection container. public static void AddDataPipelineResourceProvider(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddDataPipelineResourceProvider(IHostApplicationBuilder) Registers the FoundationaLLM DataPipeline resource provider with the Dependency Injection container. public static void AddDataPipelineResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddDataPipelineResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.DataPipeline resource provider. public static void AddDataPipelineResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddDataPipelineResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.DataPipeline resource provider. public static void AddDataPipelineResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddDataPipelineRunnerService(IServiceCollection) Registers the Data Pipeline Runner service used by the Data Pipeline API to the dependency injection container. public static void AddDataPipelineRunnerService(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddDataPipelineRunnerService(IHostApplicationBuilder) Registers the Data Pipeline Runner service used by the Data Pipeline API to the dependency injection container. public static void AddDataPipelineRunnerService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddDataPipelineService(IServiceCollection, IConfiguration) Registers the IDataPipelineService to the dependency injection container. public static void AddDataPipelineService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddDataPipelineService(IHostApplicationBuilder) Registers the IDataPipelineService to the dependency injection container. public static void AddDataPipelineService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddDataPipelineStateService(IServiceCollection, IConfiguration) Registers the Data Pipeline State service used by the Data Pipeline API to the dependency injection container. public static void AddDataPipelineStateService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddDataPipelineStateService(IHostApplicationBuilder) Registers the Data Pipeline State service used by the Data Pipeline API to the dependency injection container. public static void AddDataPipelineStateService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddDataPipelineTriggerService(IServiceCollection) Registers the Data Pipeline Trigger service used by the Data Pipeline API to the dependency injection container. public static void AddDataPipelineTriggerService(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddDataPipelineTriggerService(IHostApplicationBuilder) Registers the Data Pipeline Trigger service used by the Data Pipeline API to the dependency injection container. public static void AddDataPipelineTriggerService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddDataSourceResourceProvider(IServiceCollection, IConfiguration) Registers the FoundationaLLM.DataSource resource provider with the dependency injection container. public static void AddDataSourceResourceProvider(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddDataSourceResourceProvider(IHostApplicationBuilder) Add the Data Source Rrsource provider and its related services the the dependency injection container. public static void AddDataSourceResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddDataSourceResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.DataSource resource provider. public static void AddDataSourceResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddDataSourceResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.DataSource resource provider. public static void AddDataSourceResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddDownstreamAPIService(IHostApplicationBuilder, string) Registers the IDownstreamAPIService implementation for a named API service with the dependency injection container. public static void AddDownstreamAPIService(this IHostApplicationBuilder builder, string apiServiceName) Parameters builder IHostApplicationBuilder The host application builder. apiServiceName string The name of the API service whose implementation is being registered. AddFileService(IServiceCollection, IConfiguration) Registers the IFileService to the dependency injection container. public static void AddFileService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddFileService(IHostApplicationBuilder) Registers the IFileService to the dependency injection container. public static void AddFileService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddFoundationaLLMAgentAccessTokenAuthentication(IHostApplicationBuilder) Adds FoundationaLLM Agent Access Token authentication configuration to the dependency injection container. public static void AddFoundationaLLMAgentAccessTokenAuthentication(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddGatewayCore(IHostApplicationBuilder) Adds the core Gateway service the the dependency injection container. public static void AddGatewayCore(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddGatewayGenericExceptionHandling(IHostApplicationBuilder) Adds the Gateway general exception handler to the dependency injection container. public static void AddGatewayGenericExceptionHandling(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddGatewayMetrics(IHostApplicationBuilder) Adds the Gateway API metrics the the dependency injection container. public static void AddGatewayMetrics(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddGroupMembership(IHostApplicationBuilder) Add group membership services to dependency injection container. public static void AddGroupMembership(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddHttpClientFactoryService(IServiceCollection) Registers the HttpClientFactoryService with the dependency injection container. public static void AddHttpClientFactoryService(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddHttpClientFactoryService(IHostApplicationBuilder) Registers the HttpClientFactoryService with the dependency injection container. public static void AddHttpClientFactoryService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddInstanceProperties(IServiceCollection, IConfiguration) Register the InstanceSettings providing the FoundationaLLM instance properties with the dependency injection container. public static void AddInstanceProperties(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddInstanceProperties(IHostApplicationBuilder) Register the InstanceSettings providing the FoundationaLLM instance properties with the dependency injection container. public static void AddInstanceProperties(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddKnowledgeGraphService(IServiceCollection, IConfiguration) Registers the IKnowledgeService to the dependency injection container. public static void AddKnowledgeGraphService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddKnowledgeGraphService(IHostApplicationBuilder) Registers the IKnowledgeService to the dependency injection container. public static void AddKnowledgeGraphService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder. AddLLMOrchestrationServices(IHostApplicationBuilder) Adds all internal LLM orchestration services and the LLM orchestration service manager to the dependency injection container. public static void AddLLMOrchestrationServices(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder AddLocalDataPipelineServiceClient(IServiceCollection) Registers the local data pipeline service client with the Dependency Injection container. public static void AddLocalDataPipelineServiceClient(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddLocalDataPipelineServiceClient(IHostApplicationBuilder) Registers the local data pipeline service client with the Dependency Injection container. public static void AddLocalDataPipelineServiceClient(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddManagementClient(IServiceCollection, string, TokenCredential, string, APIClientSettings?) Add the Management Client and its related dependencies to the dependency injection container. public static void AddManagementClient(this IServiceCollection services, string managementUri, TokenCredential credential, string instanceId, APIClientSettings? options = null) Parameters services IServiceCollection The IServiceCollection this method extends to add the Core Client. managementUri string The base URI of the Management API. credential TokenCredential A TokenCredential of an authenticated user or service principle from which the client library can generate auth tokens. instanceId string The unique (GUID) ID for the FoundationaLLM deployment. Locate this value in the FoundationaLLM Management Portal or in Azure App Config (FoundationaLLM:Instance:Id key) options APIClientSettings Additional options to configure the HTTP Client. AddMicrosoftEntraIDAuthentication(IHostApplicationBuilder, string, string, string, string?, string, bool, bool) Adds Microsoft EntraID authentication configuration to the dependency injection container. public static void AddMicrosoftEntraIDAuthentication(this IHostApplicationBuilder builder, string entraInstanceConfigurationKey, string entraTenantIdConfigurationKey, string entraClientIdConfigurationkey, string? entraScopesConfigurationKey, string policyName = \"MicrosoftEntraIDStandard\", bool requireScopes = true, bool allowACLAuthorization = false) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. entraInstanceConfigurationKey string The configuration key for the Entra ID instance. entraTenantIdConfigurationKey string The configuration key for the Entra ID tenant id. entraClientIdConfigurationkey string The configuration key for the Entra ID client id. entraScopesConfigurationKey string The configuration key for the Entra ID scopes. policyName string The name of the authorization policy. requireScopes bool Indicates whether a scope claim (scp) is required for authorization. allowACLAuthorization bool Indicates whether tokens that do not have either of the \"scp\" or \"roles\" claims are accepted (True means they are accepted). AddNulllDataPipelineServiceClient(IServiceCollection) Registers the null data pipeline service client with the Dependency Injection container. public static void AddNulllDataPipelineServiceClient(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddNulllDataPipelineServiceClient(IHostApplicationBuilder) Registers the null data pipeline service client with the Dependency Injection container. public static void AddNulllDataPipelineServiceClient(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddOpenTelemetry(IHostApplicationBuilder, string, string) Adds OpenTelemetry the the dependency injection container. public static void AddOpenTelemetry(this IHostApplicationBuilder builder, string connectionStringConfigurationKey, string serviceName) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. connectionStringConfigurationKey string The configuration key for the OpenTelemetry connection string. serviceName string The name of the service. AddOrchestrationContext(IServiceCollection) Registers the IOrchestrationContext implementation with the dependency injection container. public static void AddOrchestrationContext(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddOrchestrationContext(IHostApplicationBuilder) Registers the IOrchestrationContext implementation with the dependency injection container. public static void AddOrchestrationContext(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddOrchestrationService(IHostApplicationBuilder) Adds the Orchestration service to the dependency injection container. public static void AddOrchestrationService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddPipelineExecution(IHostApplicationBuilder) Add pipeline execution and related services the the dependency injection container. public static void AddPipelineExecution(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddPluginResourceProvider(IServiceCollection, IConfiguration) Registers the FoundationaLLM.DataSource resource provider with the dependency injection container. public static void AddPluginResourceProvider(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddPluginResourceProvider(IHostApplicationBuilder) Register the FoundationaLLM Plugin resource provider with the Dependency Injection container. public static void AddPluginResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddPluginResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.Plugin resource provider. public static void AddPluginResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddPluginResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Plugin resource provider. public static void AddPluginResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddPromptResourceProvider(IServiceCollection, IConfiguration) Registers the FoundationaLLM.Prompt resource provider with the dependency injection container. public static void AddPromptResourceProvider(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddPromptResourceProvider(IHostApplicationBuilder) Register the handler as a hosted service, passing the step name to the handler ctor public static void AddPromptResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddPromptResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.Prompt resource provider. public static void AddPromptResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddPromptResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Prompt resource provider. public static void AddPromptResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddQuotaService(IServiceCollection, IConfiguration) Adds the FoundationaLLM quota service to the dependency injection container. public static void AddQuotaService(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfigurationManager application configuration manager. AddQuotaService(IHostApplicationBuilder) Adds the FoundationaLLM quota service to the dependency injection container. public static void AddQuotaService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddRegexTemplatingService(IServiceCollection) Registers the ITemplatingService implementation with the dependency injection container. public static void AddRegexTemplatingService(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddRegexTemplatingService(IHostApplicationBuilder) Registers the ITemplatingService implementation with the dependency injection container. public static void AddRegexTemplatingService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddRemoteDataPipelineServiceClient(IServiceCollection, IConfiguration) Registers the remote data pipeline service client with the Dependency Injection container. public static void AddRemoteDataPipelineServiceClient(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddRemoteDataPipelineServiceClient(IHostApplicationBuilder) Registers the remote data pipeline service client with the Dependency Injection container. public static void AddRemoteDataPipelineServiceClient(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddResourceProviderCacheSettings(IServiceCollection, IConfiguration) Registers the resource provider settings with the dependency injection container. public static void AddResourceProviderCacheSettings(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddResourceProviderCacheSettings(IHostApplicationBuilder) Registers the resource provider settings with the dependency injection container. public static void AddResourceProviderCacheSettings(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddResourceValidatorFactory(IServiceCollection) Registers the resource validator factory with the dependency injection container. public static void AddResourceValidatorFactory(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddResourceValidatorFactory(IHostApplicationBuilder) Registers the resource validator factory with the dependency injection container. public static void AddResourceValidatorFactory(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddSemanticCacheService(IHostApplicationBuilder) Adds the semantic cache service to the dependency injection container. public static void AddSemanticCacheService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder AddSemanticKernelGenericExceptionHandling(IHostApplicationBuilder) Adds the Semantic Kernel general exception handler to the dependency injection container. public static void AddSemanticKernelGenericExceptionHandling(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddSemanticKernelService(IHostApplicationBuilder) Add the Semantic Kernel service to the dependency injection container. public static void AddSemanticKernelService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddStateGenericExceptionHandling(IHostApplicationBuilder) Adds the State general exception handler to the dependency injection container. public static void AddStateGenericExceptionHandling(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddStateService(IHostApplicationBuilder) Adds the core Gateway service the the dependency injection container. public static void AddStateService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The host application builder. AddTokenizers(IServiceCollection) Registers text tokenizers with the dependency injection container. public static void AddTokenizers(this IServiceCollection services) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. AddTokenizers(IHostApplicationBuilder) Registers text tokenizers with the dependency injection container. public static void AddTokenizers(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddUserProfileService(IServiceCollection, IConfigurationManager) Registers the IUserProfileService implementation with the dependency injection container. public static void AddUserProfileService(this IServiceCollection services, IConfigurationManager configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfigurationManager The IConfigurationManager application configuration manager. AddUserProfileService(IHostApplicationBuilder) Registers the IUserProfileService implementation with the dependency injection container. public static void AddUserProfileService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The IHostApplicationBuilder application builder managing the dependency injection container. AddUserPromptRewriteService(IHostApplicationBuilder) Adds the user prompt rewrite service to the dependency injection container. public static void AddUserPromptRewriteService(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder AddVectorResourceProvider(IServiceCollection, IConfiguration) Registers the FoundationaLLM.Vector resource provider with the dependency injection container. public static void AddVectorResourceProvider(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration configuration provider. AddVectorResourceProvider(IHostApplicationBuilder) Register the FoundationaLLM.Vector resource provider with the Dependency Injection container. public static void AddVectorResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddVectorResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.Vector resource provider. public static void AddVectorResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddVectorResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Vector resource provider. public static void AddVectorResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddVectorizationResourceProvider(IHostApplicationBuilder) Register the handler as a hosted service, passing the step name to the handler ctor. public static void AddVectorizationResourceProvider(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder. AddVectorizationResourceProviderStorage(IServiceCollection, IConfiguration) Add the named IStorageService implementation for the FoundationaLLM.Vectorization resource provider. public static void AddVectorizationResourceProviderStorage(this IServiceCollection services, IConfiguration configuration) Parameters services IServiceCollection The IServiceCollection dependency injection container service collection. configuration IConfiguration The IConfiguration application configuration provider. AddVectorizationResourceProviderStorage(IHostApplicationBuilder) Add the named IStorageService implementation for the FoundationaLLM.Vectorization resource provider. public static void AddVectorizationResourceProviderStorage(this IHostApplicationBuilder builder) Parameters builder IHostApplicationBuilder The application builder."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "summary": "Class CompletionsController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Wrapper for Gatekeeper service. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper API orchestration controller. Constructors CompletionsController(IGatekeeperService) Wrapper for Gatekeeper service. public CompletionsController(IGatekeeperService gatekeeperService) Parameters gatekeeperService IGatekeeperService Remarks Constructor for the Gatekeeper API orchestration controller. Methods GetCompletion(string, CompletionRequest) Gets a completion from the Gatekeeper service. [HttpPost(\"completions\")] public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Gatekeeper.API.Controllers Assembly FoundationaLLM.Gatekeeper.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get(string) Returns the status of the Gatekeeper API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get(string instanceId) Parameters instanceId string Returns IActionResult Options() Returns the allowed HTTP methods for the Gatekeeper API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.API.Controllers Classes CompletionsController Wrapper for Gatekeeper service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "summary": "Class Program Namespace FoundationaLLM.Gatekeeper.API Assembly FoundationaLLM.Gatekeeper.API.dll Program class for the Gatekeeper API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for Gatekeeper API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.API.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.API.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.API Namespaces FoundationaLLM.Gatekeeper.API.Controllers Classes Program Program class for the Gatekeeper API."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IContentSafetyService.html",
    "title": "Interface IContentSafetyService | FoundationaLLM",
    "summary": "Interface IContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling a content safety service. public interface IContentSafetyService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason. DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IEnkryptGuardrailsService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IEnkryptGuardrailsService.html",
    "title": "Interface IEnkryptGuardrailsService | FoundationaLLM",
    "summary": "Interface IEnkryptGuardrailsService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling the Enkrypt Guardrails service. public interface IEnkryptGuardrailsService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperIntegrationAPIService.html",
    "title": "Interface IGatekeeperIntegrationAPIService | FoundationaLLM",
    "summary": "Interface IGatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper Integration API. public interface IGatekeeperIntegrationAPIService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.IGatekeeperService.html",
    "title": "Interface IGatekeeperService | FoundationaLLM",
    "summary": "Interface IGatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for the Gatekeeper service. public interface IGatekeeperService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(string, CompletionRequest) Gets a completion from the Gatekeeper service. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId to retrieve the status for. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.ILakeraGuardService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.ILakeraGuardService.html",
    "title": "Interface ILakeraGuardService | FoundationaLLM",
    "summary": "Interface ILakeraGuardService Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Assembly FoundationaLLM.Gatekeeper.Core.dll Interface for calling the Lakera Guard service. public interface ILakeraGuardService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Interfaces Interfaces IContentSafetyService Interface for calling a content safety service. IEnkryptGuardrailsService Interface for calling the Enkrypt Guardrails service. IGatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper Integration API. IGatekeeperService Interface for the Gatekeeper service. ILakeraGuardService Interface for calling the Lakera Guard service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.AzureContentSafetySettings.html",
    "title": "Class AzureContentSafetySettings | FoundationaLLM",
    "summary": "Class AzureContentSafetySettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Azure Content Safety service. public record AzureContentSafetySettings : IEquatable<AzureContentSafetySettings> Inheritance object AzureContentSafetySettings Implements IEquatable<AzureContentSafetySettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties HateSeverity The threshold for filtering the contents of a text, based on the \"Hate\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int HateSeverity { get; init; } Property Value int SelfHarmSeverity The threshold for filtering the contents of a text, based on the \"Self-Harm\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SelfHarmSeverity { get; init; } Property Value int SexualSeverity The threshold for filtering the contents of a text, based on the \"Sexual\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int SexualSeverity { get; init; } Property Value int ViolenceSeverity The threshold for filtering the contents of a text, based on the \"Violence\" category. Possible values are: 0 = Safe, 2 = Low, 4 = Medium, 6 = High. public int ViolenceSeverity { get; init; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.EnkryptGuardrailsServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.EnkryptGuardrailsServiceSettings.html",
    "title": "Class EnkryptGuardrailsServiceSettings | FoundationaLLM",
    "summary": "Class EnkryptGuardrailsServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Enkrypt Guardrails service. public record EnkryptGuardrailsServiceSettings : IEquatable<EnkryptGuardrailsServiceSettings> Inheritance object EnkryptGuardrailsServiceSettings Implements IEquatable<EnkryptGuardrailsServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.GatekeeperServiceSettings.html",
    "title": "Class GatekeeperServiceSettings | FoundationaLLM",
    "summary": "Class GatekeeperServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Gatekeeper service. public record GatekeeperServiceSettings : IEquatable<GatekeeperServiceSettings> Inheritance object GatekeeperServiceSettings Implements IEquatable<GatekeeperServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EnableAzureContentSafety Flag for enabling or disabling the Azure Content Safety feature. public required bool EnableAzureContentSafety { get; set; } Property Value bool EnableAzureContentSafetyPromptShield Flag for enabling or disabling the Azure Content Safety Prompt Shields. public required bool EnableAzureContentSafetyPromptShield { get; set; } Property Value bool EnableEnkryptGuardrails Flag for enabling or disabling the Enkrypt Guardrails feature. public required bool EnableEnkryptGuardrails { get; set; } Property Value bool EnableLakeraGuard Flag for enabling or disabling the Lakera Guard feature. public required bool EnableLakeraGuard { get; set; } Property Value bool EnableMicrosoftPresidio Flag for enabling or disabling the Microsoft Presidio feature. public required bool EnableMicrosoftPresidio { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.LakeraGuardServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.LakeraGuardServiceSettings.html",
    "title": "Class LakeraGuardServiceSettings | FoundationaLLM",
    "summary": "Class LakeraGuardServiceSettings Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Gatekeeper.Core.dll Provides configuration options for the Lakera Guard service. public record LakeraGuardServiceSettings : IEquatable<LakeraGuardServiceSettings> Inheritance object LakeraGuardServiceSettings Implements IEquatable<LakeraGuardServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions Classes AzureContentSafetySettings Provides configuration options for the Azure Content Safety service. EnkryptGuardrailsServiceSettings Provides configuration options for the Enkrypt Guardrails service. GatekeeperServiceSettings Provides configuration options for the Gatekeeper service. LakeraGuardServiceSettings Provides configuration options for the Lakera Guard service."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextFilterResult.html",
    "title": "Class AnalyzeTextFilterResult | FoundationaLLM",
    "summary": "Class AnalyzeTextFilterResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Content filter text analysis restult. public class AnalyzeTextFilterResult Inheritance object AnalyzeTextFilterResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Reason The reason why the content was considered to be unsafe. public required string Reason { get; set; } Property Value string Safe A flag representing if the content is safe or not. public bool Safe { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.AnalyzeTextResult.html",
    "title": "Class AnalyzeTextResult | FoundationaLLM",
    "summary": "Class AnalyzeTextResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Text analysis results. public class AnalyzeTextResult Inheritance object AnalyzeTextResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CategoriesAnalysis Analysis result for categories. [JsonPropertyName(\"categoriesAnalysis\")] public required List<TextCategoryResult> CategoriesAnalysis { get; set; } Property Value List<TextCategoryResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldDetails.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldDetails.html",
    "title": "Class PromptShieldDetails | FoundationaLLM",
    "summary": "Class PromptShieldDetails Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Contains analysis results for the user prompt. public class PromptShieldDetails Inheritance object PromptShieldDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AttackDetected Indicates whether a User Prompt attack (for example, malicious input, security threat) has been detected in the user prompt. [JsonPropertyName(\"attackDetected\")] public bool AttackDetected { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.PromptShieldResult.html",
    "title": "Class PromptShieldResult | FoundationaLLM",
    "summary": "Class PromptShieldResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Prompt shield result. public class PromptShieldResult Inheritance object PromptShieldResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DocumentsAnalysis Contains a list of analysis results for each document provided. [JsonPropertyName(\"documentsAnalysis\")] public required List<PromptShieldDetails> DocumentsAnalysis { get; set; } Property Value List<PromptShieldDetails> UserPromptAnalysis Contains analysis results for the user prompt. [JsonPropertyName(\"userPromptAnalysis\")] public required PromptShieldDetails UserPromptAnalysis { get; set; } Property Value PromptShieldDetails"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategory.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategory.html",
    "title": "Class TextCategory | FoundationaLLM",
    "summary": "Class TextCategory Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Text category constants. public static class TextCategory Inheritance object TextCategory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Hate Hate. public const string Hate = \"Hate\" Field Value string SelfHarm SelfHarm. public const string SelfHarm = \"SelfHarm\" Field Value string Sexual Sexual. public const string Sexual = \"Sexual\" Field Value string Violence Violence. public const string Violence = \"Violence\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategoryResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.TextCategoryResult.html",
    "title": "Class TextCategoryResult | FoundationaLLM",
    "summary": "Class TextCategoryResult Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Assembly FoundationaLLM.Gatekeeper.Core.dll Text category results. public class TextCategoryResult Inheritance object TextCategoryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Category The text analysis category. [JsonPropertyName(\"category\")] public required string Category { get; set; } Property Value string Severity The value increases with the severity of the input content. The value of this field is determined by the output type specified in the request. The output type could be ‘FourSeverityLevels’ or ‘EightSeverity Levels’, and the output value can be 0, 2, 4, 6 or 0, 1, 2, 3, 4, 5, 6, or 7. [JsonPropertyName(\"severity\")] public int? Severity { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.ContentSafety.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Models.ContentSafety Classes AnalyzeTextFilterResult Content filter text analysis restult. AnalyzeTextResult Text analysis results. PromptShieldDetails Contains analysis results for the user prompt. PromptShieldResult Prompt shield result. TextCategory Text category constants. TextCategoryResult Text category results."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectDetails.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectDetails.html",
    "title": "Class DetectDetails | FoundationaLLM",
    "summary": "Class DetectDetails Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Detection details for each flag. public class DetectDetails Inheritance object DetectDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InjectionAttack Prompt injection or jailbreak confidence levels. [JsonPropertyName(\"injection_attack\")] public InjectionAttack? InjectionAttack { get; set; } Property Value InjectionAttack"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectResult.html",
    "title": "Class DetectResult | FoundationaLLM",
    "summary": "Class DetectResult Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Recognizes patterns that may indicate an prompt injection attack or jailbreak attempt protecting the system from malicious inputs. public class DetectResult Inheritance object DetectResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Details Detection details. [JsonPropertyName(\"details\")] public required DetectDetails Details { get; set; } Property Value DetectDetails Summary Detection summary. [JsonPropertyName(\"summary\")] public required DetectSummary Summary { get; set; } Property Value DetectSummary"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectSummary.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.DetectSummary.html",
    "title": "Class DetectSummary | FoundationaLLM",
    "summary": "Class DetectSummary Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Detection summary that contains flags for each detector. public class DetectSummary Inheritance object DetectSummary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties InjectionAttack The detector returns a binary value (0 for benign, 1 for attack). [JsonPropertyName(\"injection_attack\")] public int? InjectionAttack { get; set; } Property Value int?"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.InjectionAttack.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.InjectionAttack.html",
    "title": "Class InjectionAttack | FoundationaLLM",
    "summary": "Class InjectionAttack Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Assembly FoundationaLLM.Gatekeeper.Core.dll Prompt injection or jailbreak confidence levels. public class InjectionAttack Inheritance object InjectionAttack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Attack Confidence level for attack. [JsonPropertyName(\"attack\")] public double Attack { get; set; } Property Value double Safe Confidence level for safe. [JsonPropertyName(\"safe\")] public double Safe { get; set; } Property Value double"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails Classes DetectDetails Detection details for each flag. DetectResult Recognizes patterns that may indicate an prompt injection attack or jailbreak attempt protecting the system from malicious inputs. DetectSummary Detection summary that contains flags for each detector. InjectionAttack Prompt injection or jailbreak confidence levels."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeRequest.html",
    "title": "Class AnalyzeRequest | FoundationaLLM",
    "summary": "Class AnalyzeRequest Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis request. public class AnalyzeRequest Inheritance object AnalyzeRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Anonymize A flag used to tell if PII found by analysis should be anonymized. [JsonPropertyName(\"anonymize\")] public required bool Anonymize { get; set; } Property Value bool Content The text to be analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Language The language used to detect PII. [JsonPropertyName(\"language\")] public string? Language { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnalyzeResponse.html",
    "title": "Class AnalyzeResponse | FoundationaLLM",
    "summary": "Class AnalyzeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text analysis response. public class AnalyzeResponse Inheritance object AnalyzeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Results A list of PII (personally identifiable information) entities identified in the analyzed text. [JsonPropertyName(\"results\")] public required List<PIIResult> Results { get; set; } Property Value List<PIIResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.AnonymizeResponse.html",
    "title": "Class AnonymizeResponse | FoundationaLLM",
    "summary": "Class AnonymizeResponse Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates a text anonymize response. public class AnonymizeResponse Inheritance object AnonymizeResponse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Content The text that was analyzed. [JsonPropertyName(\"content\")] public required string Content { get; set; } Property Value string Results A list of anonymized PII (personally identifiable information) entities identified in the analyzed text. [JsonPropertyName(\"results\")] public required List<PIIResultAnonymized> Results { get; set; } Property Value List<PIIResultAnonymized>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResult.html",
    "title": "Class PIIResult | FoundationaLLM",
    "summary": "Class PIIResult Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the PII (personally identifiable information) results. public class PIIResult Inheritance object PIIResult Derived PIIResultAnonymized Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EndIndex The end index where a PII entity was detected. [JsonPropertyName(\"end_index\")] public required int EndIndex { get; set; } Property Value int EntityType The type of personally identifiable information (i.e. Person, Location, Date). [JsonPropertyName(\"entity_type\")] public required string EntityType { get; set; } Property Value string StartIndex The start index where a PII was detected. [JsonPropertyName(\"start_index\")] public required int StartIndex { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.PIIResultAnonymized.html",
    "title": "Class PIIResultAnonymized | FoundationaLLM",
    "summary": "Class PIIResultAnonymized Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Assembly FoundationaLLM.Gatekeeper.Core.dll Encapsulates the anonymized PII (personally identifiable information) results. public class PIIResultAnonymized : PIIResult Inheritance object PIIResult PIIResultAnonymized Inherited Members PIIResult.EntityType PIIResult.StartIndex PIIResult.EndIndex object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AnonymizedText The anonymized text to be used instead of the original text. [JsonPropertyName(\"anonymized_text\")] public required string AnonymizedText { get; set; } Property Value string Operator The operator needed to anonymize the original text. [JsonPropertyName(\"operator\")] public required string Operator { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.Integration.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Models.Integration Classes AnalyzeRequest Encapsulates a text analysis request. AnalyzeResponse Encapsulates a text analysis response. AnonymizeResponse Encapsulates a text anonymize response. PIIResult Encapsulates the PII (personally identifiable information) results. PIIResultAnonymized Encapsulates the anonymized PII (personally identifiable information) results."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.AnalyzePromptInjectionResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.AnalyzePromptInjectionResult.html",
    "title": "Class AnalyzePromptInjectionResult | FoundationaLLM",
    "summary": "Class AnalyzePromptInjectionResult Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard Assembly FoundationaLLM.Gatekeeper.Core.dll Prompt injection result. public class AnalyzePromptInjectionResult Inheritance object AnalyzePromptInjectionResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Model The model identifier string of the model used for analysis. [JsonPropertyName(\"model\")] public string? Model { get; set; } Property Value string Results A list of results with an object containing each category that the prompt injection endpoint supports. [JsonPropertyName(\"results\")] public required List<PromptInjectionResult> Results { get; set; } Property Value List<PromptInjectionResult>"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.PromptInjectionResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.PromptInjectionResult.html",
    "title": "Class PromptInjectionResult | FoundationaLLM",
    "summary": "Class PromptInjectionResult Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard Assembly FoundationaLLM.Gatekeeper.Core.dll Detailed prompt injection result. public class PromptInjectionResult Inheritance object PromptInjectionResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Categories A dictionary of detectors that the endpoint analyzed with a boolean decision of whether the input contains the analyzed category. [JsonPropertyName(\"categories\")] public required Dictionary<string, bool> Categories { get; set; } Property Value Dictionary<string, bool> CategoryScores A dictionary of detectors that the endpoint analyzed with a floating point confidence score between 0 and 1. [JsonPropertyName(\"category_scores\")] public required Dictionary<string, decimal> CategoryScores { get; set; } Property Value Dictionary<string, decimal> Flagged A boolean indicating whether any of the endpoint's categories triggered a positive result. [JsonPropertyName(\"flagged\")] public required bool Flagged { get; set; } Property Value bool"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard Classes AnalyzePromptInjectionResult Prompt injection result. PromptInjectionResult Detailed prompt injection result."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Models.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Models Namespaces FoundationaLLM.Gatekeeper.Core.Models.ConfigurationOptions FoundationaLLM.Gatekeeper.Core.Models.ContentSafety FoundationaLLM.Gatekeeper.Core.Models.EnkryptGuardrails FoundationaLLM.Gatekeeper.Core.Models.Integration FoundationaLLM.Gatekeeper.Core.Models.LakeraGuard"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.AzureContentSafetyService.html",
    "title": "Class AzureContentSafetyService | FoundationaLLM",
    "summary": "Class AzureContentSafetyService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IContentSafetyService interface. public class AzureContentSafetyService : IContentSafetyService Inheritance object AzureContentSafetyService Implements IContentSafetyService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureContentSafetyService(IOrchestrationContext, IHttpClientFactoryService, IOptions<AzureContentSafetySettings>, ILogger<AzureContentSafetyService>) Constructor for the Azure Content Safety service. public AzureContentSafetyService(IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService, IOptions<AzureContentSafetySettings> options, ILogger<AzureContentSafetyService> logger) Parameters callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. options IOptions<AzureContentSafetySettings> The configuration options for the Azure Content Safety service. logger ILogger<AzureContentSafetyService> The logger for the Azure Content Safety service. Methods AnalyzeText(string) Checks if a text is safe or not based on pre-configured content filters. public Task<AnalyzeTextFilterResult> AnalyzeText(string content) Parameters content string The text content that needs to be analyzed. Returns Task<AnalyzeTextFilterResult> The text analysis restult, which includes a boolean flag that represents if the content is considered safe. In case the content is unsafe, also returns the reason. DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. public Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.EnkryptGuardrailsService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.EnkryptGuardrailsService.html",
    "title": "Class EnkryptGuardrailsService | FoundationaLLM",
    "summary": "Class EnkryptGuardrailsService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IEnkryptGuardrailsService interface. public class EnkryptGuardrailsService : IEnkryptGuardrailsService Inheritance object EnkryptGuardrailsService Implements IEnkryptGuardrailsService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EnkryptGuardrailsService(IOrchestrationContext, IHttpClientFactoryService, IOptions<EnkryptGuardrailsServiceSettings>, ILogger<EnkryptGuardrailsService>) Constructor for the Azure Content Safety service. public EnkryptGuardrailsService(IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService, IOptions<EnkryptGuardrailsServiceSettings> options, ILogger<EnkryptGuardrailsService> logger) Parameters callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. options IOptions<EnkryptGuardrailsServiceSettings> The configuration options for the Azure Content Safety service. logger ILogger<EnkryptGuardrailsService> The logger for the Azure Content Safety service. Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. public Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperIntegrationAPIService.html",
    "title": "Class GatekeeperIntegrationAPIService | FoundationaLLM",
    "summary": "Class GatekeeperIntegrationAPIService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Contains methods for interacting with the Gatekeeper API. public class GatekeeperIntegrationAPIService : IGatekeeperIntegrationAPIService Inheritance object GatekeeperIntegrationAPIService Implements IGatekeeperIntegrationAPIService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatekeeperIntegrationAPIService(IOrchestrationContext, IHttpClientFactoryService) Initializes a new instance of the GatekeeperIntegrationAPIService class. public GatekeeperIntegrationAPIService(IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to retrieve an HttpClient instance that contains required headers for Gatekeeper Integration API requests. Methods AnalyzeText(string) Analyze text to identify PII (personally identifiable information) entities. public Task<List<PIIResult>> AnalyzeText(string text) Parameters text string The input text. Returns Task<List<PIIResult>> A list of PII (personally identifiable information) entities identified in the analyzed text. AnonymizeText(string) Anonymize text with identified PII (personally identifiable information) entities. public Task<string> AnonymizeText(string text) Parameters text string The input text. Returns Task<string> The anonymized text."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.GatekeeperService.html",
    "title": "Class GatekeeperService | FoundationaLLM",
    "summary": "Class GatekeeperService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the IGatekeeperService interface. public class GatekeeperService : IGatekeeperService Inheritance object GatekeeperService Implements IGatekeeperService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Gatekeeper service. Constructors GatekeeperService(IDownstreamAPIService, IAzureCosmosDBService, IContentSafetyService, ILakeraGuardService, IEnkryptGuardrailsService, IGatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings>) Implements the IGatekeeperService interface. public GatekeeperService(IDownstreamAPIService orchestrationAPIService, IAzureCosmosDBService cosmosDBService, IContentSafetyService contentSafetyService, ILakeraGuardService lakeraGuardService, IEnkryptGuardrailsService enkryptGuardrailsService, IGatekeeperIntegrationAPIService gatekeeperIntegrationAPIService, IOptions<GatekeeperServiceSettings> gatekeeperServiceSettings) Parameters orchestrationAPIService IDownstreamAPIService The Orchestration API client. cosmosDBService IAzureCosmosDBService The Azure Cosmos DB service. contentSafetyService IContentSafetyService The user prompt Content Safety service. lakeraGuardService ILakeraGuardService The Lakera Guard service. enkryptGuardrailsService IEnkryptGuardrailsService The Enkrypt Guardrails service. gatekeeperIntegrationAPIService IGatekeeperIntegrationAPIService The Gatekeeper Integration API client. gatekeeperServiceSettings IOptions<GatekeeperServiceSettings> The configuration options for the Gatekeeper service. Remarks Constructor for the Gatekeeper service. Methods GetCompletion(string, CompletionRequest) Gets a completion from the Gatekeeper service. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId to retrieve the status for. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.LakeraGuardService.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.LakeraGuardService.html",
    "title": "Class LakeraGuardService | FoundationaLLM",
    "summary": "Class LakeraGuardService Namespace FoundationaLLM.Gatekeeper.Core.Services Assembly FoundationaLLM.Gatekeeper.Core.dll Implements the ILakeraGuardService interface. public class LakeraGuardService : ILakeraGuardService Inheritance object LakeraGuardService Implements ILakeraGuardService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LakeraGuardService(IOrchestrationContext, IHttpClientFactoryService, IOptions<LakeraGuardServiceSettings>, ILogger<LakeraGuardService>) Constructor for the Azure Content Safety service. public LakeraGuardService(IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService, IOptions<LakeraGuardServiceSettings> options, ILogger<LakeraGuardService> logger) Parameters callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. options IOptions<LakeraGuardServiceSettings> The configuration options for the Azure Content Safety service. logger ILogger<LakeraGuardService> The logger for the Azure Content Safety service. Methods DetectPromptInjection(string) Detects attempted prompt injections and jailbreaks in user prompts. public Task<string?> DetectPromptInjection(string content) Parameters content string The text content that needs to be analyzed. Returns Task<string> The text analysis restult, which includes flags that represents if the content contains prompt injections or jailbreaks."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.Services.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core.Services Classes AzureContentSafetyService Implements the IContentSafetyService interface. EnkryptGuardrailsService Implements the IEnkryptGuardrailsService interface. GatekeeperIntegrationAPIService Contains methods for interacting with the Gatekeeper API. GatekeeperService Implements the IGatekeeperService interface. LakeraGuardService Implements the ILakeraGuardService interface."
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.Core.html",
    "title": "Namespace FoundationaLLM.Gatekeeper.Core | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper.Core Namespaces FoundationaLLM.Gatekeeper.Core.Interfaces FoundationaLLM.Gatekeeper.Core.Models FoundationaLLM.Gatekeeper.Core.Services"
  },
  "api/dotnet/FoundationaLLM.Gatekeeper.html": {
    "href": "api/dotnet/FoundationaLLM.Gatekeeper.html",
    "title": "Namespace FoundationaLLM.Gatekeeper | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gatekeeper Namespaces FoundationaLLM.Gatekeeper.API FoundationaLLM.Gatekeeper.Core"
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.AgentCapabilitiesController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.AgentCapabilitiesController.html",
    "title": "Class AgentCapabilitiesController | FoundationaLLM",
    "summary": "Class AgentCapabilitiesController Namespace FoundationaLLM.Gateway.API.Controllers Assembly FoundationaLLM.Gateway.API.dll Methods for managing agent capabilities. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class AgentCapabilitiesController Inheritance object AgentCapabilitiesController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentCapabilitiesController(IGatewayCore, IOrchestrationContext) Methods for managing agent capabilities. public AgentCapabilitiesController(IGatewayCore gatewayCore, IOrchestrationContext callContext) Parameters gatewayCore IGatewayCore The IGatewayCore that provides LLM gateway services. callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. Methods CreateAgentCapability(string, AgentCapabilityRequest) Creates an agent capability. [HttpPost] public Task<IActionResult> CreateAgentCapability(string instanceId, AgentCapabilityRequest agentCapabilityRequest) Parameters instanceId string The FoundationaLLM instance id. agentCapabilityRequest AgentCapabilityRequest The AgentCapabilityRequest object with the deails of the requested capability. Returns Task<IActionResult> A dictionary of output values. Remarks The supported categories are: OpenAI.Assistants (the names of the keys for the output dictionary are defined in OpenAIAgentCapabilityParameterNames)"
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "summary": "Class CompletionsController Namespace FoundationaLLM.Gateway.API.Controllers Assembly FoundationaLLM.Gateway.API.dll Methods for managing embedding requests. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class CompletionsController Inheritance object CompletionsController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionsController(IGatewayCore, IOrchestrationContext) Methods for managing embedding requests. public CompletionsController(IGatewayCore gatewayCore, IOrchestrationContext callContext) Parameters gatewayCore IGatewayCore The IGatewayCore that provides LLM gateway services. callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. Methods GetCompletionOperationResult(string, string) Retrieves the outcome of a text embedding operation. [HttpGet] public Task<IActionResult> GetCompletionOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text completion operation. Returns Task<IActionResult> A TextOperationResult object with the outcome of the operation. StartCompletionOperation(string, TextCompletionRequest) Handles an incoming text completion request by starting a new completion operation. [HttpPost] public Task<IActionResult> StartCompletionOperation(string instanceId, TextCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest TextCompletionRequest The TextCompletionRequest object with the details of the completion request. Returns Task<IActionResult> A TextOperationResult object with the outcome of the operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.EmbeddingsController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.EmbeddingsController.html",
    "title": "Class EmbeddingsController | FoundationaLLM",
    "summary": "Class EmbeddingsController Namespace FoundationaLLM.Gateway.API.Controllers Assembly FoundationaLLM.Gateway.API.dll Methods for managing embedding requests. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class EmbeddingsController Inheritance object EmbeddingsController Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingsController(IGatewayCore, IOrchestrationContext) Methods for managing embedding requests. public EmbeddingsController(IGatewayCore gatewayCore, IOrchestrationContext callContext) Parameters gatewayCore IGatewayCore The IGatewayCore that provides LLM gateway services. callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. Methods GetEmbeddingOperationResult(string, string) Retrieves the outcome of a text embedding operation. [HttpGet] public Task<IActionResult> GetEmbeddingOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text embedding operation. Returns Task<IActionResult> A TextOperationResult object with the outcome of the operation. StartEmbeddingOperation(string, TextEmbeddingRequest) Handles an incoming text embedding request by starting a new embedding operation. [HttpPost] public Task<IActionResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest) Parameters instanceId string The FoundationaLLM instance id. embeddingRequest TextEmbeddingRequest The TextEmbeddingRequest object with the details of the embedding request. Returns Task<IActionResult> A TextOperationResult object with the outcome of the operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Gateway.API.Controllers Assembly FoundationaLLM.Gateway.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gateway.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Gateway.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway.API.Controllers Classes AgentCapabilitiesController Methods for managing agent capabilities. CompletionsController Methods for managing embedding requests. EmbeddingsController Methods for managing embedding requests. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Gateway.AdapterAPI.Controllers Assembly FoundationaLLM.Gateway.AdapterAPI.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.AdapterAPI.Controllers.html",
    "title": "Namespace FoundationaLLM.Gateway.AdapterAPI.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway.AdapterAPI.Controllers Classes StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Gateway.Exceptions.GatewayExceptionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Exceptions.GatewayExceptionHandler.html",
    "title": "Class GatewayExceptionHandler | FoundationaLLM",
    "summary": "Class GatewayExceptionHandler Namespace FoundationaLLM.Gateway.Exceptions Assembly FoundationaLLM.Gateway.dll Implements a global exception handler for the Gateway API. public class GatewayExceptionHandler : IExceptionHandler Inheritance object GatewayExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayExceptionHandler(ILogger<GatewayExceptionHandler>) Implements a global exception handler for the Gateway API. public GatewayExceptionHandler(ILogger<GatewayExceptionHandler> logger) Parameters logger ILogger<GatewayExceptionHandler> The ILogger used for logging. Methods TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters httpContext HttpContext The HttpContext for the request. exception Exception The unhandled exception. cancellationToken CancellationToken The cancellation token. Returns ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false."
  },
  "api/dotnet/FoundationaLLM.Gateway.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Exceptions.html",
    "title": "Namespace FoundationaLLM.Gateway.Exceptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway.Exceptions Classes GatewayExceptionHandler Implements a global exception handler for the Gateway API."
  },
  "api/dotnet/FoundationaLLM.Gateway.Interfaces.IGatewayCore.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Interfaces.IGatewayCore.html",
    "title": "Interface IGatewayCore | FoundationaLLM",
    "summary": "Interface IGatewayCore Namespace FoundationaLLM.Gateway.Interfaces Assembly FoundationaLLM.Gateway.dll Defines the interface of the FoundationaLLM Gateway core. public interface IGatewayCore Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateAgentCapability(string, string, string, UnifiedUserIdentity, Dictionary<string, object>?) Creates a new LLM-based agent capability. Task<Dictionary<string, object>> CreateAgentCapability(string instanceId, string capabilityCategory, string capabilityName, UnifiedUserIdentity userIdentity, Dictionary<string, object>? parameters = null) Parameters instanceId string The FoundationaLLM instance id. capabilityCategory string The category of the capability. capabilityName string The name of the capability to be created. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. parameters Dictionary<string, object> A dictionary of parameter values used to create the capability. Returns Task<Dictionary<string, object>> A dictionary of output values. Remarks The supported categories are: OpenAI.Assistants (the names of the keys for the parameters and output dictionaries are defined in OpenAIAgentCapabilityParameterNames) ExecuteAsync(CancellationToken) Executes the Gateway service until cancellation is signaled. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task GetCompletionOperationResult(string, string, UnifiedUserIdentity) Retrieves the outcome of a completion operation. Task<TextOperationResult> GetCompletionOperationResult(string instanceId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text completion operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. GetEmbeddingOperationResult(string, string, UnifiedUserIdentity) Retrieves the outcome of an embedding operation. Task<TextOperationResult> GetEmbeddingOperationResult(string instanceId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. StartAsync(CancellationToken) Starts the Gateway service, allowing it to initialize. Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartCompletionOperation(string, TextCompletionRequest, UnifiedUserIdentity) Starts a completion operation. Task<TextOperationResult> StartCompletionOperation(string instanceId, TextCompletionRequest completionRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. completionRequest TextCompletionRequest The TextCompletionRequest object containing the details of the completion operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. StartEmbeddingOperation(string, TextEmbeddingRequest, UnifiedUserIdentity) Starts an embedding operation. Task<TextOperationResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. embeddingRequest TextEmbeddingRequest The TextEmbeddingRequest object containing the details of the embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. StopAsync(CancellationToken) Stops the Gateway service, allowing it to cleanup. Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Gateway.Interfaces.ITextOperationService.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Interfaces.ITextOperationService.html",
    "title": "Interface ITextOperationService | FoundationaLLM",
    "summary": "Interface ITextOperationService Namespace FoundationaLLM.Gateway.Interfaces Assembly FoundationaLLM.Gateway.dll Defines the interface for text operation services, such as text embedding or completion services. public interface ITextOperationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExecuteTextOperation(InternalTextOperationRequest) Executes a text operation (e.g., embedding or completion) on the provided text chunks. Task<InternalTextOperationResult> ExecuteTextOperation(InternalTextOperationRequest textOperationRequest) Parameters textOperationRequest InternalTextOperationRequest The text operation request to execute. Returns Task<InternalTextOperationResult> The result of the operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Interfaces.html",
    "title": "Namespace FoundationaLLM.Gateway.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway.Interfaces Interfaces IGatewayCore Defines the interface of the FoundationaLLM Gateway core. ITextOperationService Defines the interface for text operation services, such as text embedding or completion services."
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.GatewayCoreSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.GatewayCoreSettings.html",
    "title": "Class GatewayCoreSettings | FoundationaLLM",
    "summary": "Class GatewayCoreSettings Namespace FoundationaLLM.Gateway.Models.Configuration Assembly FoundationaLLM.Gateway.dll Provides settings for the Gateway core service. public class GatewayCoreSettings Inheritance object GatewayCoreSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AzureAIAgentServiceMaxVectorizationTimeSeconds Gets or sets the maximum time in seconds allowed for an Azure AI Agent Service vectorization process to complete. public required int AzureAIAgentServiceMaxVectorizationTimeSeconds { get; set; } Property Value int AzureOpenAIAccounts The semicolon separated list of Azure Open AI endpoints used by the Gateway core service. public required string AzureOpenAIAccounts { get; set; } Property Value string AzureOpenAIAssistantsMaxVectorizationTimeSeconds Gets or sets the maximum time in seconds allowed for an Azure OpenAI Assistants vectorization process to complete. public required int AzureOpenAIAssistantsMaxVectorizationTimeSeconds { get; set; } Property Value int TokenRateLimitMultiplier Gets or sets the multiplier applied to the token rate limit used to account for differences in tokenization between the Gateway API and the embedding model. public double TokenRateLimitMultiplier { get; set; } Property Value double"
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Gateway.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway.Models.Configuration Classes GatewayCoreSettings Provides settings for the Gateway core service."
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.InternalTextOperationRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.InternalTextOperationRequest.html",
    "title": "Class InternalTextOperationRequest | FoundationaLLM",
    "summary": "Class InternalTextOperationRequest Namespace FoundationaLLM.Gateway.Models Assembly FoundationaLLM.Gateway.dll Represents internal text operation requests processed by the FoundationaLLM Gateway. public class InternalTextOperationRequest Inheritance object InternalTextOperationRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountName The name of the account used for the text operation. [JsonPropertyName(\"account_name\")] public required string AccountName { get; set; } Property Value string DeploymentName Gets or sets the name of the deployment used for the text operation. [JsonPropertyName(\"deployment_name\")] public required string DeploymentName { get; set; } Property Value string Id The unique identifier of the internal request. [JsonPropertyName(\"id\")] public int Id { get; set; } Property Value int ModelName The name of the model used for the text operation. [JsonPropertyName(\"model_name\")] public required string ModelName { get; set; } Property Value string ModelParameters Gets or sets the model parameters used for the text operation. [JsonPropertyName(\"model_properties\")] public Dictionary<string, object> ModelParameters { get; set; } Property Value Dictionary<string, object> ModelVersion The version of the model used for the text operation. [JsonPropertyName(\"model_version\")] public required string ModelVersion { get; set; } Property Value string OperationsDetails The details of the text operations from the text chunks. For each text operation id, holds the list of the positions of the text chunks from the current request. [JsonPropertyName(\"operations_details\")] public Dictionary<string, List<int>> OperationsDetails { get; } Property Value Dictionary<string, List<int>> TextChunks Gets or sets the list of text chunks from the current request. [JsonIgnore] public List<TextChunk> TextChunks { get; set; } Property Value List<TextChunk> TextChunksCount Gets the total number of text chunks in the request. [JsonPropertyName(\"text_chunks_count\")] public int TextChunksCount { get; } Property Value int TokensCount Gets the total number of tokens used in the request. [JsonPropertyName(\"tokens_count\")] public int TokensCount { get; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.InternalTextOperationResult.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.InternalTextOperationResult.html",
    "title": "Class InternalTextOperationResult | FoundationaLLM",
    "summary": "Class InternalTextOperationResult Namespace FoundationaLLM.Gateway.Models Assembly FoundationaLLM.Gateway.dll Represents the result of a text operation request. public class InternalTextOperationResult Inheritance object InternalTextOperationResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ErrorMessage Gets or sets the error message when the request processing has failed. public string? ErrorMessage { get; set; } Property Value string Failed Gets or sets the flag that indicates whether the request procesing has failed or not. public bool Failed { get; set; } Property Value bool FailedOperationIds Gets or sets the list of operation IDs that failed during the request processing. public List<string> FailedOperationIds { get; set; } Property Value List<string> TextChunks Gets or sets the list of text chunks that were successfully processed. public IList<TextChunk> TextChunks { get; set; } Property Value IList<TextChunk>"
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.TextOperationContext.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.TextOperationContext.html",
    "title": "Class TextOperationContext | FoundationaLLM",
    "summary": "Class TextOperationContext Namespace FoundationaLLM.Gateway.Models Assembly FoundationaLLM.Gateway.dll Provides the context for a text operation. public class TextOperationContext Inheritance object TextOperationContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields _syncRoot protected readonly object _syncRoot Field Value object Properties InputTextChunks The list of TextChunk objects which provide the input to the text operation. public required IList<TextChunk> InputTextChunks { get; set; } Property Value IList<TextChunk> IntermediateErrors Gets or sets the list of intermediate error messages encountered during the text operation. public List<string> IntermediateErrors { get; set; } Property Value List<string> ModelParameters Gets or sets the model parameters. public Dictionary<string, object> ModelParameters { get; set; } Property Value Dictionary<string, object> Prioritized Indicates whether the requests associated with the context should be prioritized. Example: Synchronous vectorization and user prompt embedding for completions. public bool Prioritized { get; set; } Property Value bool ProcessedTextChunksCount Gets the count of processed text chunks based on the completeness checker function. public int ProcessedTextChunksCount { get; } Property Value int Result The TextOperationResult holding the result of the text operation. public required TextOperationResult Result { get; set; } Property Value TextOperationResult TextChunkCompletenessChecker The function used to check if a text chunk is complete. public Func<TextChunk, bool> TextChunkCompletenessChecker { get; set; } Property Value Func<TextChunk, bool> TextChunkUpdater The action used to update internal text chunks based on incoming text chunks. public Action<TextChunk, TextChunk> TextChunkUpdater { get; set; } Property Value Action<TextChunk, TextChunk> Methods SetComplete() Marks the text operation as complete. public void SetComplete() SetIntermediateError(string) Sets a specified error message on the context of the text operation. public void SetIntermediateError(string errorMessage) Parameters errorMessage string The error message to be set. UpdateTextChunks(IList<TextChunk>) Updates the text chunks using the specified update and completeness check lambdas. If all positions are complete, marks the operation as complete. public void UpdateTextChunks(IList<TextChunk> textChunks) Parameters textChunks IList<TextChunk> A list of TextChunk objects containing positions and their associated values (embeddings or completions)."
  },
  "api/dotnet/FoundationaLLM.Gateway.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Models.html",
    "title": "Namespace FoundationaLLM.Gateway.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway.Models Namespaces FoundationaLLM.Gateway.Models.Configuration Classes InternalTextOperationRequest Represents internal text operation requests processed by the FoundationaLLM Gateway. InternalTextOperationResult Represents the result of a text operation request. TextOperationContext Provides the context for a text operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.AzureOpenAITextCompletionService.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.AzureOpenAITextCompletionService.html",
    "title": "Class AzureOpenAITextCompletionService | FoundationaLLM",
    "summary": "Class AzureOpenAITextCompletionService Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Implementation of ITextOperationService using Azure OpenAI. public class AzureOpenAITextCompletionService : ITextOperationService Inheritance object AzureOpenAITextCompletionService Implements ITextOperationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAITextCompletionService(string, ILogger<AzureOpenAITextCompletionService>) Initializes a new instance of the AzureOpenAITextCompletionService class. public AzureOpenAITextCompletionService(string accountEndpoint, ILogger<AzureOpenAITextCompletionService> logger) Parameters accountEndpoint string The endpoint of the Azure OpenAI service. logger ILogger<AzureOpenAITextCompletionService> Methods ExecuteTextOperation(InternalTextOperationRequest) Executes a text operation (e.g., embedding or completion) on the provided text chunks. public Task<InternalTextOperationResult> ExecuteTextOperation(InternalTextOperationRequest textOperationRequest) Parameters textOperationRequest InternalTextOperationRequest The text operation request to execute. Returns Task<InternalTextOperationResult> The result of the operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.AzureOpenAITextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.AzureOpenAITextEmbeddingService.html",
    "title": "Class AzureOpenAITextEmbeddingService | FoundationaLLM",
    "summary": "Class AzureOpenAITextEmbeddingService Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Implementation of ITextEmbeddingService using Azure OpenAI. public class AzureOpenAITextEmbeddingService : ITextOperationService Inheritance object AzureOpenAITextEmbeddingService Implements ITextOperationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAITextEmbeddingService(string, ILogger<AzureOpenAITextEmbeddingService>) Initializes a new instance of the AzureOpenAITextEmbeddingService class. public AzureOpenAITextEmbeddingService(string accountEndpoint, ILogger<AzureOpenAITextEmbeddingService> logger) Parameters accountEndpoint string The endpoint of the Azure OpenAI service. logger ILogger<AzureOpenAITextEmbeddingService> Methods ExecuteTextOperation(InternalTextOperationRequest) Executes a text operation (e.g., embedding or completion) on the provided text chunks. public Task<InternalTextOperationResult> ExecuteTextOperation(InternalTextOperationRequest textOperationRequest) Parameters textOperationRequest InternalTextOperationRequest The text operation request to execute. Returns Task<InternalTextOperationResult> The result of the operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.GatewayCore.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.GatewayCore.html",
    "title": "Class GatewayCore | FoundationaLLM",
    "summary": "Class GatewayCore Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Implements the FoundationaLLM Gateway service. public class GatewayCore : IGatewayCore Inheritance object GatewayCore Implements IGatewayCore Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayCore(IAzureResourceManagerService, IOptions<GatewayCoreSettings>, IEnumerable<IResourceProviderService>, ILoggerFactory, GatewayMetrics) Implements the FoundationaLLM Gateway service. public GatewayCore(IAzureResourceManagerService armService, IOptions<GatewayCoreSettings> options, IEnumerable<IResourceProviderService> resourceProviderServices, ILoggerFactory loggerFactory, GatewayMetrics metrics) Parameters armService IAzureResourceManagerService The IAzureResourceManagerService instance providing Azure Resource Manager services. options IOptions<GatewayCoreSettings> The options providing the GatewayCoreSettings object. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. metrics GatewayMetrics The FoundationaLLM Gateway telemetry metrics. Methods CreateAgentCapability(string, string, string, UnifiedUserIdentity, Dictionary<string, object>?) Creates a new LLM-based agent capability. public Task<Dictionary<string, object>> CreateAgentCapability(string instanceId, string capabilityCategory, string capabilityName, UnifiedUserIdentity userIdentity, Dictionary<string, object>? parameters = null) Parameters instanceId string The FoundationaLLM instance id. capabilityCategory string The category of the capability. capabilityName string The name of the capability to be created. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. parameters Dictionary<string, object> A dictionary of parameter values used to create the capability. Returns Task<Dictionary<string, object>> A dictionary of output values. Remarks The supported categories are: OpenAI.Assistants (the names of the keys for the parameters and output dictionaries are defined in OpenAIAgentCapabilityParameterNames) ExecuteAsync(CancellationToken) Executes the Gateway service until cancellation is signaled. public Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task GetCompletionOperationResult(string, string, UnifiedUserIdentity) Retrieves the outcome of a completion operation. public Task<TextOperationResult> GetCompletionOperationResult(string instanceId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text completion operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. GetEmbeddingOperationResult(string, string, UnifiedUserIdentity) Retrieves the outcome of an embedding operation. public Task<TextOperationResult> GetEmbeddingOperationResult(string instanceId, string operationId, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. operationId string The unique identifier of the text embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. StartAsync(CancellationToken) Starts the Gateway service, allowing it to initialize. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StartCompletionOperation(string, TextCompletionRequest, UnifiedUserIdentity) Starts a completion operation. public Task<TextOperationResult> StartCompletionOperation(string instanceId, TextCompletionRequest completionRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. completionRequest TextCompletionRequest The TextCompletionRequest object containing the details of the completion operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. StartEmbeddingOperation(string, TextEmbeddingRequest, UnifiedUserIdentity) Starts an embedding operation. public Task<TextOperationResult> StartEmbeddingOperation(string instanceId, TextEmbeddingRequest embeddingRequest, UnifiedUserIdentity userIdentity) Parameters instanceId string The FoundationaLLM instance id. embeddingRequest TextEmbeddingRequest The TextEmbeddingRequest object containing the details of the embedding operation. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<TextOperationResult> A TextOperationResult object with the outcome of the operation. StopAsync(CancellationToken) Stops the Gateway service, allowing it to cleanup. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.GatewayMetrics.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.GatewayMetrics.html",
    "title": "Class GatewayMetrics | FoundationaLLM",
    "summary": "Class GatewayMetrics Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll public class GatewayMetrics Inheritance object GatewayMetrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayMetrics(IMeterFactory) public GatewayMetrics(IMeterFactory meterFactory) Parameters meterFactory IMeterFactory Methods IncrementTextChunkMeters(long, long) public void IncrementTextChunkMeters(long embeddingsCount, long completionsCount) Parameters embeddingsCount long completionsCount long IncrementTextChunksSizeTokens(long, long) public void IncrementTextChunksSizeTokens(long embeddingsSize, long completionsSize) Parameters embeddingsSize long completionsSize long"
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.GatewayWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.GatewayWorker.html",
    "title": "Class GatewayWorker | FoundationaLLM",
    "summary": "Class GatewayWorker Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Background worker used to execute the Gateway core. public class GatewayWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService GatewayWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayWorker(IGatewayCore, ILogger<GatewayWorker>) Background worker used to execute the Gateway core. public GatewayWorker(IGatewayCore gatewayService, ILogger<GatewayWorker> logger) Parameters gatewayService IGatewayCore The IGatewayCore providing the gateway functionalities. logger ILogger<GatewayWorker> The ILogger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.ModelContext.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.ModelContext.html",
    "title": "Class ModelContext | FoundationaLLM",
    "summary": "Class ModelContext Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Provides context associated with an embedding model. public class ModelContext Inheritance object ModelContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ModelContext(ConcurrentDictionary<string, TextOperationContext>, ILogger<ModelContext>) Provides context associated with an embedding model. public ModelContext(ConcurrentDictionary<string, TextOperationContext> textOperationContexts, ILogger<ModelContext> logger) Parameters textOperationContexts ConcurrentDictionary<string, TextOperationContext> The global dictionary of TextOperationContext objects indexed by operation identifier. logger ILogger<ModelContext> The ILogger used for logging. Properties DeploymentContexts A list of ModelDeploymentContext objects providing contexts for the available deployments for the model. public List<ModelDeploymentContext> DeploymentContexts { get; set; } Property Value List<ModelDeploymentContext> ModelName The name of the embedding model. public required string ModelName { get; set; } Property Value string Methods AddTextOperationContext(TextOperationContext) public void AddTextOperationContext(TextOperationContext textOperationContext) Parameters textOperationContext TextOperationContext ProcessTextOperations(CancellationToken) Processes text operations in a continuous loop. public Task ProcessTextOperations(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Notifies that the processing loop must be cancelled. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.ModelDeploymentContext.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.ModelDeploymentContext.html",
    "title": "Class ModelDeploymentContext | FoundationaLLM",
    "summary": "Class ModelDeploymentContext Namespace FoundationaLLM.Gateway.Services Assembly FoundationaLLM.Gateway.dll Provides context associated with model deployment used in text operations (embeddings or completions). public class ModelDeploymentContext Inheritance object ModelDeploymentContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ModelDeploymentContext(AzureOpenAIAccountDeployment, double, ITextOperationService, ILoggerFactory, GatewayMetrics) Provides context associated with model deployment used in text operations (embeddings or completions). public ModelDeploymentContext(AzureOpenAIAccountDeployment deployment, double tokenRateLimitMultiplier, ITextOperationService textOperationService, ILoggerFactory loggerFactory, GatewayMetrics metrics) Parameters deployment AzureOpenAIAccountDeployment The AzureOpenAIAccountDeployment object with the details of the model deployment. tokenRateLimitMultiplier double The token rate limit multiplier used to account for the tokenization differences between the Gateway API and the deployed model. textOperationService ITextOperationService The service providing the implementation of the text operation. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. metrics GatewayMetrics The FoundationaLLM Gateway telemetry metrics. Fields _deployment protected readonly AzureOpenAIAccountDeployment _deployment Field Value AzureOpenAIAccountDeployment _effectiveRequestRateLimit protected readonly int _effectiveRequestRateLimit Field Value int _effectiveTokenRateLimit protected readonly int _effectiveTokenRateLimit Field Value int _embeddingDimensionsIndexMapping Embedding operations are grouped by the number of dimensions they require. For each embedding dimension, we send a single request to the model. This dictionary maps the number of dimensions to the index in the _textOperationRequests list. protected readonly Dictionary<int, int> _embeddingDimensionsIndexMapping Field Value Dictionary<int, int> _jsonSerializerOptions protected readonly JsonSerializerOptions _jsonSerializerOptions Field Value JsonSerializerOptions _logger protected readonly ILogger<ModelDeploymentContext> _logger Field Value ILogger<ModelDeploymentContext> _loggerFactory protected readonly ILoggerFactory _loggerFactory Field Value ILoggerFactory _metrics protected readonly GatewayMetrics _metrics Field Value GatewayMetrics _requestRateWindowActualRequestCount The actual cummulated number of requests for the current request rate window. protected int _requestRateWindowActualRequestCount Field Value int _requestRateWindowProjectedRequestCount The projected cummulated number of requests for the current request rate window. protected int _requestRateWindowProjectedRequestCount Field Value int _requestRateWindowStart The start timestamp of the current request rate window. protected DateTime _requestRateWindowStart Field Value DateTime _textOperationRequests protected readonly List<InternalTextOperationRequest> _textOperationRequests Field Value List<InternalTextOperationRequest> _textOperationService protected readonly ITextOperationService _textOperationService Field Value ITextOperationService _tokenRateLimitMultiplier protected readonly double _tokenRateLimitMultiplier Field Value double _tokenRateWindowActualTokenCount The actual cummulated number of tokens for the current token rate window. protected int _tokenRateWindowActualTokenCount Field Value int _tokenRateWindowProjectedTokenCount The projects cummulated number of tokens for the current token rate window. protected int _tokenRateWindowProjectedTokenCount Field Value int _tokenRateWindowStart The start timestamp of the current token rate window. protected DateTime _tokenRateWindowStart Field Value DateTime Properties HasInput public bool HasInput { get; } Property Value bool ModelCanDoCompletions Indicates whether the model in the deployment can perform completions. public bool ModelCanDoCompletions { get; } Property Value bool ModelCanDoEmbeddings Indicates whether the model in the deployment can perform embeddings. public bool ModelCanDoEmbeddings { get; } Property Value bool Methods ProcessTextOperationRequests() public Task<List<InternalTextOperationResult>> ProcessTextOperationRequests() Returns Task<List<InternalTextOperationResult>> TryAddInputTextChunk(TextChunk, Dictionary<string, object>) Attempts to add a new text chunk to the input for the text operation request. public bool TryAddInputTextChunk(TextChunk textChunk, Dictionary<string, object> modelParameters) Parameters textChunk TextChunk The text chunk to be added. modelParameters Dictionary<string, object> The model parameters for the text operation. Returns bool true if the text chunk can be added without breaching the token and reques rate limits. Remarks For embedding operations, modelParameters must always contain a single property named TextOperationContextPropertyNames.EmbeddingDimensions which specifies the number of dimensions required for embedding. For completion operations, modelParameters can contain the following parameters: TextOperationContextPropertyNames.Temperature - the completion model temperature. TextOperationContextPropertyNames.TopP - the completion model top-p value. TextOperationContextPropertyNames.MaxOutputTokenCount - the completion model max output token count."
  },
  "api/dotnet/FoundationaLLM.Gateway.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.Services.html",
    "title": "Namespace FoundationaLLM.Gateway.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway.Services Classes AzureOpenAITextCompletionService Implementation of ITextOperationService using Azure OpenAI. AzureOpenAITextEmbeddingService Implementation of ITextEmbeddingService using Azure OpenAI. GatewayCore Implements the FoundationaLLM Gateway service. GatewayMetrics GatewayWorker Background worker used to execute the Gateway core. ModelContext Provides context associated with an embedding model. ModelDeploymentContext Provides context associated with model deployment used in text operations (embeddings or completions)."
  },
  "api/dotnet/FoundationaLLM.Gateway.html": {
    "href": "api/dotnet/FoundationaLLM.Gateway.html",
    "title": "Namespace FoundationaLLM.Gateway | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Gateway Namespaces FoundationaLLM.Gateway.API.Controllers FoundationaLLM.Gateway.AdapterAPI.Controllers FoundationaLLM.Gateway.Exceptions FoundationaLLM.Gateway.Interfaces FoundationaLLM.Gateway.Models FoundationaLLM.Gateway.Services"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.IdentityManagementController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.IdentityManagementController.html",
    "title": "Class IdentityManagementController | FoundationaLLM",
    "summary": "Class IdentityManagementController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides account retrieval methods. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/identity\")] public class IdentityManagementController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller IdentityManagementController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IdentityManagementController(IOrchestrationContext, IIdentityManagementService, ILogger<IdentityManagementController>) Provides account retrieval methods. public IdentityManagementController(IOrchestrationContext callContext, IIdentityManagementService identityManagementService, ILogger<IdentityManagementController> logger) Parameters callContext IOrchestrationContext The call context containing user identity details. identityManagementService IIdentityManagementService The IIdentityManagementService used for retrieving group account information. logger ILogger<IdentityManagementController> The ILogger used for logging. Methods GetGroup(string) Retrieves a specific group account by its identifier. [HttpGet(\"groups/{groupId}\", Name = \"GetGroup\")] public Task<IActionResult> GetGroup(string groupId) Parameters groupId string Returns Task<IActionResult> GetServicePrincipal(string) Retrieves a specific user account by its identifier. [HttpGet(\"serviceprincipals/{servicePrincipalId}\", Name = \"GetServicePrincipals\")] public Task<IActionResult> GetServicePrincipal(string servicePrincipalId) Parameters servicePrincipalId string Returns Task<IActionResult> GetUser(string) Retrieves a specific user account by its identifier. [HttpGet(\"users/{userId}\", Name = \"GetUser\")] public Task<IActionResult> GetUser(string userId) Parameters userId string Returns Task<IActionResult> RetrieveGroups(ObjectQueryParameters) Retrieves a list of group accounts with filtering and paging options. [HttpPost(\"groups/retrieve\", Name = \"RetrieveGroups\")] public Task<IActionResult> RetrieveGroups(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IActionResult> RetrieveObjectsByIds(ObjectQueryParameters) Retrieves user and group objects by the passed in list of IDs. [HttpPost(\"objects/retrievebyids\", Name = \"RetrieveObjectsByIds\")] public Task<IActionResult> RetrieveObjectsByIds(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IActionResult> RetrieveServicePrincipals(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. [HttpPost(\"serviceprincipals/retrieve\", Name = \"RetrieveServicePrincipals\")] public Task<IActionResult> RetrieveServicePrincipals(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IActionResult> RetrieveUsers(ObjectQueryParameters) Retrieves a list of user accounts with filtering and paging options. [HttpPost(\"users/retrieve\", Name = \"RetrieveUsers\")] public Task<IActionResult> RetrieveUsers(ObjectQueryParameters parameters) Parameters parameters ObjectQueryParameters Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.ResourceController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.ResourceController.html",
    "title": "Class ResourceController | FoundationaLLM",
    "summary": "Class ResourceController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods to manage resources. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Consumes(\"application/json\", new string[] { \"multipart/form-data\" })] [Produces(\"application/json\", new string[] { })] [Route(\"instances/{instanceId}/providers/{resourceProvider}\")] public class ResourceController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller ResourceController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ResourceController(IOrchestrationContext, IEnumerable<IResourceProviderService>, ILogger<ResourceController>) Provides methods to manage resources. public ResourceController(IOrchestrationContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, ILogger<ResourceController> logger) Parameters callContext IOrchestrationContext The call context containing user identity details. resourceProviderServices IEnumerable<IResourceProviderService> The list of IResourceProviderService resource providers. logger ILogger<ResourceController> The ILogger used for logging. Methods DeleteResource(string, string, string) Deletes a resource. [HttpDelete(\"{*resourcePath}\", Name = \"DeleteResource\")] public Task<IActionResult> DeleteResource(string instanceId, string resourceProvider, string resourcePath) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<IActionResult> GetResources(string, string, string) Gets one or more resources. [HttpGet(\"{*resourcePath}\", Name = \"GetResources\")] public Task<IActionResult> GetResources(string instanceId, string resourceProvider, string resourcePath) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<IActionResult> UpsertResource(string, string, string) Creates or updates resources. [HttpPost(\"{*resourcePath}\", Name = \"UpsertResource\")] public Task<IActionResult> UpsertResource(string instanceId, string resourceProvider, string resourcePath) Parameters instanceId string The FoundationaLLM instance identifier. resourceProvider string The name of the resource provider that should handle the request. resourcePath string The logical path of the resource type. Returns Task<IActionResult> The ObjectId of the created or updated resource."
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Management.API.Controllers Assembly FoundationaLLM.Management.API.dll Provides methods for checking the status of the service. [Authorize(AuthenticationSchemes = \"Bearer\", Policy = \"MicrosoftEntraIDStandard\")] [ApiController] [Route(\"instances/{instanceId}/[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAuthStatus() Returns OK if the requester is authenticated and allowed to execute requests against this service. [HttpGet(\"auth\", Name = \"GetAuthStatus\")] public IActionResult GetAuthStatus() Returns IActionResult GetServiceStatus() Returns the status of the Core API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public IActionResult GetServiceStatus() Returns IActionResult Options() Returns the allowed HTTP methods for the Core API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Management.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Management.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Management.API.Controllers Classes IdentityManagementController Provides account retrieval methods. ResourceController Provides methods to manage resources. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Management.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "summary": "Class Program Namespace FoundationaLLM.Management.API Assembly FoundationaLLM.Management.API.dll Main entry point for the Management API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Management API service configuration. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Management.API.html": {
    "href": "api/dotnet/FoundationaLLM.Management.API.html",
    "title": "Namespace FoundationaLLM.Management.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Management.API Namespaces FoundationaLLM.Management.API.Controllers Classes Program Main entry point for the Management API."
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "summary": "Class CompletionsController Namespace FoundationaLLM.Orchestration.API.Controllers Assembly FoundationaLLM.Orchestration.API.dll CompletionsController class [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Orchestration orchestration controller Constructors CompletionsController(IOrchestrationService, ILogger<CompletionsController>) CompletionsController class public CompletionsController(IOrchestrationService orchestrationService, ILogger<CompletionsController> logger) Parameters orchestrationService IOrchestrationService logger ILogger<CompletionsController> Remarks Constructor for the Orchestration orchestration controller Methods GetCompletion(string, CompletionRequest) Retrieves a completion from an orchestration service [HttpPost(\"completions\")] public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Orchestration.API.Controllers Assembly FoundationaLLM.Orchestration.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] [Consumes(\"application/json\", new string[] { })] [Produces(\"application/json\", new string[] { })] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StatusController(IOrchestrationService) Provides methods for checking the status of the service. public StatusController(IOrchestrationService orchestrationService) Parameters orchestrationService IOrchestrationService The IOrchestrationService that provides orchestration capabilities. Methods Get(string) Returns the status of the Orchestration API service. [AllowAnonymous] [HttpGet(Name = \"GetServiceStatus\")] public Task<ServiceStatusInfo> Get(string instanceId) Parameters instanceId string Returns Task<ServiceStatusInfo> Options() Returns the allowed HTTP methods for the Orchestration API service. [AllowAnonymous] [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Orchestration.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.API.Controllers Classes CompletionsController CompletionsController class StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "summary": "Class Program Namespace FoundationaLLM.Orchestration.API Assembly FoundationaLLM.Orchestration.API.dll Program class for the Orchestration API public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Orchestration API public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.Orchestration.API.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.API.html",
    "title": "Namespace FoundationaLLM.Orchestration.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.API Namespaces FoundationaLLM.Orchestration.API.Controllers Classes Program Program class for the Orchestration API"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureAIDirectService.html",
    "title": "Interface IAzureAIDirectService | FoundationaLLM",
    "summary": "Interface IAzureAIDirectService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for going directly to Azure AI for orchestration. public interface IAzureAIDirectService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) ILLMOrchestrationService.StartCompletionOperation(string, LLMCompletionRequest) ILLMOrchestrationService.GetCompletionOperationStatus(string, string) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureOpenAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IAzureOpenAIDirectService.html",
    "title": "Interface IAzureOpenAIDirectService | FoundationaLLM",
    "summary": "Interface IAzureOpenAIDirectService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for going directly to Azure OpenAI for orchestration. public interface IAzureOpenAIDirectService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) ILLMOrchestrationService.StartCompletionOperation(string, LLMCompletionRequest) ILLMOrchestrationService.GetCompletionOperationStatus(string, string) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationService.html",
    "title": "Interface ILLMOrchestrationService | FoundationaLLM",
    "summary": "Interface ILLMOrchestrationService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll LLM Orchestration Service interface public interface ILLMOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Name The name of the LLM orchestration service. string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the status of the orchestration service. Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo> StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationServiceManager.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILLMOrchestrationServiceManager.html",
    "title": "Interface ILLMOrchestrationServiceManager | FoundationaLLM",
    "summary": "Interface ILLMOrchestrationServiceManager Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Defines the interface for the LLM Orchestration Service Manager. public interface ILLMOrchestrationServiceManager Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetAggregateStatus(string, IServiceProvider) Gets an aggregate initialization status based on the initialization status of each subordinate orchestration service. Task<List<ServiceStatusInfo>> GetAggregateStatus(string instanceId, IServiceProvider serviceProvider) Parameters instanceId string The FoundationaLLM instance ID. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. Returns Task<List<ServiceStatusInfo>> GetService(string, string, IServiceProvider, IOrchestrationContext) Gets an ILLMOrchestrationService instance based on the service name. ILLMOrchestrationService GetService(string instanceId, string serviceName, IServiceProvider serviceProvider, IOrchestrationContext callContext) Parameters instanceId string The FoundationaLLM instance ID. serviceName string The name of the ILLMOrchestrationService to be retrieved. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. Returns ILLMOrchestrationService"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ILangChainService.html",
    "title": "Interface ILangChainService | FoundationaLLM",
    "summary": "Interface ILangChainService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for the LangChain Orchestration Service public interface ILangChainService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) ILLMOrchestrationService.StartCompletionOperation(string, LLMCompletionRequest) ILLMOrchestrationService.GetCompletionOperationStatus(string, string) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IOrchestrationService.html",
    "title": "Interface IOrchestrationService | FoundationaLLM",
    "summary": "Interface IOrchestrationService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface for the Orchestration Service public interface IOrchestrationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletion(string, CompletionRequest) Retrieve a completion from the configured orchestration service. Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the aggredated status of all orchestration services. Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance id. Returns Task<ServiceStatusInfo> The status of the orchestration service. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ISemanticCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ISemanticCacheService.html",
    "title": "Interface ISemanticCacheService | FoundationaLLM",
    "summary": "Interface ISemanticCacheService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Defines the interface for the semantic cache service. public interface ISemanticCacheService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletionResponseFromCache(string, string, CompletionRequest) Tries to get a CompletionResponse from the semantic cache for the specified agent in the specified FoundationaLLM instance. Task<CompletionResponse?> GetCompletionResponseFromCache(string instanceId, string agentName, CompletionRequest completionRequest) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. completionRequest CompletionRequest The CompletionRequest for which to get the cache item. Returns Task<CompletionResponse> A CompletionResponse if a match exists. HasCacheForAgent(string, string) Determines whether the semantic cache for the specified agent in the specified FoundationaLLM instance exists. bool HasCacheForAgent(string instanceId, string agentName) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. Returns bool if the semantic cache for the specified agent exists, otherwise. InitializeCacheForAgent(string, string, AgentSemanticCacheSettings) Initializes the semantic cache for the specified agent in the specified FoundationaLLM instance. Task InitializeCacheForAgent(string instanceId, string agentName, AgentSemanticCacheSettings agentSettings) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. agentSettings AgentSemanticCacheSettings The AgentSemanticCacheSettings providing the agent's semantic cache settings. Returns Task ResetCacheForAgent(string, string) Resets the semantic cache for the specified agent in the specified FoundationaLLM instance. Task ResetCacheForAgent(string instanceId, string agentName) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. Returns Task SetCompletionResponseInCache(string, string, CompletionResponse) Sets a CompletionResponse in the semantic cache for the specified agent in the specified FoundationaLLM instance. Task SetCompletionResponseInCache(string instanceId, string agentName, CompletionResponse completionResponse) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. completionResponse CompletionResponse The CompletionResponse to be set in the agent's cache. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ISemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.ISemanticKernelService.html",
    "title": "Interface ISemanticKernelService | FoundationaLLM",
    "summary": "Interface ISemanticKernelService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Interface to define the core methods of a Semantic Kernal Service public interface ISemanticKernelService : ILLMOrchestrationService Inherited Members ILLMOrchestrationService.Name ILLMOrchestrationService.GetStatus(string) ILLMOrchestrationService.GetCompletion(string, LLMCompletionRequest) ILLMOrchestrationService.StartCompletionOperation(string, LLMCompletionRequest) ILLMOrchestrationService.GetCompletionOperationStatus(string, string) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IUserPromptRewriteService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.IUserPromptRewriteService.html",
    "title": "Interface IUserPromptRewriteService | FoundationaLLM",
    "summary": "Interface IUserPromptRewriteService Namespace FoundationaLLM.Orchestration.Core.Interfaces Assembly FoundationaLLM.Orchestration.Core.dll Defines the interface for the user prompt rewrite service. public interface IUserPromptRewriteService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasUserPromptRewriterForAgent(string, string) Determines whether user prompt rewrite is configured for the specified agent in the specified FoundationaLLM instance. bool HasUserPromptRewriterForAgent(string instanceId, string agentName) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. Returns bool if the user prompt rewrite for the specified agent is configured, otherwise. InitializeUserPromptRewriterForAgent(string, string, AgentUserPromptRewriteSettings) Initializes user prompt rewrite for the specified agent in the specified FoundationaLLM instance. Task InitializeUserPromptRewriterForAgent(string instanceId, string agentName, AgentUserPromptRewriteSettings agentSettings) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. agentSettings AgentUserPromptRewriteSettings The AgentUserPromptRewriteSettings providing the agent's user prompt rewrite settings. Returns Task RewriteUserPrompt(string, string, CompletionRequest) Rewrites the user prompt to a form that can be used by the AI model. Task RewriteUserPrompt(string instanceId, string agentName, CompletionRequest completionRequest) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. completionRequest CompletionRequest The CompletionRequest for which to rewrite the user prompt. Returns Task The rewritten user prompt."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.Core.Interfaces Interfaces IAzureAIDirectService Interface for going directly to Azure AI for orchestration. IAzureOpenAIDirectService Interface for going directly to Azure OpenAI for orchestration. ILLMOrchestrationService LLM Orchestration Service interface ILLMOrchestrationServiceManager Defines the interface for the LLM Orchestration Service Manager. ILangChainService Interface for the LangChain Orchestration Service IOrchestrationService Interface for the Orchestration Service ISemanticCacheService Defines the interface for the semantic cache service. ISemanticKernelService Interface to define the core methods of a Semantic Kernal Service IUserPromptRewriteService Defines the interface for the user prompt rewrite service."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentConversationStep.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentConversationStep.html",
    "title": "Class AgentConversationStep | FoundationaLLM",
    "summary": "Class AgentConversationStep Namespace FoundationaLLM.Orchestration.Core.Models Assembly FoundationaLLM.Orchestration.Core.dll Provides details about a single step in an agent conversation flow. public class AgentConversationStep Inheritance object AgentConversationStep Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AgentName The unique name of the agent whose turn is to respond. public required string AgentName { get; set; } Property Value string UserPrompt The user prompt to be used in the conversation step. public required string UserPrompt { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentSemanticCache.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentSemanticCache.html",
    "title": "Class AgentSemanticCache | FoundationaLLM",
    "summary": "Class AgentSemanticCache Namespace FoundationaLLM.Orchestration.Core.Models Assembly FoundationaLLM.Orchestration.Core.dll Provides all dependencies for an agent-related semantic cache. public class AgentSemanticCache Inheritance object AgentSemanticCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties EmbeddingClient Gets or sets the Azure OpenAI client. public required EmbeddingClient EmbeddingClient { get; set; } Property Value EmbeddingClient Settings Gets or sets the agent's semantic cache settings. public required AgentSemanticCacheSettings Settings { get; set; } Property Value AgentSemanticCacheSettings"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentUserPromptRewriter.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.AgentUserPromptRewriter.html",
    "title": "Class AgentUserPromptRewriter | FoundationaLLM",
    "summary": "Class AgentUserPromptRewriter Namespace FoundationaLLM.Orchestration.Core.Models Assembly FoundationaLLM.Orchestration.Core.dll Provide the capability to rewrite user prompts for agents. public class AgentUserPromptRewriter Inheritance object AgentUserPromptRewriter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ChatClient Gets or sets the Azure OpenAI chat client used for rewriting. public required ChatClient ChatClient { get; set; } Property Value ChatClient RewriterSystemPrompt Gets or sets the system prompt to be used for rewriting user prompts. public required string RewriterSystemPrompt { get; set; } Property Value string Settings Gets or sets the agent's user prompt rewrite settings. public required AgentUserPromptRewriteSettings Settings { get; set; } Property Value AgentUserPromptRewriteSettings"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.LangChainServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.LangChainServiceSettings.html",
    "title": "Class LangChainServiceSettings | FoundationaLLM",
    "summary": "Class LangChainServiceSettings Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Orchestration.Core.dll The settings configuration options for a LangChain Service public class LangChainServiceSettings Inheritance object LangChainServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PollingIntervalSeconds The polling interval in seconds to check the status of the LangChain service. public double PollingIntervalSeconds { get; set; } Property Value double"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.OrchestrationServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.OrchestrationServiceSettings.html",
    "title": "Class OrchestrationServiceSettings | FoundationaLLM",
    "summary": "Class OrchestrationServiceSettings Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Orchestration.Core.dll Provides settings for the orchestration service. public class OrchestrationServiceSettings Inheritance object OrchestrationServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CompletionRequestsStorage Gets or sets the BlobStorageServiceSettings used to store exported completion requests. public required BlobStorageServiceSettings CompletionRequestsStorage { get; set; } Property Value BlobStorageServiceSettings"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.SemanticKernelServiceSettings.html",
    "title": "Class SemanticKernelServiceSettings | FoundationaLLM",
    "summary": "Class SemanticKernelServiceSettings Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Assembly FoundationaLLM.Orchestration.Core.dll The settings configuration options for a SemanticKernalService public class SemanticKernelServiceSettings Inheritance object SemanticKernelServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Classes LangChainServiceSettings The settings configuration options for a LangChain Service OrchestrationServiceSettings Provides settings for the orchestration service. SemanticKernelServiceSettings The settings configuration options for a SemanticKernalService"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Models.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.Core.Models Namespaces FoundationaLLM.Orchestration.Core.Models.ConfigurationOptions Classes AgentConversationStep Provides details about a single step in an agent conversation flow. AgentSemanticCache Provides all dependencies for an agent-related semantic cache. AgentUserPromptRewriter Provide the capability to rewrite user prompts for agents."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.AgentOrchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.AgentOrchestration.html",
    "title": "Class AgentOrchestration | FoundationaLLM",
    "summary": "Class AgentOrchestration Namespace FoundationaLLM.Orchestration.Core.Orchestration Assembly FoundationaLLM.Orchestration.Core.dll Knowledge Management orchestration. public class AgentOrchestration : OrchestrationBase Inheritance object OrchestrationBase AgentOrchestration Inherited Members OrchestrationBase._orchestrationService object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for default agent. Constructors AgentOrchestration(string, string, KnowledgeManagementAgent?, string, string, Dictionary<string, object>?, IOrchestrationContext, ILLMOrchestrationService, IUserPromptRewriteService, ISemanticCacheService, ILogger<OrchestrationBase>, IHttpClientFactoryService, Dictionary<string, IResourceProviderService>, bool?, string?, LongRunningOperationContext?, IContextServiceClient, Func<LLMCompletionRequest, CompletionRequest, Task>?) Knowledge Management orchestration. public AgentOrchestration(string instanceId, string agentObjectId, KnowledgeManagementAgent? agent, string conversationId, string agentWorkflowMainAIModelAPIEndpoint, Dictionary<string, object>? explodedObjects, IOrchestrationContext callContext, ILLMOrchestrationService orchestrationService, IUserPromptRewriteService userPromptRewriteService, ISemanticCacheService semanticCacheService, ILogger<OrchestrationBase> logger, IHttpClientFactoryService httpClientFactoryService, Dictionary<string, IResourceProviderService> resourceProviderServices, bool? dataSourceAccessDenied, string? vectorStoreId, LongRunningOperationContext? longRunningOperationContext, IContextServiceClient contextServiceClient, Func<LLMCompletionRequest, CompletionRequest, Task>? completionRequestObserver = null) Parameters instanceId string The FoundationaLLM instance identifier. agentObjectId string The FoundationaLLM object identifier of the agent. agent KnowledgeManagementAgent The KnowledgeManagementAgent agent. conversationId string The conversation identifier. agentWorkflowMainAIModelAPIEndpoint string The URL of the API endpoint of the main AI model used by the agent workflow. explodedObjects Dictionary<string, object> A dictionary of objects retrieved from various object ids related to the agent. For more details see Objects . callContext IOrchestrationContext The call context of the request being handled. orchestrationService ILLMOrchestrationService userPromptRewriteService IUserPromptRewriteService The IUserPromptRewriteService used to rewrite user prompts. semanticCacheService ISemanticCacheService The ISemanticCacheService used to cache and retrieve completion responses. logger ILogger<OrchestrationBase> The logger used for logging. httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to create HttpClient instances. resourceProviderServices Dictionary<string, IResourceProviderService> The dictionary of IResourceProviderService dataSourceAccessDenied bool? Inidicates that access was denied to all underlying data sources. vectorStoreId string The OpenAI Assistants or Azure AI Agent Service vector store id. longRunningOperationContext LongRunningOperationContext The LongRunningOperationContext providing the context of the long-running operation. contextServiceClient IContextServiceClient The IContextServiceClient used to interact with the context service. completionRequestObserver Func<LLMCompletionRequest, CompletionRequest, Task> An optional observer for completion requests. Remarks Constructor for default agent. Methods GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public override Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse> GetCompletionOperationStatus(string) Gets the status of a completion operation. public override Task<LongRunningOperation> GetCompletionOperationStatus(string operationId) Parameters operationId string The identifier of the completion operation. Returns Task<LongRunningOperation> A LongRunningOperation object providing details about the running operation. StartCompletionOperation(CompletionRequest) Starts a completion operation. public override Task<LongRunningOperation> StartCompletionOperation(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The CompletionRequest providing details about the completion request. Returns Task<LongRunningOperation> A LongRunningOperation object providing details about the newly started operation."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.ExplodedObjectsManager.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.ExplodedObjectsManager.html",
    "title": "Class ExplodedObjectsManager | FoundationaLLM",
    "summary": "Class ExplodedObjectsManager Namespace FoundationaLLM.Orchestration.Core.Orchestration Assembly FoundationaLLM.Orchestration.Core.dll Manages the exploded objects dictionary ensuring consistency and integrity. public class ExplodedObjectsManager Inheritance object ExplodedObjectsManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetExplodedObjects() Gets the exploded objects dictionary. public Dictionary<string, object> GetExplodedObjects() Returns Dictionary<string, object> A shallow copy of the internal exploded objects dictionary. This only prevents unguarded changes to the key-value pairs but not to the values themselves. HasKey(string) Indicates whether the exploded objects dictionary contains the specified key. public bool HasKey(string key) Parameters key string The key being searched for. Returns bool true if the key is present in the dictionary (even if the associated value is null), false otherwise. TryAdd(string, object) Adds a new key value pair to the exploded objects dictionary. public bool TryAdd(string key, object value) Parameters key string The key of the object to add to the dictionary. value object The object to add to the dictionary. Returns bool true if the value was added successfully, false otherwise. Remarks The first attempt to add an object always wins. This means that if the key already exists in the dictionary, the add operation will have no effect and it will not generate an exception either. TryGet<T>(string, out T?) Tries to get the value associated with the specified key. public bool TryGet<T>(string key, out T? value) where T : class Parameters key string The key being searched for. value T The value being searched for. Returns bool The typed object associated with the specified key. Type Parameters T The type of the value associated with the key."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBase.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBase.html",
    "title": "Class OrchestrationBase | FoundationaLLM",
    "summary": "Class OrchestrationBase Namespace FoundationaLLM.Orchestration.Core.Orchestration Assembly FoundationaLLM.Orchestration.Core.dll Base class for an orchestration involving a FoundationaLLM agent. public class OrchestrationBase Inheritance object OrchestrationBase Derived AgentOrchestration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the OrchestrationBase class. Constructors OrchestrationBase(ILLMOrchestrationService) Base class for an orchestration involving a FoundationaLLM agent. public OrchestrationBase(ILLMOrchestrationService orchestrationService) Parameters orchestrationService ILLMOrchestrationService Remarks Constructor for the OrchestrationBase class. Fields _orchestrationService The orchestration service for the agent. protected readonly ILLMOrchestrationService _orchestrationService Field Value ILLMOrchestrationService Methods GetCompletion(CompletionRequest) The call to execute a completion after the agent is configured. public virtual Task<CompletionResponse> GetCompletion(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest Returns Task<CompletionResponse> GetCompletionOperationStatus(string) Gets the status of a completion operation. public virtual Task<LongRunningOperation> GetCompletionOperationStatus(string operationId) Parameters operationId string The identifier of the completion operation. Returns Task<LongRunningOperation> A LongRunningOperation object providing details about the running operation. StartCompletionOperation(CompletionRequest) Starts a completion operation. public virtual Task<LongRunningOperation> StartCompletionOperation(CompletionRequest completionRequest) Parameters completionRequest CompletionRequest The CompletionRequest providing details about the completion request. Returns Task<LongRunningOperation> A LongRunningOperation object providing details about the newly started operation."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.OrchestrationBuilder.html",
    "title": "Class OrchestrationBuilder | FoundationaLLM",
    "summary": "Class OrchestrationBuilder Namespace FoundationaLLM.Orchestration.Core.Orchestration Assembly FoundationaLLM.Orchestration.Core.dll Builds an orchestration for a FoundationaLLM agent. public class OrchestrationBuilder Inheritance object OrchestrationBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Build(string, string, CompletionRequest, IOrchestrationContext, IConfiguration, Dictionary<string, IResourceProviderService>, ILLMOrchestrationServiceManager, IAzureCosmosDBService, ITemplatingService, IContextServiceClient, IUserPromptRewriteService, ISemanticCacheService, IServiceProvider, ILoggerFactory, Func<LLMCompletionRequest, CompletionRequest, Task>?) Builds the orchestration used to handle a synchronous completion operation or start an asynchronous completion operation. public static Task<OrchestrationBase?> Build(string instanceId, string agentName, CompletionRequest originalRequest, IOrchestrationContext callContext, IConfiguration configuration, Dictionary<string, IResourceProviderService> resourceProviderServices, ILLMOrchestrationServiceManager llmOrchestrationServiceManager, IAzureCosmosDBService cosmosDBService, ITemplatingService templatingService, IContextServiceClient contextServiceClient, IUserPromptRewriteService userPromptRewriteService, ISemanticCacheService semanticCacheService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory, Func<LLMCompletionRequest, CompletionRequest, Task>? completionRequestObserver = null) Parameters instanceId string The FoundationaLLM instance ID. agentName string The unique name of the agent for which the orchestration is built. originalRequest CompletionRequest The CompletionRequest request for which the orchestration is built. callContext IOrchestrationContext The call context of the request being handled. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. resourceProviderServices Dictionary<string, IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. llmOrchestrationServiceManager ILLMOrchestrationServiceManager The ILLMOrchestrationServiceManager that manages internal and external orchestration services. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService used to interact with the Cosmos DB database. templatingService ITemplatingService The ITemplatingService used to render templates. contextServiceClient IContextServiceClient The IContextServiceClient client used to call the Context API. userPromptRewriteService IUserPromptRewriteService The IUserPromptRewriteService used to rewrite user prompts. semanticCacheService ISemanticCacheService The ISemanticCacheService used to cache and retrieve completion responses. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. loggerFactory ILoggerFactory The logger factory used to create new loggers. completionRequestObserver Func<LLMCompletionRequest, CompletionRequest, Task> An optional observer for completion requests. Returns Task<OrchestrationBase> Exceptions ArgumentException BuildForStatus(string, string, IOrchestrationContext, IConfiguration, Dictionary<string, IResourceProviderService>, ILLMOrchestrationServiceManager, IAzureCosmosDBService, ISemanticCacheService, IServiceProvider, ILoggerFactory) Builds the orchestration used to retrieve the status of an asynchronous completion operation. public static Task<OrchestrationBase?> BuildForStatus(string instanceId, string operationId, IOrchestrationContext callContext, IConfiguration configuration, Dictionary<string, IResourceProviderService> resourceProviderServices, ILLMOrchestrationServiceManager llmOrchestrationServiceManager, IAzureCosmosDBService cosmosDBService, ISemanticCacheService semanticCacheService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceId string The FoundationaLLM instance identifier. operationId string The asynchronous completion operation identifier. callContext IOrchestrationContext The call context of the request being handled. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. resourceProviderServices Dictionary<string, IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. llmOrchestrationServiceManager ILLMOrchestrationServiceManager The ILLMOrchestrationServiceManager that manages internal and external orchestration services. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService used to interact with the Cosmos DB database. semanticCacheService ISemanticCacheService The ISemanticCacheService used to cache and retrieve completion responses. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. loggerFactory ILoggerFactory The logger factory used to create new loggers. Returns Task<OrchestrationBase> Exceptions ArgumentException"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Orchestration.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Orchestration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.Core.Orchestration Classes AgentOrchestration Knowledge Management orchestration. ExplodedObjectsManager Manages the exploded objects dictionary ensuring consistency and integrity. OrchestrationBase Base class for an orchestration involving a FoundationaLLM agent. OrchestrationBuilder Builds an orchestration for a FoundationaLLM agent."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureAIDirectService.html",
    "title": "Class AzureAIDirectService | FoundationaLLM",
    "summary": "Class AzureAIDirectService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The Azure AI direct orchestration service. public class AzureAIDirectService : IAzureAIDirectService, ILLMOrchestrationService Inheritance object AzureAIDirectService Implements IAzureAIDirectService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAIDirectService(IOrchestrationContext, ILogger<AzureAIDirectService>, IHttpClientFactoryService, IEnumerable<IResourceProviderService>) The Azure AI direct orchestration service. public AzureAIDirectService(IOrchestrationContext callContext, ILogger<AzureAIDirectService> logger, IHttpClientFactoryService httpClientFactoryService, IEnumerable<IResourceProviderService> resourceProviderServices) Parameters callContext IOrchestrationContext The IOrchestrationContext providing details about the call context. logger ILogger<AzureAIDirectService> The logger used for logging. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo> StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureOpenAIDirectService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.AzureOpenAIDirectService.html",
    "title": "Class AzureOpenAIDirectService | FoundationaLLM",
    "summary": "Class AzureOpenAIDirectService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The Azure OpenAI direct orchestration service. public class AzureOpenAIDirectService : IAzureOpenAIDirectService, ILLMOrchestrationService Inheritance object AzureOpenAIDirectService Implements IAzureOpenAIDirectService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureOpenAIDirectService(ILogger<AzureOpenAIDirectService>, IOrchestrationContext, IHttpClientFactoryService, IEnumerable<IResourceProviderService>) The Azure OpenAI direct orchestration service. public AzureOpenAIDirectService(ILogger<AzureOpenAIDirectService> logger, IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService, IEnumerable<IResourceProviderService> resourceProviderServices) Parameters logger ILogger<AzureOpenAIDirectService> The logger used for logging. callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. resourceProviderServices IEnumerable<IResourceProviderService> A dictionary of IResourceProviderService resource providers hashed by resource provider name. Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo> StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationService.html",
    "title": "Class LLMOrchestrationService | FoundationaLLM",
    "summary": "Class LLMOrchestrationService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll Provides methods to call an external LLM orchestration service. public class LLMOrchestrationService : ILLMOrchestrationService Inheritance object LLMOrchestrationService Implements ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LLMOrchestrationService(string, ILogger<LLMOrchestrationService>, IHttpClientFactoryService, IOrchestrationContext) LLM Orchestration Service public LLMOrchestrationService(string serviceName, ILogger<LLMOrchestrationService> logger, IHttpClientFactoryService httpClientFactoryService, IOrchestrationContext callContext) Parameters serviceName string logger ILogger<LLMOrchestrationService> httpClientFactoryService IHttpClientFactoryService callContext IOrchestrationContext Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo> StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationServiceManager.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LLMOrchestrationServiceManager.html",
    "title": "Class LLMOrchestrationServiceManager | FoundationaLLM",
    "summary": "Class LLMOrchestrationServiceManager Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll Manages internal and external orchestration services. public class LLMOrchestrationServiceManager : ILLMOrchestrationServiceManager Inheritance object LLMOrchestrationServiceManager Implements ILLMOrchestrationServiceManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LLMOrchestrationServiceManager(IOptions<InstanceSettings>, IEnumerable<IResourceProviderService>, IConfiguration, ILogger<LLMOrchestrationServiceManager>) Creates a new instance of the LLM Orchestration Service Manager. public LLMOrchestrationServiceManager(IOptions<InstanceSettings> instanceOptions, IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, ILogger<LLMOrchestrationServiceManager> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. resourceProviderServices IEnumerable<IResourceProviderService> A list of IResourceProviderService resource providers. configuration IConfiguration The IConfiguration used to retrieve configuration values. logger ILogger<LLMOrchestrationServiceManager> The logger for the orchestration service manager. Methods GetAggregateStatus(string, IServiceProvider) Gets an aggregate initialization status based on the initialization status of each subordinate orchestration service. public Task<List<ServiceStatusInfo>> GetAggregateStatus(string instanceId, IServiceProvider serviceProvider) Parameters instanceId string The FoundationaLLM instance ID. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. Returns Task<List<ServiceStatusInfo>> GetService(string, string, IServiceProvider, IOrchestrationContext) Gets an ILLMOrchestrationService instance based on the service name. public ILLMOrchestrationService GetService(string instanceId, string serviceName, IServiceProvider serviceProvider, IOrchestrationContext callContext) Parameters instanceId string The FoundationaLLM instance ID. serviceName string The name of the ILLMOrchestrationService to be retrieved. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. callContext IOrchestrationContext The IOrchestrationContext call context of the request being handled. Returns ILLMOrchestrationService"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LangChainService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.LangChainService.html",
    "title": "Class LangChainService | FoundationaLLM",
    "summary": "Class LangChainService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The LangChain orchestration service. public class LangChainService : ILangChainService, ILLMOrchestrationService Inheritance object LangChainService Implements ILangChainService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LangChainService(IOptions<LangChainServiceSettings>, ILogger<LangChainService>, IOrchestrationContext, IHttpClientFactoryService) LangChain Orchestration Service public LangChainService(IOptions<LangChainServiceSettings> options, ILogger<LangChainService> logger, IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<LangChainServiceSettings> logger ILogger<LangChainService> callContext IOrchestrationContext httpClientFactoryService IHttpClientFactoryService Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo> StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.OrchestrationService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.OrchestrationService.html",
    "title": "Class OrchestrationService | FoundationaLLM",
    "summary": "Class OrchestrationService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll OrchestrationService class. public class OrchestrationService : IOrchestrationService Inheritance object OrchestrationService Implements IOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OrchestrationService(IOptions<OrchestrationServiceSettings>, IEnumerable<IResourceProviderService>, ILLMOrchestrationServiceManager, IAzureCosmosDBService, ITemplatingService, IContextServiceClient, IUserProfileService, IUserPromptRewriteService, ISemanticCacheService, IOrchestrationContext, IConfiguration, IServiceProvider, ILoggerFactory) Constructor for the Orchestration Service. public OrchestrationService(IOptions<OrchestrationServiceSettings> options, IEnumerable<IResourceProviderService> resourceProviderServices, ILLMOrchestrationServiceManager llmOrchestrationServiceManager, IAzureCosmosDBService cosmosDBService, ITemplatingService templatingService, IContextServiceClient contextServiceClient, IUserProfileService userProfileService, IUserPromptRewriteService userPromptRewriteService, ISemanticCacheService semanticCacheService, IOrchestrationContext callContext, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters options IOptions<OrchestrationServiceSettings> The options for configuring the service. resourceProviderServices IEnumerable<IResourceProviderService> A list of IResourceProviderService resource providers hashed by resource provider name. llmOrchestrationServiceManager ILLMOrchestrationServiceManager The ILLMOrchestrationServiceManager managing the internal and external LLM orchestration services. cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService used to interact with the Cosmos DB database. templatingService ITemplatingService The ITemplatingService used to render templates. contextServiceClient IContextServiceClient The IContextServiceClient used to call the Context API. userProfileService IUserProfileService The IUserProfileService used to interact with user profiles. userPromptRewriteService IUserPromptRewriteService The IUserPromptRewriteService used to rewrite user prompts. semanticCacheService ISemanticCacheService The ISemanticCacheService used to cache and retrieve completion responses. callContext IOrchestrationContext The call context of the request being handled. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. serviceProvider IServiceProvider The IServiceProvider provding dependency injection services for the current scope. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetCompletion(string, CompletionRequest) Retrieve a completion from the configured orchestration service. public Task<CompletionResponse> GetCompletion(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request. Returns Task<CompletionResponse> The completion response. GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the aggredated status of all orchestration services. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance id. Returns Task<ServiceStatusInfo> The status of the orchestration service. StartCompletionOperation(string, CompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, CompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest CompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.SemanticCacheService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.SemanticCacheService.html",
    "title": "Class SemanticCacheService | FoundationaLLM",
    "summary": "Class SemanticCacheService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll Provides a service for managing the semantic cache. public class SemanticCacheService : ISemanticCacheService Inheritance object SemanticCacheService Implements ISemanticCacheService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticCacheService(IAzureCosmosDBService, IEnumerable<IResourceProviderService>, IConfiguration, ILogger<SemanticCacheService>) Initializes a new instance of the SemanticCacheService class. public SemanticCacheService(IAzureCosmosDBService cosmosDBService, IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, ILogger<SemanticCacheService> logger) Parameters cosmosDBService IAzureCosmosDBService The IAzureCosmosDBService service providing access to the Cosmos DB vector store. resourceProviderServices IEnumerable<IResourceProviderService> A list of IResourceProviderService resource providers hashed by resource provider name. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. logger ILogger<SemanticCacheService> The logger used for logging.. Methods GetCompletionResponseFromCache(string, string, CompletionRequest) Tries to get a CompletionResponse from the semantic cache for the specified agent in the specified FoundationaLLM instance. public Task<CompletionResponse?> GetCompletionResponseFromCache(string instanceId, string agentName, CompletionRequest completionRequest) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. completionRequest CompletionRequest The CompletionRequest for which to get the cache item. Returns Task<CompletionResponse> A CompletionResponse if a match exists. HasCacheForAgent(string, string) Determines whether the semantic cache for the specified agent in the specified FoundationaLLM instance exists. public bool HasCacheForAgent(string instanceId, string agentName) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. Returns bool if the semantic cache for the specified agent exists, otherwise. InitializeCacheForAgent(string, string, AgentSemanticCacheSettings) Initializes the semantic cache for the specified agent in the specified FoundationaLLM instance. public Task InitializeCacheForAgent(string instanceId, string agentName, AgentSemanticCacheSettings agentSettings) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. agentSettings AgentSemanticCacheSettings The AgentSemanticCacheSettings providing the agent's semantic cache settings. Returns Task ResetCacheForAgent(string, string) Resets the semantic cache for the specified agent in the specified FoundationaLLM instance. public Task ResetCacheForAgent(string instanceId, string agentName) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. Returns Task SetCompletionResponseInCache(string, string, CompletionResponse) Sets a CompletionResponse in the semantic cache for the specified agent in the specified FoundationaLLM instance. public Task SetCompletionResponseInCache(string instanceId, string agentName, CompletionResponse completionResponse) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. completionResponse CompletionResponse The CompletionResponse to be set in the agent's cache. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.SemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.SemanticKernelService.html",
    "title": "Class SemanticKernelService | FoundationaLLM",
    "summary": "Class SemanticKernelService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll The FoundationaLLM Semantic Kernal Service public class SemanticKernelService : ISemanticKernelService, ILLMOrchestrationService Inheritance object SemanticKernelService Implements ISemanticKernelService ILLMOrchestrationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the Semantic Kernal Service Constructors SemanticKernelService(IOptions<SemanticKernelServiceSettings>, ILogger<SemanticKernelService>, IOrchestrationContext, IHttpClientFactoryService) The FoundationaLLM Semantic Kernal Service public SemanticKernelService(IOptions<SemanticKernelServiceSettings> options, ILogger<SemanticKernelService> logger, IOrchestrationContext callContext, IHttpClientFactoryService httpClientFactoryService) Parameters options IOptions<SemanticKernelServiceSettings> logger ILogger<SemanticKernelService> callContext IOrchestrationContext httpClientFactoryService IHttpClientFactoryService Remarks Constructor for the Semantic Kernal Service Properties Name The name of the LLM orchestration service. public string Name { get; } Property Value string Methods GetCompletion(string, LLMCompletionRequest) Method for retrieving a completion from the orchestration service. public Task<LLMCompletionResponse> GetCompletion(string instanceId, LLMCompletionRequest request) Parameters instanceId string The FoundationaLLM instance ID. request LLMCompletionRequest Hub populated request object containing agent, prompt, language model, and data source information Returns Task<LLMCompletionResponse> GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. GetStatus(string) Get the status of the orchestration service. public Task<ServiceStatusInfo> GetStatus(string instanceId) Parameters instanceId string The FoundationaLLM instance ID. Returns Task<ServiceStatusInfo> StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.UserPromptRewriteService.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.UserPromptRewriteService.html",
    "title": "Class UserPromptRewriteService | FoundationaLLM",
    "summary": "Class UserPromptRewriteService Namespace FoundationaLLM.Orchestration.Core.Services Assembly FoundationaLLM.Orchestration.Core.dll Provides a service for managing the semantic cache. public class UserPromptRewriteService : IUserPromptRewriteService Inheritance object UserPromptRewriteService Implements IUserPromptRewriteService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors UserPromptRewriteService(IEnumerable<IResourceProviderService>, ITemplatingService, IConfiguration, ILogger<UserPromptRewriteService>) Initializes a new instance of the UserPromptRewriteService class. public UserPromptRewriteService(IEnumerable<IResourceProviderService> resourceProviderServices, ITemplatingService templatingService, IConfiguration configuration, ILogger<UserPromptRewriteService> logger) Parameters resourceProviderServices IEnumerable<IResourceProviderService> A list of IResourceProviderService resource providers hashed by resource provider name. templatingService ITemplatingService The templating service used for replacing variables in prompts. configuration IConfiguration The IConfiguration used to retrieve app settings from configuration. logger ILogger<UserPromptRewriteService> The logger used for logging.. Methods HasUserPromptRewriterForAgent(string, string) Determines whether user prompt rewrite is configured for the specified agent in the specified FoundationaLLM instance. public bool HasUserPromptRewriterForAgent(string instanceId, string agentName) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. Returns bool if the user prompt rewrite for the specified agent is configured, otherwise. InitializeUserPromptRewriterForAgent(string, string, AgentUserPromptRewriteSettings) Initializes user prompt rewrite for the specified agent in the specified FoundationaLLM instance. public Task InitializeUserPromptRewriterForAgent(string instanceId, string agentName, AgentUserPromptRewriteSettings agentSettings) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. agentSettings AgentUserPromptRewriteSettings The AgentUserPromptRewriteSettings providing the agent's user prompt rewrite settings. Returns Task RewriteUserPrompt(string, string, CompletionRequest) Rewrites the user prompt to a form that can be used by the AI model. public Task RewriteUserPrompt(string instanceId, string agentName, CompletionRequest completionRequest) Parameters instanceId string The unique identifier of the FoundationaLLM instance. agentName string The name of the agent. completionRequest CompletionRequest The CompletionRequest for which to rewrite the user prompt. Returns Task The rewritten user prompt."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.Services.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.Core.Services Classes AzureAIDirectService The Azure AI direct orchestration service. AzureOpenAIDirectService The Azure OpenAI direct orchestration service. LLMOrchestrationService Provides methods to call an external LLM orchestration service. LLMOrchestrationServiceManager Manages internal and external orchestration services. LangChainService The LangChain orchestration service. OrchestrationService OrchestrationService class. SemanticCacheService Provides a service for managing the semantic cache. SemanticKernelService The FoundationaLLM Semantic Kernal Service UserPromptRewriteService Provides a service for managing the semantic cache."
  },
  "api/dotnet/FoundationaLLM.Orchestration.Core.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Core.html",
    "title": "Namespace FoundationaLLM.Orchestration.Core | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.Core Namespaces FoundationaLLM.Orchestration.Core.Interfaces FoundationaLLM.Orchestration.Core.Models FoundationaLLM.Orchestration.Core.Orchestration FoundationaLLM.Orchestration.Core.Services"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Models.SemanticCacheItem.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Models.SemanticCacheItem.html",
    "title": "Class SemanticCacheItem | FoundationaLLM",
    "summary": "Class SemanticCacheItem Namespace FoundationaLLM.Orchestration.Models Assembly FoundationaLLM.Orchestration.Core.dll Represents an item in the semantic cache. public class SemanticCacheItem Inheritance object SemanticCacheItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Id public string Id { get; set; } Property Value string OperationId public string OperationId { get; set; } Property Value string SerializedItem public string SerializedItem { get; set; } Property Value string UserPrompt public string UserPrompt { get; set; } Property Value string UserPromptEmbedding public float[] UserPromptEmbedding { get; set; } Property Value float[] UserPromptTokens public int UserPromptTokens { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Orchestration.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.Models.html",
    "title": "Namespace FoundationaLLM.Orchestration.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration.Models Classes SemanticCacheItem Represents an item in the semantic cache."
  },
  "api/dotnet/FoundationaLLM.Orchestration.html": {
    "href": "api/dotnet/FoundationaLLM.Orchestration.html",
    "title": "Namespace FoundationaLLM.Orchestration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Orchestration Namespaces FoundationaLLM.Orchestration.API FoundationaLLM.Orchestration.Core FoundationaLLM.Orchestration.Models"
  },
  "api/dotnet/FoundationaLLM.Plugin.Models.PluginReference.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.Models.PluginReference.html",
    "title": "Class PluginReference | FoundationaLLM",
    "summary": "Class PluginReference Namespace FoundationaLLM.Plugin.Models Assembly FoundationaLLM.Plugin.dll Provides a reference to a resource managed by the FoundationaLLM.Plugin resource provider. public class PluginReference : ResourceReference Inheritance object ResourceReference PluginReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the plugin. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Plugin.Models.VectorReference.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.Models.VectorReference.html",
    "title": "Class VectorReference | FoundationaLLM",
    "summary": "Class VectorReference Namespace FoundationaLLM.Plugin.Models Assembly FoundationaLLM.Vector.dll Provides a reference to a resource managed by the FoundationaLLM.Plugin resource provider. public class VectorReference : ResourceReference Inheritance object ResourceReference VectorReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the plugin. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Plugin.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.Models.html",
    "title": "Namespace FoundationaLLM.Plugin.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugin.Models Classes PluginReference Provides a reference to a resource managed by the FoundationaLLM.Plugin resource provider. VectorReference Provides a reference to a resource managed by the FoundationaLLM.Plugin resource provider."
  },
  "api/dotnet/FoundationaLLM.Plugin.ResourceProviders.PluginLoadContext.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.ResourceProviders.PluginLoadContext.html",
    "title": "Class PluginLoadContext | FoundationaLLM",
    "summary": "Class PluginLoadContext Namespace FoundationaLLM.Plugin.ResourceProviders Assembly FoundationaLLM.Plugin.dll Represents a custom assembly load context for loading plugins. public class PluginLoadContext : AssemblyLoadContext Inheritance object AssemblyLoadContext PluginLoadContext Inherited Members AssemblyLoadContext.EnterContextualReflection() AssemblyLoadContext.EnterContextualReflection(Assembly) AssemblyLoadContext.GetAssemblyName(string) AssemblyLoadContext.GetLoadContext(Assembly) AssemblyLoadContext.Load(AssemblyName) AssemblyLoadContext.LoadFromAssemblyName(AssemblyName) AssemblyLoadContext.LoadFromAssemblyPath(string) AssemblyLoadContext.LoadFromNativeImagePath(string, string) AssemblyLoadContext.LoadFromStream(Stream) AssemblyLoadContext.LoadFromStream(Stream, Stream) AssemblyLoadContext.LoadUnmanagedDll(string) AssemblyLoadContext.LoadUnmanagedDllFromPath(string) AssemblyLoadContext.SetProfileOptimizationRoot(string) AssemblyLoadContext.StartProfileOptimization(string) AssemblyLoadContext.ToString() AssemblyLoadContext.Unload() AssemblyLoadContext.All AssemblyLoadContext.Assemblies AssemblyLoadContext.CurrentContextualReflectionContext AssemblyLoadContext.Default AssemblyLoadContext.IsCollectible AssemblyLoadContext.Name AssemblyLoadContext.Resolving AssemblyLoadContext.ResolvingUnmanagedDll AssemblyLoadContext.Unloading object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks This class extends AssemblyLoadContext to provide a mechanism for loading assemblies in isolation, which is useful for plugin architectures where different versions of the same assembly might need to be loaded simultaneously. Constructors PluginLoadContext(string, bool, Dictionary<string, Dictionary<string, string>>, ILogger<PluginLoadContext>, string, IStorageService, string) public PluginLoadContext(string name, bool isCollectible, Dictionary<string, Dictionary<string, string>> pluginDependencies, ILogger<PluginLoadContext> logger, string rootDependencyPackagePath, IStorageService storageService, string storageContainerName) Parameters name string isCollectible bool pluginDependencies Dictionary<string, Dictionary<string, string>> logger ILogger<PluginLoadContext> rootDependencyPackagePath string storageService IStorageService storageContainerName string"
  },
  "api/dotnet/FoundationaLLM.Plugin.ResourceProviders.PluginResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.ResourceProviders.PluginResourceProviderService.html",
    "title": "Class PluginResourceProviderService | FoundationaLLM",
    "summary": "Class PluginResourceProviderService Namespace FoundationaLLM.Plugin.ResourceProviders Assembly FoundationaLLM.Plugin.dll Implements the FoundationaLLM.Plugin resource provider. public class PluginResourceProviderService : ResourceProviderServiceBase<PluginReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<PluginReference> PluginResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<PluginReference>._resourceReferenceStore ResourceProviderServiceBase<PluginReference>._serviceProvider ResourceProviderServiceBase<PluginReference>._authorizationServiceClient ResourceProviderServiceBase<PluginReference>._storageService ResourceProviderServiceBase<PluginReference>._eventService ResourceProviderServiceBase<PluginReference>._resourceValidatorFactory ResourceProviderServiceBase<PluginReference>._validator ResourceProviderServiceBase<PluginReference>._logger ResourceProviderServiceBase<PluginReference>._instanceSettings ResourceProviderServiceBase<PluginReference>._storageContainerName ResourceProviderServiceBase<PluginReference>._serializerSettings ResourceProviderServiceBase<PluginReference>.Name ResourceProviderServiceBase<PluginReference>.IsInitialized ResourceProviderServiceBase<PluginReference>.InitializationTask ResourceProviderServiceBase<PluginReference>.AllowedResourceTypes ResourceProviderServiceBase<PluginReference>.StorageAccountName ResourceProviderServiceBase<PluginReference>.StorageContainerName ResourceProviderServiceBase<PluginReference>.Initialize() ResourceProviderServiceBase<PluginReference>.WaitForInitialization() ResourceProviderServiceBase<PluginReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PluginReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PluginReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PluginReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PluginReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<PluginReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<PluginReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<PluginReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<PluginReference>.HandleCacheResetCommand() ResourceProviderServiceBase<PluginReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<PluginReference>.GetResourceProviderState() ResourceProviderServiceBase<PluginReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<PluginReference, bool, Task<T>>) ResourceProviderServiceBase<PluginReference>.LoadResource<T>(PluginReference) ResourceProviderServiceBase<PluginReference>.LoadResource<T>(string) ResourceProviderServiceBase<PluginReference>.CreateResource<T>(PluginReference, T) ResourceProviderServiceBase<PluginReference>.CreateResource(PluginReference, Stream, string) ResourceProviderServiceBase<PluginReference>.CreateResources<T1, T2>(PluginReference, T1, PluginReference, T2) ResourceProviderServiceBase<PluginReference>.SaveResource<T>(PluginReference, T) ResourceProviderServiceBase<PluginReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<PluginReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<PluginReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<PluginReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<PluginReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<PluginReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<PluginReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<PluginReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<PluginReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<PluginReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<PluginReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<PluginReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<PluginReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PluginResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Plugin resource provider. public PluginResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The factory responsible for creating loggers. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) The internal implementation of ExecuteResourceActionAsync. Must be overridden in derived classes. protected override Task<TResult> ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, TAction actionPayload, UnifiedUserIdentity userIdentity) where T : ResourceBase where TAction : class? where TResult : ResourceProviderActionResult Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. actionPayload TAction The TAction object containing details about the action to be executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<TResult> A TResult object with the result of the action. Type Parameters T TAction TResult Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Plugin.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Plugin.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugin.ResourceProviders Classes PluginLoadContext Represents a custom assembly load context for loading plugins. PluginResourceProviderService Implements the FoundationaLLM.Plugin resource provider."
  },
  "api/dotnet/FoundationaLLM.Plugin.Validation.PluginDefinitionValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.Validation.PluginDefinitionValidator.html",
    "title": "Class PluginDefinitionValidator | FoundationaLLM",
    "summary": "Class PluginDefinitionValidator Namespace FoundationaLLM.Plugin.Validation Assembly FoundationaLLM.Plugin.dll Validator for the PluginDefinition model. public class PluginDefinitionValidator : AbstractValidator<PluginDefinition>, IValidator<PluginDefinition>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<PluginDefinition> PluginDefinitionValidator Implements IValidator<PluginDefinition> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<PluginDefinition>.Validate(PluginDefinition) AbstractValidator<PluginDefinition>.ValidateAsync(PluginDefinition, CancellationToken) AbstractValidator<PluginDefinition>.Validate(ValidationContext<PluginDefinition>) AbstractValidator<PluginDefinition>.ValidateAsync(ValidationContext<PluginDefinition>, CancellationToken) AbstractValidator<PluginDefinition>.CreateDescriptor() AbstractValidator<PluginDefinition>.RuleFor<TProperty>(Expression<Func<PluginDefinition, TProperty>>) AbstractValidator<PluginDefinition>.Transform<TProperty, TTransformed>(Expression<Func<PluginDefinition, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<PluginDefinition>.Transform<TProperty, TTransformed>(Expression<Func<PluginDefinition, TProperty>>, Func<PluginDefinition, TProperty, TTransformed>) AbstractValidator<PluginDefinition>.RuleForEach<TElement>(Expression<Func<PluginDefinition, IEnumerable<TElement>>>) AbstractValidator<PluginDefinition>.TransformForEach<TElement, TTransformed>(Expression<Func<PluginDefinition, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<PluginDefinition>.TransformForEach<TElement, TTransformed>(Expression<Func<PluginDefinition, IEnumerable<TElement>>>, Func<PluginDefinition, TElement, TTransformed>) AbstractValidator<PluginDefinition>.RuleSet(string, Action) AbstractValidator<PluginDefinition>.When(Func<PluginDefinition, bool>, Action) AbstractValidator<PluginDefinition>.When(Func<PluginDefinition, ValidationContext<PluginDefinition>, bool>, Action) AbstractValidator<PluginDefinition>.Unless(Func<PluginDefinition, bool>, Action) AbstractValidator<PluginDefinition>.Unless(Func<PluginDefinition, ValidationContext<PluginDefinition>, bool>, Action) AbstractValidator<PluginDefinition>.WhenAsync(Func<PluginDefinition, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginDefinition>.WhenAsync(Func<PluginDefinition, ValidationContext<PluginDefinition>, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginDefinition>.UnlessAsync(Func<PluginDefinition, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginDefinition>.UnlessAsync(Func<PluginDefinition, ValidationContext<PluginDefinition>, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginDefinition>.Include(IValidator<PluginDefinition>) AbstractValidator<PluginDefinition>.Include<TValidator>(Func<PluginDefinition, TValidator>) AbstractValidator<PluginDefinition>.GetEnumerator() AbstractValidator<PluginDefinition>.EnsureInstanceNotNull(object) AbstractValidator<PluginDefinition>.PreValidate(ValidationContext<PluginDefinition>, ValidationResult) AbstractValidator<PluginDefinition>.RaiseValidationException(ValidationContext<PluginDefinition>, ValidationResult) AbstractValidator<PluginDefinition>.OnRuleAdded(IValidationRule<PluginDefinition>) AbstractValidator<PluginDefinition>.CascadeMode AbstractValidator<PluginDefinition>.ClassLevelCascadeMode AbstractValidator<PluginDefinition>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PluginDefinitionValidator() Configures the validation rules for the PluginDefinition model. public PluginDefinitionValidator()"
  },
  "api/dotnet/FoundationaLLM.Plugin.Validation.PluginPackageDefinitionValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.Validation.PluginPackageDefinitionValidator.html",
    "title": "Class PluginPackageDefinitionValidator | FoundationaLLM",
    "summary": "Class PluginPackageDefinitionValidator Namespace FoundationaLLM.Plugin.Validation Assembly FoundationaLLM.Plugin.dll Validator for the PluginPackageDefinition model. public class PluginPackageDefinitionValidator : AbstractValidator<PluginPackageDefinition>, IValidator<PluginPackageDefinition>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<PluginPackageDefinition> PluginPackageDefinitionValidator Implements IValidator<PluginPackageDefinition> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<PluginPackageDefinition>.Validate(PluginPackageDefinition) AbstractValidator<PluginPackageDefinition>.ValidateAsync(PluginPackageDefinition, CancellationToken) AbstractValidator<PluginPackageDefinition>.Validate(ValidationContext<PluginPackageDefinition>) AbstractValidator<PluginPackageDefinition>.ValidateAsync(ValidationContext<PluginPackageDefinition>, CancellationToken) AbstractValidator<PluginPackageDefinition>.CreateDescriptor() AbstractValidator<PluginPackageDefinition>.RuleFor<TProperty>(Expression<Func<PluginPackageDefinition, TProperty>>) AbstractValidator<PluginPackageDefinition>.Transform<TProperty, TTransformed>(Expression<Func<PluginPackageDefinition, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<PluginPackageDefinition>.Transform<TProperty, TTransformed>(Expression<Func<PluginPackageDefinition, TProperty>>, Func<PluginPackageDefinition, TProperty, TTransformed>) AbstractValidator<PluginPackageDefinition>.RuleForEach<TElement>(Expression<Func<PluginPackageDefinition, IEnumerable<TElement>>>) AbstractValidator<PluginPackageDefinition>.TransformForEach<TElement, TTransformed>(Expression<Func<PluginPackageDefinition, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<PluginPackageDefinition>.TransformForEach<TElement, TTransformed>(Expression<Func<PluginPackageDefinition, IEnumerable<TElement>>>, Func<PluginPackageDefinition, TElement, TTransformed>) AbstractValidator<PluginPackageDefinition>.RuleSet(string, Action) AbstractValidator<PluginPackageDefinition>.When(Func<PluginPackageDefinition, bool>, Action) AbstractValidator<PluginPackageDefinition>.When(Func<PluginPackageDefinition, ValidationContext<PluginPackageDefinition>, bool>, Action) AbstractValidator<PluginPackageDefinition>.Unless(Func<PluginPackageDefinition, bool>, Action) AbstractValidator<PluginPackageDefinition>.Unless(Func<PluginPackageDefinition, ValidationContext<PluginPackageDefinition>, bool>, Action) AbstractValidator<PluginPackageDefinition>.WhenAsync(Func<PluginPackageDefinition, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginPackageDefinition>.WhenAsync(Func<PluginPackageDefinition, ValidationContext<PluginPackageDefinition>, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginPackageDefinition>.UnlessAsync(Func<PluginPackageDefinition, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginPackageDefinition>.UnlessAsync(Func<PluginPackageDefinition, ValidationContext<PluginPackageDefinition>, CancellationToken, Task<bool>>, Action) AbstractValidator<PluginPackageDefinition>.Include(IValidator<PluginPackageDefinition>) AbstractValidator<PluginPackageDefinition>.Include<TValidator>(Func<PluginPackageDefinition, TValidator>) AbstractValidator<PluginPackageDefinition>.GetEnumerator() AbstractValidator<PluginPackageDefinition>.EnsureInstanceNotNull(object) AbstractValidator<PluginPackageDefinition>.PreValidate(ValidationContext<PluginPackageDefinition>, ValidationResult) AbstractValidator<PluginPackageDefinition>.RaiseValidationException(ValidationContext<PluginPackageDefinition>, ValidationResult) AbstractValidator<PluginPackageDefinition>.OnRuleAdded(IValidationRule<PluginPackageDefinition>) AbstractValidator<PluginPackageDefinition>.CascadeMode AbstractValidator<PluginPackageDefinition>.ClassLevelCascadeMode AbstractValidator<PluginPackageDefinition>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PluginPackageDefinitionValidator() Configures the validation rules for the PluginPackageDefinition model. public PluginPackageDefinitionValidator()"
  },
  "api/dotnet/FoundationaLLM.Plugin.Validation.VectorDatabaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.Validation.VectorDatabaseValidator.html",
    "title": "Class VectorDatabaseValidator | FoundationaLLM",
    "summary": "Class VectorDatabaseValidator Namespace FoundationaLLM.Plugin.Validation Assembly FoundationaLLM.Vector.dll Validator for the VectorDatabase model. public class VectorDatabaseValidator : AbstractValidator<VectorDatabase>, IValidator<VectorDatabase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorDatabase> VectorDatabaseValidator Implements IValidator<VectorDatabase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorDatabase>.Validate(VectorDatabase) AbstractValidator<VectorDatabase>.ValidateAsync(VectorDatabase, CancellationToken) AbstractValidator<VectorDatabase>.Validate(ValidationContext<VectorDatabase>) AbstractValidator<VectorDatabase>.ValidateAsync(ValidationContext<VectorDatabase>, CancellationToken) AbstractValidator<VectorDatabase>.CreateDescriptor() AbstractValidator<VectorDatabase>.RuleFor<TProperty>(Expression<Func<VectorDatabase, TProperty>>) AbstractValidator<VectorDatabase>.Transform<TProperty, TTransformed>(Expression<Func<VectorDatabase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorDatabase>.Transform<TProperty, TTransformed>(Expression<Func<VectorDatabase, TProperty>>, Func<VectorDatabase, TProperty, TTransformed>) AbstractValidator<VectorDatabase>.RuleForEach<TElement>(Expression<Func<VectorDatabase, IEnumerable<TElement>>>) AbstractValidator<VectorDatabase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorDatabase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorDatabase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorDatabase, IEnumerable<TElement>>>, Func<VectorDatabase, TElement, TTransformed>) AbstractValidator<VectorDatabase>.RuleSet(string, Action) AbstractValidator<VectorDatabase>.When(Func<VectorDatabase, bool>, Action) AbstractValidator<VectorDatabase>.When(Func<VectorDatabase, ValidationContext<VectorDatabase>, bool>, Action) AbstractValidator<VectorDatabase>.Unless(Func<VectorDatabase, bool>, Action) AbstractValidator<VectorDatabase>.Unless(Func<VectorDatabase, ValidationContext<VectorDatabase>, bool>, Action) AbstractValidator<VectorDatabase>.WhenAsync(Func<VectorDatabase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorDatabase>.WhenAsync(Func<VectorDatabase, ValidationContext<VectorDatabase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorDatabase>.UnlessAsync(Func<VectorDatabase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorDatabase>.UnlessAsync(Func<VectorDatabase, ValidationContext<VectorDatabase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorDatabase>.Include(IValidator<VectorDatabase>) AbstractValidator<VectorDatabase>.Include<TValidator>(Func<VectorDatabase, TValidator>) AbstractValidator<VectorDatabase>.GetEnumerator() AbstractValidator<VectorDatabase>.EnsureInstanceNotNull(object) AbstractValidator<VectorDatabase>.PreValidate(ValidationContext<VectorDatabase>, ValidationResult) AbstractValidator<VectorDatabase>.RaiseValidationException(ValidationContext<VectorDatabase>, ValidationResult) AbstractValidator<VectorDatabase>.OnRuleAdded(IValidationRule<VectorDatabase>) AbstractValidator<VectorDatabase>.CascadeMode AbstractValidator<VectorDatabase>.ClassLevelCascadeMode AbstractValidator<VectorDatabase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorDatabaseValidator() Configures the validation rules for the VectorDatabase model. public VectorDatabaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Plugin.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.Validation.html",
    "title": "Namespace FoundationaLLM.Plugin.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugin.Validation Classes PluginDefinitionValidator Validator for the PluginDefinition model. PluginPackageDefinitionValidator Validator for the PluginPackageDefinition model. VectorDatabaseValidator Validator for the VectorDatabase model."
  },
  "api/dotnet/FoundationaLLM.Plugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugin.html",
    "title": "Namespace FoundationaLLM.Plugin | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugin Namespaces FoundationaLLM.Plugin.Models FoundationaLLM.Plugin.ResourceProviders FoundationaLLM.Plugin.Validation"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Constants.KnowledgeGraphBuildingSteps.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Constants.KnowledgeGraphBuildingSteps.html",
    "title": "Class KnowledgeGraphBuildingSteps | FoundationaLLM",
    "summary": "Class KnowledgeGraphBuildingSteps Namespace FoundationaLLM.Plugins.DataPipeline.Constants Assembly FoundationaLLM.DataPipelinePlugins.dll Constants for the steps involved in building a knowledge graph within a data pipeline. public static class KnowledgeGraphBuildingSteps Inheritance object KnowledgeGraphBuildingSteps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields CoreStructure The step for building the core structure of the knowledge graph. public const string CoreStructure = \"CoreStructure\" Field Value string EntitiesEmbedding The step for embedding entities within the knowledge graph. public const string EntitiesEmbedding = \"EntitiesEmbedding\" Field Value string EntitiesSummarization The step for summarizing entities within the knowledge graph. public const string EntitiesSummarization = \"EntitiesSummarization\" Field Value string Publish The step for publishing the knowledge graph to the Context API. public const string Publish = \"Publish\" Field Value string RelationshipsEmbedding The step for embedding relationships within the knowledge graph. public const string RelationshipsEmbedding = \"RelationshipsEmbedding\" Field Value string RelationshipsSummarization The step for summarizing relationships within the knowledge graph. public const string RelationshipsSummarization = \"RelationshipsSummarization\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Constants.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Constants.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline.Constants | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline.Constants Classes KnowledgeGraphBuildingSteps Constants for the steps involved in building a knowledge graph within a data pipeline."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Models.KnowledgeGraphBuildingState.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Models.KnowledgeGraphBuildingState.html",
    "title": "Class KnowledgeGraphBuildingState | FoundationaLLM",
    "summary": "Class KnowledgeGraphBuildingState Namespace FoundationaLLM.Plugins.DataPipeline.Models Assembly FoundationaLLM.DataPipelinePlugins.dll Represents the state of the knowledge graph building process. public class KnowledgeGraphBuildingState Inheritance object KnowledgeGraphBuildingState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties LastSuccessfullStep Gets or sets the name of the last step that was successfully completed in the knowledge graph building process. public string? LastSuccessfullStep { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Models.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline.Models Classes KnowledgeGraphBuildingState Represents the state of the knowledge graph building process."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.PluginNames.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.PluginNames.html",
    "title": "Class PluginNames | FoundationaLLM",
    "summary": "Class PluginNames Namespace FoundationaLLM.Plugins.DataPipeline Assembly FoundationaLLM.DataPipelinePlugins.dll Provides the names of the plugins provided by the package. public static class PluginNames Inheritance object PluginNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AZUREAISEARCHINDEXING_DATAPIPELINESTAGE public const string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE = \"Dotnet-FoundationaLLMDataPipelinePlugins-AzureAISearchIndexingDataPipelineStage\" Field Value string AZUREDATALAKE_DATASOURCE public const string AZUREDATALAKE_DATASOURCE = \"Dotnet-FoundationaLLMDataPipelinePlugins-AzureDataLakeDataSource\" Field Value string CONTEXTFILE_DATASOURCE public const string CONTEXTFILE_DATASOURCE = \"Dotnet-FoundationaLLMDataPipelinePlugins-ContextFileDataSource\" Field Value string DOCX_CONTENTTEXTEXTRACTION public const string DOCX_CONTENTTEXTEXTRACTION = \"Dotnet-FoundationaLLMDataPipelinePlugins-DOCXContentTextExtraction\" Field Value string GATEWAYTEXTEMBEDDING_DATAPIPELINESTAGE public const string GATEWAYTEXTEMBEDDING_DATAPIPELINESTAGE = \"Dotnet-FoundationaLLMDataPipelinePlugins-GatewayTextEmbeddingDataPipelineStage\" Field Value string IMAGE_CONTENTTEXTEXTRACTION public const string IMAGE_CONTENTTEXTEXTRACTION = \"Dotnet-FoundationaLLMDataPipelinePlugins-ImageContentTextExtraction\" Field Value string IMAGE_METADATATEXTEXTRACTION public const string IMAGE_METADATATEXTEXTRACTION = \"Dotnet-FoundationaLLMDataPipelinePlugins-ImageMetadataTextExtraction\" Field Value string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE public const string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE = \"Dotnet-FoundationaLLMDataPipelinePlugins-KnowledgeExtractionDataPipelineStage\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE = \"Dotnet-FoundationaLLMDataPipelinePlugins-KnowledgeGraphDataPipelineStage\" Field Value string PACKAGE_NAME public const string PACKAGE_NAME = \"Dotnet-FoundationaLLMDataPipelinePlugins\" Field Value string PDF_CONTENTTEXTEXTRACTION public const string PDF_CONTENTTEXTEXTRACTION = \"Dotnet-FoundationaLLMDataPipelinePlugins-PDFContentTextExtraction\" Field Value string PPTX_CONTENTTEXTEXTRACTION public const string PPTX_CONTENTTEXTEXTRACTION = \"Dotnet-FoundationaLLMDataPipelinePlugins-PPTXContentTextExtraction\" Field Value string SEMANTIC_CONTENTTEXTPARTITIONING public const string SEMANTIC_CONTENTTEXTPARTITIONING = \"Dotnet-FoundationaLLMDataPipelinePlugins-SemanticContentTextPartitioning\" Field Value string SHAREPOINTONLINE_DATASOURCE public const string SHAREPOINTONLINE_DATASOURCE = \"Dotnet-FoundationaLLMDataPipelinePlugins-SharePointOnlineDataSource\" Field Value string TEXTEXTRACTION_DATAPIPELINESTAGE public const string TEXTEXTRACTION_DATAPIPELINESTAGE = \"Dotnet-FoundationaLLMDataPipelinePlugins-TextExtractionDataPipelineStage\" Field Value string TEXTPARTITIONING_DATAPIPELINESTAGE public const string TEXTPARTITIONING_DATAPIPELINESTAGE = \"Dotnet-FoundationaLLMDataPipelinePlugins-TextPartitioningDataPipelineStage\" Field Value string TOKEN_CONTENTTEXTPARTITIONING public const string TOKEN_CONTENTTEXTPARTITIONING = \"Dotnet-FoundationaLLMDataPipelinePlugins-TokenContentTextPartitioning\" Field Value string XLSX_CONTENTTEXTEXTRACTION public const string XLSX_CONTENTTEXTEXTRACTION = \"Dotnet-FoundationaLLMDataPipelinePlugins-XLSXContentTextExtraction\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.PluginPackageManager.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.PluginPackageManager.html",
    "title": "Class PluginPackageManager | FoundationaLLM",
    "summary": "Class PluginPackageManager Namespace FoundationaLLM.Plugins.DataPipeline Assembly FoundationaLLM.DataPipelinePlugins.dll The plugin package manager. public class PluginPackageManager : IPluginPackageManager Inheritance object PluginPackageManager Implements IPluginPackageManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetContentTextExtractionPlugin(string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a content text extraction plugin by its name. public IContentTextExtractionPlugin GetContentTextExtractionPlugin(string pluginName, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the content text extraction plugin. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IContentTextExtractionPlugin The IContentTextExtractionPlugin interface implemented by the content text extraction plugin. Exceptions NotImplementedException GetContentTextPartitioningPlugin(string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a content text partitioning plugin by its name. public IContentTextPartitioningPlugin GetContentTextPartitioningPlugin(string pluginName, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the content text partitioning plugin. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IContentTextPartitioningPlugin The IContentTextExtractionPlugin interface implemented by the content text partitioning plugin. Exceptions NotImplementedException GetDataPipelineStagePlugin(string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a data pipeline stage plugin by its name. public IDataPipelineStagePlugin GetDataPipelineStagePlugin(string pluginName, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the data pipeline stage plugin. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IDataPipelineStagePlugin The IDataPipelineStagePlugin interface implemented by the data pipeline stage plugin. Exceptions NotImplementedException GetDataSourcePlugin(string, string, Dictionary<string, object>, IPluginPackageManagerResolver, IServiceProvider) Gets a data source plugin by its name. public IDataSourcePlugin GetDataSourcePlugin(string pluginName, string dataSourceObjectId, Dictionary<string, object> pluginParameters, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginName string The name of the data source plugin. dataSourceObjectId string The FoundationaLLM object identifier of the data source. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Returns IDataSourcePlugin The IDataSourcePlugin interface implemented by the data source plugin. Exceptions NotImplementedException GetMetadata(string) Gets the plugin package configuration with the plugin configurations of to the plugins in the package. public PluginPackageMetadata GetMetadata(string instanceId) Parameters instanceId string The FoundationaLLM instance identifier. Returns PluginPackageMetadata An object of type PluginPackageMetadata. RegisterService(string, object) Registers an internal service in the plugin package. public void RegisterService(string serviceName, object service) Parameters serviceName string The name of the service. service object The service to be registered. TryGetService(string, out object?) Tries to get a service that is registered internally in the plugin package. public bool TryGetService(string serviceName, out object? service) Parameters serviceName string The name of the service to be retrieved. service object When the method returns, contains the requested service if it was found; otherwise, null. Returns bool true if the service was successfully retrieved."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.PluginParameterNames.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.PluginParameterNames.html",
    "title": "Class PluginParameterNames | FoundationaLLM",
    "summary": "Class PluginParameterNames Namespace FoundationaLLM.Plugins.DataPipeline Assembly FoundationaLLM.DataPipelinePlugins.dll public static class PluginParameterNames Inheritance object PluginParameterNames Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_EMBEDDINGDIMENSIONS public const string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_EMBEDDINGDIMENSIONS = \"EmbeddingDimensions\" Field Value string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_METADATAPROPERTYNAMES public const string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_METADATAPROPERTYNAMES = \"MetadataPropertyNames\" Field Value string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_VECTORDATABASEOBJECTID public const string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_VECTORDATABASEOBJECTID = \"VectorDatabaseObjectId\" Field Value string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_VECTORSTOREID public const string AZUREAISEARCHINDEXING_DATAPIPELINESTAGE_VECTORSTOREID = \"VectorStoreId\" Field Value string AZUREDATALAKE_DATASOURCE_FOLDERS public const string AZUREDATALAKE_DATASOURCE_FOLDERS = \"Folders\" Field Value string CONTEXTFILE_DATASOURCE_CONTEXTFILEOBJECTID public const string CONTEXTFILE_DATASOURCE_CONTEXTFILEOBJECTID = \"ContextFileObjectId\" Field Value string GATEWAYTEXTEMBEDDING_DATAPIPELINESTAGE_EMBEDDINGDIMENSIONS public const string GATEWAYTEXTEMBEDDING_DATAPIPELINESTAGE_EMBEDDINGDIMENSIONS = \"EmbeddingDimensions\" Field Value string GATEWAYTEXTEMBEDDING_DATAPIPELINESTAGE_EMBEDDINGMODEL public const string GATEWAYTEXTEMBEDDING_DATAPIPELINESTAGE_EMBEDDINGMODEL = \"EmbeddingModel\" Field Value string IMAGE_CONTENTTEXTEXTRACTION_AIMODELOBJECTID public const string IMAGE_CONTENTTEXTEXTRACTION_AIMODELOBJECTID = \"AIModelObjectId\" Field Value string IMAGE_METADATATEXTEXTRACTION_AIMODELOBJECTID public const string IMAGE_METADATATEXTEXTRACTION_AIMODELOBJECTID = \"AIModelObjectId\" Field Value string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONCOMPLETIONMODEL public const string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONCOMPLETIONMODEL = \"CompletionModel\" Field Value string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONENTITYTYPES public const string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONENTITYTYPES = \"EntityTypes\" Field Value string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONMAXOUTPUTTOKENCOUNT public const string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONMAXOUTPUTTOKENCOUNT = \"MaxOutputTokenCount\" Field Value string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONMODELTEMPERATURE public const string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONMODELTEMPERATURE = \"ModelTemperature\" Field Value string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONPROMPTOBJECTID public const string KNOWLEDGEEXTRACTION_DATAPIPELINESTAGE_ENTITYEXTRACTIONPROMPTOBJECTID = \"PromptObjectId\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONCOMPLETIONMAXOUTPUTTOKENCOUNT public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONCOMPLETIONMAXOUTPUTTOKENCOUNT = \"CompletionMaxOutputTokenCount\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONCOMPLETIONMODEL public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONCOMPLETIONMODEL = \"CompletionModel\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONCOMPLETIONMODELTEMPERATURE public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONCOMPLETIONMODELTEMPERATURE = \"CompletionModelTemperature\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONEMBEDDINGDIMENSIONS public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONEMBEDDINGDIMENSIONS = \"EmbeddingDimensions\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONEMBEDDINGMODEL public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONEMBEDDINGMODEL = \"EmbeddingModel\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONPROMPTOBJECTID public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_ENTITYSUMMARIZATIONPROMPTOBJECTID = \"PromptObjectId\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_KNOWLEDGESOURCEID public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_KNOWLEDGESOURCEID = \"KnowledgeSourceId\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_VECTORDATABASEOBJECTID public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_VECTORDATABASEOBJECTID = \"VectorDatabaseObjectId\" Field Value string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_VECTORSTOREID public const string KNOWLEDGEGRAPH_DATAPIPELINESTAGE_VECTORSTOREID = \"VectorStoreId\" Field Value string SHAREPOINTONLINE_DATASOURCE_DOCUMENTLIBRARIES public const string SHAREPOINTONLINE_DATASOURCE_DOCUMENTLIBRARIES = \"DocumentLibraries\" Field Value string TEXTPARTITIONING_DATAPIPELINESTAGE_PARITTIONINGSTRATETGY public const string TEXTPARTITIONING_DATAPIPELINESTAGE_PARITTIONINGSTRATETGY = \"PartitioningStrategy\" Field Value string TOKEN_CONTENTTEXTPARTITIONING_PARTITIONOVERLAPTOKENS public const string TOKEN_CONTENTTEXTPARTITIONING_PARTITIONOVERLAPTOKENS = \"PartitionOverlapTokens\" Field Value string TOKEN_CONTENTTEXTPARTITIONING_PARTITIONSIZETOKENS public const string TOKEN_CONTENTTEXTPARTITIONING_PARTITIONSIZETOKENS = \"PartitionSizeTokens\" Field Value string"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.DOCXContentTextExtractionPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.DOCXContentTextExtractionPlugin.html",
    "title": "Class DOCXContentTextExtractionPlugin | FoundationaLLM",
    "summary": "Class DOCXContentTextExtractionPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the DOCX Content Text Extraction Plugin. public class DOCXContentTextExtractionPlugin : PluginBase, IContentTextExtractionPlugin Inheritance object PluginBase DOCXContentTextExtractionPlugin Implements IContentTextExtractionPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DOCXContentTextExtractionPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the DOCX Content Text Extraction Plugin. public DOCXContentTextExtractionPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ExtractText(BinaryData) Extracts text from the provided raw content. public Task<PluginResult<string>> ExtractText(BinaryData rawContent) Parameters rawContent BinaryData The binary content to extract text from. Returns Task<PluginResult<string>> A PluginResult<T> object with the extracted text."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.ImageContentTextExtractionPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.ImageContentTextExtractionPlugin.html",
    "title": "Class ImageContentTextExtractionPlugin | FoundationaLLM",
    "summary": "Class ImageContentTextExtractionPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Image Content Text Extraction Plugin. public class ImageContentTextExtractionPlugin : PluginBase, IContentTextExtractionPlugin Inheritance object PluginBase ImageContentTextExtractionPlugin Implements IContentTextExtractionPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ImageContentTextExtractionPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Image Content Text Extraction Plugin. public ImageContentTextExtractionPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ExtractText(BinaryData) Extracts text from the provided raw content. public Task<PluginResult<string>> ExtractText(BinaryData rawContent) Parameters rawContent BinaryData The binary content to extract text from. Returns Task<PluginResult<string>> A PluginResult<T> object with the extracted text."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.ImageMetadataTextExtractionPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.ImageMetadataTextExtractionPlugin.html",
    "title": "Class ImageMetadataTextExtractionPlugin | FoundationaLLM",
    "summary": "Class ImageMetadataTextExtractionPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Image Metadata Text Extraction Plugin. public class ImageMetadataTextExtractionPlugin : PluginBase, IContentTextExtractionPlugin Inheritance object PluginBase ImageMetadataTextExtractionPlugin Implements IContentTextExtractionPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ImageMetadataTextExtractionPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Image Metadata Text Extraction Plugin. public ImageMetadataTextExtractionPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ExtractText(BinaryData) Extracts text from the provided raw content. public Task<PluginResult<string>> ExtractText(BinaryData rawContent) Parameters rawContent BinaryData The binary content to extract text from. Returns Task<PluginResult<string>> A PluginResult<T> object with the extracted text."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.PDFContentTextExtractionPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.PDFContentTextExtractionPlugin.html",
    "title": "Class PDFContentTextExtractionPlugin | FoundationaLLM",
    "summary": "Class PDFContentTextExtractionPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the PDF Content Text Extraction Plugin. public class PDFContentTextExtractionPlugin : PluginBase, IContentTextExtractionPlugin Inheritance object PluginBase PDFContentTextExtractionPlugin Implements IContentTextExtractionPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PDFContentTextExtractionPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the PDF Content Text Extraction Plugin. public PDFContentTextExtractionPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ExtractText(BinaryData) Extracts text from the provided raw content. public Task<PluginResult<string>> ExtractText(BinaryData rawContent) Parameters rawContent BinaryData The binary content to extract text from. Returns Task<PluginResult<string>> A PluginResult<T> object with the extracted text."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.PPTXContentTextExtractionPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.PPTXContentTextExtractionPlugin.html",
    "title": "Class PPTXContentTextExtractionPlugin | FoundationaLLM",
    "summary": "Class PPTXContentTextExtractionPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the PPTX Content Text Extraction Plugin. public class PPTXContentTextExtractionPlugin : PluginBase, IContentTextExtractionPlugin Inheritance object PluginBase PPTXContentTextExtractionPlugin Implements IContentTextExtractionPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PPTXContentTextExtractionPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the PPTX Content Text Extraction Plugin. public PPTXContentTextExtractionPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ExtractText(BinaryData) Extracts text from the provided raw content. public Task<PluginResult<string>> ExtractText(BinaryData rawContent) Parameters rawContent BinaryData The binary content to extract text from. Returns Task<PluginResult<string>> A PluginResult<T> object with the extracted text."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.XLSXContentTextExtractionPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.XLSXContentTextExtractionPlugin.html",
    "title": "Class XLSXContentTextExtractionPlugin | FoundationaLLM",
    "summary": "Class XLSXContentTextExtractionPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the XLSX Content Text Extraction Plugin. public class XLSXContentTextExtractionPlugin : PluginBase, IContentTextExtractionPlugin Inheritance object PluginBase XLSXContentTextExtractionPlugin Implements IContentTextExtractionPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors XLSXContentTextExtractionPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the XLSX Content Text Extraction Plugin. public XLSXContentTextExtractionPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ExtractText(BinaryData) Extracts text from the provided raw content. public Task<PluginResult<string>> ExtractText(BinaryData rawContent) Parameters rawContent BinaryData The binary content to extract text from. Returns Task<PluginResult<string>> A PluginResult<T> object with the extracted text."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction Classes DOCXContentTextExtractionPlugin Implements the DOCX Content Text Extraction Plugin. ImageContentTextExtractionPlugin Implements the Image Content Text Extraction Plugin. ImageMetadataTextExtractionPlugin Implements the Image Metadata Text Extraction Plugin. PDFContentTextExtractionPlugin Implements the PDF Content Text Extraction Plugin. PPTXContentTextExtractionPlugin Implements the PPTX Content Text Extraction Plugin. XLSXContentTextExtractionPlugin Implements the XLSX Content Text Extraction Plugin."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning.SemanticContentTextPartitioningPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning.SemanticContentTextPartitioningPlugin.html",
    "title": "Class SemanticContentTextPartitioningPlugin | FoundationaLLM",
    "summary": "Class SemanticContentTextPartitioningPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Semantic Content Text Partitioning plugin. public class SemanticContentTextPartitioningPlugin : PluginBase, IContentTextPartitioningPlugin Inheritance object PluginBase SemanticContentTextPartitioningPlugin Implements IContentTextPartitioningPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticContentTextPartitioningPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Semantic Content Text Partitioning plugin. public SemanticContentTextPartitioningPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods PartitionText(string, string) Partitions the provided text into chunks. public Task<PluginResult<List<DataPipelineContentItemContentPart>>> PartitionText(string contentItemCanonicalId, string text) Parameters contentItemCanonicalId string The canonical identifier of the content item. text string The text to be partitioned. Returns Task<PluginResult<List<DataPipelineContentItemContentPart>>> A list of text chunks."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning.TokenContentTextPartitioningPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning.TokenContentTextPartitioningPlugin.html",
    "title": "Class TokenContentTextPartitioningPlugin | FoundationaLLM",
    "summary": "Class TokenContentTextPartitioningPlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Token Content Text Partitioning plugin. public class TokenContentTextPartitioningPlugin : PluginBase, IContentTextPartitioningPlugin Inheritance object PluginBase TokenContentTextPartitioningPlugin Implements IContentTextPartitioningPlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TokenContentTextPartitioningPlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Token Content Text Partitioning plugin. public TokenContentTextPartitioningPlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods PartitionText(string, string) Partitions the provided text into chunks. public Task<PluginResult<List<DataPipelineContentItemContentPart>>> PartitionText(string contentItemCanonicalId, string text) Parameters contentItemCanonicalId string The canonical identifier of the content item. text string The text to be partitioned. Returns Task<PluginResult<List<DataPipelineContentItemContentPart>>> A list of text chunks."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning Classes SemanticContentTextPartitioningPlugin Implements the Semantic Content Text Partitioning plugin. TokenContentTextPartitioningPlugin Implements the Token Content Text Partitioning plugin."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.AzureAISearchIndexingDataPipelineStagePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.AzureAISearchIndexingDataPipelineStagePlugin.html",
    "title": "Class AzureAISearchIndexingDataPipelineStagePlugin | FoundationaLLM",
    "summary": "Class AzureAISearchIndexingDataPipelineStagePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Azure AI Indexing Data Pipeline Stage Plugin. public class AzureAISearchIndexingDataPipelineStagePlugin : DataPipelineStagePluginBase, IDataPipelineStagePlugin Inheritance object PluginBase DataPipelineStagePluginBase AzureAISearchIndexingDataPipelineStagePlugin Implements IDataPipelineStagePlugin Inherited Members DataPipelineStagePluginBase._dataPipelineStateService DataPipelineStagePluginBase.GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) DataPipelineStagePluginBase.GetStageWorkItems(List<string>, string, string, string) PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAISearchIndexingDataPipelineStagePlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Azure AI Indexing Data Pipeline Stage Plugin. public AzureAISearchIndexingDataPipelineStagePlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Fields _vectorResourceProvider protected readonly IResourceProviderService? _vectorResourceProvider Field Value IResourceProviderService Properties Name protected override string Name { get; } Property Value string Methods ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. public override Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.GatewayTextEmbeddingDataPipelineStagePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.GatewayTextEmbeddingDataPipelineStagePlugin.html",
    "title": "Class GatewayTextEmbeddingDataPipelineStagePlugin | FoundationaLLM",
    "summary": "Class GatewayTextEmbeddingDataPipelineStagePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Gateway Text Embedding Data Pipeline Stage Plugin. public class GatewayTextEmbeddingDataPipelineStagePlugin : DataPipelineStagePluginBase, IDataPipelineStagePlugin Inheritance object PluginBase DataPipelineStagePluginBase GatewayTextEmbeddingDataPipelineStagePlugin Implements IDataPipelineStagePlugin Inherited Members DataPipelineStagePluginBase._dataPipelineStateService DataPipelineStagePluginBase.GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) DataPipelineStagePluginBase.GetStageWorkItems(List<string>, string, string, string) PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayTextEmbeddingDataPipelineStagePlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Gateway Text Embedding Data Pipeline Stage Plugin. public GatewayTextEmbeddingDataPipelineStagePlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. public override Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.KnowledgeExtractionDataPipelineStagePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.KnowledgeExtractionDataPipelineStagePlugin.html",
    "title": "Class KnowledgeExtractionDataPipelineStagePlugin | FoundationaLLM",
    "summary": "Class KnowledgeExtractionDataPipelineStagePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Knowledge Extraction Data Pipeline Stage Plugin. public class KnowledgeExtractionDataPipelineStagePlugin : DataPipelineStagePluginBase, IDataPipelineStagePlugin Inheritance object PluginBase DataPipelineStagePluginBase KnowledgeExtractionDataPipelineStagePlugin Implements IDataPipelineStagePlugin Inherited Members DataPipelineStagePluginBase._dataPipelineStateService DataPipelineStagePluginBase.GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) DataPipelineStagePluginBase.GetStageWorkItems(List<string>, string, string, string) PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeExtractionDataPipelineStagePlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Knowledge Extraction Data Pipeline Stage Plugin. public KnowledgeExtractionDataPipelineStagePlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. public override Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.KnowledgeGraphDataPipelineStagePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.KnowledgeGraphDataPipelineStagePlugin.html",
    "title": "Class KnowledgeGraphDataPipelineStagePlugin | FoundationaLLM",
    "summary": "Class KnowledgeGraphDataPipelineStagePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Knowledge Graph Data Pipeline Stage Plugin. public class KnowledgeGraphDataPipelineStagePlugin : DataPipelineStagePluginBase, IDataPipelineStagePlugin Inheritance object PluginBase DataPipelineStagePluginBase KnowledgeGraphDataPipelineStagePlugin Implements IDataPipelineStagePlugin Inherited Members DataPipelineStagePluginBase._dataPipelineStateService DataPipelineStagePluginBase.GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeGraphDataPipelineStagePlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Knowledge Graph Data Pipeline Stage Plugin. public KnowledgeGraphDataPipelineStagePlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods GetStageWorkItems(List<string>, string, string, string) Gets the list of data pipeline work items based on the provided content items canonical identifiers. public override Task<List<DataPipelineRunWorkItem>> GetStageWorkItems(List<string> contentItemsCanonicalIds, string dataPipelineRunId, string dataPipelineStageName, string previousDataPipelineStageName) Parameters contentItemsCanonicalIds List<string> The list of icontent items canonical identifiers. dataPipelineRunId string The unique identifier of the data pipeline run. dataPipelineStageName string The name of the data pipeline stage. previousDataPipelineStageName string The name of the previous data pipeline stage. Returns Task<List<DataPipelineRunWorkItem>> A list of data pipeline work items. ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. public override Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.TextExtractionDataPipelineStagePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.TextExtractionDataPipelineStagePlugin.html",
    "title": "Class TextExtractionDataPipelineStagePlugin | FoundationaLLM",
    "summary": "Class TextExtractionDataPipelineStagePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Text Extraction Data Pipeline Stage Plugin. public class TextExtractionDataPipelineStagePlugin : DataPipelineStagePluginBase, IDataPipelineStagePlugin Inheritance object PluginBase DataPipelineStagePluginBase TextExtractionDataPipelineStagePlugin Implements IDataPipelineStagePlugin Inherited Members DataPipelineStagePluginBase._dataPipelineStateService DataPipelineStagePluginBase.GetStageWorkItems(List<string>, string, string, string) PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextExtractionDataPipelineStagePlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Text Extraction Data Pipeline Stage Plugin. public TextExtractionDataPipelineStagePlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) Gets the list of data pipeline work items based on the provided content items. public override Task<List<DataPipelineRunWorkItem>> GetStartingStageWorkItems(List<DataPipelineContentItem> contentItems, string dataPipelineRunId, string dataPipelineStageName) Parameters contentItems List<DataPipelineContentItem> The list of content items. dataPipelineRunId string The unique identifier of the data pipeline run. dataPipelineStageName string The name of the data pipeline stage. Returns Task<List<DataPipelineRunWorkItem>> A list of data pipeline work items. ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. public override Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.TextPartitioningDataPipelineStagePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.TextPartitioningDataPipelineStagePlugin.html",
    "title": "Class TextPartitioningDataPipelineStagePlugin | FoundationaLLM",
    "summary": "Class TextPartitioningDataPipelineStagePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Text Partitioning Data Pipeline Stage Plugin. public class TextPartitioningDataPipelineStagePlugin : DataPipelineStagePluginBase, IDataPipelineStagePlugin Inheritance object PluginBase DataPipelineStagePluginBase TextPartitioningDataPipelineStagePlugin Implements IDataPipelineStagePlugin Inherited Members DataPipelineStagePluginBase._dataPipelineStateService DataPipelineStagePluginBase.GetStartingStageWorkItems(List<DataPipelineContentItem>, string, string) DataPipelineStagePluginBase.GetStageWorkItems(List<string>, string, string, string) PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextPartitioningDataPipelineStagePlugin(Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Text Partitioning Data Pipeline Stage Plugin. public TextPartitioningDataPipelineStagePlugin(Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods ProcessWorkItem(DataPipelineDefinition, DataPipelineRun, DataPipelineRunWorkItem) Processes a specified data pipeline run work item. public override Task<PluginResult> ProcessWorkItem(DataPipelineDefinition dataPipelineDefinition, DataPipelineRun dataPipelineRun, DataPipelineRunWorkItem dataPipelineRunWorkItem) Parameters dataPipelineDefinition DataPipelineDefinition The definition of the data pipeline associated with the data pipeline run work item. dataPipelineRun DataPipelineRun The data pipeline run associated with the data pipeline run work item. dataPipelineRunWorkItem DataPipelineRunWorkItem The data pipeline run work item to process. Returns Task<PluginResult> An object that contains the processing result."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage Classes AzureAISearchIndexingDataPipelineStagePlugin Implements the Azure AI Indexing Data Pipeline Stage Plugin. GatewayTextEmbeddingDataPipelineStagePlugin Implements the Gateway Text Embedding Data Pipeline Stage Plugin. KnowledgeExtractionDataPipelineStagePlugin Implements the Knowledge Extraction Data Pipeline Stage Plugin. KnowledgeGraphDataPipelineStagePlugin Implements the Knowledge Graph Data Pipeline Stage Plugin. TextExtractionDataPipelineStagePlugin Implements the Text Extraction Data Pipeline Stage Plugin. TextPartitioningDataPipelineStagePlugin Implements the Text Partitioning Data Pipeline Stage Plugin."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.AzureDataLakeDataSourcePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.AzureDataLakeDataSourcePlugin.html",
    "title": "Class AzureDataLakeDataSourcePlugin | FoundationaLLM",
    "summary": "Class AzureDataLakeDataSourcePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the Azure Data Lake data source plugin. The dictionary containing the plugin parameters. The package manager for the plugin. The package manager resolver for the plugin. The service provider of the dependency injection container. public class AzureDataLakeDataSourcePlugin : PluginBase, IDataSourcePlugin Inheritance object PluginBase AzureDataLakeDataSourcePlugin Implements IDataSourcePlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSourcePlugin(string, Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the Azure Data Lake data source plugin. The dictionary containing the plugin parameters. The package manager for the plugin. The package manager resolver for the plugin. The service provider of the dependency injection container. public AzureDataLakeDataSourcePlugin(string dataSourceObjectId, Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters dataSourceObjectId string pluginParameters Dictionary<string, object> packageManager IPluginPackageManager packageManagerResolver IPluginPackageManagerResolver serviceProvider IServiceProvider Properties Name protected override string Name { get; } Property Value string Methods GetContentItemRawContent(ContentIdentifier) Gets the raw content of a content item. public Task<PluginResult<ContentItemRawContent>> GetContentItemRawContent(ContentIdentifier contentItemIdentifier) Parameters contentItemIdentifier ContentIdentifier The identifier of the content item. Returns Task<PluginResult<ContentItemRawContent>> A PluginResult<T> object with the conten item's raw content. GetContentItems() Gets the list of content items from the data source. public Task<List<DataPipelineContentItem>> GetContentItems() Returns Task<List<DataPipelineContentItem>>"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.ContextFileDataSourcePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.ContextFileDataSourcePlugin.html",
    "title": "Class ContextFileDataSourcePlugin | FoundationaLLM",
    "summary": "Class ContextFileDataSourcePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the FoundationaLLM Context File data source plugin. public class ContextFileDataSourcePlugin : PluginBase, IDataSourcePlugin Inheritance object PluginBase ContextFileDataSourcePlugin Implements IDataSourcePlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContextFileDataSourcePlugin(string, Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the FoundationaLLM Context File data source plugin. public ContextFileDataSourcePlugin(string dataSourceObjectId, Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters dataSourceObjectId string The FoundationaLLM object identifier of the data source. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Properties Name protected override string Name { get; } Property Value string Methods GetContentItemRawContent(ContentIdentifier) Gets the raw content of a content item. public Task<PluginResult<ContentItemRawContent>> GetContentItemRawContent(ContentIdentifier contentItemIdentifier) Parameters contentItemIdentifier ContentIdentifier The identifier of the content item. Returns Task<PluginResult<ContentItemRawContent>> A PluginResult<T> object with the conten item's raw content. GetContentItems() Gets the list of content items from the data source. public Task<List<DataPipelineContentItem>> GetContentItems() Returns Task<List<DataPipelineContentItem>>"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.SharePointOnlineDataSourcePlugin.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.SharePointOnlineDataSourcePlugin.html",
    "title": "Class SharePointOnlineDataSourcePlugin | FoundationaLLM",
    "summary": "Class SharePointOnlineDataSourcePlugin Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource Assembly FoundationaLLM.DataPipelinePlugins.dll Implements the FoundationaLLM Context File data source plugin. public class SharePointOnlineDataSourcePlugin : PluginBase, IDataSourcePlugin Inheritance object PluginBase SharePointOnlineDataSourcePlugin Implements IDataSourcePlugin Inherited Members PluginBase._pluginParameters PluginBase._packageManager PluginBase._packageManagerResolver PluginBase._pluginMetadata PluginBase._serviceProvider PluginBase._logger object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineDataSourcePlugin(string, Dictionary<string, object>, IPluginPackageManager, IPluginPackageManagerResolver, IServiceProvider) Implements the FoundationaLLM Context File data source plugin. public SharePointOnlineDataSourcePlugin(string dataSourceObjectId, Dictionary<string, object> pluginParameters, IPluginPackageManager packageManager, IPluginPackageManagerResolver packageManagerResolver, IServiceProvider serviceProvider) Parameters dataSourceObjectId string The FoundationaLLM object identifier of the data source. pluginParameters Dictionary<string, object> The dictionary containing the plugin parameters. packageManager IPluginPackageManager The package manager for the plugin. packageManagerResolver IPluginPackageManagerResolver The package manager resolver for the plugin. serviceProvider IServiceProvider The service provider of the dependency injection container. Fields _configuration protected readonly IConfiguration _configuration Field Value IConfiguration _dataSourceResourceProvider protected readonly IResourceProviderService? _dataSourceResourceProvider Field Value IResourceProviderService Properties Name protected override string Name { get; } Property Value string Methods GetContentItemRawContent(ContentIdentifier) Gets the raw content of a content item. public Task<PluginResult<ContentItemRawContent>> GetContentItemRawContent(ContentIdentifier contentItemIdentifier) Parameters contentItemIdentifier ContentIdentifier The identifier of the content item. Returns Task<PluginResult<ContentItemRawContent>> A PluginResult<T> object with the conten item's raw content. GetContentItems() Gets the list of content items from the data source. public Task<List<DataPipelineContentItem>> GetContentItems() Returns Task<List<DataPipelineContentItem>>"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource Classes AzureDataLakeDataSourcePlugin Implements the Azure Data Lake data source plugin. The dictionary containing the plugin parameters. The package manager for the plugin. The package manager resolver for the plugin. The service provider of the dependency injection container. ContextFileDataSourcePlugin Implements the FoundationaLLM Context File data source plugin. SharePointOnlineDataSourcePlugin Implements the FoundationaLLM Context File data source plugin."
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.Plugins.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline.Plugins Namespaces FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextExtraction FoundationaLLM.Plugins.DataPipeline.Plugins.ContentTextPartitioning FoundationaLLM.Plugins.DataPipeline.Plugins.DataPipelineStage FoundationaLLM.Plugins.DataPipeline.Plugins.DataSource"
  },
  "api/dotnet/FoundationaLLM.Plugins.DataPipeline.html": {
    "href": "api/dotnet/FoundationaLLM.Plugins.DataPipeline.html",
    "title": "Namespace FoundationaLLM.Plugins.DataPipeline | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Plugins.DataPipeline Namespaces FoundationaLLM.Plugins.DataPipeline.Constants FoundationaLLM.Plugins.DataPipeline.Models FoundationaLLM.Plugins.DataPipeline.Plugins Classes PluginNames Provides the names of the plugins provided by the package. PluginPackageManager The plugin package manager. PluginParameterNames"
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.PromptReference.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.PromptReference.html",
    "title": "Class PromptReference | FoundationaLLM",
    "summary": "Class PromptReference Namespace FoundationaLLM.Prompt.Models Assembly FoundationaLLM.Prompt.dll Provides details about a prompt. public class PromptReference : ResourceReference Inheritance object ResourceReference PromptReference Inherited Members ResourceReference.ObjectId ResourceReference.Name ResourceReference.Filename ResourceReference.Type ResourceReference.Deleted ResourceReference.Equals(object) ResourceReference.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ResourceType The object type of the agent. [JsonIgnore] public override Type ResourceType { get; } Property Value Type"
  },
  "api/dotnet/FoundationaLLM.Prompt.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.Models.html",
    "title": "Namespace FoundationaLLM.Prompt.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Prompt.Models Classes PromptReference Provides details about a prompt."
  },
  "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.PromptResourceProviderService.html",
    "title": "Class PromptResourceProviderService | FoundationaLLM",
    "summary": "Class PromptResourceProviderService Namespace FoundationaLLM.Prompt.ResourceProviders Assembly FoundationaLLM.Prompt.dll Implements the FoundationaLLM.Prompt resource provider. public class PromptResourceProviderService : ResourceProviderServiceBase<PromptReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<PromptReference> PromptResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<PromptReference>._resourceReferenceStore ResourceProviderServiceBase<PromptReference>._serviceProvider ResourceProviderServiceBase<PromptReference>._authorizationServiceClient ResourceProviderServiceBase<PromptReference>._storageService ResourceProviderServiceBase<PromptReference>._eventService ResourceProviderServiceBase<PromptReference>._resourceValidatorFactory ResourceProviderServiceBase<PromptReference>._validator ResourceProviderServiceBase<PromptReference>._logger ResourceProviderServiceBase<PromptReference>._instanceSettings ResourceProviderServiceBase<PromptReference>._storageContainerName ResourceProviderServiceBase<PromptReference>._serializerSettings ResourceProviderServiceBase<PromptReference>.Name ResourceProviderServiceBase<PromptReference>.IsInitialized ResourceProviderServiceBase<PromptReference>.InitializationTask ResourceProviderServiceBase<PromptReference>.AllowedResourceTypes ResourceProviderServiceBase<PromptReference>.StorageAccountName ResourceProviderServiceBase<PromptReference>.StorageContainerName ResourceProviderServiceBase<PromptReference>.Initialize() ResourceProviderServiceBase<PromptReference>.WaitForInitialization() ResourceProviderServiceBase<PromptReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PromptReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PromptReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PromptReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<PromptReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<PromptReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<PromptReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<PromptReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<PromptReference>.HandleCacheResetCommand() ResourceProviderServiceBase<PromptReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<PromptReference>.GetResourceProviderState() ResourceProviderServiceBase<PromptReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<PromptReference, bool, Task<T>>) ResourceProviderServiceBase<PromptReference>.LoadResource<T>(PromptReference) ResourceProviderServiceBase<PromptReference>.LoadResource<T>(string) ResourceProviderServiceBase<PromptReference>.CreateResource<T>(PromptReference, T) ResourceProviderServiceBase<PromptReference>.CreateResource(PromptReference, Stream, string) ResourceProviderServiceBase<PromptReference>.CreateResources<T1, T2>(PromptReference, T1, PromptReference, T2) ResourceProviderServiceBase<PromptReference>.SaveResource<T>(PromptReference, T) ResourceProviderServiceBase<PromptReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<PromptReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<PromptReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<PromptReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<PromptReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<PromptReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<PromptReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<PromptReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<PromptReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<PromptReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<PromptReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<PromptReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<PromptReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PromptResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILogger<PromptResourceProviderService>) Implements the FoundationaLLM.Prompt resource provider. public PromptResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILogger<PromptResourceProviderService> logger) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. logger ILogger<PromptResourceProviderService> The ILogger used for logging. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Prompt.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Prompt.ResourceProviders Classes PromptResourceProviderService Implements the FoundationaLLM.Prompt resource provider."
  },
  "api/dotnet/FoundationaLLM.Prompt.html": {
    "href": "api/dotnet/FoundationaLLM.Prompt.html",
    "title": "Namespace FoundationaLLM.Prompt | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Prompt Namespaces FoundationaLLM.Prompt.Models FoundationaLLM.Prompt.ResourceProviders"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.CompletionsController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.CompletionsController.html",
    "title": "Class CompletionsController | FoundationaLLM",
    "summary": "Class CompletionsController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Wrapper for the Semantic Kernel service. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class CompletionsController : ControllerBase Inheritance object ControllerBase CompletionsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CompletionsController(ISemanticKernelService) Wrapper for the Semantic Kernel service. public CompletionsController(ISemanticKernelService semanticKernelService) Parameters semanticKernelService ISemanticKernelService The Semantic Kernel service handling requests. Methods GetCompletionOperationStatus(string, string) Gets the status of a completion operation. [HttpGet(\"async-completions/{operationId}/status\")] public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. [HttpPost(\"async-completions\")] public Task<ActionResult<LongRunningOperation>> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<ActionResult<LongRunningOperation>> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.SemanticKernel.API.Controllers Assembly FoundationaLLM.SemanticKernel.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"instances/{instanceId}/[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get(string) Returns the status of the Semantic Kernel API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get(string instanceId) Parameters instanceId string Returns IActionResult Options() Returns the allowed HTTP methods for the Semantic Kernel API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Controllers.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.API.Controllers Classes CompletionsController Wrapper for the Semantic Kernel service. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.Program.html",
    "title": "Class Program | FoundationaLLM",
    "summary": "Class Program Namespace FoundationaLLM.SemanticKernel.API Assembly FoundationaLLM.SemanticKernel.API.dll Program class for the Semantic Kernel API. public class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Main(string[]) Entry point for the Semantic Kernel API. public static void Main(string[] args) Parameters args string[]"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.API.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.API.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.API | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.API Namespaces FoundationaLLM.SemanticKernel.API.Controllers Classes Program Program class for the Semantic Kernel API."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelAgentBase.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelAgentBase.html",
    "title": "Class SemanticKernelAgentBase | FoundationaLLM",
    "summary": "Class SemanticKernelAgentBase Namespace FoundationaLLM.SemanticKernel.Core.Agents Assembly FoundationaLLM.SemanticKernel.Core.dll Implements the base functionality for a Semantic Kernel agent. public class SemanticKernelAgentBase Inheritance object SemanticKernelAgentBase Derived SemanticKernelKnowledgeManagementAgent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelAgentBase(LLMCompletionRequest, IEnumerable<IResourceProviderService>, ILogger) Implements the base functionality for a Semantic Kernel agent. public SemanticKernelAgentBase(LLMCompletionRequest request, IEnumerable<IResourceProviderService> resourceProviderServices, ILogger logger) Parameters request LLMCompletionRequest The LLMCompletionRequest being processed by the agent. resourceProviderServices IEnumerable<IResourceProviderService> A collection of IResourceProviderService resource providers. logger ILogger The ILogger used for logging. Fields _configurationResourceProvider protected readonly IResourceProviderService _configurationResourceProvider Field Value IResourceProviderService _deploymentName protected string _deploymentName Field Value string _endpointUrl protected string _endpointUrl Field Value string _llmProvider protected string _llmProvider Field Value string _logger protected readonly ILogger _logger Field Value ILogger _request protected readonly LLMCompletionRequest _request Field Value LLMCompletionRequest Methods BuildResponseWithAzureOpenAI() Builds the completion response using Azure OpenAI. protected virtual Task<LLMCompletionResponse> BuildResponseWithAzureOpenAI() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. Exceptions NotImplementedException BuildResponseWithOpenAI() Builds the completion response using OpenAI. protected virtual Task<LLMCompletionResponse> BuildResponseWithOpenAI() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. Exceptions NotImplementedException ExpandAndValidateAgent() Retrieves the agent-specific details from the agent properties payload. protected virtual Task ExpandAndValidateAgent() Returns Task GetCompletion() Gets the completion for the request. public Task<LLMCompletionResponse> GetCompletion() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. GetConfigurationValue(string) protected Task<string> GetConfigurationValue(string configName) Parameters configName string Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelKnowledgeManagementAgent.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.SemanticKernelKnowledgeManagementAgent.html",
    "title": "Class SemanticKernelKnowledgeManagementAgent | FoundationaLLM",
    "summary": "Class SemanticKernelKnowledgeManagementAgent Namespace FoundationaLLM.SemanticKernel.Core.Agents Assembly FoundationaLLM.SemanticKernel.Core.dll The Knowledge Management agent. public class SemanticKernelKnowledgeManagementAgent : SemanticKernelAgentBase Inheritance object SemanticKernelAgentBase SemanticKernelKnowledgeManagementAgent Inherited Members SemanticKernelAgentBase._configurationResourceProvider SemanticKernelAgentBase._request SemanticKernelAgentBase._logger SemanticKernelAgentBase._llmProvider SemanticKernelAgentBase._endpointUrl SemanticKernelAgentBase._deploymentName SemanticKernelAgentBase.GetCompletion() SemanticKernelAgentBase.BuildResponseWithOpenAI() SemanticKernelAgentBase.GetConfigurationValue(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelKnowledgeManagementAgent(LLMCompletionRequest, IEnumerable<IResourceProviderService>, ILoggerFactory, IHttpClientFactoryService) The Knowledge Management agent. public SemanticKernelKnowledgeManagementAgent(LLMCompletionRequest request, IEnumerable<IResourceProviderService> resourceProviderServices, ILoggerFactory loggerFactory, IHttpClientFactoryService httpClientFactoryService) Parameters request LLMCompletionRequest The KnowledgeManagementCompletionRequest to be processed by the agent. resourceProviderServices IEnumerable<IResourceProviderService> A collection of IResourceProviderService resource providers. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. httpClientFactoryService IHttpClientFactoryService Methods BuildResponseWithAzureOpenAI() Builds the completion response using Azure OpenAI. protected override Task<LLMCompletionResponse> BuildResponseWithAzureOpenAI() Returns Task<LLMCompletionResponse> A LLMCompletionResponse object containing the completion response. Exceptions NotImplementedException ExpandAndValidateAgent() Retrieves the agent-specific details from the agent properties payload. protected override Task ExpandAndValidateAgent() Returns Task ValidateAndMapIndexingProfileConfiguration(IndexingProfile) Validates and maps the configuration of the indexing profile to the corresponding settings. protected Task<bool> ValidateAndMapIndexingProfileConfiguration(IndexingProfile indexingProfile) Parameters indexingProfile IndexingProfile Returns Task<bool> True if valid."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Agents.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Agents | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Agents Classes SemanticKernelAgentBase Implements the base functionality for a Semantic Kernel agent. SemanticKernelKnowledgeManagementAgent The Knowledge Management agent."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelException.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelException.html",
    "title": "Class SemanticKernelException | FoundationaLLM",
    "summary": "Class SemanticKernelException Namespace FoundationaLLM.SemanticKernel.Core.Exceptions Assembly FoundationaLLM.SemanticKernel.Core.dll Represents an error generated by the Semantic Kernel service. public class SemanticKernelException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException SemanticKernelException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelException() Initializes a new instance of the SemanticKernelException class with a default message. public SemanticKernelException() SemanticKernelException(string?, Exception?, int) Initializes a new instance of the SemanticKernelException class with its message set to message. public SemanticKernelException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. SemanticKernelException(string?, int) Initializes a new instance of the SemanticKernelException class with its message set to message. public SemanticKernelException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelExceptionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.SemanticKernelExceptionHandler.html",
    "title": "Class SemanticKernelExceptionHandler | FoundationaLLM",
    "summary": "Class SemanticKernelExceptionHandler Namespace FoundationaLLM.SemanticKernel.Core.Exceptions Assembly FoundationaLLM.SemanticKernel.Core.dll Implements a global exception handler for the Semantic Kernel API. public class SemanticKernelExceptionHandler : IExceptionHandler Inheritance object SemanticKernelExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelExceptionHandler(ILogger<SemanticKernelExceptionHandler>) Implements a global exception handler for the Semantic Kernel API. public SemanticKernelExceptionHandler(ILogger<SemanticKernelExceptionHandler> logger) Parameters logger ILogger<SemanticKernelExceptionHandler> The ILogger used for logging. Methods TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters httpContext HttpContext The HttpContext for the request. exception Exception The unhandled exception. cancellationToken CancellationToken The cancellation token. Returns ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Exceptions.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Exceptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Exceptions Classes SemanticKernelException Represents an error generated by the Semantic Kernel service. SemanticKernelExceptionHandler Implements a global exception handler for the Semantic Kernel API."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.DefaultPromptFilter.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.DefaultPromptFilter.html",
    "title": "Class DefaultPromptFilter | FoundationaLLM",
    "summary": "Class DefaultPromptFilter Namespace FoundationaLLM.SemanticKernel.Core.Filters Assembly FoundationaLLM.SemanticKernel.Core.dll Provides the default behavior for filtering actions during prompt rendering. public class DefaultPromptFilter : IPromptRenderFilter Inheritance object DefaultPromptFilter Implements IPromptRenderFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RenderedPrompt The rendered prompt. public string RenderedPrompt { get; } Property Value string Methods OnPromptRenderAsync(PromptRenderContext, Func<PromptRenderContext, Task>) Method which is called asynchronously before prompt rendering. public Task OnPromptRenderAsync(PromptRenderContext context, Func<PromptRenderContext, Task> next) Parameters context PromptRenderContext Instance of Microsoft.SemanticKernel.PromptRenderContext with prompt rendering details. next Func<PromptRenderContext, Task> Delegate to the next filter in pipeline or prompt rendering operation itself. If it's not invoked, next filter or prompt rendering won't be invoked. Returns Task"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Filters.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Filters | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Filters Classes DefaultPromptFilter Provides the default behavior for filtering actions during prompt rendering."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.ISemanticKernelService.html",
    "title": "Interface ISemanticKernelService | FoundationaLLM",
    "summary": "Interface ISemanticKernelService Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Assembly FoundationaLLM.SemanticKernel.Core.dll Defines methods for processing requests targeting the Semantic Kernel agents. public interface ISemanticKernelService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetCompletionOperationStatus(string, string) Gets the status of a completion operation. Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Interfaces.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Interfaces Interfaces ISemanticKernelService Defines methods for processing requests targeting the Semantic Kernel agents."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureAISearchIndexingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureAISearchIndexingServiceSettings.html",
    "title": "Class AzureAISearchIndexingServiceSettings | FoundationaLLM",
    "summary": "Class AzureAISearchIndexingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the Azure AI Search indexing service. public record AzureAISearchIndexingServiceSettings : IEquatable<AzureAISearchIndexingServiceSettings> Inheritance object AzureAISearchIndexingServiceSettings Implements IEquatable<AzureAISearchIndexingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AuthenticationType The AuthenticationType indicating which authentication mechanism to use. [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes Endpoint The endpoint of the Azure AI deployment. public required string Endpoint { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureCosmosDBNoSQLIndexingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.AzureCosmosDBNoSQLIndexingServiceSettings.html",
    "title": "Class AzureCosmosDBNoSQLIndexingServiceSettings | FoundationaLLM",
    "summary": "Class AzureCosmosDBNoSQLIndexingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the Azure Cosmos DB NoSQL vector indexing service. public record AzureCosmosDBNoSQLIndexingServiceSettings : IEquatable<AzureCosmosDBNoSQLIndexingServiceSettings> Inheritance object AzureCosmosDBNoSQLIndexingServiceSettings Implements IEquatable<AzureCosmosDBNoSQLIndexingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AutoscaleMaxThroughput Sets the maximum authoscale throughput for new containers automatically created for this vector database. The default value is 4000 RU/s. public string AutoscaleMaxThroughput { get; set; } Property Value string ConnectionString The connection string for the Azure Cosmos DB workspace. Please note, even though the default connection to the deployed Cosmos DB workspace uses RBAC, the connection string is required to use the vectorization capabilities due to the access level required to create workspace artifacts like containers. public required string ConnectionString { get; set; } Property Value string IndexingPolicy Defines the default indexing policy for the vector database. public IndexingPolicy IndexingPolicy { get; } Property Value IndexingPolicy VectorDatabase The name of the Azure Cosmos DB vector database. Please note, this database should be different from the default one deployed with the FoundationaLLM platform, as it is used for vectorization purposes. public string? VectorDatabase { get; set; } Property Value string VectorEmbeddingPolicy Defines the default indexing policy for the vector database. public VectorEmbeddingPolicy VectorEmbeddingPolicy { get; } Property Value VectorEmbeddingPolicy"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.PostgresIndexingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.PostgresIndexingServiceSettings.html",
    "title": "Class PostgresIndexingServiceSettings | FoundationaLLM",
    "summary": "Class PostgresIndexingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the PostgreSQL vector indexing service. public record PostgresIndexingServiceSettings : IEquatable<PostgresIndexingServiceSettings> Inheritance object PostgresIndexingServiceSettings Implements IEquatable<PostgresIndexingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string for the PostgreSQL server. public required string ConnectionString { get; set; } Property Value string Schema Database schema of the collection tables. Uses the default schema if not specified. public string? Schema { get; set; } Property Value string VectorSize Embedding vector size. public required string? VectorSize { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelServiceSettings.html",
    "title": "Class SemanticKernelServiceSettings | FoundationaLLM",
    "summary": "Class SemanticKernelServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the SemanticKernelService service. public class SemanticKernelServiceSettings Inheritance object SemanticKernelServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MaxConcurrentCompletions The maximum number of background completion operations allowed to run in parallel. public required int MaxConcurrentCompletions { get; set; } Property Value int Remarks If a new completion request comes in and the maximum number is already reached, the request will generate an error."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelTextEmbeddingServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.SemanticKernelTextEmbeddingServiceSettings.html",
    "title": "Class SemanticKernelTextEmbeddingServiceSettings | FoundationaLLM",
    "summary": "Class SemanticKernelTextEmbeddingServiceSettings Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Assembly FoundationaLLM.SemanticKernel.Core.dll Provides configuration settings for the SemanticKernelTextEmbeddingService service. public record SemanticKernelTextEmbeddingServiceSettings : IEquatable<SemanticKernelTextEmbeddingServiceSettings> Inheritance object SemanticKernelTextEmbeddingServiceSettings Implements IEquatable<SemanticKernelTextEmbeddingServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties APIKey The API key used to connect to the Azure Open AI endpoint. Valid only if AuthenticationType is APIKey. public string? APIKey { get; set; } Property Value string AuthenticationType The AuthenticationType indicating which authentication mechanism to use. [JsonConverter(typeof(JsonStringEnumConverter))] public required AuthenticationTypes AuthenticationType { get; set; } Property Value AuthenticationTypes DeploymentName The name of the Azure Open AI deployment. public required string DeploymentName { get; set; } Property Value string Endpoint The endpoint of the Azure Open AI deployment. public required string Endpoint { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Models.Configuration Classes AzureAISearchIndexingServiceSettings Provides configuration settings for the Azure AI Search indexing service. AzureCosmosDBNoSQLIndexingServiceSettings Provides configuration settings for the Azure Cosmos DB NoSQL vector indexing service. PostgresIndexingServiceSettings Provides configuration settings for the PostgreSQL vector indexing service. SemanticKernelServiceSettings Provides configuration settings for the SemanticKernelService service. SemanticKernelTextEmbeddingServiceSettings Provides configuration settings for the SemanticKernelTextEmbeddingService service."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.AgentConversationPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.AgentConversationPlugin.html",
    "title": "Class AgentConversationPlugin | FoundationaLLM",
    "summary": "Class AgentConversationPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins Assembly FoundationaLLM.SemanticKernel.Core.dll Provides the capability to provide details about agents. public class AgentConversationPlugin Inheritance object AgentConversationPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AgentConversationPlugin(Dictionary<string, string>) Provides the capability to provide details about agents. public AgentConversationPlugin(Dictionary<string, string> agentDescriptions) Parameters agentDescriptions Dictionary<string, string> A dictionary with agent names as keys and agent descriptions as values. Methods BuildContextAsync(string) [KernelFunction(\"AgentDescriptions\")] public string BuildContextAsync(string userPrompt) Parameters userPrompt string Returns string"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.KnowledgeManagementContextPlugin.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.KnowledgeManagementContextPlugin.html",
    "title": "Class KnowledgeManagementContextPlugin | FoundationaLLM",
    "summary": "Class KnowledgeManagementContextPlugin Namespace FoundationaLLM.SemanticKernel.Core.Plugins Assembly FoundationaLLM.SemanticKernel.Core.dll Provides the capability to build a context by recalling memories using vector search. public class KnowledgeManagementContextPlugin Inheritance object KnowledgeManagementContextPlugin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors KnowledgeManagementContextPlugin(ISemanticTextMemory, string) Provides the capability to build a context by recalling memories using vector search. public KnowledgeManagementContextPlugin(ISemanticTextMemory memory, string indexName) Parameters memory ISemanticTextMemory indexName string Methods BuildContextAsync(string, List<MessageHistoryItem>) [KernelFunction(\"BuildContext\")] public Task<string> BuildContextAsync(string userPrompt, List<MessageHistoryItem> messageHistory) Parameters userPrompt string messageHistory List<MessageHistoryItem> Returns Task<string>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Plugins.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Plugins Classes AgentConversationPlugin Provides the capability to provide details about agents. KnowledgeManagementContextPlugin Provides the capability to build a context by recalling memories using vector search."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureAISearchIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureAISearchIndexingService.html",
    "title": "Class AzureAISearchIndexingService | FoundationaLLM",
    "summary": "Class AzureAISearchIndexingService Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Assembly FoundationaLLM.SemanticKernel.Core.dll Provides vector embedding indexing based on Azure AI Search. public class AzureAISearchIndexingService : IIndexingService Inheritance object AzureAISearchIndexingService Implements IIndexingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureAISearchIndexingService(AzureAISearchIndexingServiceSettings, ILogger<AzureAISearchIndexingService>) Creates a new AzureAISearchIndexingService instance. public AzureAISearchIndexingService(AzureAISearchIndexingServiceSettings settings, ILogger<AzureAISearchIndexingService> logger) Parameters settings AzureAISearchIndexingServiceSettings The AzureAISearchIndexingServiceSettings providing configuration settings. logger ILogger<AzureAISearchIndexingService> The ILogger used for logging. Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. public Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureCosmosDBNoSQLIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.AzureCosmosDBNoSQLIndexingService.html",
    "title": "Class AzureCosmosDBNoSQLIndexingService | FoundationaLLM",
    "summary": "Class AzureCosmosDBNoSQLIndexingService Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Assembly FoundationaLLM.SemanticKernel.Core.dll Provides vector embedding indexing based on the Azure Cosmos DB NoSQL API. public class AzureCosmosDBNoSQLIndexingService : IIndexingService Inheritance object AzureCosmosDBNoSQLIndexingService Implements IIndexingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureCosmosDBNoSQLIndexingService(IOptions<AzureCosmosDBNoSQLIndexingServiceSettings>, CosmosClient, ILogger<AzureCosmosDBNoSQLIndexingService>) Creates a new AzureCosmosDBNoSQLIndexingService instance. public AzureCosmosDBNoSQLIndexingService(IOptions<AzureCosmosDBNoSQLIndexingServiceSettings> options, CosmosClient cosmosClient, ILogger<AzureCosmosDBNoSQLIndexingService> logger) Parameters options IOptions<AzureCosmosDBNoSQLIndexingServiceSettings> The IOptions<TOptions> providing configuration settings. cosmosClient CosmosClient An instance of the CosmosClient used for completing vectorization-related requests and workspace management. logger ILogger<AzureCosmosDBNoSQLIndexingService> The ILogger used for logging. Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. public Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.PostgresIndexingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.PostgresIndexingService.html",
    "title": "Class PostgresIndexingService | FoundationaLLM",
    "summary": "Class PostgresIndexingService Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Assembly FoundationaLLM.SemanticKernel.Core.dll Provides vector embedding indexing based on PostgreSQL. public class PostgresIndexingService : IIndexingService Inheritance object PostgresIndexingService Implements IIndexingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PostgresIndexingService(IOptions<PostgresIndexingServiceSettings>, ILogger<PostgresIndexingService>) Creates a new PostgresIndexingService instance. public PostgresIndexingService(IOptions<PostgresIndexingServiceSettings> options, ILogger<PostgresIndexingService> logger) Parameters options IOptions<PostgresIndexingServiceSettings> The IOptions<TOptions> providing configuration settings. logger ILogger<PostgresIndexingService> The ILogger used for logging. Methods IndexEmbeddingsAsync(EmbeddedContent, string) Adds to a specified index the list of embeddings associated with a content. public Task<List<string>> IndexEmbeddingsAsync(EmbeddedContent embeddedContent, string indexName) Parameters embeddedContent EmbeddedContent The EmbeddedContent containind the embeddings to index. indexName string The name of the index. Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.Indexing.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Services.Indexing Classes AzureAISearchIndexingService Provides vector embedding indexing based on Azure AI Search. AzureCosmosDBNoSQLIndexingService Provides vector embedding indexing based on the Azure Cosmos DB NoSQL API. PostgresIndexingService Provides vector embedding indexing based on PostgreSQL."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelService.html",
    "title": "Class SemanticKernelService | FoundationaLLM",
    "summary": "Class SemanticKernelService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Processes requests targeting the Semantic Kernel agents. public class SemanticKernelService : ISemanticKernelService Inheritance object SemanticKernelService Implements ISemanticKernelService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelService(ILoggerFactory, IOrchestrationContext, IEnumerable<IResourceProviderService>, IHttpClientFactoryService, ConcurrentTaskPool) Processes requests targeting the Semantic Kernel agents. public SemanticKernelService(ILoggerFactory loggerFactory, IOrchestrationContext callContext, IEnumerable<IResourceProviderService> resourceProviderServices, IHttpClientFactoryService httpClientFactoryService, ConcurrentTaskPool taskPool) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to build loggers for logging. callContext IOrchestrationContext Stores context information extracted from the current HTTP request. This information is primarily used to inject HTTP headers into downstream HTTP calls. resourceProviderServices IEnumerable<IResourceProviderService> A collection of IResourceProviderService resource providers. httpClientFactoryService IHttpClientFactoryService The HTTP client factory service. taskPool ConcurrentTaskPool The global TaskPool object that keeps track of active completion tasks. Methods GetCompletionOperationStatus(string, string) Gets the status of a completion operation. public Task<LongRunningOperation> GetCompletionOperationStatus(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance id. operationId string The OperationId for which to retrieve the status. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status. StartCompletionOperation(string, LLMCompletionRequest) Begins a completion operation. public Task<LongRunningOperation> StartCompletionOperation(string instanceId, LLMCompletionRequest completionRequest) Parameters instanceId string The FoundationaLLM instance id. completionRequest LLMCompletionRequest The completion request containing the user prompt and message history. Returns Task<LongRunningOperation> Returns an LongRunningOperation object containing the OperationId and Status."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.SemanticKernelTextEmbeddingService.html",
    "title": "Class SemanticKernelTextEmbeddingService | FoundationaLLM",
    "summary": "Class SemanticKernelTextEmbeddingService Namespace FoundationaLLM.SemanticKernel.Core.Services Assembly FoundationaLLM.SemanticKernel.Core.dll Generates text embeddings using the Semantic Kernel orchestrator. public class SemanticKernelTextEmbeddingService : ITextEmbeddingService Inheritance object SemanticKernelTextEmbeddingService Implements ITextEmbeddingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SemanticKernelTextEmbeddingService(IOptions<SemanticKernelTextEmbeddingServiceSettings>, ILoggerFactory) Creates a new SemanticKernelTextEmbeddingService instance. public SemanticKernelTextEmbeddingService(IOptions<SemanticKernelTextEmbeddingServiceSettings> options, ILoggerFactory loggerFactory) Parameters options IOptions<SemanticKernelTextEmbeddingServiceSettings> The IOptions<TOptions> providing configuration settings. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers for logging. Methods GetEmbeddingsAsync(IList<TextChunk>, string, int, bool) Initializes the text embedding operation. Depending on the implementation, this can be an atomic operation or a long-running one. public Task<TextOperationResult> GetEmbeddingsAsync(IList<TextChunk> textChunks, string modelName = \"text-embedding-ada-002\", int embeddingDimensions = 1536, bool Prioritized = false) Parameters textChunks IList<TextChunk> The list of text chunks which need to be embedded. modelName string embeddingDimensions int The number of dimensions for the embedding model. Prioritized bool Returns Task<TextOperationResult> A TextOperationResult object containing the result of the text embedding operation. GetEmbeddingsAsync(string) Retrieves the result of a long-running text embedding operation. public Task<TextOperationResult> GetEmbeddingsAsync(string operationId) Parameters operationId string The unique identifier of the long-running operation. Returns Task<TextOperationResult> A TextOperationResult object containing the result of the text embedding operation."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.Services.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core.Services Namespaces FoundationaLLM.SemanticKernel.Core.Services.Indexing Classes SemanticKernelService Processes requests targeting the Semantic Kernel agents. SemanticKernelTextEmbeddingService Generates text embeddings using the Semantic Kernel orchestrator."
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.Core.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.Core.html",
    "title": "Namespace FoundationaLLM.SemanticKernel.Core | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel.Core Namespaces FoundationaLLM.SemanticKernel.Core.Agents FoundationaLLM.SemanticKernel.Core.Exceptions FoundationaLLM.SemanticKernel.Core.Filters FoundationaLLM.SemanticKernel.Core.Interfaces FoundationaLLM.SemanticKernel.Core.Models.Configuration FoundationaLLM.SemanticKernel.Core.Plugins FoundationaLLM.SemanticKernel.Core.Services"
  },
  "api/dotnet/FoundationaLLM.SemanticKernel.html": {
    "href": "api/dotnet/FoundationaLLM.SemanticKernel.html",
    "title": "Namespace FoundationaLLM.SemanticKernel | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.SemanticKernel Namespaces FoundationaLLM.SemanticKernel.API FoundationaLLM.SemanticKernel.Core"
  },
  "api/dotnet/FoundationaLLM.State.API.Controllers.OperationsController.html": {
    "href": "api/dotnet/FoundationaLLM.State.API.Controllers.OperationsController.html",
    "title": "Class OperationsController | FoundationaLLM",
    "summary": "Class OperationsController Namespace FoundationaLLM.State.API.Controllers Assembly FoundationaLLM.State.API.dll Provides methods for managing long-running operations. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}/[controller]\")] public class OperationsController : ControllerBase Inheritance object ControllerBase OperationsController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors OperationsController(IStateService) Provides methods for managing long-running operations. public OperationsController(IStateService stateService) Parameters stateService IStateService Provides methods for managing state for long-running operations. Methods CreateLongRunningOperation(string, string, JsonElement) Inserts a long-running operation and creates a log entry. [HttpPost(\"{operationId}\")] public Task<IActionResult> CreateLongRunningOperation(string instanceId, string operationId, JsonElement body) Parameters instanceId string The FoundationaLLM instance ID. operationId string The ID of the long running operation. body JsonElement The request body, containing the identity of the user who triggered the long-running operation. Returns Task<IActionResult> CreateLongRunningOperationResult(string, string, JsonElement) Inserts the result of a long-running operation. [HttpPost(\"{operationId}/result\")] public Task<IActionResult> CreateLongRunningOperationResult(string instanceId, string operationId, JsonElement operationResult) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. operationResult JsonElement The operation result to insert. Returns Task<IActionResult> GetLongRunningOperation(string, string) Retrieves a long-running operation by its identifier. [HttpGet(\"{operationId}\")] public Task<IActionResult> GetLongRunningOperation(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. Returns Task<IActionResult> GetLongRunningOperationLogs(string, string) Retrieves all log entries for a long-running operation. [HttpGet(\"{operationId}/logs\")] public Task<IActionResult> GetLongRunningOperationLogs(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. Returns Task<IActionResult> GetLongRunningOperationResult(string, string) Retrieves the result of a long-running operation. [HttpGet(\"{operationId}/result\")] public Task<IActionResult> GetLongRunningOperationResult(string instanceId, string operationId) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. Returns Task<IActionResult> GetLongRunningOperations() Retrieves all long-running operations. [HttpGet] public Task<IActionResult> GetLongRunningOperations() Returns Task<IActionResult> UpdateLongRunningOperation(string, string, LongRunningOperation) Updates a long-running operation and creates a log entry. [HttpPut(\"{operationId}\")] public Task<IActionResult> UpdateLongRunningOperation(string instanceId, string operationId, LongRunningOperation operation) Parameters instanceId string The FoundationaLLM instance ID. operationId string The long-running operation identifier. operation LongRunningOperation The long-running operation entry to update. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.State.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.State.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.State.API.Controllers Assembly FoundationaLLM.State.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.State.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.State.API.Controllers.html",
    "title": "Namespace FoundationaLLM.State.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.State.API.Controllers Classes OperationsController Provides methods for managing long-running operations. StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.State.Exceptions.StateException.html": {
    "href": "api/dotnet/FoundationaLLM.State.Exceptions.StateException.html",
    "title": "Class StateException | FoundationaLLM",
    "summary": "Class StateException Namespace FoundationaLLM.State.Exceptions Assembly FoundationaLLM.State.dll Represents an error generated by the FoundationaLLM State service. public class StateException : HttpStatusCodeException, ISerializable Inheritance object Exception HttpStatusCodeException StateException Implements ISerializable Inherited Members HttpStatusCodeException.StatusCode Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StateException() Initializes a new instance of the StateException class with a default message. public StateException() StateException(string?, Exception?, int) Initializes a new instance of the StateException class with its message set to message. public StateException(string? message, Exception? innerException, int statusCode = 500) Parameters message string A string that describes the error. innerException Exception The exception that is the cause of the current exception. statusCode int The HTTP status code associated with the exception. StateException(string?, int) Initializes a new instance of the StateException class with its message set to message. public StateException(string? message, int statusCode = 500) Parameters message string A string that describes the error. statusCode int The HTTP status code associated with the exception."
  },
  "api/dotnet/FoundationaLLM.State.Exceptions.StateExceptionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.State.Exceptions.StateExceptionHandler.html",
    "title": "Class StateExceptionHandler | FoundationaLLM",
    "summary": "Class StateExceptionHandler Namespace FoundationaLLM.State.Exceptions Assembly FoundationaLLM.State.dll Implements a global exception handler for the State API. public class StateExceptionHandler : IExceptionHandler Inheritance object StateExceptionHandler Implements IExceptionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StateExceptionHandler(ILogger<StateExceptionHandler>) Implements a global exception handler for the State API. public StateExceptionHandler(ILogger<StateExceptionHandler> logger) Parameters logger ILogger<StateExceptionHandler> The ILogger used for logging. Methods TryHandleAsync(HttpContext, Exception, CancellationToken) Tries to handle the specified exception asynchronously within the ASP.NET Core pipeline. Implementations of this method can provide custom exception-handling logic for different scenarios. public ValueTask<bool> TryHandleAsync(HttpContext httpContext, Exception exception, CancellationToken cancellationToken) Parameters httpContext HttpContext The HttpContext for the request. exception Exception The unhandled exception. cancellationToken CancellationToken The cancellation token. Returns ValueTask<bool> A task that represents the asynchronous read operation. The value of its Result property contains the result of the handling operation. true if the exception was handled successfully; otherwise false."
  },
  "api/dotnet/FoundationaLLM.State.Exceptions.html": {
    "href": "api/dotnet/FoundationaLLM.State.Exceptions.html",
    "title": "Namespace FoundationaLLM.State.Exceptions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.State.Exceptions Classes StateException Represents an error generated by the FoundationaLLM State service. StateExceptionHandler Implements a global exception handler for the State API."
  },
  "api/dotnet/FoundationaLLM.State.Interfaces.ICosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Interfaces.ICosmosDbService.html",
    "title": "Interface ICosmosDbService | FoundationaLLM",
    "summary": "Interface ICosmosDbService Namespace FoundationaLLM.State.Interfaces Assembly FoundationaLLM.State.dll Provides methods for interacting with the Cosmos DB service. public interface ICosmosDbService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetLongRunningOperation(string, CancellationToken) Retrieves a long-running operation by its identifier. Task<LongRunningOperation> GetLongRunningOperation(string id, CancellationToken cancellationToken = default) Parameters id string The long-running operation identifier. cancellationToken CancellationToken Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string, CancellationToken) Retrieves all log entries for a long-running operation. Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string, CancellationToken) Retrieves the result of a long-running operation. Task<JsonDocument?> GetLongRunningOperationResult(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<JsonDocument> GetLongRunningOperations(CancellationToken) Retrieves all long-running operations. Task<List<LongRunningOperation>> GetLongRunningOperations(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation, CancellationToken) Inserts or updates a long-running operation and creates a log entry. Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation, CancellationToken cancellationToken = default) Parameters operation LongRunningOperation The long-running operation to insert or update. cancellationToken CancellationToken Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic, CancellationToken) Inserts or updates the result of a long-running operation. Task<object?> UpsertLongRunningOperationResult(dynamic operationResult, CancellationToken cancellationToken = default) Parameters operationResult dynamic The operation result to insert or update. cancellationToken CancellationToken Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Interfaces.IStateService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Interfaces.IStateService.html",
    "title": "Interface IStateService | FoundationaLLM",
    "summary": "Interface IStateService Namespace FoundationaLLM.State.Interfaces Assembly FoundationaLLM.State.dll Provides methods for managing state for long-running operations. public interface IStateService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods CreateLongRunningOperation(string, string) Creates a new long-running operation with default values. Task<LongRunningOperation> CreateLongRunningOperation(string operationId, string upn) Parameters operationId string The long-running operation identifier. upn string The User Principal Name (UPN) of the user who triggered the long-running operation. Returns Task<LongRunningOperation> GetLongRunningOperation(string) Retrieves a long-running operation by its identifier. Task<LongRunningOperation> GetLongRunningOperation(string id) Parameters id string The long-running operation identifier. Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string) Retrieves all log entries for a long-running operation. Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string) Retrieves the result of a long-running operation. Task<JsonDocument?> GetLongRunningOperationResult(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<JsonDocument> GetLongRunningOperations() Retrieves all long-running operations. Task<List<LongRunningOperation>> GetLongRunningOperations() Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation) Inserts or updates a long-running operation and creates a log entry. Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation) Parameters operation LongRunningOperation The long-running operation to insert or update. Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic) Inserts or updates the result of a long-running operation. Task<object?> UpsertLongRunningOperationResult(dynamic operationResult) Parameters operationResult dynamic The operation result to insert or update. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.State.Interfaces.html",
    "title": "Namespace FoundationaLLM.State.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.State.Interfaces Interfaces ICosmosDbService Provides methods for interacting with the Cosmos DB service. IStateService Provides methods for managing state for long-running operations."
  },
  "api/dotnet/FoundationaLLM.State.Models.Configuration.StateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.State.Models.Configuration.StateServiceSettings.html",
    "title": "Class StateServiceSettings | FoundationaLLM",
    "summary": "Class StateServiceSettings Namespace FoundationaLLM.State.Models.Configuration Assembly FoundationaLLM.State.dll Provides settings for the FoundationaLLM state service. public class StateServiceSettings Inheritance object StateServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>)"
  },
  "api/dotnet/FoundationaLLM.State.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.State.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.State.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.State.Models.Configuration Classes StateServiceSettings Provides settings for the FoundationaLLM state service."
  },
  "api/dotnet/FoundationaLLM.State.Services.CosmosDbService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Services.CosmosDbService.html",
    "title": "Class CosmosDbService | FoundationaLLM",
    "summary": "Class CosmosDbService Namespace FoundationaLLM.State.Services Assembly FoundationaLLM.State.dll Service to access Azure Cosmos DB for NoSQL. public class CosmosDbService : ICosmosDbService Inheritance object CosmosDbService Implements ICosmosDbService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosDbService(IOptions<AzureCosmosDBSettings>, CosmosClient, ILogger<CosmosDbService>) Initializes a new instance of the CosmosDbService class. public CosmosDbService(IOptions<AzureCosmosDBSettings> settings, CosmosClient client, ILogger<CosmosDbService> logger) Parameters settings IOptions<AzureCosmosDBSettings> The AzureCosmosDBSettings settings retrieved by the injected IOptions<TOptions>. client CosmosClient The Cosmos DB client. logger ILogger<CosmosDbService> The logging interface used to log under the CosmosDbService type name. Exceptions ArgumentException Thrown if any of the required settings are null or empty. Methods GetLongRunningOperation(string, CancellationToken) Retrieves a long-running operation by its identifier. public Task<LongRunningOperation> GetLongRunningOperation(string id, CancellationToken cancellationToken = default) Parameters id string The long-running operation identifier. cancellationToken CancellationToken Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string, CancellationToken) Retrieves all log entries for a long-running operation. public Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string, CancellationToken) Retrieves the result of a long-running operation. public Task<JsonDocument?> GetLongRunningOperationResult(string operationId, CancellationToken cancellationToken = default) Parameters operationId string The long-running operation identifier. cancellationToken CancellationToken Returns Task<JsonDocument> GetLongRunningOperations(CancellationToken) Retrieves all long-running operations. public Task<List<LongRunningOperation>> GetLongRunningOperations(CancellationToken cancellationToken = default) Parameters cancellationToken CancellationToken Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation, CancellationToken) Inserts or updates a long-running operation and creates a log entry. public Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation, CancellationToken cancellationToken = default) Parameters operation LongRunningOperation The long-running operation to insert or update. cancellationToken CancellationToken Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic, CancellationToken) Inserts or updates the result of a long-running operation. public Task<object?> UpsertLongRunningOperationResult(dynamic operationResult, CancellationToken cancellationToken = default) Parameters operationResult dynamic The operation result to insert or update. cancellationToken CancellationToken Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Services.StateService.html": {
    "href": "api/dotnet/FoundationaLLM.State.Services.StateService.html",
    "title": "Class StateService | FoundationaLLM",
    "summary": "Class StateService Namespace FoundationaLLM.State.Services Assembly FoundationaLLM.State.dll Provides methods for managing state for long-running operations. public class StateService : IStateService Inheritance object StateService Implements IStateService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StateService(IOptions<StateServiceSettings>, ICosmosDbService, ILogger<StateService>) Provides methods for managing state for long-running operations. public StateService(IOptions<StateServiceSettings> options, ICosmosDbService cosmosDbService, ILogger<StateService> logger) Parameters options IOptions<StateServiceSettings> Provides the options with the StateServiceSettings settings for configuration. cosmosDbService ICosmosDbService Provides methods to interact with Cosmos DB. logger ILogger<StateService> The ILogger used for logging. Methods CreateLongRunningOperation(string, string) Creates a new long-running operation with default values. public Task<LongRunningOperation> CreateLongRunningOperation(string operationId, string upn) Parameters operationId string The long-running operation identifier. upn string The User Principal Name (UPN) of the user who triggered the long-running operation. Returns Task<LongRunningOperation> GetLongRunningOperation(string) Retrieves a long-running operation by its identifier. public Task<LongRunningOperation> GetLongRunningOperation(string id) Parameters id string The long-running operation identifier. Returns Task<LongRunningOperation> GetLongRunningOperationLogEntries(string) Retrieves all log entries for a long-running operation. public Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationLogEntries(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<List<LongRunningOperationLogEntry>> GetLongRunningOperationResult(string) Retrieves the result of a long-running operation. public Task<JsonDocument?> GetLongRunningOperationResult(string operationId) Parameters operationId string The long-running operation identifier. Returns Task<JsonDocument> GetLongRunningOperations() Retrieves all long-running operations. public Task<List<LongRunningOperation>> GetLongRunningOperations() Returns Task<List<LongRunningOperation>> UpsertLongRunningOperation(LongRunningOperation) Inserts or updates a long-running operation and creates a log entry. public Task<LongRunningOperation> UpsertLongRunningOperation(LongRunningOperation operation) Parameters operation LongRunningOperation The long-running operation to insert or update. Returns Task<LongRunningOperation> UpsertLongRunningOperationResult(dynamic) Inserts or updates the result of a long-running operation. public Task<object?> UpsertLongRunningOperationResult(dynamic operationResult) Parameters operationResult dynamic The operation result to insert or update. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.State.Services.html": {
    "href": "api/dotnet/FoundationaLLM.State.Services.html",
    "title": "Namespace FoundationaLLM.State.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.State.Services Classes CosmosDbService Service to access Azure Cosmos DB for NoSQL. StateService Provides methods for managing state for long-running operations."
  },
  "api/dotnet/FoundationaLLM.State.html": {
    "href": "api/dotnet/FoundationaLLM.State.html",
    "title": "Namespace FoundationaLLM.State | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.State Namespaces FoundationaLLM.State.API.Controllers FoundationaLLM.State.Exceptions FoundationaLLM.State.Interfaces FoundationaLLM.State.Models.Configuration FoundationaLLM.State.Services"
  },
  "api/dotnet/FoundationaLLM.ValidatedEnvironment.html": {
    "href": "api/dotnet/FoundationaLLM.ValidatedEnvironment.html",
    "title": "Class ValidatedEnvironment | FoundationaLLM",
    "summary": "Class ValidatedEnvironment Namespace FoundationaLLM Assembly FoundationaLLM.Common.dll Provides methods for working with the environment. public static class ValidatedEnvironment Inheritance object ValidatedEnvironment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties MachineName Gets the name of the machine and falls back to a random GUID if the machine name is not available. public static string MachineName { get; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vector.ResourceProviders.VectorResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Vector.ResourceProviders.VectorResourceProviderService.html",
    "title": "Class VectorResourceProviderService | FoundationaLLM",
    "summary": "Class VectorResourceProviderService Namespace FoundationaLLM.Vector.ResourceProviders Assembly FoundationaLLM.Vector.dll Implements the FoundationaLLM.Vector resource provider. public class VectorResourceProviderService : ResourceProviderServiceBase<VectorReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<VectorReference> VectorResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<VectorReference>._resourceReferenceStore ResourceProviderServiceBase<VectorReference>._serviceProvider ResourceProviderServiceBase<VectorReference>._authorizationServiceClient ResourceProviderServiceBase<VectorReference>._storageService ResourceProviderServiceBase<VectorReference>._eventService ResourceProviderServiceBase<VectorReference>._resourceValidatorFactory ResourceProviderServiceBase<VectorReference>._validator ResourceProviderServiceBase<VectorReference>._logger ResourceProviderServiceBase<VectorReference>._instanceSettings ResourceProviderServiceBase<VectorReference>._storageContainerName ResourceProviderServiceBase<VectorReference>._serializerSettings ResourceProviderServiceBase<VectorReference>.Name ResourceProviderServiceBase<VectorReference>.IsInitialized ResourceProviderServiceBase<VectorReference>.InitializationTask ResourceProviderServiceBase<VectorReference>.AllowedResourceTypes ResourceProviderServiceBase<VectorReference>.StorageAccountName ResourceProviderServiceBase<VectorReference>.StorageContainerName ResourceProviderServiceBase<VectorReference>.Initialize() ResourceProviderServiceBase<VectorReference>.WaitForInitialization() ResourceProviderServiceBase<VectorReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<VectorReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<VectorReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<VectorReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<VectorReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<VectorReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<VectorReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<VectorReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<VectorReference>.HandleCacheResetCommand() ResourceProviderServiceBase<VectorReference>.HandleEventsInternal(EventTypeEventArgs) ResourceProviderServiceBase<VectorReference>.GetResourceProviderState() ResourceProviderServiceBase<VectorReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<VectorReference, bool, Task<T>>) ResourceProviderServiceBase<VectorReference>.LoadResource<T>(VectorReference) ResourceProviderServiceBase<VectorReference>.LoadResource<T>(string) ResourceProviderServiceBase<VectorReference>.CreateResource<T>(VectorReference, T) ResourceProviderServiceBase<VectorReference>.CreateResource(VectorReference, Stream, string) ResourceProviderServiceBase<VectorReference>.CreateResources<T1, T2>(VectorReference, T1, VectorReference, T2) ResourceProviderServiceBase<VectorReference>.SaveResource<T>(VectorReference, T) ResourceProviderServiceBase<VectorReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<VectorReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<VectorReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<VectorReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<VectorReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<VectorReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<VectorReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<VectorReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<VectorReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<VectorReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<VectorReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<VectorReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<VectorReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Vector resource provider. public VectorResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The factory responsible for creating loggers. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object>"
  },
  "api/dotnet/FoundationaLLM.Vector.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Vector.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Vector.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vector.ResourceProviders Classes VectorResourceProviderService Implements the FoundationaLLM.Vector resource provider."
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization API service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization API service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.VectorizationRequestController.html",
    "title": "Class VectorizationRequestController | FoundationaLLM",
    "summary": "Class VectorizationRequestController Namespace FoundationaLLM.Vectorization.API.Controllers Assembly FoundationaLLM.Vectorization.API.dll Methods for managing vectorization requests. [ApiController] [APIKeyAuthentication] [Route(\"instances/{instanceId}\")] public class VectorizationRequestController : ControllerBase Inheritance object ControllerBase VectorizationRequestController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Constructor for the vectorization request controller. Constructors VectorizationRequestController(IVectorizationRequestProcessor) Methods for managing vectorization requests. public VectorizationRequestController(IVectorizationRequestProcessor vectorizationRequestProcessor) Parameters vectorizationRequestProcessor IVectorizationRequestProcessor The vectorization request processor. Remarks Constructor for the vectorization request controller. Methods ProcessRequest(string, VectorizationRequest) Handles an incoming vectorization request by starting a new vectorization pipeline. [HttpPost(\"vectorization-requests\")] public Task<IActionResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest) Parameters instanceId string The FoundationaLLM instance id. vectorizationRequest VectorizationRequest The VectorizationRequest that must be processed. Returns Task<IActionResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.API.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.API.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.API.Controllers Classes StatusController Provides methods for checking the status of the service. VectorizationRequestController Methods for managing vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Client.VectorizationServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Client.VectorizationServiceClient.html",
    "title": "Class VectorizationServiceClient | FoundationaLLM",
    "summary": "Class VectorizationServiceClient Namespace FoundationaLLM.Vectorization.Client Assembly FoundationaLLM.Vectorization.dll Provides method calls to the Vectorization API service. public class VectorizationServiceClient : IVectorizationServiceClient Inheritance object VectorizationServiceClient Implements IVectorizationServiceClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationServiceClient(IHttpClientFactoryService, ILogger<VectorizationServiceClient>) Creates a new instance of the Vectorization API client. public VectorizationServiceClient(IHttpClientFactoryService httpClientFactoryService, ILogger<VectorizationServiceClient> logger) Parameters httpClientFactoryService IHttpClientFactoryService The IHttpClientFactoryService used to create the HTTP client. logger ILogger<VectorizationServiceClient> The ILogger used for logging. Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult> The result of the request including the resource object id, success or failure plus any error messages."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Client.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Client.html",
    "title": "Namespace FoundationaLLM.Vectorization.Client | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Client Classes VectorizationServiceClient Provides method calls to the Vectorization API service."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.DOCXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.DOCXTextExtractor.html",
    "title": "Class DOCXTextExtractor | FoundationaLLM",
    "summary": "Class DOCXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.Engine.dll Extracts text from DOCX files. public class DOCXTextExtractor Inheritance object DOCXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a DOCX document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the DOCX document. Returns string The text content of the DOCX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.PPTXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.PPTXTextExtractor.html",
    "title": "Class PPTXTextExtractor | FoundationaLLM",
    "summary": "Class PPTXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.Engine.dll Extracts text from PPTX files. public class PPTXTextExtractor Inheritance object PPTXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a PPTX document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PPTX document. Returns string The text content of the PPTX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.XLSXTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.XLSXTextExtractor.html",
    "title": "Class XLSXTextExtractor | FoundationaLLM",
    "summary": "Class XLSXTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.Office Assembly FoundationaLLM.Vectorization.Engine.dll Extracts text from XLSX files. public class XLSXTextExtractor Inheritance object XLSXTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors XLSXTextExtractor(bool, bool, bool, string?, string?, string?, string?, string?) Constructor for XLSXTextExtractor. public XLSXTextExtractor(bool withWorksheetNumber = true, bool withEndOfWorksheetMarker = false, bool withQuotes = true, string? worksheetNumberTemplate = null, string? endOfWorksheetMarkerTemplate = null, string? rowPrefix = null, string? columnSeparator = null, string? rowSuffix = null) Parameters withWorksheetNumber bool withEndOfWorksheetMarker bool withQuotes bool worksheetNumberTemplate string endOfWorksheetMarkerTemplate string rowPrefix string columnSeparator string rowSuffix string Methods GetText(BinaryData) Extracts the text content from a PPTX document. public string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PPTX document. Returns string The text content of the PPTX document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.Office.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats.Office | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.DataFormats.Office Classes DOCXTextExtractor Extracts text from DOCX files. PPTXTextExtractor Extracts text from PPTX files. XLSXTextExtractor Extracts text from XLSX files."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.PDFTextExtractor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.PDFTextExtractor.html",
    "title": "Class PDFTextExtractor | FoundationaLLM",
    "summary": "Class PDFTextExtractor Namespace FoundationaLLM.Vectorization.DataFormats.PDF Assembly FoundationaLLM.Vectorization.Engine.dll Extracts text from PDF files. public class PDFTextExtractor Inheritance object PDFTextExtractor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetText(BinaryData) Extracts the text content from a PDF document. public static string GetText(BinaryData binaryContent) Parameters binaryContent BinaryData The binary content of the PDF document. Returns string The text content of the PDF document."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.PDF.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats.PDF | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.DataFormats.PDF Classes PDFTextExtractor Extracts text from PDF files."
  },
  "api/dotnet/FoundationaLLM.Vectorization.DataFormats.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.DataFormats.html",
    "title": "Namespace FoundationaLLM.Vectorization.DataFormats | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.DataFormats Namespaces FoundationaLLM.Vectorization.DataFormats.Office FoundationaLLM.Vectorization.DataFormats.PDF"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationRequestExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationRequestExtensions.html",
    "title": "Class VectorizationRequestExtensions | FoundationaLLM",
    "summary": "Class VectorizationRequestExtensions Namespace FoundationaLLM.Vectorization.Extensions Assembly FoundationaLLM.Vectorization.Engine.dll Extension methods for VectorizationRequest. public static class VectorizationRequestExtensions Inheritance object VectorizationRequestExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ProcessVectorizationRequest(VectorizationRequest, VectorizationResourceProviderService) Issues the \"process\" action on the vectorization request resource using the vectorization resource provider. public static Task<VectorizationResult> ProcessVectorizationRequest(this VectorizationRequest request, VectorizationResourceProviderService vectorizationResourceProvider) Parameters request VectorizationRequest The vectorization request vectorizationResourceProvider VectorizationResourceProviderService The vectorization resource provider Returns Task<VectorizationResult> UpdateVectorizationRequestResource(VectorizationRequest, string, IResourceProviderService, UnifiedUserIdentity) Updates the vectorization request resource using the vectorization resource provider. Also updates the vectorization pipeline state if request is part of a pipeline. public static Task UpdateVectorizationRequestResource(this VectorizationRequest request, string instanceId, IResourceProviderService vectorizationResourceProvider, UnifiedUserIdentity userIdentity) Parameters request VectorizationRequest The vectorization request instanceId string The FoundationaLLM instance identifier. vectorizationResourceProvider IResourceProviderService The vectorization resource provider userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationResourceProviderServiceExtensions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Extensions.VectorizationResourceProviderServiceExtensions.html",
    "title": "Class VectorizationResourceProviderServiceExtensions | FoundationaLLM",
    "summary": "Class VectorizationResourceProviderServiceExtensions Namespace FoundationaLLM.Vectorization.Extensions Assembly FoundationaLLM.Vectorization.Engine.dll Extension methods for VectorizationResourceProviderService. public static class VectorizationResourceProviderServiceExtensions Inheritance object VectorizationResourceProviderServiceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetActivePipelines(VectorizationResourceProviderService) Retrieves all active vectorization pipelines. public static Task<List<VectorizationPipeline>> GetActivePipelines(this VectorizationResourceProviderService vectorizationResourceProvider) Parameters vectorizationResourceProvider VectorizationResourceProviderService An instance of the vectorization resource provider service Returns Task<List<VectorizationPipeline>> List of active pipelines. GetVectorizationRequestResource(VectorizationResourceProviderService, string, UnifiedUserIdentity) Retrieves the vectorization request resource with the specified name. public static Task<VectorizationRequest> GetVectorizationRequestResource(this VectorizationResourceProviderService vectorizationResourceProvider, string requestName, UnifiedUserIdentity userIdentity) Parameters vectorizationResourceProvider VectorizationResourceProviderService An instance of the vectorization resource provider. requestName string The name of the request to retrieve. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<VectorizationRequest> The vectorization request. TogglePipelineActivation(VectorizationResourceProviderService, string, bool, UnifiedUserIdentity) Sets the specified vectorization pipeline to active or inactive. public static Task TogglePipelineActivation(this VectorizationResourceProviderService vectorizationResourceProvider, string pipelineObjectId, bool activate, UnifiedUserIdentity userIdentity) Parameters vectorizationResourceProvider VectorizationResourceProviderService An instance of the vectorization resource provider. pipelineObjectId string The object id of the pipeline to deactivate activate bool true if the pipeline should be activated, false if it is to be deactivated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Extensions.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Extensions.html",
    "title": "Namespace FoundationaLLM.Vectorization.Extensions | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Extensions Classes VectorizationRequestExtensions Extension methods for VectorizationRequest. VectorizationResourceProviderServiceExtensions Extension methods for VectorizationResourceProviderService."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.EmbeddingHandler.html",
    "title": "Class EmbeddingHandler | FoundationaLLM",
    "summary": "Class EmbeddingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.Engine.dll Handles the embedding stage of the vectorization pipeline. public class EmbeddingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase EmbeddingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors EmbeddingHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the embedding stage of the vectorization pipeline. public EmbeddingHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.ExtractionHandler.html",
    "title": "Class ExtractionHandler | FoundationaLLM",
    "summary": "Class ExtractionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.Engine.dll Handles the extraction stage of the vectorization pipeline. public class ExtractionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase ExtractionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ExtractionHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the extraction stage of the vectorization pipeline. public ExtractionHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.IndexingHandler.html",
    "title": "Class IndexingHandler | FoundationaLLM",
    "summary": "Class IndexingHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.Engine.dll Handles the indexing stage of the vectorization pipeline. public class IndexingHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase IndexingHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the indexing stage of the vectorization pipeline. public IndexingHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.PartitionHandler.html",
    "title": "Class PartitionHandler | FoundationaLLM",
    "summary": "Class PartitionHandler Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.Engine.dll Handles the partitioning stage of the vectorization pipeline. public class PartitionHandler : VectorizationStepHandlerBase, IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase PartitionHandler Implements IVectorizationStepHandler Inherited Members VectorizationStepHandlerBase._stepId VectorizationStepHandlerBase._messageId VectorizationStepHandlerBase._parameters VectorizationStepHandlerBase._stepsConfiguration VectorizationStepHandlerBase._stateService VectorizationStepHandlerBase._serviceProvider VectorizationStepHandlerBase._logger VectorizationStepHandlerBase.StepId VectorizationStepHandlerBase.Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PartitionHandler(string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Handles the partitioning stage of the vectorization pipeline. public PartitionHandler(string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected override Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerBase.html",
    "title": "Class VectorizationStepHandlerBase | FoundationaLLM",
    "summary": "Class VectorizationStepHandlerBase Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.Engine.dll Implements basic vectorization step handler functionality. public class VectorizationStepHandlerBase : IVectorizationStepHandler Inheritance object VectorizationStepHandlerBase Implements IVectorizationStepHandler Derived EmbeddingHandler ExtractionHandler IndexingHandler PartitionHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationStepHandlerBase(string, string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Implements basic vectorization step handler functionality. public VectorizationStepHandlerBase(string stepId, string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters stepId string The identifier of the vectorization step. messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The dictionary of named parameters used to configure the handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Fields _logger The logger used for logging. protected readonly ILogger<VectorizationStepHandlerBase> _logger Field Value ILogger<VectorizationStepHandlerBase> _messageId The identifier of underlying message retrieved from the request source. protected readonly string _messageId Field Value string _parameters The dictionary of named parameters used to configure the handler. protected readonly Dictionary<string, string> _parameters Field Value Dictionary<string, string> _serviceProvider The service provider implemented by the dependency injection container. protected readonly IServiceProvider _serviceProvider Field Value IServiceProvider _stateService The vectorization state service. protected readonly IVectorizationStateService _stateService Field Value IVectorizationStateService _stepId The identifier of the vectorization step. protected readonly string _stepId Field Value string _stepsConfiguration The app configuration section containing the configuration for vectorization pipeline steps. protected readonly IConfigurationSection? _stepsConfiguration Field Value IConfigurationSection Properties StepId The identifier of the vectorization pipeline step. public string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) Invokes the handler. public Task<bool> Invoke(VectorizationRequest request, VectorizationState state, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task<bool> True if the vectorization step request was handled successfully. ProcessRequest(VectorizationRequest, VectorizationState, IConfigurationSection?, UnifiedUserIdentity, CancellationToken) Processes a vectorization request. The vectorization state will be updated with the result(s) of the processing. protected virtual Task<bool> ProcessRequest(VectorizationRequest request, VectorizationState state, IConfigurationSection? stepConfiguration, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest to be processed. state VectorizationState The VectorizationState associated with the vectorization request. stepConfiguration IConfigurationSection The IConfigurationSection providing the configuration required by the step. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken that signals stopping the processing. Returns Task<bool>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.VectorizationStepHandlerFactory.html",
    "title": "Class VectorizationStepHandlerFactory | FoundationaLLM",
    "summary": "Class VectorizationStepHandlerFactory Namespace FoundationaLLM.Vectorization.Handlers Assembly FoundationaLLM.Vectorization.Engine.dll Implements a factory that creates vectorization step handlers. public class VectorizationStepHandlerFactory Inheritance object VectorizationStepHandlerFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Create(string, string, Dictionary<string, string>, IConfigurationSection?, IVectorizationStateService, IServiceProvider, ILoggerFactory) Creates a vectorization step handler capable of handling a specified vectorization pipeline step. public static IVectorizationStepHandler Create(string step, string messageId, Dictionary<string, string> parameters, IConfigurationSection? stepsConfiguration, IVectorizationStateService stateService, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters step string The identifier of the vectorization pipeline step for which the handler is created. messageId string The identifier of underlying message retrieved from the request source. parameters Dictionary<string, string> The parameters used to initialize the vectorization step handler. stepsConfiguration IConfigurationSection The app configuration section containing the configuration for vectorization pipeline steps. stateService IVectorizationStateService The IVectorizationStateService that manages vectorization state. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers. Returns IVectorizationStepHandler A class implementing IVectorizationStepHandler."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Handlers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Handlers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Handlers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Handlers Classes EmbeddingHandler Handles the embedding stage of the vectorization pipeline. ExtractionHandler Handles the extraction stage of the vectorization pipeline. IndexingHandler Handles the indexing stage of the vectorization pipeline. PartitionHandler Handles the partitioning stage of the vectorization pipeline. VectorizationStepHandlerBase Implements basic vectorization step handler functionality. VectorizationStepHandlerFactory Implements a factory that creates vectorization step handlers."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IContentSourceService.html",
    "title": "Interface IContentSourceService | FoundationaLLM",
    "summary": "Interface IContentSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Provides access to items in a data source. public interface IContentSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IPipelineExecutionService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IPipelineExecutionService.html",
    "title": "Interface IPipelineExecutionService | FoundationaLLM",
    "summary": "Interface IPipelineExecutionService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Provides services to interact with the pipeline execution service. public interface IPipelineExecutionService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExecuteAsync(CancellationToken) Executes the pipeline execution service until cancellation is signaled. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the pipeline execution service, allowing it to cleanup. Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestManagerService.html",
    "title": "Interface IRequestManagerService | FoundationaLLM",
    "summary": "Interface IRequestManagerService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Manages vectorization requests. public interface IRequestManagerService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Run() Runs the vectorization requests processing cycle. Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourceService.html",
    "title": "Interface IRequestSourceService | FoundationaLLM",
    "summary": "Interface IRequestSourceService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Manages vectorization requests. public interface IRequestSourceService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties SourceName The name of the vectorization request source. string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. Task DeleteRequest(string messageId, string popReceipt) Parameters messageId string The underlying message identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. Task<IEnumerable<VectorizationDequeuedRequest>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<VectorizationDequeuedRequest>> A collection of VectorizationDequeuedRequest items. SubmitRequest(string) Submits a new vectorization request to the source. Task<string> SubmitRequest(string requestName) Parameters requestName string The name (unique identifier) of the vectorization request. Returns Task<string> The underlying message identifier of the request being submitted. TryUpdateRequest(string, string, TimeSpan) Tries to update the visibility timeout of a request. Task<bool> TryUpdateRequest(string messageId, string popReceipt, TimeSpan visibilityTimeout) Parameters messageId string The underlying message identifier of the request being updated. popReceipt string The value requiored to update the underlying message. visibilityTimeout TimeSpan The new visibility timeout of the request. Returns Task<bool> true if the update is successfull, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IRequestSourcesCache.html",
    "title": "Interface IRequestSourcesCache | FoundationaLLM",
    "summary": "Interface IRequestSourcesCache Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Defines a cache of IRequestSourceService objects. public interface IRequestSourcesCache Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationRequestProcessor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationRequestProcessor.html",
    "title": "Interface IVectorizationRequestProcessor | FoundationaLLM",
    "summary": "Interface IVectorizationRequestProcessor Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Interface for the vectorization request processor. public interface IVectorizationRequestProcessor Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationService.html",
    "title": "Interface IVectorizationService | FoundationaLLM",
    "summary": "Interface IVectorizationService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Interface for the vectorization service. public interface IVectorizationService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceClient.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceClient.html",
    "title": "Interface IVectorizationServiceClient | FoundationaLLM",
    "summary": "Interface IVectorizationServiceClient Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.dll Defines the interface for the Vectorization API client. public interface IVectorizationServiceClient Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult> The result of the request including the resource object id, success or failure plus any error messages."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceFactory-1.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationServiceFactory-1.html",
    "title": "Interface IVectorizationServiceFactory<T> | FoundationaLLM",
    "summary": "Interface IVectorizationServiceFactory<T> Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Creates typed service instances. public interface IVectorizationServiceFactory<T> Type Parameters T Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. Task<T> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<T> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). Task<(T Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(T Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStateService.html",
    "title": "Interface IVectorizationStateService | FoundationaLLM",
    "summary": "Interface IVectorizationStateService Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Provides persistence services for vectorization pipeline states. public interface IVectorizationStateService Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadState(VectorizationRequest) Reads the state associated with a vectorization request. Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SavePipelineState(VectorizationPipelineExecution, VectorizationPipelineExecutionDetail?) Saves the state of a vectorization pipeline execution. Task SavePipelineState(VectorizationPipelineExecution pipelineExecution, VectorizationPipelineExecutionDetail? pipelineExecutionDetail) Parameters pipelineExecution VectorizationPipelineExecution The main state of the pipeline execution. pipelineExecutionDetail VectorizationPipelineExecutionDetail The details associated with the main state of the pipeline execution. Returns Task SaveState(VectorizationState) Saves a specified vectorization state. Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task UpdatePipelineStateFromVectorizationRequest(VectorizationRequest) Updates the state of a vectorization pipeline execution based on the state of the specified vectorization request. Task UpdatePipelineStateFromVectorizationRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The vectorization request based on which the pipeline execution state is being updated. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.IVectorizationStepHandler.html",
    "title": "Interface IVectorizationStepHandler | FoundationaLLM",
    "summary": "Interface IVectorizationStepHandler Namespace FoundationaLLM.Vectorization.Interfaces Assembly FoundationaLLM.Vectorization.Engine.dll Handles requests associated with a specific vectorization pipeline step. public interface IVectorizationStepHandler Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties StepId The identifier of the vectorization pipeline step. string StepId { get; } Property Value string Methods Invoke(VectorizationRequest, VectorizationState, UnifiedUserIdentity, CancellationToken) Invokes the handler. Task<bool> Invoke(VectorizationRequest request, VectorizationState state, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters request VectorizationRequest The VectorizationRequest for which the step should be handled. state VectorizationState The VectorizationState holding the state associated with the vectorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The CancellationToken to monitor for cancellation requests. Returns Task<bool> True if the vectorization step request was handled successfully."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Interfaces.html",
    "title": "Namespace FoundationaLLM.Vectorization.Interfaces | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Interfaces Interfaces IContentSourceService Provides access to items in a data source. IPipelineExecutionService Provides services to interact with the pipeline execution service. IRequestManagerService Manages vectorization requests. IRequestSourceService Manages vectorization requests. IRequestSourcesCache Defines a cache of IRequestSourceService objects. IVectorizationRequestProcessor Interface for the vectorization request processor. IVectorizationService Interface for the vectorization service. IVectorizationServiceClient Defines the interface for the Vectorization API client. IVectorizationServiceFactory<T> Creates typed service instances. IVectorizationStateService Provides persistence services for vectorization pipeline states. IVectorizationStepHandler Handles requests associated with a specific vectorization pipeline step."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.AzureSQLDatabaseContentSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.AzureSQLDatabaseContentSourceServiceSettings.html",
    "title": "Class AzureSQLDatabaseContentSourceServiceSettings | FoundationaLLM",
    "summary": "Class AzureSQLDatabaseContentSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.Engine.dll Provides configuration settings to initialize a Sql Database content source service. public class AzureSQLDatabaseContentSourceServiceSettings Inheritance object AzureSQLDatabaseContentSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string used for authentication. public string? ConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestManagerServiceSettings.html",
    "title": "Class RequestManagerServiceSettings | FoundationaLLM",
    "summary": "Class RequestManagerServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.Engine.dll Provides configuration settings to initialize a request manager instance. public record RequestManagerServiceSettings : IEquatable<RequestManagerServiceSettings> Inheritance object RequestManagerServiceSettings Implements IEquatable<RequestManagerServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties MaxHandlerInstances The maximum number of handler instances allowed to run in parallel. [JsonPropertyOrder(1)] public int MaxHandlerInstances { get; set; } Property Value int QueueMaxNumberOfRetries The maximum number of retries to process a request in case of a failure. [JsonPropertyOrder(5)] public int QueueMaxNumberOfRetries { get; set; } Property Value int QueuePollingInterval The interval in seconds to poll the queue for new requests, when the request queue is empty. [JsonPropertyOrder(4)] public int QueuePollingInterval { get; set; } Property Value int QueueProcessingPace The wait time after processing a request from the queue in seconds. [JsonPropertyOrder(3)] public int QueueProcessingPace { get; set; } Property Value int RequestSourceName The name of the request source that provides the requests processed by the request manager. [JsonPropertyOrder(0)] public required string RequestSourceName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.RequestSourceServiceSettings.html",
    "title": "Class RequestSourceServiceSettings | FoundationaLLM",
    "summary": "Class RequestSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.Engine.dll Provides configuration settings to initialize a request source service. public class RequestSourceServiceSettings Inheritance object RequestSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties AccountName The name of the storage account. public required string AccountName { get; set; } Property Value string Name The name of the request source. public required string Name { get; set; } Property Value string VisibilityTimeoutSeconds The timeout in seconds available for the processing of each request provided by the request source. If a request is not processed within the timeout window it will become visible again to request managers and might be picked up for processing again. public required int VisibilityTimeoutSeconds { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.SharePointOnlineContentSourceServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.SharePointOnlineContentSourceServiceSettings.html",
    "title": "Class SharePointOnlineContentSourceServiceSettings | FoundationaLLM",
    "summary": "Class SharePointOnlineContentSourceServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.Engine.dll Provides configuration settings to initialize a SharePoint Online content source service. public class SharePointOnlineContentSourceServiceSettings Inheritance object SharePointOnlineContentSourceServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CertificateName The name of the X.509 certificate stored in Azure KeyVault. public string? CertificateName { get; set; } Property Value string ClientId The application (client) identifier of the Azure app registration. public string? ClientId { get; set; } Property Value string KeyVaultURL The Azure KeyVault URL in which the X.509 certificate is stored. public string? KeyVaultURL { get; set; } Property Value string TenantId The Azure tenant identifier where the app was registered. public string? TenantId { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationStateServiceSettings.html",
    "title": "Class VectorizationStateServiceSettings | FoundationaLLM",
    "summary": "Class VectorizationStateServiceSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.Engine.dll Provides configuration settings to initialize a vectorization state service. public class VectorizationStateServiceSettings Inheritance object VectorizationStateServiceSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties Storage The settings for connecting to the underlying blob storage. public required BlobStorageServiceSettings Storage { get; set; } Property Value BlobStorageServiceSettings StorageContainerName The name of the container where the underlying persistence service stores vectorization state. public required string StorageContainerName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.VectorizationWorkerSettings.html",
    "title": "Class VectorizationWorkerSettings | FoundationaLLM",
    "summary": "Class VectorizationWorkerSettings Namespace FoundationaLLM.Vectorization.Models.Configuration Assembly FoundationaLLM.Vectorization.Engine.dll Settings for the vectorization worker. public class VectorizationWorkerSettings Inheritance object VectorizationWorkerSettings Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties QueuingEngine The type of queuing engine used to dispatch vectorization requests. [JsonPropertyOrder(2)] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationQueuing QueuingEngine { get; set; } Property Value VectorizationQueuing RequestManagers Settings for the request managers. [JsonPropertyOrder(0)] public List<RequestManagerServiceSettings>? RequestManagers { get; set; } Property Value List<RequestManagerServiceSettings> RequestSources Settings for the request sources. [JsonPropertyOrder(1)] public List<RequestSourceServiceSettings>? RequestSources { get; set; } Property Value List<RequestSourceServiceSettings>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Configuration.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models.Configuration | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Models.Configuration Classes AzureSQLDatabaseContentSourceServiceSettings Provides configuration settings to initialize a Sql Database content source service. RequestManagerServiceSettings Provides configuration settings to initialize a request manager instance. RequestSourceServiceSettings Provides configuration settings to initialize a request source service. SharePointOnlineContentSourceServiceSettings Provides configuration settings to initialize a SharePoint Online content source service. VectorizationStateServiceSettings Provides configuration settings to initialize a vectorization state service. VectorizationWorkerSettings Settings for the vectorization worker."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ResourceStore-1.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.ResourceStore-1.html",
    "title": "Class ResourceStore<T> | FoundationaLLM",
    "summary": "Class ResourceStore<T> Namespace FoundationaLLM.Vectorization.Models.Resources Assembly FoundationaLLM.Vectorization.dll Models the content of a resource store managed by the FoundationaLLM.Vectorization resource provider. public class ResourceStore<T> where T : ResourceBase Type Parameters T Inheritance object ResourceStore<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DefaultResourceName The name of the default resource (if any). public string? DefaultResourceName { get; set; } Property Value string Resources The list of all resources that are registered in the resource store. public required List<T> Resources { get; set; } Property Value List<T> Methods FromDictionary(Dictionary<string, T>) Creates a new resource store from a dictionary. public static ResourceStore<T> FromDictionary(Dictionary<string, T> dictionary) Parameters dictionary Dictionary<string, T> The dictionary containing the resources. Returns ResourceStore<T> The newly created resource store. ToDictionary() Creates a dictionary of resources from the resource store. public Dictionary<string, T> ToDictionary() Returns Dictionary<string, T> The newly created dictionary."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.Resources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models.Resources | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Models.Resources Classes ResourceStore<T> Models the content of a resource store managed by the FoundationaLLM.Vectorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifact.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifact.html",
    "title": "Class VectorizationArtifact | FoundationaLLM",
    "summary": "Class VectorizationArtifact Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Represents a vectorization artifact. public class VectorizationArtifact Inheritance object VectorizationArtifact Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties CanonicalId The canonical identifier of the vectorization artifact. [JsonPropertyOrder(2)] [JsonPropertyName(\"canonical_id\")] public string? CanonicalId { get; set; } Property Value string Content The content of the artifact. [JsonIgnore] public string? Content { get; set; } Property Value string ContentHash The string hash of the vectorization artifact's content. [JsonPropertyOrder(5)] [JsonPropertyName(\"content_hash\")] public string? ContentHash { get; set; } Property Value string IsDirty Indicates the need to persist the content of the artifact. [JsonIgnore] public bool IsDirty { get; set; } Property Value bool Position The position of the vectorization artifact. This is relevant only for artifact types that can have multiple parts. [JsonPropertyOrder(3)] [JsonPropertyName(\"position\")] public int Position { get; set; } Property Value int Size The size of the vectorization artifact. The unit of measure is determined by the artifact type. [JsonPropertyOrder(4)] [JsonPropertyName(\"size\")] public int Size { get; set; } Property Value int Type The type of the vectorization artifact. [JsonPropertyOrder(1)] [JsonPropertyName(\"type\")] [JsonConverter(typeof(JsonStringEnumConverter))] public VectorizationArtifactType Type { get; set; } Property Value VectorizationArtifactType"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifactType.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationArtifactType.html",
    "title": "Enum VectorizationArtifactType | FoundationaLLM",
    "summary": "Enum VectorizationArtifactType Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Deifines types of vectorization artifacts. public enum VectorizationArtifactType Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields ExtractedText = 0 Text extracted from source content. TextEmbeddingVector = 2 Vector embedding derived from a text partition. TextPartition = 1 Text partition suitable for embedding."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationDequeuedRequest.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationDequeuedRequest.html",
    "title": "Class VectorizationDequeuedRequest | FoundationaLLM",
    "summary": "Class VectorizationDequeuedRequest Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Represents a vectorization request that has been dequeued from a request source. public class VectorizationDequeuedRequest Inheritance object VectorizationDequeuedRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DequeueCount The number of times the message has been dequeued. public long DequeueCount { get; set; } Property Value long MessageId The queue message identifier. public required string MessageId { get; set; } Property Value string PopReceipt The queue pop receipt. public required string PopReceipt { get; set; } Property Value string RequestName The vectorization request. public required string RequestName { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationIndexReference.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationIndexReference.html",
    "title": "Class VectorizationIndexReference | FoundationaLLM",
    "summary": "Class VectorizationIndexReference Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Represents a reference to an index entry that contains vectorized content. public class VectorizationIndexReference Inheritance object VectorizationIndexReference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties IndexEntryId The unique identifier of the index entry reference. [JsonPropertyOrder(1)] [JsonPropertyName(\"index_entry_id\")] public required string IndexEntryId { get; set; } Property Value string Position The position of the index entry reference. [JsonPropertyOrder(2)] [JsonPropertyName(\"position\")] public required int Position { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationLogEntry.html",
    "title": "Class VectorizationLogEntry | FoundationaLLM",
    "summary": "Class VectorizationLogEntry Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Represents a log entry that contains information about vectorization operations. public class VectorizationLogEntry Inheritance object VectorizationLogEntry Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationLogEntry(string, string, string, string) Represents a log entry that contains information about vectorization operations. public VectorizationLogEntry(string requestId, string messageId, string source, string text) Parameters requestId string messageId string source string text string Properties MessageId The identifier of underlying message retrieved from the request source. [JsonPropertyOrder(1)] [JsonPropertyName(\"mid\")] public string MessageId { get; set; } Property Value string RequestId The unique identifier of the vectorization request. [JsonPropertyOrder(0)] [JsonPropertyName(\"rid\")] public string RequestId { get; set; } Property Value string Source The source of the log entry. This is usually the name of the vectorization step handler. [JsonPropertyOrder(3)] [JsonPropertyName(\"src\")] public string Source { get; set; } Property Value string Text The content of the log entry. [JsonPropertyOrder(4)] [JsonPropertyName(\"txt\")] public string Text { get; set; } Property Value string Time The time at which the log entry was created. [JsonPropertyOrder(2)] [JsonPropertyName(\"t\")] public DateTimeOffset Time { get; set; } Property Value DateTimeOffset"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationQueuing.html",
    "title": "Enum VectorizationQueuing | FoundationaLLM",
    "summary": "Enum VectorizationQueuing Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Types of queuing engines used to dispatch vectorization requests. public enum VectorizationQueuing Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields AzureStorageQueue = 1 Azure storage account queuing. None = 0 No persisted queuing. Results in using a simple, non-production grade, in-memory queuing mechanism."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequestProcessingContext.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationRequestProcessingContext.html",
    "title": "Class VectorizationRequestProcessingContext | FoundationaLLM",
    "summary": "Class VectorizationRequestProcessingContext Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Represents a vectorization request processing context. This class associates a dequeued request with the corresponding vectorization request resource. public class VectorizationRequestProcessingContext Inheritance object VectorizationRequestProcessingContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties DequeuedRequest The message that was dequeued. public required VectorizationDequeuedRequest DequeuedRequest { get; set; } Property Value VectorizationDequeuedRequest InstanceId Gets or sets the FoundationaLLM instance identifier. public required string InstanceId { get; set; } Property Value string Remarks This is the identifier of the FoundationaLLM instance that the request is associated with. Request The vectorization request resource. public required VectorizationRequest Request { get; set; } Property Value VectorizationRequest"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.VectorizationState.html",
    "title": "Class VectorizationState | FoundationaLLM",
    "summary": "Class VectorizationState Namespace FoundationaLLM.Vectorization.Models Assembly FoundationaLLM.Vectorization.Engine.dll Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). public class VectorizationState Inheritance object VectorizationState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Fields LoadedArtifactTypes Indicates which types of artifacts have already been loaded into the state. [JsonIgnore] public List<VectorizationArtifactType> LoadedArtifactTypes Field Value List<VectorizationArtifactType> Properties Artifacts The vectorization artifacts associated with the vectorization state. [JsonPropertyOrder(2)] [JsonPropertyName(\"artifacts\")] public List<VectorizationArtifact> Artifacts { get; set; } Property Value List<VectorizationArtifact> ContentIdentifier The ContentIdentifier object identifying the content being vectorized. [JsonPropertyOrder(1)] [JsonPropertyName(\"content_identifier\")] public required ContentIdentifier ContentIdentifier { get; set; } Property Value ContentIdentifier CurrentRequestId The unique identifier of the current vectorization request. Subsequent vectorization requests referring to the same content will have different unique identifiers. [JsonPropertyOrder(0)] [JsonPropertyName(\"request_id\")] public required string CurrentRequestId { get; set; } Property Value string IndexReferences The vector index references associated with the vectorization state. [JsonPropertyOrder(3)] [JsonPropertyName(\"index_references\")] public List<VectorizationIndexReference> IndexReferences { get; set; } Property Value List<VectorizationIndexReference> LogEntries The list of log entries associated with actions executed by the vectorization pipeline. [JsonPropertyOrder(20)] [JsonPropertyName(\"log\")] [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingNull)] public List<VectorizationLogEntry> LogEntries { get; set; } Property Value List<VectorizationLogEntry> PipelineName The resource name of the vectorization pipeline that generated the request. [JsonPropertyOrder(17)] [JsonPropertyName(\"pipeline_name\")] public string? PipelineName { get; set; } Property Value string PipelineObjectId The resource object id of the vectorization pipeline that generated the request. [JsonPropertyOrder(18)] [JsonPropertyName(\"pipeline_object_id\")] public string? PipelineObjectId { get; set; } Property Value string Requests The list of vectorization requests associated with the content identified by ContentIdentifier. [JsonPropertyOrder(19)] [JsonPropertyName(\"requests\")] public List<VectorizationRequest> Requests { get; set; } Property Value List<VectorizationRequest> Methods AddOrReplaceArtifact(VectorizationArtifact) Adds or replaces a vectorization artifact associated with the vectorization state. public void AddOrReplaceArtifact(VectorizationArtifact artifact) Parameters artifact VectorizationArtifact The VectorizationArtifact to be added or replaced. AddOrReplaceIndexReferences(IList<string>) Adds or replaces the list of vector index references associated with the vectorization state. public void AddOrReplaceIndexReferences(IList<string> indexEntryIds) Parameters indexEntryIds IList<string> The ordered list of vector index entry identifiers. FromRequest(VectorizationRequest) Creates a new VectorizationState instance based on a specified vectorization request. public static VectorizationState FromRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest instance for which the state is created. Returns VectorizationState The VectorizationState created from the request. Log(IVectorizationStepHandler, string, string, string) Adds a new generic log entry. public void Log(IVectorizationStepHandler handler, string requestId, string messageId, string text) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. text string The string content of the log entry. LogHandlerEnd(IVectorizationStepHandler, string, string) Adds a log entry marking the completion of handling. public void LogHandlerEnd(IVectorizationStepHandler handler, string requestId, string messageId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. LogHandlerError(IVectorizationStepHandler, string, string, Exception) Adds a log entry for a handling exception. public void LogHandlerError(IVectorizationStepHandler handler, string requestId, string messageId, Exception ex) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. ex Exception The exception being logged. LogHandlerStart(IVectorizationStepHandler, string, string) Adds a log entry marking the start of handling. public void LogHandlerStart(IVectorizationStepHandler handler, string requestId, string messageId) Parameters handler IVectorizationStepHandler The vectorization step handler executing the action. requestId string The identifier of the vectorization request. messageId string The identifier of underlying message retrieved from the request source. UpdateRequest(VectorizationRequest) Adds a vectorization request to the list of requests if it is not already there. public void UpdateRequest(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest being added."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Models.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Models.html",
    "title": "Namespace FoundationaLLM.Vectorization.Models | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Models Namespaces FoundationaLLM.Vectorization.Models.Configuration FoundationaLLM.Vectorization.Models.Resources Classes VectorizationArtifact Represents a vectorization artifact. VectorizationDequeuedRequest Represents a vectorization request that has been dequeued from a request source. VectorizationIndexReference Represents a reference to an index entry that contains vectorized content. VectorizationLogEntry Represents a log entry that contains information about vectorization operations. VectorizationRequestProcessingContext Represents a vectorization request processing context. This class associates a dequeued request with the corresponding vectorization request resource. VectorizationState Holds the state associated with each step of the vectorization pipeline for a specified content item (i.e., document). Enums VectorizationArtifactType Deifines types of vectorization artifacts. VectorizationQueuing Types of queuing engines used to dispatch vectorization requests."
  },
  "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.VectorizationResourceProviderService.html",
    "title": "Class VectorizationResourceProviderService | FoundationaLLM",
    "summary": "Class VectorizationResourceProviderService Namespace FoundationaLLM.Vectorization.ResourceProviders Assembly FoundationaLLM.Vectorization.dll Implements the FoundationaLLM.Vectorization resource provider. public class VectorizationResourceProviderService : ResourceProviderServiceBase<ResourceReference>, IResourceProviderService, IManagementProviderService Inheritance object ResourceProviderServiceBase<ResourceReference> VectorizationResourceProviderService Implements IResourceProviderService IManagementProviderService Inherited Members ResourceProviderServiceBase<ResourceReference>._resourceReferenceStore ResourceProviderServiceBase<ResourceReference>._serviceProvider ResourceProviderServiceBase<ResourceReference>._authorizationServiceClient ResourceProviderServiceBase<ResourceReference>._storageService ResourceProviderServiceBase<ResourceReference>._eventService ResourceProviderServiceBase<ResourceReference>._resourceValidatorFactory ResourceProviderServiceBase<ResourceReference>._validator ResourceProviderServiceBase<ResourceReference>._logger ResourceProviderServiceBase<ResourceReference>._instanceSettings ResourceProviderServiceBase<ResourceReference>._storageContainerName ResourceProviderServiceBase<ResourceReference>._serializerSettings ResourceProviderServiceBase<ResourceReference>.Name ResourceProviderServiceBase<ResourceReference>.IsInitialized ResourceProviderServiceBase<ResourceReference>.InitializationTask ResourceProviderServiceBase<ResourceReference>.AllowedResourceTypes ResourceProviderServiceBase<ResourceReference>.StorageAccountName ResourceProviderServiceBase<ResourceReference>.StorageContainerName ResourceProviderServiceBase<ResourceReference>.Initialize() ResourceProviderServiceBase<ResourceReference>.WaitForInitialization() ResourceProviderServiceBase<ResourceReference>.HandleGetAsync(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.HandlePostAsync(string, string, ResourceProviderFormFile, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.HandleDeleteAsync(string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.GetResourcesAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.GetResourceAsync<T>(string, string, UnifiedUserIdentity, ResourceProviderGetOptions) ResourceProviderServiceBase<ResourceReference>.UpsertResourceAsync<T, TResult>(string, T, UnifiedUserIdentity, ResourceProviderUpsertOptions) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsync<T, TResult>(string, string, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<T, TAction, TResult>(string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsync<TMain, TSubordinate, TAction, TResult>(string, string, string, string, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsync<T>(string, string, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.UpdateResourcePropertiesAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, Dictionary<string, object>, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ResourceExistsAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.ExecuteResourceActionAsyncInternal<T, TAction, TResult>(ResourcePath, ResourcePathAuthorizationResult, TAction, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.DeleteResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity) ResourceProviderServiceBase<ResourceReference>.SendResourceProviderEvent(string, string, object, bool) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderState() ResourceProviderServiceBase<ResourceReference>.LoadResources<T>(ResourceTypeInstance, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(ResourceReference) ResourceProviderServiceBase<ResourceReference>.LoadResource<T>(string) ResourceProviderServiceBase<ResourceReference>.CreateResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.CreateResource(ResourceReference, Stream, string) ResourceProviderServiceBase<ResourceReference>.CreateResources<T1, T2>(ResourceReference, T1, ResourceReference, T2) ResourceProviderServiceBase<ResourceReference>.SaveResource<T>(ResourceReference, T) ResourceProviderServiceBase<ResourceReference>.DeleteResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.PurgeResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.SetDefaultResource<T>(ResourcePath) ResourceProviderServiceBase<ResourceReference>.CheckResourceName<T>(ResourceName) ResourceProviderServiceBase<ResourceReference>.FilterResources<T>(ResourcePath, ResourceFilter, ResourcePathAuthorizationResult, ResourceProviderGetOptions, Func<ResourceReference, bool, Task<T>>, Func<T, bool>) ResourceProviderServiceBase<ResourceReference>.ExecuteManagementAction(ResourcePath, ResourcePathAuthorizationResult, string) ResourceProviderServiceBase<ResourceReference>.GetResourceProviderServiceByName(string) ResourceProviderServiceBase<ResourceReference>.UpdateBaseProperties(ResourceBase, UnifiedUserIdentity, bool) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetResourcePath(string, Type, string, Type, string, string) ResourceProviderServiceBase<ResourceReference>.GetParsedResourcePath(string, bool) ResourceProviderServiceBase<ResourceReference>.EnsureAndValidatePolicyDefinitions(ResourcePath, ResourcePathAuthorizationResult) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationResourceProviderService(IOptions<InstanceSettings>, IOptions<ResourceProviderCacheSettings>, IAuthorizationServiceClient, IStorageService, IEventService, IResourceValidatorFactory, IServiceProvider, ILoggerFactory) Implements the FoundationaLLM.Vectorization resource provider. public VectorizationResourceProviderService(IOptions<InstanceSettings> instanceOptions, IOptions<ResourceProviderCacheSettings> cacheOptions, IAuthorizationServiceClient authorizationService, IStorageService storageService, IEventService eventService, IResourceValidatorFactory resourceValidatorFactory, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. cacheOptions IOptions<ResourceProviderCacheSettings> The options providing the ResourceProviderCacheSettings with settings for the resource provider cache. authorizationService IAuthorizationServiceClient The IAuthorizationServiceClient providing authorization services. storageService IStorageService The IStorageService providing storage services. eventService IEventService The IEventService providing event services. resourceValidatorFactory IResourceValidatorFactory The IResourceValidatorFactory providing the factory to create resource validators. serviceProvider IServiceProvider The IServiceProvider of the main dependency injection container. loggerFactory ILoggerFactory The factory responsible for creating loggers. Properties _name The name of the resource provider. Must be overridden in derived classes. protected override string _name { get; } Property Value string Methods DeleteResourceAsync(ResourcePath, UnifiedUserIdentity) The internal implementation of DeleteResourceAsync. Must be overridden in derived classes. protected override Task DeleteResourceAsync(ResourcePath resourcePath, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task ExecuteActionAsync(ResourcePath, ResourcePathAuthorizationResult, string, UnifiedUserIdentity) The internal implementation of ExecuteActionAsync. Must be overriden in derived classes. protected override Task<object> ExecuteActionAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, string serializedAction, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. serializedAction string The serialized details of the action being executed. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> Remarks In the special case of the filter action, the override must handle the authorization result and return the appropriate response as follows: The read action is authorized for the resource path itself. In this case, all matching resources must be returned according to the PBAC policies specified by the authorization result (if any). The read action is denied for the resource path itself. In this case, only the matching resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). ExecuteActionAsync(string, string?) Executes an action on a vectorization resource. public Task<object> ExecuteActionAsync(string resourcePath, string? serializedAction = null) Parameters resourcePath string The resource path (or object id) of the vectorization request to process. serializedAction string The JSON string payload to pass in as an action parameter. Returns Task<object> GetResourceAsyncInternal<T>(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResource. Must be overridden in derived classes. protected override Task<T> GetResourceAsyncInternal<T>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) where T : ResourceBase Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<T> Type Parameters T GetResourceTypes() Gets the details about the resource types managed by the resource provider. protected override Dictionary<string, ResourceTypeDescriptor> GetResourceTypes() Returns Dictionary<string, ResourceTypeDescriptor> A dictionary of ResourceTypeDescriptor objects with details about the resource types. GetResourcesAsync(ResourcePath, ResourcePathAuthorizationResult, UnifiedUserIdentity, ResourceProviderGetOptions?) The internal implementation of GetResourcesAsync. Must be overridden in derived classes. protected override Task<object> GetResourcesAsync(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity, ResourceProviderGetOptions? options = null) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. options ResourceProviderGetOptions The ResourceProviderGetOptions which provides operation parameters. Returns Task<object> Remarks The override implementation should return a list of resources or a single resource, depending on the resource path. It also must handle the authorization result and return the appropriate response as follows: The resource path refers to a single resource. In this case, the authorization is already confirmed and the specific resource should be returned. The resource path refers to a resource type and the read action is authorized for the resource path itself. In this case, all resources must be returned according to the PBAC policies specified by the authorization result (if any). The resource path refers to a resource type and the read action is denied for the resource path itself. In this case, only the resources specified in the subordinate authorized resource paths list of the authorization result should be returned (if any). GetResourcesAsync(string) Retrieves resources from the vectorization resource provider. public Task<object> GetResourcesAsync(string resourcePath) Parameters resourcePath string The resource path from which to retrieve resources. Returns Task<object> List of vectorization resources. HandleCacheResetCommand() Handles the cache reset command. protected override Task HandleCacheResetCommand() Returns Task HandleEventsInternal(EventTypeEventArgs) Handles events received from the IEventService when they are dequeued locally. protected override Task HandleEventsInternal(EventTypeEventArgs e) Parameters e EventTypeEventArgs The EventTypeEventArgs containing the event type and the actual events. Returns Task InitializeInternal() The internal implementation of Initialize. Must be overridden in derived classes. protected override Task InitializeInternal() Returns Task UpsertResourceAsync(ResourcePath, string?, ResourceProviderFormFile?, ResourcePathAuthorizationResult, UnifiedUserIdentity) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<object> UpsertResourceAsync(ResourcePath resourcePath, string? serializedResource, ResourceProviderFormFile? formFile, ResourcePathAuthorizationResult authorizationResult, UnifiedUserIdentity userIdentity) Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. serializedResource string The optional serialized resource being created or updated. formFile ResourceProviderFormFile The optional file attached to the request. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. userIdentity UnifiedUserIdentity The UnifiedUserIdentity with details about the identity of the user. Returns Task<object> UpsertResourceAsyncInternal<T, TResult>(ResourcePath, ResourcePathAuthorizationResult, T, UnifiedUserIdentity, ResourceProviderUpsertOptions?) The internal implementation of UpsertResourceAsync. Must be overridden in derived classes. protected override Task<TResult> UpsertResourceAsyncInternal<T, TResult>(ResourcePath resourcePath, ResourcePathAuthorizationResult authorizationResult, T resource, UnifiedUserIdentity userIdentity, ResourceProviderUpsertOptions? options = null) where T : ResourceBase where TResult : ResourceProviderUpsertResult<T> Parameters resourcePath ResourcePath A ResourcePath containing information about the resource path. authorizationResult ResourcePathAuthorizationResult The ResourcePathAuthorizationResult containing the result of the resource path authorization request. resource T The instance of the resource being created or updated. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. options ResourceProviderUpsertOptions The ResourceProviderUpsertOptions which provides operation parameters. Returns Task<TResult> Type Parameters T The type of the resource being created or updated. TResult The type of the result returned."
  },
  "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.ResourceProviders.html",
    "title": "Namespace FoundationaLLM.Vectorization.ResourceProviders | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.ResourceProviders Classes VectorizationResourceProviderService Implements the FoundationaLLM.Vectorization resource provider."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Serializers.CosmosSystemTextJsonSerializer.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Serializers.CosmosSystemTextJsonSerializer.html",
    "title": "Class CosmosSystemTextJsonSerializer | FoundationaLLM",
    "summary": "Class CosmosSystemTextJsonSerializer Namespace FoundationaLLM.Vectorization.Serializers Assembly FoundationaLLM.Vectorization.Engine.dll This class provides a default implementation of System.Text.Json Cosmos Linq Serializer. public class CosmosSystemTextJsonSerializer : CosmosLinqSerializer Inheritance object CosmosSerializer CosmosLinqSerializer CosmosSystemTextJsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors CosmosSystemTextJsonSerializer(JsonSerializerOptions) Creates an instance of CosmosSystemTextJsonSerializer with the default values for the Cosmos SDK public CosmosSystemTextJsonSerializer(JsonSerializerOptions jsonSerializerOptions) Parameters jsonSerializerOptions JsonSerializerOptions An instance of JsonSerializerOptions containing the json serialization options. Methods FromStream<T>(Stream) Convert a Stream of JSON to an object. The implementation is responsible for Disposing of the stream, including when an exception is thrown, to avoid memory leaks. public override T FromStream<T>(Stream stream) Parameters stream Stream The Stream response containing JSON from Cosmos DB. Returns T The object deserialized from the stream. Type Parameters T Any type passed to Container. SerializeMemberName(MemberInfo) Convert a MemberInfo to a string for use in LINQ query translation. public override string? SerializeMemberName(MemberInfo memberInfo) Parameters memberInfo MemberInfo Any MemberInfo used in the query. Returns string A serialized representation of the member. Remarks Note that this is just a default implementation which handles the basic scenarios. Any JsonSerializerOptions passed in here are not going to be reflected in SerializeMemberName(). For example, if customers passed in a JsonSerializerOption such as below JsonSerializerOptions options = new() { PropertyNamingPolicy = JsonNamingPolicy.CamelCase } This would not be honored by SerializeMemberName() unless it included special handling for this, for example. public override string SerializeMemberName(MemberInfo memberInfo) { JsonExtensionDataAttribute jsonExtensionDataAttribute = memberInfo.GetCustomAttribute<JsonExtensionDataAttribute>(true); if (jsonExtensionDataAttribute != null) { return null; } JsonPropertyNameAttribute jsonPropertyNameAttribute = memberInfo.GetCustomAttribute<JsonPropertyNameAttribute>(true); if (!string.IsNullOrEmpty(jsonPropertyNameAttribute?.Name)) { return jsonPropertyNameAttribute.Name; } return System.Text.Json.JsonNamingPolicy.CamelCase.ConvertName(memberInfo.Name); } To handle such scenarios, please create a custom serializer which inherits from the CosmosSystemTextJsonSerializer and overrides the SerializeMemberName to add any special handling. ToStream<T>(T) Convert the object to a Stream. The caller will take ownership of the stream and ensure it is correctly disposed of. Stream.CanRead must be true. public override Stream ToStream<T>(T input) Parameters input T Any type passed to Container. Returns Stream A readable Stream containing JSON of the serialized object. Type Parameters T"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Serializers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Serializers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Serializers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Serializers Classes CosmosSystemTextJsonSerializer This class provides a default implementation of System.Text.Json Cosmos Linq Serializer."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.AzureSQLDatabaseContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.AzureSQLDatabaseContentSourceService.html",
    "title": "Class AzureSQLDatabaseContentSourceService | FoundationaLLM",
    "summary": "Class AzureSQLDatabaseContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.Engine.dll Implements a vectorization content source for content residing in Azure SQL. public class AzureSQLDatabaseContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase AzureSQLDatabaseContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseContentSourceService(AzureSQLDatabaseContentSourceServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source service. public AzureSQLDatabaseContentSourceService(AzureSQLDatabaseContentSourceServiceSettings settings, ILoggerFactory loggerFactory) Parameters settings AzureSQLDatabaseContentSourceServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks contentId[0] = the schema. contentId[1] = the table. contentId[2] = the column containing the contents of the files. contentId[3] = the column name of the unique identifier for the row of the file. contentId[4] = the value of the unique identifier of the file. contentId[5] = the file name."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceBase.html",
    "title": "Class ContentSourceServiceBase | FoundationaLLM",
    "summary": "Class ContentSourceServiceBase Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.Engine.dll Provides common functionalities for all content sources. public class ContentSourceServiceBase Inheritance object ContentSourceServiceBase Derived AzureSQLDatabaseContentSourceService DataLakeContentSourceService SharePointOnlineContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods ExtractTextFromFileAsync(string, BinaryData) Extracts text from the binary content of a file. public static Task<string> ExtractTextFromFileAsync(string fileName, BinaryData binaryContent) Parameters fileName string The file name of the file being extracted. binaryContent BinaryData The binary data of the file being extracted. Returns Task<string> The string content of the file. Exceptions VectorizationException"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.ContentSourceServiceFactory.html",
    "title": "Class ContentSourceServiceFactory | FoundationaLLM",
    "summary": "Class ContentSourceServiceFactory Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.Engine.dll Manages content sources registered for use in the vectorization pipelines. public class ContentSourceServiceFactory : IVectorizationServiceFactory<IContentSourceService> Inheritance object ContentSourceServiceFactory Implements IVectorizationServiceFactory<IContentSourceService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentSourceServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, ILoggerFactory) Manages content sources registered for use in the vectorization pipelines. public ContentSourceServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The resource provider services registered with the dependency injection container. configuration IConfiguration The global configuration provider. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<IContentSourceService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<IContentSourceService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(IContentSourceService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(IContentSourceService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.DataLakeContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.DataLakeContentSourceService.html",
    "title": "Class DataLakeContentSourceService | FoundationaLLM",
    "summary": "Class DataLakeContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.Engine.dll Implements a vectorization content source for content residing in data lake storage. public class DataLakeContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase DataLakeContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors DataLakeContentSourceService(BlobStorageServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source service. public DataLakeContentSourceService(BlobStorageServiceSettings storageSettings, ILoggerFactory loggerFactory) Parameters storageSettings BlobStorageServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks contentId[0] = the URL of the storage account. contentId[1] = the container name. contentId[2] = path of the file relative to the container name."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.SharePointOnlineContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.SharePointOnlineContentSourceService.html",
    "title": "Class SharePointOnlineContentSourceService | FoundationaLLM",
    "summary": "Class SharePointOnlineContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.Engine.dll Implements a vectorization content source for content residing in SharePoint Online. public class SharePointOnlineContentSourceService : ContentSourceServiceBase, IContentSourceService Inheritance object ContentSourceServiceBase SharePointOnlineContentSourceService Implements IContentSourceService Inherited Members ContentSourceServiceBase.ExtractTextFromFileAsync(string, BinaryData) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SharePointOnlineContentSourceService(SharePointOnlineContentSourceServiceSettings, ILoggerFactory) Creates a new instance of the vectorization content source service. public SharePointOnlineContentSourceService(SharePointOnlineContentSourceServiceSettings settings, ILoggerFactory loggerFactory) Parameters settings SharePointOnlineContentSourceServiceSettings loggerFactory ILoggerFactory Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks contentId[0] = the URL of the SharePoint online tenant. contentId[1] = the relative path of the site/subsite. contentId[2] = the folder path, starting with the document library. contentId[3] = the name of the file."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.WebContentSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.WebContentSourceService.html",
    "title": "Class WebContentSourceService | FoundationaLLM",
    "summary": "Class WebContentSourceService Namespace FoundationaLLM.Vectorization.Services.ContentSources Assembly FoundationaLLM.Vectorization.Engine.dll Extracts text from a web page. public class WebContentSourceService : IContentSourceService Inheritance object WebContentSourceService Implements IContentSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors WebContentSourceService(ILoggerFactory) Creates a new instance of the vectorization content source service that scrapes web pages. public WebContentSourceService(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory Logger factory that generates loggers for the class. Methods ExtractTextAsync(ContentIdentifier, UnifiedUserIdentity, CancellationToken) Reads the content of a data source item. public Task<string> ExtractTextAsync(ContentIdentifier contentId, UnifiedUserIdentity userIdentity, CancellationToken cancellationToken) Parameters contentId ContentIdentifier The ContentIdentifier providing the unique identifier of the item being read. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. cancellationToken CancellationToken The cancellation token that signals that operations should be cancelled. Returns Task<string> The string content of the item. Remarks Expected MultipartId: contentId[0] = Protocol: either http or https contentId[1] = the web URL without the protocol contentId[2] = CSS classes to filter by"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.ContentSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.ContentSources | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.ContentSources Classes AzureSQLDatabaseContentSourceService Implements a vectorization content source for content residing in Azure SQL. ContentSourceServiceBase Provides common functionalities for all content sources. ContentSourceServiceFactory Manages content sources registered for use in the vectorization pipelines. DataLakeContentSourceService Implements a vectorization content source for content residing in data lake storage. SharePointOnlineContentSourceService Implements a vectorization content source for content residing in SharePoint Online. WebContentSourceService Extracts text from a web page."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureDataLakeDataSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureDataLakeDataSourceService.html",
    "title": "Class AzureDataLakeDataSourceService | FoundationaLLM",
    "summary": "Class AzureDataLakeDataSourceService Namespace FoundationaLLM.Vectorization.Services.DataSources Assembly FoundationaLLM.Vectorization.Engine.dll Provides access to Azure Data Lake based on a data source. public class AzureDataLakeDataSourceService Inheritance object AzureDataLakeDataSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureDataLakeDataSourceService(AzureDataLakeDataSource, BlobStorageServiceSettings, ILoggerFactory) Initializes a new instance of the AzureDataLakeDataSourceService class. public AzureDataLakeDataSourceService(AzureDataLakeDataSource dataSource, BlobStorageServiceSettings settings, ILoggerFactory loggerFactory) Parameters dataSource AzureDataLakeDataSource The data source definition. settings BlobStorageServiceSettings Blob storage configuration settings. loggerFactory ILoggerFactory The factory responsible for creating loggers. Methods GetFilesListAsync() Gets the list of files in the data source folders public Task<List<string>> GetFilesListAsync() Returns Task<List<string>>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureSQLDatabaseDataSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.AzureSQLDatabaseDataSourceService.html",
    "title": "Class AzureSQLDatabaseDataSourceService | FoundationaLLM",
    "summary": "Class AzureSQLDatabaseDataSourceService Namespace FoundationaLLM.Vectorization.Services.DataSources Assembly FoundationaLLM.Vectorization.Engine.dll Class responsible for retrieving data source data from an Azure SQL database. public class AzureSQLDatabaseDataSourceService Inheritance object AzureSQLDatabaseDataSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors AzureSQLDatabaseDataSourceService(AzureSQLDatabaseDataSource, SQLDatabaseServiceSettings, ILoggerFactory) Initializes a new instance of the AzureSQLDatabaseDataSourceService class. public AzureSQLDatabaseDataSourceService(AzureSQLDatabaseDataSource dataSource, SQLDatabaseServiceSettings settings, ILoggerFactory loggerFactory) Parameters dataSource AzureSQLDatabaseDataSource The data source definition. settings SQLDatabaseServiceSettings The Azure SQL database configuration settings. loggerFactory ILoggerFactory The factory responsible for creating loggers. Methods ExecuteMultipartQueryAsync(CancellationToken) Executes a query to retrieve a list of multipart ids for vectorization. public Task<List<string>> ExecuteMultipartQueryAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The cancellation token. Returns Task<List<string>> List of multipart ids to vectorize with tokens that are pipe delimited."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.SQLDatabaseServiceSettings.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.SQLDatabaseServiceSettings.html",
    "title": "Class SQLDatabaseServiceSettings | FoundationaLLM",
    "summary": "Class SQLDatabaseServiceSettings Namespace FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase Assembly FoundationaLLM.Vectorization.Engine.dll Provides configuration settings to initialize an SQL database service. public record SQLDatabaseServiceSettings : IEquatable<SQLDatabaseServiceSettings> Inheritance object SQLDatabaseServiceSettings Implements IEquatable<SQLDatabaseServiceSettings> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties ConnectionString The connection string used for authentication to the SQL database with the data to be vectorized. public required string ConnectionString { get; set; } Property Value string MultiPartQuery Optional: When not vectorizing an entire table, this query is used to retrieve the data to be vectorized. public string? MultiPartQuery { get; set; } Property Value string MultiPartQueryConnectionString Optional: The connection string used for authentication to the SQL database when using a multi-part query if it is different from ConnectionString. public string? MultiPartQueryConnectionString { get; set; } Property Value string"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase Classes SQLDatabaseServiceSettings Provides configuration settings to initialize an SQL database service."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.DataSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.DataSources | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.DataSources Namespaces FoundationaLLM.Vectorization.Services.DataSources.Configuration.SQLDatabase Classes AzureDataLakeDataSourceService Provides access to Azure Data Lake based on a data source. AzureSQLDatabaseDataSourceService Class responsible for retrieving data source data from an Azure SQL database."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineExecutionService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineExecutionService.html",
    "title": "Class PipelineExecutionService | FoundationaLLM",
    "summary": "Class PipelineExecutionService Namespace FoundationaLLM.Vectorization.Services.Pipelines Assembly FoundationaLLM.Vectorization.Engine.dll Executes active vectorization data pipelines. public class PipelineExecutionService : IPipelineExecutionService Inheritance object PipelineExecutionService Implements IPipelineExecutionService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PipelineExecutionService(IOptions<InstanceSettings>, IConfiguration, IServiceProvider, IEnumerable<IResourceProviderService>, ILoggerFactory, ILogger<PipelineExecutionService>) Executes active vectorization data pipelines. public PipelineExecutionService(IOptions<InstanceSettings> instanceOptions, IConfiguration configuration, IServiceProvider serviceProvider, IEnumerable<IResourceProviderService> resourceProviderServices, ILoggerFactory loggerFactory, ILogger<PipelineExecutionService> logger) Parameters instanceOptions IOptions<InstanceSettings> The IOptions<TOptions> value providing InstanceSettings settings. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services.. resourceProviderServices IEnumerable<IResourceProviderService> The list of resurce providers registered with the main dependency injection container. loggerFactory ILoggerFactory Factory responsible for creating loggers. logger ILogger<PipelineExecutionService> The ILogger used for logging. Methods ExecuteAsync(CancellationToken) Executes the pipeline execution service until cancellation is signaled. public Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task StopAsync(CancellationToken) Stops the pipeline execution service, allowing it to cleanup. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken signaling cancellation. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.PipelineWorker.html",
    "title": "Class PipelineWorker | FoundationaLLM",
    "summary": "Class PipelineWorker Namespace FoundationaLLM.Vectorization.Services.Pipelines Assembly FoundationaLLM.Vectorization.Engine.dll Background worker used to manage vectorization data pipelines. public class PipelineWorker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService PipelineWorker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors PipelineWorker(IPipelineExecutionService, ILogger<PipelineWorker>) Background worker used to manage vectorization data pipelines. public PipelineWorker(IPipelineExecutionService pipelineExecutionService, ILogger<PipelineWorker> logger) Parameters pipelineExecutionService IPipelineExecutionService The IPipelineExecutionService managing the execution of vectorization data pipelines. logger ILogger<PipelineWorker> The logger used for logging. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Pipelines.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.Pipelines | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.Pipelines Classes PipelineExecutionService Executes active vectorization data pipelines. PipelineWorker Background worker used to manage vectorization data pipelines."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestManagerService.html",
    "title": "Class RequestManagerService | FoundationaLLM",
    "summary": "Class RequestManagerService Namespace FoundationaLLM.Vectorization.Services Assembly FoundationaLLM.Vectorization.Engine.dll Manages vectorization requests originating from a specific request source. public class RequestManagerService : IRequestManagerService Inheritance object RequestManagerService Implements IRequestManagerService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestManagerService(RequestManagerServiceSettings, Dictionary<string, IRequestSourceService>, IVectorizationStateService, IConfigurationSection?, IServiceProvider, ILoggerFactory, CancellationToken) Initializes a new instance of the RequestManagerService class with the configuration and services required to manage vectorization requests originating from a specific request source. public RequestManagerService(RequestManagerServiceSettings settings, Dictionary<string, IRequestSourceService> requestSourceServices, IVectorizationStateService vectorizationStateService, IConfigurationSection? stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory, CancellationToken cancellationToken) Parameters settings RequestManagerServiceSettings The configuration settings used to initialize the instance. requestSourceServices Dictionary<string, IRequestSourceService> The dictionary with all the request source services registered in the vectorization platform. vectorizationStateService IVectorizationStateService The service providing vectorization state management. stepsConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The logger factory used to create loggers. cancellationToken CancellationToken The cancellation token that can be used to cancel the work. Exceptions VectorizationException The exception thrown when the initialization of the instance fails. Methods Run() Runs the vectorization requests processing cycle. public Task Run() Returns Task A Task to await the completion of the run."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.LocalVectorizationRequestProcessor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.LocalVectorizationRequestProcessor.html",
    "title": "Class LocalVectorizationRequestProcessor | FoundationaLLM",
    "summary": "Class LocalVectorizationRequestProcessor Namespace FoundationaLLM.Vectorization.Services.RequestProcessors Assembly FoundationaLLM.Vectorization.Engine.dll Processes the vectorization request internally. public class LocalVectorizationRequestProcessor : IVectorizationRequestProcessor Inheritance object LocalVectorizationRequestProcessor Implements IVectorizationRequestProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors LocalVectorizationRequestProcessor(VectorizationServiceFactory) Processes the vectorization request internally. public LocalVectorizationRequestProcessor(VectorizationServiceFactory vectorizationServiceFactory) Parameters vectorizationServiceFactory VectorizationServiceFactory Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.RemoteVectorizationRequestProcessor.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.RemoteVectorizationRequestProcessor.html",
    "title": "Class RemoteVectorizationRequestProcessor | FoundationaLLM",
    "summary": "Class RemoteVectorizationRequestProcessor Namespace FoundationaLLM.Vectorization.Services.RequestProcessors Assembly FoundationaLLM.Vectorization.dll Processes the vectorization request remotely using the IVectorizationServiceClient over HTTP. public class RemoteVectorizationRequestProcessor : IVectorizationRequestProcessor Inheritance object RemoteVectorizationRequestProcessor Implements IVectorizationRequestProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RemoteVectorizationRequestProcessor(IHttpClientFactoryService, ILoggerFactory) Processes the vectorization request remotely using the IVectorizationServiceClient over HTTP. public RemoteVectorizationRequestProcessor(IHttpClientFactoryService httpClientFactoryService, ILoggerFactory loggerFactory) Parameters httpClientFactoryService IHttpClientFactoryService The factory service responsible for HTTP connections. loggerFactory ILoggerFactory The logger factory responsible for creating loggers. Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestProcessors.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.RequestProcessors | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.RequestProcessors Classes LocalVectorizationRequestProcessor Processes the vectorization request internally. RemoteVectorizationRequestProcessor Processes the vectorization request remotely using the IVectorizationServiceClient over HTTP."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.MemoryRequestSourceService.html",
    "title": "Class MemoryRequestSourceService | FoundationaLLM",
    "summary": "Class MemoryRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.Engine.dll Implements an in-memory request source, suitable for testing and quick prototyping. public class MemoryRequestSourceService : IRequestSourceService Inheritance object MemoryRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors MemoryRequestSourceService(RequestSourceServiceSettings, ILogger<MemoryRequestSourceService>) Implements an in-memory request source, suitable for testing and quick prototyping. public MemoryRequestSourceService(RequestSourceServiceSettings settings, ILogger<MemoryRequestSourceService> logger) Parameters settings RequestSourceServiceSettings The settings used to initialize the request source. logger ILogger<MemoryRequestSourceService> The logger instnce used for logging. Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string requestId, string popReceipt) Parameters requestId string popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. public Task<IEnumerable<VectorizationDequeuedRequest>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<VectorizationDequeuedRequest>> A collection of VectorizationDequeuedRequest items. SubmitRequest(string) Submits a new vectorization request to the source. public Task<string> SubmitRequest(string requestName) Parameters requestName string The name (unique identifier) of the vectorization request. Returns Task<string> The underlying message identifier of the request being submitted. TryUpdateRequest(string, string, TimeSpan) Tries to update the visibility timeout of a request. public Task<bool> TryUpdateRequest(string requestId, string popReceipt, TimeSpan visibilityTimeout) Parameters requestId string popReceipt string The value requiored to update the underlying message. visibilityTimeout TimeSpan The new visibility timeout of the request. Returns Task<bool> true if the update is successfull, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesBuilder.html",
    "title": "Class RequestSourcesBuilder | FoundationaLLM",
    "summary": "Class RequestSourcesBuilder Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.Engine.dll Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). public class RequestSourcesBuilder Inheritance object RequestSourcesBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors RequestSourcesBuilder() Constructs a new instance of the builder. public RequestSourcesBuilder() Methods Build() Builds the dictionary of request source. public Dictionary<string, IRequestSourceService> Build() Returns Dictionary<string, IRequestSourceService> The dictionary of IRequestSourceService instances, hashed by the identifier of the request source. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for the request sources. public RequestSourcesBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the request sources. public RequestSourcesBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns RequestSourcesBuilder The updated instance of the builder. WithQueuing(VectorizationQueuing) Specifies the type of queuing used by the request sources. public RequestSourcesBuilder WithQueuing(VectorizationQueuing queuing) Parameters queuing VectorizationQueuing The VectorizationQueuing value defining the type of queuing. Returns RequestSourcesBuilder The updated instance of the builder. WithSettings(List<RequestSourceServiceSettings>?) Specifies the settings for each IRequestSourceService instance to be built. public RequestSourcesBuilder WithSettings(List<RequestSourceServiceSettings>? settings) Parameters settings List<RequestSourceServiceSettings> The list of RequestSourceServiceSettings objects providing the settings for the request sources. Returns RequestSourcesBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.RequestSourcesCache.html",
    "title": "Class RequestSourcesCache | FoundationaLLM",
    "summary": "Class RequestSourcesCache Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.Engine.dll Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public class RequestSourcesCache : IRequestSourcesCache Inheritance object RequestSourcesCache Implements IRequestSourcesCache Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the cache. Constructors RequestSourcesCache(IOptions<VectorizationWorkerSettings>, IConfigurationSection, ILoggerFactory) Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. public RequestSourcesCache(IOptions<VectorizationWorkerSettings> vectorizationWorkerOptions, IConfigurationSection queuesConfiguration, ILoggerFactory loggerFactory) Parameters vectorizationWorkerOptions IOptions<VectorizationWorkerSettings> The IOptions<TOptions> instance containing the VectorizationWorkerSettings instance. queuesConfiguration IConfigurationSection The IConfigurationSection containing settings for the queues. loggerFactory ILoggerFactory The ILoggerFactory used to create new loggers for child objects. Remarks Creates a new instance of the cache. Properties RequestSources Gets the dictionary of IRequestSourceService objects hashed by request source names. public Dictionary<string, IRequestSourceService> RequestSources { get; } Property Value Dictionary<string, IRequestSourceService>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.StorageQueueRequestSourceService.html",
    "title": "Class StorageQueueRequestSourceService | FoundationaLLM",
    "summary": "Class StorageQueueRequestSourceService Namespace FoundationaLLM.Vectorization.Services.RequestSources Assembly FoundationaLLM.Vectorization.Engine.dll Implements a request source that uses Azure storage queues. public class StorageQueueRequestSourceService : IRequestSourceService Inheritance object StorageQueueRequestSourceService Implements IRequestSourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors StorageQueueRequestSourceService(RequestSourceServiceSettings, ILogger<StorageQueueRequestSourceService>) Creates a new instance of the request source. public StorageQueueRequestSourceService(RequestSourceServiceSettings settings, ILogger<StorageQueueRequestSourceService> logger) Parameters settings RequestSourceServiceSettings The RequestSourceServiceSettings object providing the settings. logger ILogger<StorageQueueRequestSourceService> The logger used for logging. Properties SourceName The name of the vectorization request source. public string SourceName { get; } Property Value string Methods DeleteRequest(string, string) Removes a specified vectorization request from the source. This should happen when the request was successfully processed. public Task DeleteRequest(string messageId, string popReceipt) Parameters messageId string The underlying message identifier of the request being removed. popReceipt string This value is required to delete the request. Returns Task HasRequests() Indicates whether the source has pending requests. public Task<bool> HasRequests() Returns Task<bool> A bool indicating whether the source has pending requests or not. ReceiveRequests(int) Receives the specified number of requests. The received requests will be invisible for other clients for a default timeout of 30 seconds. They should be removed from the source by calling DeleteRequest(string, string) before the timeout expires. public Task<IEnumerable<VectorizationDequeuedRequest>> ReceiveRequests(int count) Parameters count int The number of requests to receive. Returns Task<IEnumerable<VectorizationDequeuedRequest>> A collection of VectorizationDequeuedRequest items. SubmitRequest(string) Submits a new vectorization request to the source. public Task<string> SubmitRequest(string requestName) Parameters requestName string The name (unique identifier) of the vectorization request. Returns Task<string> The underlying message identifier of the request being submitted. TryUpdateRequest(string, string, TimeSpan) Tries to update the visibility timeout of a request. public Task<bool> TryUpdateRequest(string messageId, string popReceipt, TimeSpan visibilityTimeout) Parameters messageId string The underlying message identifier of the request being updated. popReceipt string The value requiored to update the underlying message. visibilityTimeout TimeSpan The new visibility timeout of the request. Returns Task<bool> true if the update is successfull, false otherwise."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.RequestSources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.RequestSources | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.RequestSources Classes MemoryRequestSourceService Implements an in-memory request source, suitable for testing and quick prototyping. RequestSourcesBuilder Implements a builder for a dictionary of request sources (hashed by the identifier of the request source). RequestSourcesCache Implements a cache of IRequestSourceService objects as defined by IRequestSourcesCache. StorageQueueRequestSourceService Implements a request source that uses Azure storage queues."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.GatewayTextEmbeddingService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.GatewayTextEmbeddingService.html",
    "title": "Class GatewayTextEmbeddingService | FoundationaLLM",
    "summary": "Class GatewayTextEmbeddingService Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.Engine.dll Generates text embeddings by routing requests through the FoundationaLLM Gateway API. public class GatewayTextEmbeddingService : ITextEmbeddingService Inheritance object GatewayTextEmbeddingService Implements ITextEmbeddingService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors GatewayTextEmbeddingService(IOptions<InstanceSettings>, IHttpClientFactoryService, ILoggerFactory) Generates text embeddings by routing requests through the FoundationaLLM Gateway API. public GatewayTextEmbeddingService(IOptions<InstanceSettings> instanceOptions, IHttpClientFactoryService httpClientFactoryService, ILoggerFactory loggerFactory) Parameters instanceOptions IOptions<InstanceSettings> The options providing the InstanceSettings with instance settings. httpClientFactoryService IHttpClientFactoryService The HTTP Client Factory service. loggerFactory ILoggerFactory The logger factory used to create loggers for logging. Methods GetEmbeddingsAsync(IList<TextChunk>, string, int, bool) Initializes the text embedding operation. Depending on the implementation, this can be an atomic operation or a long-running one. public Task<TextOperationResult> GetEmbeddingsAsync(IList<TextChunk> textChunks, string modelName, int embeddingDimensions, bool Prioritized) Parameters textChunks IList<TextChunk> The list of text chunks which need to be embedded. modelName string embeddingDimensions int The number of dimensions for the embedding model. Prioritized bool Returns Task<TextOperationResult> A TextOperationResult object containing the result of the text embedding operation. GetEmbeddingsAsync(string) Retrieves the result of a long-running text embedding operation. public Task<TextOperationResult> GetEmbeddingsAsync(string operationId) Parameters operationId string The unique identifier of the long-running operation. Returns Task<TextOperationResult> A TextOperationResult object containing the result of the text embedding operation."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.IndexingServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.IndexingServiceFactory.html",
    "title": "Class IndexingServiceFactory | FoundationaLLM",
    "summary": "Class IndexingServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.Engine.dll Creates text splitter service instances. public class IndexingServiceFactory : IVectorizationServiceFactory<IIndexingService> Inheritance object IndexingServiceFactory Implements IVectorizationServiceFactory<IIndexingService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public IndexingServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The collection of registered resource providers. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<IIndexingService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<IIndexingService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(IIndexingService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(IIndexingService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextEmbeddingServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextEmbeddingServiceFactory.html",
    "title": "Class TextEmbeddingServiceFactory | FoundationaLLM",
    "summary": "Class TextEmbeddingServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.Engine.dll Creates text splitter service instances. public class TextEmbeddingServiceFactory : IVectorizationServiceFactory<ITextEmbeddingService> Inheritance object TextEmbeddingServiceFactory Implements IVectorizationServiceFactory<ITextEmbeddingService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextEmbeddingServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public TextEmbeddingServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The collection of registered resource providers. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<ITextEmbeddingService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<ITextEmbeddingService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(ITextEmbeddingService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(ITextEmbeddingService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextSplitterServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.TextSplitterServiceFactory.html",
    "title": "Class TextSplitterServiceFactory | FoundationaLLM",
    "summary": "Class TextSplitterServiceFactory Namespace FoundationaLLM.Vectorization.Services.Text Assembly FoundationaLLM.Vectorization.Engine.dll Creates text splitter service instances. public class TextSplitterServiceFactory : IVectorizationServiceFactory<ITextSplitterService> Inheritance object TextSplitterServiceFactory Implements IVectorizationServiceFactory<ITextSplitterService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextSplitterServiceFactory(IEnumerable<IResourceProviderService>, IConfiguration, IServiceProvider, ILoggerFactory) Creates text splitter service instances. public TextSplitterServiceFactory(IEnumerable<IResourceProviderService> resourceProviderServices, IConfiguration configuration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters resourceProviderServices IEnumerable<IResourceProviderService> The collection of registered resource providers. configuration IConfiguration The global configuration provider. serviceProvider IServiceProvider The IServiceProvider providing dependency injection services. loggerFactory ILoggerFactory The logger factory used to create loggers. Methods GetService(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name. public Task<ITextSplitterService> GetService(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<ITextSplitterService> The service instance created by name. GetServiceWithResource(string, UnifiedUserIdentity) Retrieves a service instance of type T specified by name and its associated resource object (if any). public Task<(ITextSplitterService Service, ResourceBase Resource)> GetServiceWithResource(string serviceName, UnifiedUserIdentity userIdentity) Parameters serviceName string The name of the service instance to create. userIdentity UnifiedUserIdentity The UnifiedUserIdentity providing information about the calling user identity. Returns Task<(ITextSplitterService Service, ResourceBase Resource)> The service instance and its associated resource object (if any)."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.Text.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.Text.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.Text | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.Text Classes GatewayTextEmbeddingService Generates text embeddings by routing requests through the FoundationaLLM Gateway API. IndexingServiceFactory Creates text splitter service instances. TextEmbeddingServiceFactory Creates text splitter service instances. TextSplitterServiceFactory Creates text splitter service instances."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.AsynchronousVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.AsynchronousVectorizationService.html",
    "title": "Class AsynchronousVectorizationService | FoundationaLLM",
    "summary": "Class AsynchronousVectorizationService Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Assembly FoundationaLLM.Vectorization.Engine.dll Implements the IVectorizationService interface for Asynchronous vectorization requests. public class AsynchronousVectorizationService : IVectorizationService Inheritance object AsynchronousVectorizationService Implements IVectorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the AsynchronousVectorizationService service. Constructors AsynchronousVectorizationService(IRequestSourcesCache) Implements the IVectorizationService interface for Asynchronous vectorization requests. public AsynchronousVectorizationService(IRequestSourcesCache requestSourcesCache) Parameters requestSourcesCache IRequestSourcesCache The IRequestSourcesCache cache of request sources. Remarks Creates a new instance of the AsynchronousVectorizationService service. Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.SynchronousVectorizationService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.SynchronousVectorizationService.html",
    "title": "Class SynchronousVectorizationService | FoundationaLLM",
    "summary": "Class SynchronousVectorizationService Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Assembly FoundationaLLM.Vectorization.Engine.dll Handles synchronous in-memory vectorization requests. public class SynchronousVectorizationService : IVectorizationService Inheritance object SynchronousVectorizationService Implements IVectorizationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors SynchronousVectorizationService(MemoryVectorizationStateService, IEnumerable<IResourceProviderService>, IConfigurationSection, IServiceProvider, ILoggerFactory) Handles synchronous in-memory vectorization requests. public SynchronousVectorizationService(MemoryVectorizationStateService vectorizationStateService, IEnumerable<IResourceProviderService> resourceProviderServices, IConfigurationSection stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters vectorizationStateService MemoryVectorizationStateService resourceProviderServices IEnumerable<IResourceProviderService> stepsConfiguration IConfigurationSection serviceProvider IServiceProvider loggerFactory ILoggerFactory Methods ProcessRequest(string, VectorizationRequest, UnifiedUserIdentity?) Processes an incoming vectorization request. public Task<VectorizationResult> ProcessRequest(string instanceId, VectorizationRequest vectorizationRequest, UnifiedUserIdentity? userIdentity) Parameters instanceId string The FoundationaLLM instance identifier. vectorizationRequest VectorizationRequest The VectorizationRequest object containing the details of the vectorization request. userIdentity UnifiedUserIdentity The user identity. Returns Task<VectorizationResult>"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.VectorizationServiceFactory.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.VectorizationServiceFactory.html",
    "title": "Class VectorizationServiceFactory | FoundationaLLM",
    "summary": "Class VectorizationServiceFactory Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Assembly FoundationaLLM.Vectorization.Engine.dll Responsible for creating the appropriate vectorization service based on the request processing type. public class VectorizationServiceFactory Inheritance object VectorizationServiceFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationServiceFactory(IRequestSourcesCache, MemoryVectorizationStateService, IEnumerable<IResourceProviderService>, IConfigurationSection, IServiceProvider, ILoggerFactory) Responsible for creating the appropriate vectorization service based on the request processing type. public VectorizationServiceFactory(IRequestSourcesCache requestSourcesCache, MemoryVectorizationStateService inMemoryStateService, IEnumerable<IResourceProviderService> resourceProviderServices, IConfigurationSection stepsConfiguration, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters requestSourcesCache IRequestSourcesCache inMemoryStateService MemoryVectorizationStateService The In-Memory Vectorization State Service for Synchronous requests. resourceProviderServices IEnumerable<IResourceProviderService> The collection of configured Resource Providers. stepsConfiguration IConfigurationSection The configuration of different steps of the pipeline. serviceProvider IServiceProvider The service provider. loggerFactory ILoggerFactory The factory responsible for logging. Methods GetService(VectorizationRequest) Creates the appropriate vectorization service based on the request processing type. public IVectorizationService GetService(VectorizationRequest request) Parameters request VectorizationRequest The vectorization request. Returns IVectorizationService The vectorization service that will process the request."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationServices.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.VectorizationServices | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.VectorizationServices Classes AsynchronousVectorizationService Implements the IVectorizationService interface for Asynchronous vectorization requests. SynchronousVectorizationService Handles synchronous in-memory vectorization requests. VectorizationServiceFactory Responsible for creating the appropriate vectorization service based on the request processing type."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.BlobStorageVectorizationStateService.html",
    "title": "Class BlobStorageVectorizationStateService | FoundationaLLM",
    "summary": "Class BlobStorageVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.Engine.dll Provides vectorization state persistence services using Azure blob storage. public class BlobStorageVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase BlobStorageVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationRequest) VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationState) VectorizationStateServiceBase.HashContentIdentifier(ContentIdentifier) VectorizationStateServiceBase.HashText(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new vectorization state service instance. Constructors BlobStorageVectorizationStateService(IStorageService, ILoggerFactory) Provides vectorization state persistence services using Azure blob storage. public BlobStorageVectorizationStateService(IStorageService storageService, ILoggerFactory loggerFactory) Parameters storageService IStorageService The IStorageService that provides storage services. loggerFactory ILoggerFactory The logger factory used to create loggers. Remarks Creates a new vectorization state service instance. Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). public Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SavePipelineState(VectorizationPipelineExecution, VectorizationPipelineExecutionDetail?) Saves the state of a vectorization pipeline execution. public Task SavePipelineState(VectorizationPipelineExecution pipelineExecution, VectorizationPipelineExecutionDetail? pipelineExecutionDetail) Parameters pipelineExecution VectorizationPipelineExecution The main state of the pipeline execution. pipelineExecutionDetail VectorizationPipelineExecutionDetail The details associated with the main state of the pipeline execution. Returns Task SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task UpdatePipelineStateFromVectorizationRequest(VectorizationRequest) Updates the state of a vectorization pipeline execution based on the state of the specified vectorization request. public Task UpdatePipelineStateFromVectorizationRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The vectorization request based on which the pipeline execution state is being updated. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.MemoryVectorizationStateService.html",
    "title": "Class MemoryVectorizationStateService | FoundationaLLM",
    "summary": "Class MemoryVectorizationStateService Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.Engine.dll Provides in-memory vectorization state persistence. public class MemoryVectorizationStateService : VectorizationStateServiceBase, IVectorizationStateService Inheritance object VectorizationStateServiceBase MemoryVectorizationStateService Implements IVectorizationStateService Inherited Members VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationRequest) VectorizationStateServiceBase.GetPersistenceIdentifier(VectorizationState) VectorizationStateServiceBase.HashContentIdentifier(ContentIdentifier) VectorizationStateServiceBase.HashText(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods HasState(VectorizationRequest) Checks if a vectorization request has a persisted vectorization state. public Task<bool> HasState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object. Returns Task<bool> True if a persisted state was found. LoadArtifacts(VectorizationState, VectorizationArtifactType) Loads into the state the specified type of artifact(s). public Task LoadArtifacts(VectorizationState state, VectorizationArtifactType artifactType) Parameters state VectorizationState The vectorization state in which the artifacts will be loaded. artifactType VectorizationArtifactType The type of artifact(s) to load. Returns Task ReadState(VectorizationRequest) Reads the state associated with a vectorization request. public Task<VectorizationState> ReadState(VectorizationRequest request) Parameters request VectorizationRequest The VectorizationRequest object.. Returns Task<VectorizationState> A VectorizationState item containe the requested vectorization state. SavePipelineState(VectorizationPipelineExecution, VectorizationPipelineExecutionDetail?) Saves the state of a vectorization pipeline execution. public Task SavePipelineState(VectorizationPipelineExecution pipelineExecution, VectorizationPipelineExecutionDetail? pipelineExecutionDetail) Parameters pipelineExecution VectorizationPipelineExecution The main state of the pipeline execution. pipelineExecutionDetail VectorizationPipelineExecutionDetail The details associated with the main state of the pipeline execution. Returns Task SaveState(VectorizationState) Saves a specified vectorization state. public Task SaveState(VectorizationState state) Parameters state VectorizationState The VectorizationState item to be saved. Returns Task UpdatePipelineStateFromVectorizationRequest(VectorizationRequest) Updates the state of a vectorization pipeline execution based on the state of the specified vectorization request. public Task UpdatePipelineStateFromVectorizationRequest(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The vectorization request based on which the pipeline execution state is being updated. Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateItem.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateItem.html",
    "title": "Class VectorizationStateItem | FoundationaLLM",
    "summary": "Class VectorizationStateItem Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.Engine.dll Properties that are serialized in the Parquet file associated with the vectorization state. Combines properties from the TextPartition and the TextEmbeddingVector artifacts. public class VectorizationStateItem Inheritance object VectorizationStateItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Properties PipelineName The name of the pipeline the item relates to. [ParquetRequired] public string? PipelineName { get; set; } Property Value string Position The position of the item in the list of vectorization artifacts. [ParquetRequired] public int Position { get; set; } Property Value int TextEmbeddingVector The content of the TextEmbeddingVector artifact. public List<float>? TextEmbeddingVector { get; set; } Property Value List<float> TextEmbeddingVectorHash The MD5 of the TextEmbeddingVector artifact content in string format. public string? TextEmbeddingVectorHash { get; set; } Property Value string TextEmbeddingVectorSize The size of the TextEmbeddingVector artifact content (number of embedding dimensions). public int TextEmbeddingVectorSize { get; set; } Property Value int TextPartitionContent The content of the TextPartition artifact. [ParquetRequired] public string? TextPartitionContent { get; set; } Property Value string TextPartitionHash The MD5 hash of the TextPartition artifact content. [ParquetRequired] public string? TextPartitionHash { get; set; } Property Value string TextPartitionSize The size of the TextPartition artifact content. [ParquetRequired] public int TextPartitionSize { get; set; } Property Value int"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.VectorizationStateServiceBase.html",
    "title": "Class VectorizationStateServiceBase | FoundationaLLM",
    "summary": "Class VectorizationStateServiceBase Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Assembly FoundationaLLM.Vectorization.Engine.dll Provides base services for the vectorization state services. public abstract class VectorizationStateServiceBase Inheritance object VectorizationStateServiceBase Derived BlobStorageVectorizationStateService MemoryVectorizationStateService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods GetPersistenceIdentifier(VectorizationRequest) Gets the persistence identifier of the vectorization state based on the vectorization request. protected string GetPersistenceIdentifier(VectorizationRequest vectorizationRequest) Parameters vectorizationRequest VectorizationRequest The VectorizationRequest for which the persistence identifier is being built. Returns string The string version of the persistence identifier. GetPersistenceIdentifier(VectorizationState) Gets the persistence identifier of the vectorization state based on the vectorization state itself. protected string GetPersistenceIdentifier(VectorizationState vectorizationState) Parameters vectorizationState VectorizationState The VectorizationState for which the persistence identifier is being built. Returns string The string version of the persistence identifier. HashContentIdentifier(ContentIdentifier) Computes the MD5 hash of the content identifier. protected static string HashContentIdentifier(ContentIdentifier contentIdentifier) Parameters contentIdentifier ContentIdentifier The ContentIdentifier holding the content identification information. Returns string The string version of the hash. HashText(string) Computes the MD5 hash of a specified chunk of text. protected static string HashText(string text) Parameters text string The chunk of text to be hashed. Returns string The string version of the hash."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.VectorizationStates.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services.VectorizationStates Classes BlobStorageVectorizationStateService Provides vectorization state persistence services using Azure blob storage. MemoryVectorizationStateService Provides in-memory vectorization state persistence. VectorizationStateItem Properties that are serialized in the Parquet file associated with the vectorization state. Combines properties from the TextPartition and the TextEmbeddingVector artifacts. VectorizationStateServiceBase Provides base services for the vectorization state services."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Services.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Services.html",
    "title": "Namespace FoundationaLLM.Vectorization.Services | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Services Namespaces FoundationaLLM.Vectorization.Services.ContentSources FoundationaLLM.Vectorization.Services.DataSources FoundationaLLM.Vectorization.Services.Pipelines FoundationaLLM.Vectorization.Services.RequestProcessors FoundationaLLM.Vectorization.Services.RequestSources FoundationaLLM.Vectorization.Services.Text FoundationaLLM.Vectorization.Services.VectorizationServices FoundationaLLM.Vectorization.Services.VectorizationStates Classes RequestManagerService Manages vectorization requests originating from a specific request source."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.IndexingProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.IndexingProfileValidator.html",
    "title": "Class IndexingProfileValidator | FoundationaLLM",
    "summary": "Class IndexingProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the IndexingProfile model. public class IndexingProfileValidator : AbstractValidator<IndexingProfile>, IValidator<IndexingProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<IndexingProfile> IndexingProfileValidator Implements IValidator<IndexingProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<IndexingProfile>.Validate(IndexingProfile) AbstractValidator<IndexingProfile>.ValidateAsync(IndexingProfile, CancellationToken) AbstractValidator<IndexingProfile>.Validate(ValidationContext<IndexingProfile>) AbstractValidator<IndexingProfile>.ValidateAsync(ValidationContext<IndexingProfile>, CancellationToken) AbstractValidator<IndexingProfile>.CreateDescriptor() AbstractValidator<IndexingProfile>.RuleFor<TProperty>(Expression<Func<IndexingProfile, TProperty>>) AbstractValidator<IndexingProfile>.Transform<TProperty, TTransformed>(Expression<Func<IndexingProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<IndexingProfile>.Transform<TProperty, TTransformed>(Expression<Func<IndexingProfile, TProperty>>, Func<IndexingProfile, TProperty, TTransformed>) AbstractValidator<IndexingProfile>.RuleForEach<TElement>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>) AbstractValidator<IndexingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<IndexingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<IndexingProfile, IEnumerable<TElement>>>, Func<IndexingProfile, TElement, TTransformed>) AbstractValidator<IndexingProfile>.RuleSet(string, Action) AbstractValidator<IndexingProfile>.When(Func<IndexingProfile, bool>, Action) AbstractValidator<IndexingProfile>.When(Func<IndexingProfile, ValidationContext<IndexingProfile>, bool>, Action) AbstractValidator<IndexingProfile>.Unless(Func<IndexingProfile, bool>, Action) AbstractValidator<IndexingProfile>.Unless(Func<IndexingProfile, ValidationContext<IndexingProfile>, bool>, Action) AbstractValidator<IndexingProfile>.WhenAsync(Func<IndexingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.WhenAsync(Func<IndexingProfile, ValidationContext<IndexingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.UnlessAsync(Func<IndexingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.UnlessAsync(Func<IndexingProfile, ValidationContext<IndexingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<IndexingProfile>.Include(IValidator<IndexingProfile>) AbstractValidator<IndexingProfile>.Include<TValidator>(Func<IndexingProfile, TValidator>) AbstractValidator<IndexingProfile>.GetEnumerator() AbstractValidator<IndexingProfile>.EnsureInstanceNotNull(object) AbstractValidator<IndexingProfile>.PreValidate(ValidationContext<IndexingProfile>, ValidationResult) AbstractValidator<IndexingProfile>.RaiseValidationException(ValidationContext<IndexingProfile>, ValidationResult) AbstractValidator<IndexingProfile>.OnRuleAdded(IValidationRule<IndexingProfile>) AbstractValidator<IndexingProfile>.CascadeMode AbstractValidator<IndexingProfile>.ClassLevelCascadeMode AbstractValidator<IndexingProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors IndexingProfileValidator() Configures the validation rules for the IndexingProfile model. public IndexingProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextEmbeddingProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextEmbeddingProfileValidator.html",
    "title": "Class TextEmbeddingProfileValidator | FoundationaLLM",
    "summary": "Class TextEmbeddingProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the TextEmbeddingProfile model. public class TextEmbeddingProfileValidator : AbstractValidator<TextEmbeddingProfile>, IValidator<TextEmbeddingProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<TextEmbeddingProfile> TextEmbeddingProfileValidator Implements IValidator<TextEmbeddingProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<TextEmbeddingProfile>.Validate(TextEmbeddingProfile) AbstractValidator<TextEmbeddingProfile>.ValidateAsync(TextEmbeddingProfile, CancellationToken) AbstractValidator<TextEmbeddingProfile>.Validate(ValidationContext<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.ValidateAsync(ValidationContext<TextEmbeddingProfile>, CancellationToken) AbstractValidator<TextEmbeddingProfile>.CreateDescriptor() AbstractValidator<TextEmbeddingProfile>.RuleFor<TProperty>(Expression<Func<TextEmbeddingProfile, TProperty>>) AbstractValidator<TextEmbeddingProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextEmbeddingProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<TextEmbeddingProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextEmbeddingProfile, TProperty>>, Func<TextEmbeddingProfile, TProperty, TTransformed>) AbstractValidator<TextEmbeddingProfile>.RuleForEach<TElement>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>) AbstractValidator<TextEmbeddingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<TextEmbeddingProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextEmbeddingProfile, IEnumerable<TElement>>>, Func<TextEmbeddingProfile, TElement, TTransformed>) AbstractValidator<TextEmbeddingProfile>.RuleSet(string, Action) AbstractValidator<TextEmbeddingProfile>.When(Func<TextEmbeddingProfile, bool>, Action) AbstractValidator<TextEmbeddingProfile>.When(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, bool>, Action) AbstractValidator<TextEmbeddingProfile>.Unless(Func<TextEmbeddingProfile, bool>, Action) AbstractValidator<TextEmbeddingProfile>.Unless(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, bool>, Action) AbstractValidator<TextEmbeddingProfile>.WhenAsync(Func<TextEmbeddingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.WhenAsync(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.UnlessAsync(Func<TextEmbeddingProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.UnlessAsync(Func<TextEmbeddingProfile, ValidationContext<TextEmbeddingProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextEmbeddingProfile>.Include(IValidator<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.Include<TValidator>(Func<TextEmbeddingProfile, TValidator>) AbstractValidator<TextEmbeddingProfile>.GetEnumerator() AbstractValidator<TextEmbeddingProfile>.EnsureInstanceNotNull(object) AbstractValidator<TextEmbeddingProfile>.PreValidate(ValidationContext<TextEmbeddingProfile>, ValidationResult) AbstractValidator<TextEmbeddingProfile>.RaiseValidationException(ValidationContext<TextEmbeddingProfile>, ValidationResult) AbstractValidator<TextEmbeddingProfile>.OnRuleAdded(IValidationRule<TextEmbeddingProfile>) AbstractValidator<TextEmbeddingProfile>.CascadeMode AbstractValidator<TextEmbeddingProfile>.ClassLevelCascadeMode AbstractValidator<TextEmbeddingProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextEmbeddingProfileValidator() Configures the validation rules for the TextEmbeddingProfile model. public TextEmbeddingProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextPartitioningProfileValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.TextPartitioningProfileValidator.html",
    "title": "Class TextPartitioningProfileValidator | FoundationaLLM",
    "summary": "Class TextPartitioningProfileValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the TextPartitioningProfile model. public class TextPartitioningProfileValidator : AbstractValidator<TextPartitioningProfile>, IValidator<TextPartitioningProfile>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<TextPartitioningProfile> TextPartitioningProfileValidator Implements IValidator<TextPartitioningProfile> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<TextPartitioningProfile>.Validate(TextPartitioningProfile) AbstractValidator<TextPartitioningProfile>.ValidateAsync(TextPartitioningProfile, CancellationToken) AbstractValidator<TextPartitioningProfile>.Validate(ValidationContext<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.ValidateAsync(ValidationContext<TextPartitioningProfile>, CancellationToken) AbstractValidator<TextPartitioningProfile>.CreateDescriptor() AbstractValidator<TextPartitioningProfile>.RuleFor<TProperty>(Expression<Func<TextPartitioningProfile, TProperty>>) AbstractValidator<TextPartitioningProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextPartitioningProfile, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<TextPartitioningProfile>.Transform<TProperty, TTransformed>(Expression<Func<TextPartitioningProfile, TProperty>>, Func<TextPartitioningProfile, TProperty, TTransformed>) AbstractValidator<TextPartitioningProfile>.RuleForEach<TElement>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>) AbstractValidator<TextPartitioningProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<TextPartitioningProfile>.TransformForEach<TElement, TTransformed>(Expression<Func<TextPartitioningProfile, IEnumerable<TElement>>>, Func<TextPartitioningProfile, TElement, TTransformed>) AbstractValidator<TextPartitioningProfile>.RuleSet(string, Action) AbstractValidator<TextPartitioningProfile>.When(Func<TextPartitioningProfile, bool>, Action) AbstractValidator<TextPartitioningProfile>.When(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, bool>, Action) AbstractValidator<TextPartitioningProfile>.Unless(Func<TextPartitioningProfile, bool>, Action) AbstractValidator<TextPartitioningProfile>.Unless(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, bool>, Action) AbstractValidator<TextPartitioningProfile>.WhenAsync(Func<TextPartitioningProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.WhenAsync(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.UnlessAsync(Func<TextPartitioningProfile, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.UnlessAsync(Func<TextPartitioningProfile, ValidationContext<TextPartitioningProfile>, CancellationToken, Task<bool>>, Action) AbstractValidator<TextPartitioningProfile>.Include(IValidator<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.Include<TValidator>(Func<TextPartitioningProfile, TValidator>) AbstractValidator<TextPartitioningProfile>.GetEnumerator() AbstractValidator<TextPartitioningProfile>.EnsureInstanceNotNull(object) AbstractValidator<TextPartitioningProfile>.PreValidate(ValidationContext<TextPartitioningProfile>, ValidationResult) AbstractValidator<TextPartitioningProfile>.RaiseValidationException(ValidationContext<TextPartitioningProfile>, ValidationResult) AbstractValidator<TextPartitioningProfile>.OnRuleAdded(IValidationRule<TextPartitioningProfile>) AbstractValidator<TextPartitioningProfile>.CascadeMode AbstractValidator<TextPartitioningProfile>.ClassLevelCascadeMode AbstractValidator<TextPartitioningProfile>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors TextPartitioningProfileValidator() Configures the validation rules for the TextPartitioningProfile model. public TextPartitioningProfileValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationPipelineValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationPipelineValidator.html",
    "title": "Class VectorizationPipelineValidator | FoundationaLLM",
    "summary": "Class VectorizationPipelineValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the VectorizationPipeline model. public class VectorizationPipelineValidator : AbstractValidator<VectorizationPipeline>, IValidator<VectorizationPipeline>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationPipeline> VectorizationPipelineValidator Implements IValidator<VectorizationPipeline> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationPipeline>.Validate(VectorizationPipeline) AbstractValidator<VectorizationPipeline>.ValidateAsync(VectorizationPipeline, CancellationToken) AbstractValidator<VectorizationPipeline>.Validate(ValidationContext<VectorizationPipeline>) AbstractValidator<VectorizationPipeline>.ValidateAsync(ValidationContext<VectorizationPipeline>, CancellationToken) AbstractValidator<VectorizationPipeline>.CreateDescriptor() AbstractValidator<VectorizationPipeline>.RuleFor<TProperty>(Expression<Func<VectorizationPipeline, TProperty>>) AbstractValidator<VectorizationPipeline>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationPipeline, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationPipeline>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationPipeline, TProperty>>, Func<VectorizationPipeline, TProperty, TTransformed>) AbstractValidator<VectorizationPipeline>.RuleForEach<TElement>(Expression<Func<VectorizationPipeline, IEnumerable<TElement>>>) AbstractValidator<VectorizationPipeline>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationPipeline, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationPipeline>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationPipeline, IEnumerable<TElement>>>, Func<VectorizationPipeline, TElement, TTransformed>) AbstractValidator<VectorizationPipeline>.RuleSet(string, Action) AbstractValidator<VectorizationPipeline>.When(Func<VectorizationPipeline, bool>, Action) AbstractValidator<VectorizationPipeline>.When(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, bool>, Action) AbstractValidator<VectorizationPipeline>.Unless(Func<VectorizationPipeline, bool>, Action) AbstractValidator<VectorizationPipeline>.Unless(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, bool>, Action) AbstractValidator<VectorizationPipeline>.WhenAsync(Func<VectorizationPipeline, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.WhenAsync(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.UnlessAsync(Func<VectorizationPipeline, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.UnlessAsync(Func<VectorizationPipeline, ValidationContext<VectorizationPipeline>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationPipeline>.Include(IValidator<VectorizationPipeline>) AbstractValidator<VectorizationPipeline>.Include<TValidator>(Func<VectorizationPipeline, TValidator>) AbstractValidator<VectorizationPipeline>.GetEnumerator() AbstractValidator<VectorizationPipeline>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationPipeline>.PreValidate(ValidationContext<VectorizationPipeline>, ValidationResult) AbstractValidator<VectorizationPipeline>.RaiseValidationException(ValidationContext<VectorizationPipeline>, ValidationResult) AbstractValidator<VectorizationPipeline>.OnRuleAdded(IValidationRule<VectorizationPipeline>) AbstractValidator<VectorizationPipeline>.CascadeMode AbstractValidator<VectorizationPipeline>.ClassLevelCascadeMode AbstractValidator<VectorizationPipeline>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationPipelineValidator() Configures the validation rules for the VectorizationPipeline model. public VectorizationPipelineValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationProfileBaseValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationProfileBaseValidator.html",
    "title": "Class VectorizationProfileBaseValidator | FoundationaLLM",
    "summary": "Class VectorizationProfileBaseValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the VectorizationProfileBase model. public class VectorizationProfileBaseValidator : AbstractValidator<VectorizationProfileBase>, IValidator<VectorizationProfileBase>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationProfileBase> VectorizationProfileBaseValidator Implements IValidator<VectorizationProfileBase> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationProfileBase>.Validate(VectorizationProfileBase) AbstractValidator<VectorizationProfileBase>.ValidateAsync(VectorizationProfileBase, CancellationToken) AbstractValidator<VectorizationProfileBase>.Validate(ValidationContext<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.ValidateAsync(ValidationContext<VectorizationProfileBase>, CancellationToken) AbstractValidator<VectorizationProfileBase>.CreateDescriptor() AbstractValidator<VectorizationProfileBase>.RuleFor<TProperty>(Expression<Func<VectorizationProfileBase, TProperty>>) AbstractValidator<VectorizationProfileBase>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationProfileBase, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationProfileBase>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationProfileBase, TProperty>>, Func<VectorizationProfileBase, TProperty, TTransformed>) AbstractValidator<VectorizationProfileBase>.RuleForEach<TElement>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>) AbstractValidator<VectorizationProfileBase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationProfileBase>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationProfileBase, IEnumerable<TElement>>>, Func<VectorizationProfileBase, TElement, TTransformed>) AbstractValidator<VectorizationProfileBase>.RuleSet(string, Action) AbstractValidator<VectorizationProfileBase>.When(Func<VectorizationProfileBase, bool>, Action) AbstractValidator<VectorizationProfileBase>.When(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, bool>, Action) AbstractValidator<VectorizationProfileBase>.Unless(Func<VectorizationProfileBase, bool>, Action) AbstractValidator<VectorizationProfileBase>.Unless(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, bool>, Action) AbstractValidator<VectorizationProfileBase>.WhenAsync(Func<VectorizationProfileBase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.WhenAsync(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.UnlessAsync(Func<VectorizationProfileBase, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.UnlessAsync(Func<VectorizationProfileBase, ValidationContext<VectorizationProfileBase>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationProfileBase>.Include(IValidator<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.Include<TValidator>(Func<VectorizationProfileBase, TValidator>) AbstractValidator<VectorizationProfileBase>.GetEnumerator() AbstractValidator<VectorizationProfileBase>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationProfileBase>.PreValidate(ValidationContext<VectorizationProfileBase>, ValidationResult) AbstractValidator<VectorizationProfileBase>.RaiseValidationException(ValidationContext<VectorizationProfileBase>, ValidationResult) AbstractValidator<VectorizationProfileBase>.OnRuleAdded(IValidationRule<VectorizationProfileBase>) AbstractValidator<VectorizationProfileBase>.CascadeMode AbstractValidator<VectorizationProfileBase>.ClassLevelCascadeMode AbstractValidator<VectorizationProfileBase>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationProfileBaseValidator() Configures the validation rules for the VectorizationProfileBase model. public VectorizationProfileBaseValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestCreationTimeValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestCreationTimeValidator.html",
    "title": "Class VectorizationRequestCreationTimeValidator | FoundationaLLM",
    "summary": "Class VectorizationRequestCreationTimeValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the creation of a VectorizationRequest. public class VectorizationRequestCreationTimeValidator : AbstractValidator<VectorizationRequest>, IValidator<VectorizationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationRequest> VectorizationRequestCreationTimeValidator Implements IValidator<VectorizationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationRequest>.Validate(VectorizationRequest) AbstractValidator<VectorizationRequest>.ValidateAsync(VectorizationRequest, CancellationToken) AbstractValidator<VectorizationRequest>.Validate(ValidationContext<VectorizationRequest>) AbstractValidator<VectorizationRequest>.ValidateAsync(ValidationContext<VectorizationRequest>, CancellationToken) AbstractValidator<VectorizationRequest>.CreateDescriptor() AbstractValidator<VectorizationRequest>.RuleFor<TProperty>(Expression<Func<VectorizationRequest, TProperty>>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<VectorizationRequest, TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.RuleForEach<TElement>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<VectorizationRequest, TElement, TTransformed>) AbstractValidator<VectorizationRequest>.RuleSet(string, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.Include(IValidator<VectorizationRequest>) AbstractValidator<VectorizationRequest>.Include<TValidator>(Func<VectorizationRequest, TValidator>) AbstractValidator<VectorizationRequest>.GetEnumerator() AbstractValidator<VectorizationRequest>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationRequest>.PreValidate(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.RaiseValidationException(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.OnRuleAdded(IValidationRule<VectorizationRequest>) AbstractValidator<VectorizationRequest>.CascadeMode AbstractValidator<VectorizationRequest>.ClassLevelCascadeMode AbstractValidator<VectorizationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationRequestCreationTimeValidator() Configures the validation rules for the creation of a VectorizationRequest. public VectorizationRequestCreationTimeValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.VectorizationRequestValidator.html",
    "title": "Class VectorizationRequestValidator | FoundationaLLM",
    "summary": "Class VectorizationRequestValidator Namespace FoundationaLLM.Vectorization.Validation.Resources Assembly FoundationaLLM.Vectorization.dll Validator for the VectorizationRequest model. public class VectorizationRequestValidator : AbstractValidator<VectorizationRequest>, IValidator<VectorizationRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<VectorizationRequest> VectorizationRequestValidator Implements IValidator<VectorizationRequest> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<VectorizationRequest>.Validate(VectorizationRequest) AbstractValidator<VectorizationRequest>.ValidateAsync(VectorizationRequest, CancellationToken) AbstractValidator<VectorizationRequest>.Validate(ValidationContext<VectorizationRequest>) AbstractValidator<VectorizationRequest>.ValidateAsync(ValidationContext<VectorizationRequest>, CancellationToken) AbstractValidator<VectorizationRequest>.CreateDescriptor() AbstractValidator<VectorizationRequest>.RuleFor<TProperty>(Expression<Func<VectorizationRequest, TProperty>>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.Transform<TProperty, TTransformed>(Expression<Func<VectorizationRequest, TProperty>>, Func<VectorizationRequest, TProperty, TTransformed>) AbstractValidator<VectorizationRequest>.RuleForEach<TElement>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<VectorizationRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<VectorizationRequest, IEnumerable<TElement>>>, Func<VectorizationRequest, TElement, TTransformed>) AbstractValidator<VectorizationRequest>.RuleSet(string, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.When(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, bool>, Action) AbstractValidator<VectorizationRequest>.Unless(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, bool>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.WhenAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.UnlessAsync(Func<VectorizationRequest, ValidationContext<VectorizationRequest>, CancellationToken, Task<bool>>, Action) AbstractValidator<VectorizationRequest>.Include(IValidator<VectorizationRequest>) AbstractValidator<VectorizationRequest>.Include<TValidator>(Func<VectorizationRequest, TValidator>) AbstractValidator<VectorizationRequest>.GetEnumerator() AbstractValidator<VectorizationRequest>.EnsureInstanceNotNull(object) AbstractValidator<VectorizationRequest>.PreValidate(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.RaiseValidationException(ValidationContext<VectorizationRequest>, ValidationResult) AbstractValidator<VectorizationRequest>.OnRuleAdded(IValidationRule<VectorizationRequest>) AbstractValidator<VectorizationRequest>.CascadeMode AbstractValidator<VectorizationRequest>.ClassLevelCascadeMode AbstractValidator<VectorizationRequest>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationRequestValidator() Configures the validation rules for the VectorizationRequest model. public VectorizationRequestValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Resources.html",
    "title": "Namespace FoundationaLLM.Vectorization.Validation.Resources | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Validation.Resources Classes IndexingProfileValidator Validator for the IndexingProfile model. TextEmbeddingProfileValidator Validator for the TextEmbeddingProfile model. TextPartitioningProfileValidator Validator for the TextPartitioningProfile model. VectorizationPipelineValidator Validator for the VectorizationPipeline model. VectorizationProfileBaseValidator Validator for the VectorizationProfileBase model. VectorizationRequestCreationTimeValidator Validator for the creation of a VectorizationRequest. VectorizationRequestValidator Validator for the VectorizationRequest model."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.ContentIdentifierValidator.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.ContentIdentifierValidator.html",
    "title": "Class ContentIdentifierValidator | FoundationaLLM",
    "summary": "Class ContentIdentifierValidator Namespace FoundationaLLM.Vectorization.Validation.Vectorization Assembly FoundationaLLM.Vectorization.Engine.dll Validator for the ContentIdentifier model. public class ContentIdentifierValidator : AbstractValidator<ContentIdentifier>, IValidator<ContentIdentifier>, IValidator, IEnumerable<IValidationRule>, IEnumerable Inheritance object AbstractValidator<ContentIdentifier> ContentIdentifierValidator Implements IValidator<ContentIdentifier> IValidator IEnumerable<IValidationRule> IEnumerable Inherited Members AbstractValidator<ContentIdentifier>.Validate(ContentIdentifier) AbstractValidator<ContentIdentifier>.ValidateAsync(ContentIdentifier, CancellationToken) AbstractValidator<ContentIdentifier>.Validate(ValidationContext<ContentIdentifier>) AbstractValidator<ContentIdentifier>.ValidateAsync(ValidationContext<ContentIdentifier>, CancellationToken) AbstractValidator<ContentIdentifier>.CreateDescriptor() AbstractValidator<ContentIdentifier>.RuleFor<TProperty>(Expression<Func<ContentIdentifier, TProperty>>) AbstractValidator<ContentIdentifier>.Transform<TProperty, TTransformed>(Expression<Func<ContentIdentifier, TProperty>>, Func<TProperty, TTransformed>) AbstractValidator<ContentIdentifier>.Transform<TProperty, TTransformed>(Expression<Func<ContentIdentifier, TProperty>>, Func<ContentIdentifier, TProperty, TTransformed>) AbstractValidator<ContentIdentifier>.RuleForEach<TElement>(Expression<Func<ContentIdentifier, IEnumerable<TElement>>>) AbstractValidator<ContentIdentifier>.TransformForEach<TElement, TTransformed>(Expression<Func<ContentIdentifier, IEnumerable<TElement>>>, Func<TElement, TTransformed>) AbstractValidator<ContentIdentifier>.TransformForEach<TElement, TTransformed>(Expression<Func<ContentIdentifier, IEnumerable<TElement>>>, Func<ContentIdentifier, TElement, TTransformed>) AbstractValidator<ContentIdentifier>.RuleSet(string, Action) AbstractValidator<ContentIdentifier>.When(Func<ContentIdentifier, bool>, Action) AbstractValidator<ContentIdentifier>.When(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, bool>, Action) AbstractValidator<ContentIdentifier>.Unless(Func<ContentIdentifier, bool>, Action) AbstractValidator<ContentIdentifier>.Unless(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, bool>, Action) AbstractValidator<ContentIdentifier>.WhenAsync(Func<ContentIdentifier, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.WhenAsync(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.UnlessAsync(Func<ContentIdentifier, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.UnlessAsync(Func<ContentIdentifier, ValidationContext<ContentIdentifier>, CancellationToken, Task<bool>>, Action) AbstractValidator<ContentIdentifier>.Include(IValidator<ContentIdentifier>) AbstractValidator<ContentIdentifier>.Include<TValidator>(Func<ContentIdentifier, TValidator>) AbstractValidator<ContentIdentifier>.GetEnumerator() AbstractValidator<ContentIdentifier>.EnsureInstanceNotNull(object) AbstractValidator<ContentIdentifier>.PreValidate(ValidationContext<ContentIdentifier>, ValidationResult) AbstractValidator<ContentIdentifier>.RaiseValidationException(ValidationContext<ContentIdentifier>, ValidationResult) AbstractValidator<ContentIdentifier>.OnRuleAdded(IValidationRule<ContentIdentifier>) AbstractValidator<ContentIdentifier>.CascadeMode AbstractValidator<ContentIdentifier>.ClassLevelCascadeMode AbstractValidator<ContentIdentifier>.RuleLevelCascadeMode object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors ContentIdentifierValidator() Configures the validation rules for the ContentIdentifier model. public ContentIdentifierValidator()"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.Vectorization.html",
    "title": "Namespace FoundationaLLM.Vectorization.Validation.Vectorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Validation.Vectorization Classes ContentIdentifierValidator Validator for the ContentIdentifier model."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Validation.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Validation.html",
    "title": "Namespace FoundationaLLM.Vectorization.Validation | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Validation Namespaces FoundationaLLM.Vectorization.Validation.Resources FoundationaLLM.Vectorization.Validation.Vectorization"
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorker.html",
    "title": "Class VectorizationWorker | FoundationaLLM",
    "summary": "Class VectorizationWorker Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.Engine.dll Provides the core execution context for the vectorization worker. public class VectorizationWorker Inheritance object VectorizationWorker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorker(IEnumerable<IRequestManagerService>) Provides the core execution context for the vectorization worker. public VectorizationWorker(IEnumerable<IRequestManagerService> requestManagerServices) Parameters requestManagerServices IEnumerable<IRequestManagerService> The collection of request managers to run. Methods Run() Starts all the request managers and enters a holding pattern waiting on them to stop. public Task Run() Returns Task"
  },
  "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.VectorizationWorkerBuilder.html",
    "title": "Class VectorizationWorkerBuilder | FoundationaLLM",
    "summary": "Class VectorizationWorkerBuilder Namespace FoundationaLLM.Vectorization Assembly FoundationaLLM.Vectorization.Engine.dll Implements a builder for a vectorization worker. public class VectorizationWorkerBuilder Inheritance object VectorizationWorkerBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Constructors VectorizationWorkerBuilder() Constructs a new instance of the builder. public VectorizationWorkerBuilder() Methods Build() Builds the vectorization worker. public VectorizationWorker Build() Returns VectorizationWorker The vectorization worker instance. Exceptions VectorizationException Thrown if the state of the builder was not properly initialized. WithCancellationToken(CancellationToken) Specifies the cancellation token used to signal stopping the vectorization worker. public VectorizationWorkerBuilder WithCancellationToken(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The CancellationToken used to signal stopping. Returns VectorizationWorkerBuilder The updated instance of the builder. WithLoggerFactory(ILoggerFactory) Specifies the logger factory used to create loggers for child objects. public VectorizationWorkerBuilder WithLoggerFactory(ILoggerFactory loggerFactory) Parameters loggerFactory ILoggerFactory The ILoggerFactory used to create loggers. Returns VectorizationWorkerBuilder The updated instance of the builder. WithQueuesConfiguration(IConfigurationSection) Specifies the configuration section containing settings for the queues used by the vectorization worker. public VectorizationWorkerBuilder WithQueuesConfiguration(IConfigurationSection queuesConfiguration) Parameters queuesConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithServiceProvider(IServiceProvider) Specifies the dependency injection service provider. public VectorizationWorkerBuilder WithServiceProvider(IServiceProvider serviceProvider) Parameters serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. Returns VectorizationWorkerBuilder The updated instance of the builder. WithSettings(VectorizationWorkerSettings) Specifies the settings used to build the vectorization worker. public VectorizationWorkerBuilder WithSettings(VectorizationWorkerSettings settings) Parameters settings VectorizationWorkerSettings The VectorizationWorkerSettingsobject providing the settings. Returns VectorizationWorkerBuilder The updated instance of the builder. WithStateService(IVectorizationStateService) Specifies the vectorization state service that manages vectorization states. public VectorizationWorkerBuilder WithStateService(IVectorizationStateService stateService) Parameters stateService IVectorizationStateService The IVectorizationStateService service managing state. Returns VectorizationWorkerBuilder The updated instance of the builder. WithStepsConfiguration(IConfigurationSection) Specifies the configuration section containing settings for vectorization pipeline steps. public VectorizationWorkerBuilder WithStepsConfiguration(IConfigurationSection stepsConfiguration) Parameters stepsConfiguration IConfigurationSection The IConfigurationSection object providing access to the settings. Returns VectorizationWorkerBuilder The updated instance of the builder."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.StatusController.html",
    "title": "Class StatusController | FoundationaLLM",
    "summary": "Class StatusController Namespace FoundationaLLM.Vectorization.Worker.Controllers Assembly FoundationaLLM.Vectorization.Worker.dll Provides methods for checking the status of the service. [ApiController] [Route(\"[controller]\")] public class StatusController : ControllerBase Inheritance object ControllerBase StatusController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Methods Get() Returns the status of the Vectorization Worker service. [HttpGet(Name = \"GetServiceStatus\")] public IActionResult Get() Returns IActionResult Options() Returns the allowed HTTP methods for the Vectorization Worker service. [HttpOptions] public IActionResult Options() Returns IActionResult"
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Controllers.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker.Controllers | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Worker.Controllers Classes StatusController Provides methods for checking the status of the service."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.Worker.html",
    "title": "Class Worker | FoundationaLLM",
    "summary": "Class Worker Namespace FoundationaLLM.Vectorization.Worker Assembly FoundationaLLM.Vectorization.Worker.dll The background service used to run the worker. public class Worker : BackgroundService, IHostedService, IDisposable Inheritance object BackgroundService Worker Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.StopAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ObjectExtensions.GetPropertyValues(object, List<string>) Remarks Creates a new instance of the worker. Constructors Worker(IVectorizationStateService, IOptions<VectorizationWorkerSettings>, IConfigurationSection, IConfigurationSection, IServiceProvider, ILoggerFactory) The background service used to run the worker. public Worker(IVectorizationStateService stateService, IOptions<VectorizationWorkerSettings> settings, IConfigurationSection queuesConfigurationSection, IConfigurationSection stepsConfigurationSection, IServiceProvider serviceProvider, ILoggerFactory loggerFactory) Parameters stateService IVectorizationStateService The IVectorizationStateService used to manage the vectorization state. settings IOptions<VectorizationWorkerSettings> The VectorizationWorkerSettings options holding the vectorization worker settings. queuesConfigurationSection IConfigurationSection The IConfigurationSection containing settings for the queues. stepsConfigurationSection IConfigurationSection The IConfigurationSection containing settings for the vectorization steps. serviceProvider IServiceProvider The IServiceProvider implemented by the dependency injection container. loggerFactory ILoggerFactory The ILoggerFactory used to create loggers in child objects. Remarks Creates a new instance of the worker. Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines."
  },
  "api/dotnet/FoundationaLLM.Vectorization.Worker.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.Worker.html",
    "title": "Namespace FoundationaLLM.Vectorization.Worker | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization.Worker Namespaces FoundationaLLM.Vectorization.Worker.Controllers Classes Worker The background service used to run the worker."
  },
  "api/dotnet/FoundationaLLM.Vectorization.html": {
    "href": "api/dotnet/FoundationaLLM.Vectorization.html",
    "title": "Namespace FoundationaLLM.Vectorization | FoundationaLLM",
    "summary": "Namespace FoundationaLLM.Vectorization Namespaces FoundationaLLM.Vectorization.API.Controllers FoundationaLLM.Vectorization.Client FoundationaLLM.Vectorization.DataFormats FoundationaLLM.Vectorization.Extensions FoundationaLLM.Vectorization.Handlers FoundationaLLM.Vectorization.Interfaces FoundationaLLM.Vectorization.Models FoundationaLLM.Vectorization.ResourceProviders FoundationaLLM.Vectorization.Serializers FoundationaLLM.Vectorization.Services FoundationaLLM.Vectorization.Validation FoundationaLLM.Vectorization.Worker Classes VectorizationWorker Provides the core execution context for the vectorization worker. VectorizationWorkerBuilder Implements a builder for a vectorization worker."
  },
  "api/dotnet/FoundationaLLM.html": {
    "href": "api/dotnet/FoundationaLLM.html",
    "title": "Namespace FoundationaLLM | FoundationaLLM",
    "summary": "Namespace FoundationaLLM Namespaces FoundationaLLM.AIModel FoundationaLLM.Agent FoundationaLLM.Attachment FoundationaLLM.Authorization FoundationaLLM.AuthorizationEngine FoundationaLLM.AzureOpenAI.ResourceProviders FoundationaLLM.CSharpCodeSession.API FoundationaLLM.Client FoundationaLLM.Common FoundationaLLM.Configuration FoundationaLLM.Context FoundationaLLM.Conversation.ResourceProviders FoundationaLLM.Core FoundationaLLM.DataPipeline FoundationaLLM.DataPipelineEngine FoundationaLLM.DataSource FoundationaLLM.Gatekeeper FoundationaLLM.Gateway FoundationaLLM.Management.API FoundationaLLM.Orchestration FoundationaLLM.Plugin FoundationaLLM.Plugins.DataPipeline FoundationaLLM.Prompt FoundationaLLM.SemanticKernel FoundationaLLM.State FoundationaLLM.Vector.ResourceProviders FoundationaLLM.Vectorization Classes DependencyInjection Provides dependency injection extensions for the FoundationaLLM Data Pipeline service. ValidatedEnvironment Provides methods for working with the environment."
  },
  "api/dotnet/index.html": {
    "href": "api/dotnet/index.html",
    "title": ".NET API | FoundationaLLM",
    "summary": ".NET API Use the navigation on the left to browse the .NET API documentation."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API documentation | FoundationaLLM",
    "summary": "API documentation FoundationaLLM has both .NET and Python and Python APIs: .NET API Python API"
  },
  "api/python/index.html": {
    "href": "api/python/index.html",
    "title": "Python API | FoundationaLLM",
    "summary": "Python API Use the navigation on the left to browse the Python API documentation."
  },
  "concepts/data-pipeline/data-pipeline.html": {
    "href": "concepts/data-pipeline/data-pipeline.html",
    "title": "Data Pipelines | FoundationaLLM",
    "summary": "Data Pipelines Overview The following diagram illustrates the high level structure of a FoundationaLLM data pipeline: Data pipelines have three main components: Data Pipeline Data Source: The source of the data that will be processed by the pipeline. Data Pipeline Stages: The stages that the data will go through in the pipeline. The stages are structure as a forest, with one or more starting stages. Data Pipeline Trigger: The trigger that will start the pipeline execution. Trigger can be a schedule, an event (e.g., new content added to the data source), or a manual action. The data source and the stages define parameters that are required for the pipeline execution. The parameters metadata is provided by the plugin that implements that particular data source or stage. Parameters can have default values, which can be overridden when the pipeline is executed. Note Triggers of type Schedule or Event must provide a complete set of parameter values. This is because the trigger will use these values to start the pipeline execution and there is no user interaction to provide missing values. In the case of a manual trigger, the user will be prompted to provide the missing values. Here is an example of a simple data pipeline that reads data from an Azure Data Lake storage account, extracts text from files, partitions the text into chunks of a certain size, embeds the chunks and deposits them into an Azure AI Search index: { \"type\": \"data-pipeline\", \"name\": \"DataPipeline01\", \"display_name\": \"Data Pipeline 01\", \"description\": \"Data Pipeline demo.\", \"active\": false, \"data_source\": { \"name\": \"VGDataLake\", \"description\": \"Victorious Ground data lake storage.\", \"plugin_object_id\": \"instances/{{instanceId}}/providers/FoundationaLLM.Plugin/plugins/AzureDataLakeDataSource\", \"plugin_parameters\": [ { \"parameter_metadata\": { \"name\": \"Folders\", \"type\": \"array\", \"description\": \"A list of strings defining data lake folders.\" }, \"default_value\": null } ], \"data_source_object_id\": \"instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/alchemy\" }, \"starting_stages\": [ { \"name\": \"Extract\", \"description\": \"Extract text from binary content items.\", \"plugin_object_id\": \"instances/{{instanceId}}/providers/FoundationaLLM.Plugin/plugins/TextExtractionDataPipelineStage\", \"plugin_parameters\": null, \"next_stages\": [ { \"name\": \"Partition\", \"description\": \"Partition text into chunks.\", \"plugin_object_id\": \"instances/{{instanceId}}/providers/FoundationaLLM.Plugin/plugins/TextPartitioningDataPipelineStage\", \"plugin_parameters\": [ { \"parameter_metadata\": { \"name\": \"PartitioningStrategy\", \"type\": \"string\", \"description\": \"The partitioning strategy to be used (can be Token or Semantic).\" }, \"default_value\": \"Token\" } ], \"plugin_dependencies\": [ { \"plugin_object_id\": \"instances/{{instanceId}}/providers/FoundationaLLM.Plugin/plugins/TokenContentTextPartitioning\", \"plugin_parameters\": [ { \"parameter_metadata\": { \"name\": \"PartitionSizeTokens\", \"type\": \"int\", \"description\": \"The size in tokens of the text partitions.\" }, \"default_value\": 400 }, { \"parameter_metadata\": { \"name\": \"PartitionOverlapTokens\", \"type\": \"int\", \"description\": \"The size in tokens of text partitions overlap.\" }, \"default_value\": 100 } ] } ], \"next_stages\": [ { \"name\": \"Embed\", \"description\": \"Embed chunks of text.\", \"plugin_object_id\": \"instances/{{instanceId}}/providers/FoundationaLLM.Plugin/plugins/GatewayTextEmbeddingDataPipelineStage\", \"plugin_parameters\": [ { \"parameter_metadata\": { \"name\": \"EmbeddingModel\", \"type\": \"string\", \"description\": \"The embedding model used for embedding.\" }, \"default_value\": \"text-embedding-3-large\" }, { \"parameter_metadata\": { \"name\": \"EmbeddingDimensions\", \"type\": \"int\", \"description\": \"The number of dimensions used for embedding.\" }, \"default_value\": 2048 } ], \"next_stages\": [ { \"name\": \"Index\", \"description\": \"Persist embeddings to a vector store.\", \"plugin_object_id\": \"instances/{{instanceId}}/providers/FoundationaLLM.Plugin/plugins/AzureAISearchIndexingDataPipelineStage\", \"plugin_parameters\": [ { \"parameter_metadata\": { \"name\": \"APIEndpointConfigurationObjectId\", \"type\": \"resource-object-id\", \"description\": \"The FoundationaLLM resource object identifier of the API Endpoint Configuration resource that represents the target Azure AI Search instance.\" }, \"default_value\": \"instances/{{instanceId}}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/AzureAISearch\" }, { \"parameter_metadata\": { \"name\": \"IndexName\", \"type\": \"string\", \"description\": \"The name of the Azure AI Search index.\" }, \"default_value\": \"demo-index\" }, { \"parameter_metadata\": { \"name\": \"IndexPartitionName\", \"type\": \"string\", \"description\": \"The name of the index partition (to be added as a metadata entry and used for logical separation within a given physical index.\" }, \"default_value\": \"Dune\" } ] } ] } ] } ] } ], \"triggers\": [ { \"name\": \"Default pipeline schedule\", \"trigger_type\": \"Schedule\", \"trigger_cron_schedule\": \"0 6 * * *\", \"parameter_values\": { \"DataSource.VGDataLake.Folders\": [ \"vectorization-input/Dune\" ], \"Stage.Partition.PartitioningStrategy\": \"Token\", \"Stage.Partition.Dependency.TokenContentTextPartitioning.PartitionSizeTokens\": 400, \"Stage.Partition.Dependency.TokenContentTextPartitioning.PartitionOverlapTokens\": 100, \"Stage.Embed.EmbeddingModel\": \"text-embedding-3-large\", \"Stage.Embed.EmbeddingDimensions\": 2048, \"Stage.Index.APIEndpointConfigurationObjectId\": \"instances/{{instanceId}}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/AzureAISearch\", \"Stage.Index.IndexName\": \"demo-index\", \"Stage.Index.IndexPartitionName\": \"Dune\" } } ] } The most important rules that govern the structure of data pipelines are: Both the data source and the stages must specify the configuration of the plugins that implement them. This is done by using the following properties: plugin_object_id: The FoundationaLLM resource identifier of the plugin that implements the data source or stage. plugin_parameters: The parameters that are required by the plugin. The parameters are defined by the plugin and can have default values. The values in the parameter_metadata are provided by the plugin definition. For more details about plugin parameters, see Plugins. plugin_dependencies: The dependencies that the plugin has. Dependencies are other plugins that the plugin requires to function properly. Dependencies can have their own parameters. The metadata required to select dependency plugins is provided by the plugin definition. For more details about plugin dependencies, see Plugins. The active flag indicates whether the pipeline can be triggered or not. If the pipeline is not active, it will not be executed. The data source must specify the FoundationaLLM resource identifier of the data source that it represents. This is done by using the data_source_object_id property. The data source object must be compatible with the pluging specified by the plugin_object_id property. The data source name and the stage names must be unique within the data pipeline pipeline. The data source name and the stage names can only contain alphanumerical characters, underlines, or hyphens. The stages must specify the next stages that the data will go through. This is done by using the next_stages property. The stages can have multiple next stages, forming a forest of stages. The stages must specify the configuration of the plugins that implement them, as described above. The triggers must specify the parameter values that are required by the data source and the stages. The parameter values are provided as a dictionary where the key is the parameter name and the value is the parameter value. The parameter values must be provided for all the parameters that are required by the data source and the stages. The parameter values are used to start the pipeline execution. Trigger parameter values naming convention The trigger parameter values are named using the following convention: For the data source, the naming structure is DataSource.{DataSourceName}.{ParameterName}. In the example above, the data source is named VGDataLake, so the parameter values for the data source are named DataSource.VGDataLake.{ParameterName}. For the stages, the naming structure is Stage.{StageName}.{ParameterName}. In the example above, the stages are named Extract, Partition, Embed, and Index, so the parameter values for the stages are named Stage.{StageName}.{ParameterName}. For stages that have dependency plugins, the naming structure is Stage.{StageName}.Dependency.{DependencyPluginName}.{ParameterName}. In the example above, the Partition stage has a dependency plugin named TokenContentTextPartitioning, so the parameter values for the dependency plugin are named Stage.Partition.Dependency.TokenContentTextPartitioning.{ParameterName}."
  },
  "concepts/index.html": {
    "href": "concepts/index.html",
    "title": "FoundationaLLM Concepts | FoundationaLLM",
    "summary": "FoundationaLLM Concepts The following mindmap provides a high-level overview of the core FoundationaLLM concepts. mindmap root((FoundationaLLM)) :::link:https://docs.foundationallm.ai (Authorization) Secret Key Role Based Access Control Policy Based Access Control Security Principal Virtual Security Principal Virtual User Virtual Security Group (Agent) Agent Workflow Agent Tool Agent Access Token Agent Access Token Virtual User Agent Virtual Security Group (Chargeback) (Data Pipeline) (Plugin) Plugin Package Plugin (Prompt) (Quota) Quota Definition API Raw Request Rate Agent Request Rate (Resource Provider) (Tool) (Workflow) Workflow Host FoundationaLLM Concepts Authorization Secret Key Role Based Access Control Policy Based Access Control Security Principal Virtual Security Principal Virtual User Virtual Security Group Agent Agent Workflow Agent Tool Agent Access Token Agent Access Token Virtual User Agent Virtual Security Group Chargeback Data Pipeline Plugin Plugin Package Plugin Prompt Quota Quota Definition API Raw Request Rate Agent Request Rate Resource Provider Tool Workflow Workflow Host Authorization Secret Key A secret key is a unique string that is used to authenticate an agent to the FoundationaLLM platform. The secret key is generated by the FoundationaLLM platform and is used to sign requests made by the agent. Role Based Access Control Role-based access control (RBAC) is a method of restricting access to resources based on the roles of users. In RBAC, roles are created and assigned to users, and permissions are assigned to roles. Policy Based Access Control Policy-based access control (PBAC) is a method of restricting access to resources based on policies. In PBAC, policies are created and assigned to users, and permissions are assigned to policies. Security Principal A security principal is an entity that can be authenticated and authorized to access resources. Examples of security principals include users, groups, and service identities. Virtual Security Principal A virtual security principal is a security principal that is created dynamically by the FoundationaLLM platform. Virtual security principals are used to represent agents and other entities that do not have a direct mapping to a user or group. Virtual User A virtual user is a virtual security principal that represents an agent access token. Virtual users are created by the FoundationaLLM platform and are used to authenticate agents via agent access tokens. Virtual Security Group A virtual security group is a virtual security principal that represents the group of agent access tokens created for a user. Virtual security groups are created by the FoundationaLLM platform and are used to manage access control for agents via agent access tokens. Agent Agent Workflow An agent workflow drives the core interactions of an agent with its associated tools. It can range from a simple call to an LLM that has function calling capabilities to a complex flow like the LangChain React Agent or an Open AI Assistant. Agent Tool An agent tool is a tool that is associated with an agent. Agent tools can be used to perform various tasks, such as executing code, interacting with APIs, or processing data. Agent Access Token An agent access token is a unique string that is used to authenticate an agent to the FoundationaLLM platform. The agent access token is generated by the FoundationaLLM platform and is used to create a virtual user. Agent Access Token Virtual User An agent access token virtual user is a virtual user that represents an agent access token. Agent access token virtual users are created by the FoundationaLLM platform and are used to authenticate agents via agent access tokens. Agent Virtual Security Group An agent virtual security group is a virtual security group that represents the group of agent access tokens created for an agent. Agent virtual security groups are created by the FoundationaLLM platform and are used to manage access control for agents via agent access tokens. Chargeback Chargeback is a mechanism for tracking and billing the usage of resources by agents, users, or other entities that can be associated with cost centers. Chargeback allows organizations to allocate costs based on the actual usage of resources by cost center-enabled entities. Data Pipeline A FoundationaLLM data pipeline defines a process that aims to extract data from a data source, transform it to make it suitable for LLM-based workloads (e.g., extracting text, partitioning text, extracting entities and relationships, embedding text, creating knowledge graphs, etc.), and load it into a target system (e.g., vector store, knowledge store, etc.). Data pipelines can be managed using the FoundationaLLM Management Portal (interactively) or the FoundationaLLM Management API (programmatically). FoundationaLLM data pipelines are built from the ground up to address the following key requirements for enterprise-grade Generative AI workloads: Scalability - handle large volumes of data and scale horizontally to meet the demands of enterprise workloads. FoundationaLLM data pipelines are designed to handle anything from a few documents or records to millions of documents or records. Flexibility - have a flexible and modular structure that is suitable from complex processing, parallelization of work, scalability, and reusability of components. Local and Global Processing - support local processing of data (e.g., text extraction, text partitioning, entity extraction, relationship extraction, etc.) and global processing of data (e.g., assembly of knowledge graphs). Parameterization - allow the configuration of data pipelines using parameters that can be set at runtime. This avoids the need to create multiple data pipelines for different configurations (e.g., a single data pipeline definition can be used to handle all user file uploads in the User Portal). Extensiblity - enable the addition of new data pipeline stages and the modification of existing data pipeline stages to meet the specific requirements of different use cases. All data pipeline components are implemented using plugins. For more details, see Data Pipelines. Plugin A plugin is a software component that can be used to extend the functionality of the FoundationaLLM platform. Plugins can be used to add new features, integrate with external systems, or perform other tasks. Plugins can be managed using the FoundationaLLM Management Portal (interactively) or the FoundationaLLM Management API (programmatically). Plugin Package A FoundationaLLM plugin package is a unit of versioning and deployment of one or more plugins. The Management Portal and Management API allow you to manage plugin packages. The following types of plugin packages are supported by the FoundationaLLM platform: Platform Package Type Description Python ZIP package The package can contain agent workflow and agent tool plugins that can be used through a workflow/tool plugin manager. This package type in not currently supported by Management API. It is scheduled to be replaced by a new type of Python package (Wheel) that will be fully supported by Management API. .NET NuGet package The package can contain data source, data pipeline stage, content text extraction, and content text partitioning plugins that can be used by the data pipelines infrastructure. This package type is fully supported by Management API. For more details, see Plugin Packages. Plugin The following types of plugins are supported by the FoundationaLLM platform: Platform Category Description Python Agent Workflow A Python agent workflow plugin implements an agent workflow that runs in the LangChain API and is responsible for driving the proccess of tool invocation and response generation. Python Agent Tool A Python agent tool plugin implement an agent tool that can be associated with an agent that uses a workflow that runs the LangChain workflow host (LangChain API). .NET Data Source A .NET data source plugin implements a data source that can be used to retrieve data from an external system and make it available to data pipelines. .NET Data Pipeline Stage A .NET data pipeline stage plugin implements a stage that can be executed as part of a data pipeline. .NET Content Text Extraction A .NET content text extraction plugin implements a content text extraction process that can be used to extract text from binary content (corresponding to various formats like PDF, DOCX, images, etc.). .NET Content Text Partitioning A .NET content text partitioning plugin implements a content text partitioning process that can be used to partition text into segments based on a specific strategy (e.g., token-based or semantic). For more details, see Plugins. Prompt A FoundationaLLM prompt is a text template that is used to create completion requests for agents. FoundationaLLM agents use prompts in two main contexts: Agent Workflow - Prompts are used to create completion requests that identify which tools should be invoked and how the responses from the tools should be processed. Agent Tool - Prompts are used to contribute with additional context to the agent workflow (e.g., helping the workflow to understand the capabilities of the tool), or to provide instructions on the tools internal logic (e.g., to generate code that will be executed by the tool or to finalize the response of the tool). Prompts have support for variables, which allows them to be dynamically generated based on the context of the completion request. This makes prompts flexible and adaptable to different scenarios. For more details, see Prompt variable. Quota A FoundationaLLM quota is a set of rules that define the limits on the usage of resources by a client. Quota definitions are used to enforce limits on the usage of resources by clients and to prevent abuse of the FoundationaLLM platform. Each quota is enforced on a specific metric, such as the number of API completion calls or the number of agent completion calls. The following quota metrics are supported by the FoundationaLLM platform: API requests (quota enforces an API request rate limit). Agent completion requests (quota enforces an agent completion request rate limit). Quota metric limits can be enforced globally or using specific partitioning mechanisms. The following quota metric partitioning mechanisms are supported by the FoundationaLLM platform: None (no partitioning, limit is enforced globally). User identifier (limit is enforced per user unique identifier). User principal name (limit is enforced per user principal name). Examples of FoundationaLLM quotas: 100 requests per minute for API requests sent to the the Completions endpoint of Core API. 50 requests per minute per user principal name for API requests sent to the the Completions endpoint of Core API. 1000 agent completions requests per quarter hour per user identifier for agent completion requests sent to the Core API. Quota Definition FoundationaLLM quotas are specified using quota definitions. A quota definition is a JSON object that defines the limits on the usage of resources by a client. Quota definitions are stored in the main FoundationaLLM storage account, in the quota container in a file named quota-store.json. For more details, see Quota Definition. API Raw Request Rate The API raw request rate is the maximum number of API requests that a client can make to a FoundationaLLM API within a specified time period. For more details, see API Raw Request Rate. Agent Request Rate The API call rate is the maximum number of Core API completion calls that a client can make to the Core API targeting a specific agent within a specified time period. The API call rate is used to limit the rate at which a client can perform completions targeting a specific agent. For more details, see Agent Request Rate. Resource Provider A resource provider is a platform component that is responsible for managing resources in the FoundationaLLM platform. Resource providers are used to create, update, delete, and retrieve resources such as agents, prompts, data sources, data pipelines, plugins and many more. All resource types available in the FoundationaLLM platform are managed by resource providers. The following resource providers are supported by the FoundationaLLM platform: Name Description FoundationaLLM.Agent Manages agents, agent workflows, agent tool, agent access tokens and other agent-related artifacts. FoundationaLLM.AIModel Manages AI models used across the platform. FoundationaLLM.Attachment Manages attachments that are uploaded by users through the User Portal or programmatically using Core API. FoundationaLLM.Authorization Manages the authorization artifacts like roles, policies, and permissions. FoundationaLLM.AzureOpenAI Manages artifacts related to the Azure OpenAI integration (e.g., Assistants files, vector stores, threads, etc.). FoundationaLLM.Configuration Manages the configuration settings of the FoundationaLLM platform. This includes settings from Azure App Configuration and API endpoint configurations. FoundationaLLM.DataPipeline Manages data pipelines, data pipeline stages, data pipeline runs, and other data pipeline-related artifacts. FoundationaLLM.DataSource Manages data sources and other data source-related artifacts. FoundationaLLM.Plugin Manages plugin packages and plugins. FoundationaLLM.Prompt Manages prompts and other prompt-related artifacts. Tool A tool is a well-defined software component that can be used to perform a specific task as part of the execution of an agent workflow. Tools are used by agents to interact with external systems, process data, or perform other tasks. Workflow A workflow is a sequence of steps that an agent follows to perform a specific task. Workflows can be simple or complex, and can involve multiple tools and interactions with external systems. Workflow Host A workflow host is an environment that runs agent workflows. The workflow host is responsible for executing agent workflows, managing the execution of tools, and handling the interactions between agents and external systems. The following workflow hosts are supported by the FoundationaLLM platform: Name Platform Description LangChain LangChain API (Python) The LangChain API is a Python-based workflow host that runs agent workflows using the LangChain orchestrator. SemanticKernel Semantic Kernel API (.NET) The Semantic Kernel API is a .NET-based workflow host that runs agent workflows using the Semantic Kernel orchestrator."
  },
  "concepts/plugin/plugin-package.html": {
    "href": "concepts/plugin/plugin-package.html",
    "title": "Plugin Packages | FoundationaLLM",
    "summary": "Plugin Packages Managing plugin packages using the FoundationaLLM Management API The management of plugin packages is done using the FoundationaLLM.Plugin resource provider through the Management API. At this time, only .NET NuGet plugin packages are supported by the resource provider. Create or update a plugin package Management API endpoint: POST /instances/{instanceId}/providers/FoundationaLLM.Plugin/pluginPackages/{packageName} Request body: Must be of type form-data. Must contain a file with the key file that represents the plugin package. The file must be a .NET NuGet package. Must contain a text with the key resource that represents the plugin package resource. The resource must be a valid JSON object with the following content: { \"type\": \"plugin-package\", \"name\": \"{packageName}\" } Note FoundationaLLM currently provides one .NET plugin package, FoundationaLLM.DataPipelinePlugins. An example of a file for this package is FoundationaLLM.DataPipelinePlugins.1.0.0.nupkg. Important Plugin package names must follow a strict naming convention. The name must be in the format {platform}-{name}, where {platform} can be one of Dotnet or Python, and {name} can only contain alphanumerical characters, underlines, or hyphens. For example, the package name for the FoundationaLLM data pipeline plugins package is Dotnet-FoundationaLLMDataPipelinePlugins. As part of the create or update flow, the package is inspected and all plugins contained within it are registered in the system. List plugin packages Management API endpoint: GET /instances/{instanceId}/providers/FoundationaLLM.Plugin/pluginPackages"
  },
  "concepts/plugin/plugin.html": {
    "href": "concepts/plugin/plugin.html",
    "title": "Plugins | FoundationaLLM",
    "summary": "Plugins Overview Plugin naming convention All plugins must follow a strict naming convention. The name must be in the format {platform}-{packageName}-{pluginName}, where: {platform} can be one of Dotnet or Python. {packageName} is the name of the plugin package that provides the plugin and can only contain alphanumerical characters, underlines, or hyphens. {pluginName} is the name of the plugin and can only contain alphanumerical characters, underlines, or hyphens. For example, the plugin name of the FoundationaLLM Azure AI Search data pipeline stage plugin is Dotnet-FoundationaLLMDataPipelinePlugins-AzureAISearchIndexingDataPipelineStage. Plugin properties Here is an example of a plugin definition: { \"type\": \"plugin\", \"name\": \"Dotnet-FoundationaLLMDataPipelinePlugins-AzureAISearchIndexingDataPipelineStage\", \"object_id\": \"instances/{instanceId}/providers/FoundationaLLM.Plugin/plugins/Dotnet-FoundationaLLMDataPipelinePlugins-AzureAISearchIndexingDataPipelineStage\", \"display_name\": \"Azure AI Search Indexing Data Pipeline Stage (FoundationaLLM)\", \"description\": \"Provides the FoundationaLLM standard implementation for indexing data pipeline stages that use Azure AI Search.\", \"cost_center\": null, \"category\": \"Data Pipeline Stage\", \"parameters\": [ { \"name\": \"APIEndpointConfigurationObjectId\", \"type\": \"resource-object-id\", \"description\": \"The FoundationaLLM resource identifier of the API Endpoint Configuration resource that identifies the Azure AI Search instance.\" }, { \"name\": \"IndexName\", \"type\": \"string\", \"description\": \"The name of the Azure AI Search index.\" }, { \"name\": \"IndexPartitionName\", \"type\": \"string\", \"description\": \"The name of the Azure AI Search index partition (to be added as a metadata entry and used for logical separation within a given physical index).\" } ], \"parameter_selection_hints\": { \"APIEndpointConfigurationObjectId\": { \"resourcePath\": \"providers/FoundationaLLM.Configuration/apiEndpointConfigurations\", \"filterActionPayload\": { \"Category\": \"General\", \"Subcategory\": \"Indexing\" } } }, \"dependencies\": [], \"properties\": null, \"created_on\": \"2025-03-09T19:59:41.110155+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": \"ciprian@foundationaLLM.ai\", \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Parameters Each plugin has zero, one, or more parameters that are required for its execution. Parameters can be of the following types: Type Description string A single string value. int A single integer value. float A single floating-point value. bool A single boolean value. datetime A single date and time value. array An array of values (individual items in the array can be of any type). resource-object-id A FoundationaLLM resource identifier that references another resource in the system. Note When working with resource-object-id parameters, the parameter_selection_hints property can be used to provide additional information about the resource that the parameter references. This information is used by the Management Portal to provide a user-friendly selection experience when configuring the plugin. The parameter_selection_hints property contains a dictionary where the keys are parameter names of type resource-object-id and the values are objects with the following properties: resourcePath: The path to the resource type that the parameter references. filterActionPayload: A JSON object that can be used to filter the resources of the specified type. The object can contain any number of properties that are used to filter the resources and it depends on the specific resource type. User interface developers can use the resourcePath and filterActionPayload properties to build a resource filtering request for the Management API. Using the exemple above, the following filtering request can be built: POST /instances/{instanceId}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/filter. The request body must be the JSON object specified in the filterActionPayload property. Dependencies Each plugin can have zero, one, or more dependencies. A dependency is a reference to another plugin that must be installed in the system in order for the plugin to work correctly. When configuring plugins in the Management Portal, the dependency plugins must also be selected and configured. The dependencies section provides the information needed to determine which plugins are required. The section contains a list of plugin selections that are required for the plugin to work correctly. Plugin selections can be either Single (meaning exactly one dependency plugin must be selected) or Multiple (meaning one or more dependency plugins must be selected). Here is an example of a plugin with single selection dependencies: { \"type\": \"plugin\", \"name\": \"Dotnet-FoundationaLLMDataPipelinePlugins-TextPartitioningDataPipelineStage\", \"object_id\": \"instances/{instanceId}/providers/FoundationaLLM.Plugin/plugins/Dotnet-FoundationaLLMDataPipelinePlugins-TextPartitioningDataPipelineStage\", \"display_name\": \"Text Partitioning Data Pipeline Stage (FoundationaLLM)\", \"description\": \"Provides the FoundationaLLM standard implementation for text partitioning data pipeline stages.\", \"cost_center\": null, \"category\": \"Data Pipeline Stage\", \"parameters\": [ { \"name\": \"PartitioningStrategy\", \"type\": \"string\", \"description\": \"Strategy used to partition text (can be Token or Semantic).\" } ], \"parameter_selection_hints\": {}, \"dependencies\": [ { \"selection_type\": \"Single\", \"dependency_plugin_names\": [ \"Dotnet-FoundationaLLMDataPipelinePlugins-TokenContentTextPartitioning\", \"Dotnet-FoundationaLLMDataPipelinePlugins-SemanticContentTextPartitioning\" ] } ], \"properties\": null, \"created_on\": \"2025-03-09T19:59:36.9258434+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": \"ciprian@foundationaLLM.ai\", \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Here is an example of a plugin with multiple selection dependencies: { \"type\": \"plugin\", \"name\": \"Dotnet-FoundationaLLMDataPipelinePlugins-AzureDataLakeDataSource\", \"object_id\": \"instances/8ac6074c-bdde-43cb-a140-ec0002d96d2b/providers/FoundationaLLM.Plugin/plugins/Dotnet-FoundationaLLMDataPipelinePlugins-AzureDataLakeDataSource\", \"display_name\": \"Azure Data Lake Data Source (FoundationaLLM)\", \"description\": \"Provides the FoundationaLLM standard implementation for Azure Data Lake data sources.\", \"cost_center\": null, \"category\": \"Data Source\", \"parameters\": [ { \"name\": \"Folders\", \"type\": \"array\", \"description\": \"List of strings defining data lake folders (the first part identifies the container name).\" } ], \"parameter_selection_hints\": {}, \"dependencies\": [ { \"selection_type\": \"Multiple\", \"dependency_plugin_names\": [ \"Dotnet-FoundationaLLMDataPipelinePlugins-PDFContentTextExtraction\", \"Dotnet-FoundationaLLMDataPipelinePlugins-DOCXContentTextExtraction\", \"Dotnet-FoundationaLLMDataPipelinePlugins-PPTXContentTextExtraction\", \"Dotnet-FoundationaLLMDataPipelinePlugins-XSLXContentTextExtraction\", \"Dotnet-FoundationaLLMDataPipelinePlugins-ImageContentTextExtraction\", \"Dotnet-FoundationaLLMDataPipelinePlugins-ImageMetadataTextExtraction\" ] } ], \"properties\": null, \"created_on\": \"2025-03-09T19:59:32.3378998+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": \"ciprian@foundationaLLM.ai\", \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Managing plugins using the FoundationaLLM Management API List all plugins Management API endpoint: GET /instances/{instanceId}/providers/FoundationaLLM.Plugin/plugins Filter plugins by category Management API endpoint: POST /instances/{instanceId}/providers/FoundationaLLM.Plugin/plugins/filter. The request body must contain a JSON object with the following content: { \"categories\": [ \"Data Source\", \"Data Pipeline Stage\" ] } Note The following plugin categories are supported for use in the filter: Data Source, Data Pipeline Stage, Context Text Extraction, Content Text Partitioning."
  },
  "concepts/prompt/prompt-variable.html": {
    "href": "concepts/prompt/prompt-variable.html",
    "title": "Prompt Variable | FoundationaLLM",
    "summary": "Prompt Variable A prompt variable is a placeholder in a prompt that can be replaced with specific values when the prompt is executed. This allows for dynamic and flexible prompts that can adapt to different contexts or inputs. FoundationaLLM supports prompt variables in the following format: {{foundationallm:variable_name[:format]}} where: foundationallm is a reserved keyword that indicates the variable is a FoundationaLLM prompt variable. variable_name is the name of the variable that will be replaced with a specific value. format is an optional parameter that specifies the format of the value to be used when replacing the variable. If not specified, the value will be used as is. Note Prompt variables are extrapolated in a .NET module written in C# which means that format is a .NET format string. For more details on the available format strings, see the Standard Numeric Format Strings and Standard Date and Time Format Strings documentation. The following table provides details about the prompt variables supported by FoundationaLLM: Variable Description Notes {{foundationallm:router_prompt}} Used to insert the tool selection information into the main workflow prompt. This variable should only be used for agents that have tools associated with them. {{foundationallm:tool_list}} Used to insert the list of tools available to the agent into the tool selection information (which in turn is inserted into the main workflow prompt). This variable should only be used for agents that have tools associated with them. {{foundationallm:tool_router_prompts}} Used to insert additional, per tool instructions to help tool selection into the tool selection information (which in turn is inserted into the main workflow prompt). This variable should only be used for agents that have tools associated with them. {{foundationallm:current_datetime_utc[:format]}} Used to insert the current date and time in UTC into the prompt. The format parameter is optional and can be used to specify the format of the date and time. If not specified, the default format is used. The default format is yyyy-MM-ddTHH:mm:ssZ, which represents the date and time in ISO 8601 format. For more details on the available format strings, see the Standard Date and Time Format Strings documentation."
  },
  "concepts/quota/agent-request-rate.html": {
    "href": "concepts/quota/agent-request-rate.html",
    "title": "Agent Request Rate | FoundationaLLM",
    "summary": "Agent Request Rate The agent request rate is a quota that limits the number of completion requests made to specific agents. These calls are made to the Core API Completions controller and the context of the quota definition must be set to CoreAPI:Completions:<agent_name>, where <agent_name> is the name of the agent. This quota can be enforced per agent for all users or per specific user principal name (UPN) or user identifier. In most cases, the relationship between user principal name and user identifier is one-to-one, so the quota would be effectively the same if metric_partition were set to UserPrincipalName or UserIdentitifer. In these cases, the recommended value for metric_partition is UserPrincipalName. However, in some more advanced scenarios (e.g., when calls are made by another service that authenticates against the Core API using a managed identity), the user principal name may not be available, and the quota should be enforced by user identifier. In these cases, the recommended value for metric_partition is UserIdentifier."
  },
  "concepts/quota/api-raw-request-rate.html": {
    "href": "concepts/quota/api-raw-request-rate.html",
    "title": "API Raw Request Rate | FoundationaLLM",
    "summary": "API Raw Request Rate The API raw request rate is a quota that limits the number of raw requests made to API controllers. Currently, only controllers from the Core API are supported. This quota can be enforced per API controller for all users or per specific user principal name (UPN) or user identifier. In most cases, the relationship between user principal name and user identifier is one-to-one, so the quota would be effectively the same if metric_partition were set to UserPrincipalName or UserIdentitifer. In these cases, the recommended value for metric_partition is UserPrincipalName. However, in some more advanced scenarios (e.g., when calls are made by another service that authenticates against the Core API using a managed identity), the user principal name may not be available, and the quota should be enforced by user identifier. In these cases, the recommended value for metric_partition is UserIdentifier. The following table lists the supported controllers and their contexts: Controller Context Completions CoreAPI:Completions CompletionsStatus CoreAPI:CompletionsStatus * Branding CoreAPI:Branding Configuration CoreAPI:Configuration Files CoreAPI:Files OneDriveWorkSchool CoreAPI:OneDriveWorkSchool Sessions CoreAPI:Sessions UserProfiles CoreAPI:UserProfiles Status CoreAPI:Status Before FoundationaLLM v0.9.7-rc158, the CompletionsStatus controller was not available, and the Completions controller was used to check the status of completions. Starting with FoundationaLLM v0.9.7-rc158, the CompletionsStatus controller is available, and it is used to check the status of completions. Certain client applications (the User Portal being the most notable example) require extensive use of the completions status endpoint, in order to provide a better user experience. Since the number of requests asking for the status of completions is significantly higher than the number of requests asking for completions defining an effective API raw request rate limit for the Completions controller is not practical prior to version v0.9.7-rc158 and is not recommended. Starting with v0.9.7-rc158, separate raw request rate limits can be defined for the Completions and CompletionsStatus controllers, allowing for a more effective quota enforcement. When defining a quota for the CompletionsStatus controller, you need to take into account the value of the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CompletionResponsePollingIntervalMilliseconds configuration setting, which defines the polling interval for the completions status endpoint in the User Portal. The default value is 100 milliseconds, meaning that the User Portal will poll the completions status endpoint every 100 milliseconds to check the status of the completion. This means that if a user has 2 active completions, they will make 20 requests per second to the completions status endpoint, which can quickly add up to a significant number of requests. Therefore, it is recommended to define a separate quota for the CompletionsStatus controller with a higher limit than the Completions controller."
  },
  "concepts/quota/quota-definition.html": {
    "href": "concepts/quota/quota-definition.html",
    "title": "Quota Definition | FoundationaLLM",
    "summary": "Quota Definition The quota definitions are stored in the main FoundationaLLM storage account, in the quota container in a file named quota-store.json. If the file does not exist, the file is automatically created. The file contains a list of quota definitions with the following structure: { \"name\": \"CoreAPICompletionsUPNRawRequestRateLimit\", \"description\": \"Defines a per UPN raw request rate limit on the Core API Completions controller.\", \"context\": \"CoreAPI:Completions\", \"type\": \"RawRequestRateLimit\", \"metric_partition\": \"UserPrincipalName\", \"metric_limit\": 120, \"metric_window_seconds\": 60, \"lockout_duration_seconds\": 60, \"distributed_enforcement\": false } The example above defines a quota for the Core API Completions controller that limits the number of raw API requests per user principal name (UPN) to 120 requests in a 60-second window. If the user principal exceeds this limit, they are locked out for 60 seconds before the quota is reset. Note A user principal name corresponds to either a user or an agent access token. If the same agent access token is shared by multiple applications calling the Core API, the quota is enforced across all applications using that token. Note FoundationaLLM using a smoothing time window of 20 seconds for the quota enforcement. This means that the quota is enforced every 20 seconds, and the number of requests is averaged over that time window. This helps to smooth out spikes in traffic and provides a more consistent experience for users. In the example above, this means that the specified user principal name can make up to 40 requests every 20 seconds. The first time the user principal name exceeds the limit, they are locked out for 60 seconds. After the lockout period, the user principal name can make requests again, and the quota is reset. It is recommended to set the metric_window_seconds to a multiple of 20 seconds to align with the smoothing time window. The standard practice is to set the metric_window_seconds to 60 seconds, which makes it easy to understand for the consumers of the API. Also, it is recommended to set the metric_limit to a multiple of metric_window_seconds divided by 20 seconds, so that you avoid misinterpretation of the quota limits due to roundings. In the example above, since metric_window_seconds is set to 60 seconds, metric_limit should be set to a multiple of 3 (60 seconds / 20 seconds). Therefore, the value of metric_limit is set to 120. If metric_limit were set to 3, the user principal name would be allowed to make only 1 request every 20 seconds. It is also important to note that setting metric_limit to a value below metric_windows_seconds divided by 20 seconds would result in the user principal name being locked out immediately after the first request, which is not a desirable behavior. The following table provides details about the quota definition properties: Name Description Notes name The name of the quota definition. description A description of the quota definition. context The context of the quota definition. The format of the context is <service_name>:<controller_name> or <service_name>:<controller_name>:<agent_name>. Currently the following contexts can be used: CoreAPI:<controller_name>, CoreAPI:Completions:<agent_name> where <agent_name> must be a valid agent name. For more details on the available controllers and their contexts, see API Raw Request Rate. type The type of the quota enforcement applied. The following types are supported: RawRequestRateLimit and AgentRequestRateLimit. RawRequestRateLimt defines the quota metric to be raw API requests and requires a context of <service_name>:<controller_name>. AgentRequestRateLimit defines the quota metric to be agent completion requests and requires a context of <service_name>:<controller_name>:<agent_name>. For more details, see API Raw Request Rate or Agent Request Rate. metric_partition The metric partition used to enforce the quota. The following partitions are supported: None (the metric is not partitioned) UserPrincipalName (the metric is partitioned by user principal name) and UserIdentifier (the metric is partitioned by user identifier). In the example above, the metric is partitioned by user principal name, meaning that each user principal name has its own quota limit. If metric_partition were set to None, the quota would be enforced globally across all calls, regardless of user principal names, meaning that the limit would apply to all users collectively. If metric_partition were set to UserIdentifier, the quota would be enforced per user identifier, which is a unique identifier for each user. In most cases, the relationship between user principal name and user identifier is one-to-one, so the quota would be effectively the same as if metric_partition were set to UserPrincipalName. In these cases, the recommended value for metric_partition is UserPrincipalName. However, in some more advanced scenarios (e.g., when calls are made by another service that authenticates against the Core API using a managed identity), the user principal name may not be available, and the quota should be enforced by user identifier. In these cases, the recommended value for metric_partition is UserIdentifier. metric_limit The limit of the metric. The limit is enforced over the metric_window_seconds. In the example above, a maximum number of 120 raw API requests are allowed per user principal name in a 60-second window. metric_window_seconds The time window in seconds over which the limit is enforced. In the example above, a maximum number of 120 raw API requests are allowed per user principal name in a 60-second window. lockout_duration_seconds The duration in seconds for which the caller is locked out after exceeding the quota. The lockout duration is applied after the user exceeds the quota limit. The user is locked out for the specified duration before the quota is reset. distributed_enforcement Indicates whether the quota is enforced across multiple instances of the same API. If true, the quota is enforced across all the instances of the API. If false, the quota is enforced individually on every single instance. In the example above, if the platform in running 5 instances of the Core API, one user principal name can make up to 5 x 120 = 600 raw API requests in a 60-second window. If distributed_enforcement were set to true, the user principal name would be allowed to make only 120 raw API requests in a 60-second window across all instances of the Core API."
  },
  "deployment/app-configuration-values.html": {
    "href": "deployment/app-configuration-values.html",
    "title": "Azure App Configuration values | FoundationaLLM",
    "summary": "Azure App Configuration values FoundationaLLM uses Azure App Configuration to store configuration values, Key Vault secret references, and feature flags. Doing so helps reduce duplication and provides a convenient way to manage these settings in one place. It also allows you to change the settings without having to redeploy the solution. Since several settings can be shared by multiple projects, we do not specify the project name in the configuration key names. Configuration values Key Default Value Description FoundationaLLM:Instance:Id Generated GUID The value should be a GUID represents a unique instance of the FoundationaLLM instance. FoundationaLLM:Configuration:KeyVaultURI Enter the URL to the service. The URL of the Key Vault used to store secrets. FoundationaLLM:AgentHub:AgentMetadata:StorageContainer agents FoundationaLLM:Agent:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:APIs:OrchestrationAPI:APIKey Key Vault secret name: foundationallm-apis-orchestrationapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:OrchestrationAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:OrchestrationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:OrchestrationAPI:ForceHttpsRedirection false FoundationaLLM:APIs:AgentHubAPI:APIKey Key Vault secret name: foundationallm-apis-agenthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:AgentHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:AgentHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:CoreAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:CoreAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:CoreAPI:BypassGatekeeper true By default, the Core API bypasses the Gatekeeper API. To override this behavior and enable the Gatekeeper API, set this value to true. Bypassing the Gatekeeper means that you bypass content protection and filtering in favor of improved performance. FoundationaLLM:APIs:DataSourceHubAPI:APIKey Key Vault secret name: foundationallm-apis-datasourcehubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:DataSourceHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:DataSourceHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:GatekeeperAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafety true By default, the Gatekeeper API has Azure Content Safety integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableLakeraGuard true By default, the Gatekeeper API has Lakera Guard integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableEnkryptGuardrails true By default, the Gatekeeper API has Enkrypt Guardrails integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableMicrosoftPresidio true By default, the Gatekeeper API has Microsoft Presidio integration enabled. To disable this feature, set this value to false. FoundationaLLM:APIs:GatekeeperAPI:ForceHttpsRedirection false FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIKey Key Vault secret name: foundationallm-apis-gatekeeperintegrationapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:GatekeeperIntegrationAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:GatekeeperIntegrationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:LangChainAPI:APIKey Key Vault secret name: foundationallm-apis-langchainapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:LangChainAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:LangChainAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:ManagementAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:ManagementAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:Prompt:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:APIs:PromptHubAPI:APIKey Key Vault secret name: foundationallm-apis-prompthubapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:PromptHubAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:PromptHubAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIKey Key Vault secret name: foundationallm-apis-semantickernelapi-apikey This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:APIUrl Enter the URL to the service. FoundationaLLM:APIs:SemanticKernelAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:APIs:SemanticKernelAPI:ForceHttpsRedirection false FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIKey Key Vault secret name:foundationallm-apis-gatekeeper-azurecontentsafety-apikey This is a Key Vault reference. FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIUrl Enter the URL to the service. FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:HateSeverity 2 FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SelfHarmSeverity 2 FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SexualSeverity 2 FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:ViolenceSeverity 2 FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName completions FoundationaLLM:AzureOpenAI:API:Completions:MaxTokens 8096 FoundationaLLM:AzureOpenAI:API:Completions:ModelName gpt-35-turbo FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion 0301 FoundationaLLM:AzureOpenAI:API:Completions:Temperature 0 FoundationaLLM:AzureOpenAI:API:Embeddings:DeploymentName embeddings FoundationaLLM:AzureOpenAI:API:Embeddings:MaxTokens 8191 FoundationaLLM:AzureOpenAI:API:Embeddings:ModelName text-embedding-ada-002 FoundationaLLM:AzureOpenAI:API:Embeddings:Temperature 0 FoundationaLLM:AzureOpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:AzureOpenAI:API:Key Key Vault secret name: foundationallm-azureopenai-api-key This is a Key Vault reference. FoundationaLLM:AzureOpenAI:API:Version 2023-05-15 FoundationaLLM:BlobStorageMemorySource:BlobStorageContainer memory-source FoundationaLLM:BlobStorageMemorySource:ConfigFilePath BlobMemorySourceConfig.json FoundationaLLM:Branding:AccentColor #fff FoundationaLLM:Branding:AccentTextColor #131833 FoundationaLLM:Branding:BackgroundColor #fff FoundationaLLM:Branding:CompanyName FoundationaLLM FoundationaLLM:Branding:FavIconUrl favicon.ico FoundationaLLM:Branding:KioskMode false FoundationaLLM:Branding:LogoText FoundationaLLM:Branding:LogoUrl foundationallm-logo-white.svg FoundationaLLM:Branding:PageTitle FoundationaLLM Chat Copilot FoundationaLLM:Branding:PrimaryColor #131833 FoundationaLLM:Branding:PrimaryTextColor #fff FoundationaLLM:Branding:SecondaryColor #334581 FoundationaLLM:Branding:SecondaryTextColor #fff FoundationaLLM:Branding:PrimaryButtonBackgroundColor #5472d4 FoundationaLLM:Branding:PrimaryButtonTextColor #fff FoundationaLLM:Branding:SecondaryButtonBackgroundColor #70829a FoundationaLLM:Branding:SecondaryButtonTextColor #fff FoundationaLLM:Chat:Entra:CallbackPath /signin-oidc FoundationaLLM:Chat:Entra:ClientId FoundationaLLM:Chat:Entra:ClientSecret Key Vault secret name: foundationallm-chat-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Chat:Entra:Instance Enter the URL to the service. FoundationaLLM:Chat:Entra:Scopes api://FoundationaLLM-Auth/Data.Read FoundationaLLM:Chat:Entra:TenantId FoundationaLLM:CoreAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:CoreAPI:Entra:ClientId FoundationaLLM:CoreAPI:Entra:ClientSecret Key Vault secret name: foundationallm-coreapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:CoreAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:CoreAPI:Entra:Scopes Data.Read FoundationaLLM:CoreAPI:Entra:TenantId FoundationaLLM:CoreWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string This is a Key Vault reference. FoundationaLLM:CosmosDB:ChangeFeedLeaseContainer leases FoundationaLLM:CosmosDB:Containers Sessions, UserSessions FoundationaLLM:CosmosDB:Database database FoundationaLLM:CosmosDB:Endpoint Enter the URL to the service. FoundationaLLM:CosmosDB:MonitoredContainers Sessions FoundationaLLM:DataSourceHub:DataSourceMetadata:StorageContainer data-sources FoundationaLLM:LangChain:CSVFile:URL Key Vault secret name: foundationallm-langchain-csvfile-url This is a Key Vault reference. FoundationaLLM:LangChain:SQLDatabase:TestDB:Password Key Vault secret name: foundationallm-langchain-sqldatabase-testdb-password This is a Key Vault reference. FoundationaLLM:LangChain:Summary:MaxTokens 4097 FoundationaLLM:LangChain:Summary:ModelName gpt-35-turbo FoundationaLLM:LangChainAPI:Key Key Vault secret name: foundationallm-langchainapi-key This is a Key Vault reference. FoundationaLLM:Management:Entra:CallbackPath /signin-oidc FoundationaLLM:Management:Entra:ClientId FoundationaLLM:Management:Entra:ClientSecret Key Vault secret name: foundationallm-management-entra-clientsecret This is a Key Vault reference. FoundationaLLM:Management:Entra:Instance Enter the URL to the service. FoundationaLLM:Management:Entra:Scopes api://FoundationaLLM-Management-Auth/Data.Manage FoundationaLLM:Management:Entra:TenantId FoundationaLLM:ManagementAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:ManagementAPI:Entra:ClientId FoundationaLLM:ManagementAPI:Entra:ClientSecret Key Vault secret name: foundationallm-managementapi-entra-clientsecret This is a Key Vault reference. FoundationaLLM:ManagementAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:ManagementAPI:Entra:Scopes Data.Manage FoundationaLLM:ManagementAPI:Entra:TenantId FoundationaLLM:OpenAI:API:Endpoint Enter the URL to the service. FoundationaLLM:OpenAI:API:Key Key Vault secret name: foundationallm-openai-api-key This is a Key Vault reference. FoundationaLLM:OpenAI:API:Temperature 0 FoundationaLLM:PromptHub:PromptMetadata:StorageContainer system-prompt FoundationaLLM:Refinement FoundationaLLM:SemanticKernelAPI:OpenAI:Key Key Vault secret name: foundationallm-semantickernelapi-openai-key This is a Key Vault reference. FoundationaLLM:SemanticKernelAPI:OpenAI.ChatCompletionPromptName RetailAssistant.Default FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeployment completions FoundationaLLM:SemanticKernelAPI:OpenAI.CompletionsDeploymentMaxTokens 8096 FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeployment embeddings FoundationaLLM:SemanticKernelAPI:OpenAI.EmbeddingsDeploymentMaxTokens 8191 FoundationaLLM:SemanticKernelAPI:OpenAI.Endpoint Enter the URL to the service. FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMaxTokens 300 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.CompletionsMinTokens 50 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MemoryMinTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMaxTokens 3000 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.MessagesMinTokens 100 FoundationaLLM:SemanticKernelAPI:OpenAI.PromptOptimization.SystemMaxTokens 1500 FoundationaLLM:SemanticKernelAPI:OpenAI.ShortSummaryPromptName Summarizer.TwoWords FoundationaLLM:APIs:VectorizationAPI:APIUrl The URL of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:APIKey Key Vault secret name: foundationallm-apis-vectorizationapi-apikey The API key of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization API. FoundationaLLM:APIs:VectorizationAPI:ForceHttpsRedirection false FoundationaLLM:APIs:VectorizationWorker:APIUrl The URL of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:APIKey Key Vault secret name: foundationallm-apis-vectorizationworker-apikey The API key of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization worker API. FoundationaLLM:Vectorization:VectorizationWorker The settings used by each instance of the vectorization worker service. For more details, see default vectorization worker settings FoundationaLLM:Vectorization:Queues:Embed:AccountName The account name of the Azure Storage account used for the embed vectorization queue. FoundationaLLM:Vectorization:Queues:Extract:AccountName The account name of the Azure Storage account used for the extract vectorization queue. FoundationaLLM:Vectorization:Queues:Index:AccountName The account name of the Azure Storage account used for the index vectorization queue. FoundationaLLM:Vectorization:Queues:Partition:AccountName The account name of the Azure Storage account used for the partition vectorization queue. FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Events:AzureEventGridEventService:APIKey Key Vault secret name: foundationallm-events-azureeventgrid-apikey The API key used to access FLLM's Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:AuthenticationType The authentication type used to connect to the underlying Event Grid namespace. Currently supports APIKey. FoundationaLLM:Events:AzureEventGridEventService:Endpoint The endpoint for the Azure Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:NamespaceId The Azure resource ID of the Event Grid namespace. FoundationaLLM:Events:AzureEventGridEventService:Profiles:OrchestrationAPI FLLM eventing infrastructure configuration for the Orchestration API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:CoreAPI FLLM eventing infrastructure configuration for the Core API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:ManagementAPI FLLM eventing infrastructure configuration for the Management API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationAPI FLLM eventing infrastructure configuration for the Vectorization API. FoundationaLLM:Events:AzureEventGridEventService:Profiles:VectorizationWorker FLLM eventing infrastructure configuration for the Vectorization Worker. FoundationaLLM:Configuration:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint Azure AI Search service endpoint. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion 2023-05-15 FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName embeddings FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint Enter the URL to the service. FoundationaLLM:VectorizationAPI:Entra:CallbackPath /signin-oidc FoundationaLLM:VectorizationAPI:Entra:ClientId FoundationaLLM:VectorizationAPI:Entra:ClientSecret Key Vault secret name: foundationallm-apis-management-api-entra-clientsecret This is a Key Vault reference. FoundationaLLM:VectorizationAPI:Entra:Instance Enter the URL to the service. FoundationaLLM:VectorizationAPI:Entra:Scopes api://FoundationaLLM-Vectorization/Data.Manage FoundationaLLM:VectorizationAPI:Entra:TenantId"
  },
  "deployment/authentication-authorization/authorization-setup-entra.html": {
    "href": "deployment/authentication-authorization/authorization-setup-entra.html",
    "title": "Authorization setup: Microsoft Entra ID | FoundationaLLM",
    "summary": "Authorization setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authorization. This means that you can use your Microsoft Entra ID to setup authorization access to FoundationaLLM's platform. Create the API application Register the API application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter the name FoundationaLLM-Authorization-API for your application. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, enter api://FoundationaLLM-Authorization, then select Save and continue, and then enter the following details: Scope name: Authorization.Manage Who can consent?: Admins and users Admin consent display name: Manage Authorization Admin consent description: Allows the app to manage data on behalf of the signed-in user. User consent display name: Manage data on behalf of the user User consent description: Allows the app to manage data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. It should look like api://FoundationaLLM-Authorization/Authorization.Manage. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Configure Authentication Flows Navigate to the Authentication tab. Select Add a platform. On the Configure platforms pane, select Web. Enter http://localhost under Redirect URIs. Then, below Implicit grant and hybrid flows, select both Access tokens and ID tokens. Finally, select Configure."
  },
  "deployment/authentication-authorization/core-authentication-setup-entra.html": {
    "href": "deployment/authentication-authorization/core-authentication-setup-entra.html",
    "title": "Core API and User Portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "summary": "Core API and User Portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the chat interface. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Core API and user portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the user portal chat interface to authenticate users. An API application that will be used by the Core API to authenticate users. Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter the following name for your application FoundationaLLM-User-Portal. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js chat application. Add a Redirect URI under Single-page application for your deployed Vue.js application. Enter <YOUR_CHAT_APP_URL>/signin-oidc, replacing <YOUR_CHAT_APP_URL> with the chat UI application URL obtained in the Pre-requisites section above. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002chatuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the Vue.js application: http://localhost:3000/signin-oidc. If you wish to configure authentication in Postman for executing calls against the Core API, you will need to add a Redirect URI under Mobile and desktop applications for Postman. Enter https://oauth.pstmn.io/v1/callback for the URI. To do this, complete the following steps: Under Platform configurations, select Add a platform. In the pane that opens, select Mobile and desktop applications. Enter https://oauth.pstmn.io/v1/callback for the Custom redirect URIs value. Select Configure to apply the changes. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter the name FoundationaLLM-Core-API for the application. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, make sure to use api://FoundationaLLM-Core, then enter the following details: Scope name: Data.Read Who can consent?: Admins and users Admin consent display name: Read data on behalf of users Admin consent description: Allows the app to read data on behalf of the signed-in user. User consent display name: Read data on behalf of the user User consent description: Allows the app to read data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. For example, it should look something like api://FoundationaLLM-Core/Data.Read. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Read authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-Client application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM API application. Select the Data.Read scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following:"
  },
  "deployment/authentication-authorization/index.html": {
    "href": "deployment/authentication-authorization/index.html",
    "title": "Authentication | FoundationaLLM",
    "summary": "Authentication FoundationaLLM uses the Microsoft Entra ID service to authenticate users and applications. Check back for additional authentication providers in the future. Microsoft Entra ID Starting release 0.8.0 there are 2 options of completing the app registrations for the 6 apps required for FoundationaLLM. Option #1 is to run a script that will register all 6 applications for you. Option #2 is to manually register the 6 applications. The steps for both options are below. Option #1 - Run the script to register all 6 applications The script is available in the \\deploy\\common\\scripts\\ folder. The script is called Create-FllmEntraIdApps.ps1. The script will register the 6 required applications in the Entra ID tenant that you are logged into. After the completion of the script execution, you will see the 6 applications registered in the Entra ID tenant under App registrations Option 2 - Manually registering the 6 applications Important The following steps are to set up authentication and authorization for the solution. You will need to create app registrations in the Entra ID tenant in the Azure portal manually if you choose not to run the automatic script for any reason. There are currently five app registrations required for the solution as listed below. After you complete the 6 app registrations, you will need to finish the deployment process of the solution and revisit these app registrations to fill in some missing values that are generated during the deployment itself. Steps to perform before the deployment Core API and user portal authentication pre-deployment - Microsoft Entra ID Management API and portal authentication pre-deployment - Microsoft Entra ID Authorization pre-deployment - Microsoft Entra ID Steps to perform after the deployment Pre-requisites for post-deployment configuration Core API and user portal authentication post-deployment - Microsoft Entra ID Management API and portal authentication post-deployment - Microsoft Entra ID Authorization post-deployment - Microsoft Entra ID"
  },
  "deployment/authentication-authorization/management-authentication-setup-entra.html": {
    "href": "deployment/authentication-authorization/management-authentication-setup-entra.html",
    "title": "Management API and portal authentication setup: Microsoft Entra ID | FoundationaLLM",
    "summary": "Management API and portal authentication setup: Microsoft Entra ID FoundationaLLM comes with out-of-the-box support for Microsoft Entra ID authentication. This means that you can use your Microsoft Entra ID account to log in to the management portal. Create the Microsoft Entra ID applications To enable Microsoft Entra ID authentication for the Management API and portal, you need to create two applications in the Microsoft Azure portal: A client application that will be used by the management portal to authenticate users. An API application that will be used by the Management API to authenticate users. Create the client application Register the client application in the Microsoft Entra ID admin center Sign in to the Microsoft Entra ID admin center as at least a Cloud Application Administrator. Browse to Identity > Applications > App registrations. On the page that appears, select + New registration. When the Register an application page appears, enter the name FoundationaLLM-Management-Portal for your application. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Add a redirect URI to the client application Under Manage, select Authentication. Under Platform configurations, select Add a platform. In the pane that opens, select Single-page application. This is for the Vue.js management application. Add a Redirect URI under Single-page application for your deployed Vue.js management application. Enter <YOUR_MANAGEMENT_APP_URL>/signin-oidc, replacing <YOUR_MANAGEMENT_APP_URL> with the management UI application URL. For example, it should look something like https://d85a09ce067141d5807a.eastus.aksapp.io/signin-oidc for an AKS deployment, or https://fllmaca002managementuica.graybush-c554b849.eastus.azurecontainerapps.io/signin-oidc for an ACA deployment. Add a Redirect URI under Single-page application for local development of the management portal Vue.js application: http://localhost:3001/signin-oidc. If you wish to configure authentication in Postman for executing calls against the Core API, you will need to add a Redirect URI under Mobile and desktop applications for Postman. Enter https://oauth.pstmn.io/v1/callback for the URI. To do this, complete the following steps: Under Platform configurations, select Add a platform. In the pane that opens, select Mobile and desktop applications. Enter https://oauth.pstmn.io/v1/callback for the Custom redirect URIs value. Select Configure to apply the changes. Implicit grant and hybrid flows for the client application Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes (if the button is present). Select Save at the bottom of the page to save the changes. Update the client application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Create the API application Register the API application in the Microsoft Entra ID admin center Return to the Microsoft Entra ID admin center. Browse to Identity > Applications > App registrations and select + New registration. For Name, enter a name for the application. For example, enter FoundationaLLM-Management. Users of the app will see this name, and can be changed later. Under Supported account types, select Accounts in this organizational directory only. Select Register. The application's Overview pane displays upon successful registration. Record the Application (client) ID and Directory (tenant) ID to add to your App Configuration settings later. Implicit grant and hybrid flows for the API application Select Authentication under Manage in the left-hand menu. Select + Add a platform under Platform configurations. In the pane that opens, select Web. Under \"Redirect URIs\", enter http://localhost and select Configure. Please note that this value is not used in the FoundationaLLM solution, but is required in order to be able to select the access and ID tokens in the next step. Check Access tokens and ID tokens under Implicit grant. Select Configure to apply the changes. Select Save at the bottom of the page to save the changes. Expose an API for the API application Under Manage, select Expose an API > Add a scope. For Application ID URI, accept the default or specify a custom one, then select Save and continue, and then enter the following details: Scope name: Data.Manage Who can consent?: Admins and users Admin consent display name: Manage data on behalf of users Admin consent description: Allows the app to manage data on behalf of the signed-in user. User consent display name: Manage data on behalf of the user User consent description: Allows the app to manage data on behalf of the signed-in user. State: Enabled Select Add scope to complete the scope addition. Copy the Scope name value to add to your App Configuration settings later. It should look like api://FoundationaLLM-Management/Data.Manage. Add authorized client application While still in the Expose an API section, select + Add a client application. Paste the Application (client) ID of the client application that you created earlier. Check the Data.Manage authorized scope that you created. Select Add application to complete the client application addition. Update the API application manifest Under Manage, select Manifest. Locate the accessTokenAcceptedVersion property and set its value to 2. Select Save at the top of the page to save the changes. Add API permissions for the client application Browse to Identity > Applications > App registrations. Select the FoundationaLLM-Management-Portal application that you created earlier. Select API permissions. Select + Add a permission under the \"Configured permissions\" section. In the \"Request API permissions\" pan, select the My APIs tab, then select the FoundationaLLM-Management-API application. Select the Data.Manage scope that you created earlier, then select Add permissions. The client application's configured permissions should now look like the following:"
  },
  "deployment/authentication-authorization/post-authorization-deployment.html": {
    "href": "deployment/authentication-authorization/post-authorization-deployment.html",
    "title": "| FoundationaLLM",
    "summary": "Post Deployment Follow the instruction below to complete the setup of Microsoft Entra ID authentication for the Authorization API application after the deployment is complete. Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter authorization in the search box to filter the results. Check the box next to Key in the header to select all items. Find the key for FoundationaLLM:APIs:AuthorizationAPI:APIScope and click on edit. Replace the value with the value from the scope we created earlier, as api://FoundationaLLM-Authorization Select Apply to save the changes. Next steps Now that Entra authorization is fully configured, navigate to your Entra ID management console and make sure you completed all app registrations for all the other apps mentioned in the deployment documentation."
  },
  "deployment/authentication-authorization/post-core-deployment.html": {
    "href": "deployment/authentication-authorization/post-core-deployment.html",
    "title": "| FoundationaLLM",
    "summary": "Post Deployment Follow the instruction below to complete the setup of Microsoft Entra ID authentication for the Core API and Chat applications after the deployment is complete. Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Chat:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Chat:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. For example, it should look something like api://FoundationaLLM-Core/Data.Read. FoundationaLLM:Chat:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:CoreAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:CoreAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Chat:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Chat:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:CoreAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:CoreAPI:Entra:Scopes: Should be Data.Read. Select Apply to save the changes. Next steps Now that Entra authentication is fully configured, restart the Core API and chat applications to apply the changes. Navigate to your chat application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account. Restart Core API and Chat UI applications in an ACA Deployment To restart the Core API and Chat applications in an Azure Container Apps (ACA) deployment, you will need to navigate to the Core API and Chat applications and restart their container revisions, as indicated in the following Azure Portal screenshot: From the Revisions blade in the left navigation panel of the Core API or Chat UI container app detail page in Azure Portal, select the name of the running revision. A dialog panel titled Revision details should appear on the right side of the browser with a Restart button at the top. Select the Restart button to restart the running container. Restarting in this manner will need to be performed for both the Core API container app and the Chat UI container app. Restart Core API and Chat UI applications in an AKS Deployment To restart the Core API and Chat applications in an Azure Kubernetes Service (AKS) deployment, you will need to navigate to the AKS detail page in Azure Portal and perform the following: Select the Workloads blade from the left navigation panel. Select the Pods tab from the Workloads detail page. Select the Core API and Chat UI pods from the list (it helps if you select default in the Filter by namespace dropdown first). Select the Delete button to terminate the currently running pods. New pods will be instantiated to take their place."
  },
  "deployment/authentication-authorization/post-management-deployment.html": {
    "href": "deployment/authentication-authorization/post-management-deployment.html",
    "title": "| FoundationaLLM",
    "summary": "Post Deployment Follow the instruction below to complete the setup of Microsoft Entra ID authentication for the Management API and Management Portal applications after the deployment is complete. Update App Configuration settings Sign in to the Azure portal as at least a Contributor. Navigate to the resource group that was created as part of the deployment. Select the App Configuration resource and select Configuration explorer to view the values. Enter entra in the search box to filter the results. Check the box next to Key in the header to select all items. Select Edit to open a JSON editor for the selected items. Replace the values for the following settings with the values that you recorded earlier: FoundationaLLM:Management:Entra:ClientId: The Application (client) ID of the client application that you created earlier. FoundationaLLM:Management:Entra:Scopes: The fully-qualified scopes path for the API application that you created earlier. It should look like api://FoundationaLLM.Management-API/Data.Manage. FoundationaLLM:Management:Entra:TenantId: The Directory (tenant) ID of the client application that you created earlier. FoundationaLLM:ManagementAPI:Entra:ClientId: The Application (client) ID of the API application that you created earlier. FoundationaLLM:ManagementAPI:Entra:TenantId: The Directory (tenant) ID of the API application that you created earlier. Validate the following values while reviewing the settings: FoundationaLLM:Management:Entra:CallbackPath: Should be /signin-oidc. FoundationaLLM:Management:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Instance: Should be https://login.microsoftonline.com/. FoundationaLLM:ManagementAPI:Entra:Scopes: Should be Data.Manage. Select Apply to save the changes. Next steps Now that Entra authentication is fully configured, restart the Management API and management portal applications to apply the changes. Navigate to your management portal application or refresh the page if it is already open. It should automatically prompt you to sign in with your Microsoft Entra ID account."
  },
  "deployment/authentication-authorization/pre-requisites.html": {
    "href": "deployment/authentication-authorization/pre-requisites.html",
    "title": "| FoundationaLLM",
    "summary": "Pre-requisites for post-deployment configuration Important Be aware that after completing this registration and the other app registrations in Entra ID as instructed in the docs you will complete the deployment steps outlined at deploy the solution then you will be revisiting your app registrations to complete some of the settings that require the solution to be deployed before the entire app registration is completed successfully. Setup App Configuration access Sign in to the Azure portal as at least a Contributor. Navigate to the Resource Group that was created as part of the deployment. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. 3. Select the App Configuration resource and select Configuration explorer to view the values. If you cannot access the configurations, add your user account as an App Configuration Data Owner through Access Control (IAM). You need this role in order to update the configurations as a required part of the authentication setup. To add your user account to the appropriate role, follow the instructions in the Configure access control for services document. Obtain the URL for the chat UI application You need this URL to assign the redirect URI for the client application. If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with chatuica. Within the Overview pane, copy the Application Url value. This is the URL for the chat application. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application."
  },
  "deployment/azure-resource-providers-requirements.html": {
    "href": "deployment/azure-resource-providers-requirements.html",
    "title": "| FoundationaLLM",
    "summary": "Azure Resource Providers Requirements to successfully deploy FoundationaLLM To successfully deploy FoundationaLLM, you need to have the following Azure Resource Providers accessible in your Azure Subscription with permissions to create them. For Quick Start Deployment microsoft.alertsmanagement/smartDetectorAlertRules Microsoft.App/containerApps Microsoft.App/managedEnvironments Microsoft.AppConfiguration/configurationStores Microsoft.CognitiveServices/accounts Microsoft.DocumentDB/databaseAccounts Microsoft.EventGrid/namespaces Microsoft.EventGrid/systemTopics Microsoft.Insights/components Microsoft.KeyVault/vaults Microsoft.ManagedIdentity/userAssignedIdentities Microsoft.OperationalInsights/workspaces Microsoft.Portal/dashboards Microsoft.Search/searchServices Microsoft.Storage/storageAccounts For Standard Deployment microsoft.alertsmanagement/smartDetectorAlertRules Microsoft.AppConfiguration/configurationStores Microsoft.CognitiveServices/accounts Microsoft.Compute/virtualMachineScaleSets Microsoft.ContainerService/managedClusters Microsoft.DocumentDB/databaseAccounts Microsoft.EventGrid/namespaces Microsoft.EventGrid/systemTopics Microsoft.Insights/actiongroups Microsoft.Insights/components Microsoft.Insights/metricalerts microsoft.insights/privateLinkScopes Microsoft.Insights/scheduledqueryrules Microsoft.KeyVault/vaults Microsoft.ManagedIdentity/userAssignedIdentities Microsoft.Network/loadBalancers Microsoft.Network/networkInterfaces Microsoft.Network/networkSecurityGroups Microsoft.Network/privateEndpoints Microsoft.Network/publicIPAddresses Microsoft.Network/virtualNetworks Microsoft.OperationalInsights/workspaces Microsoft.OperationsManagement/solutions Microsoft.Search/searchServices Microsoft.Storage/storageAccounts"
  },
  "deployment/configure-access-control-for-services.html": {
    "href": "deployment/configure-access-control-for-services.html",
    "title": "Configure access control for services | FoundationaLLM",
    "summary": "Configure access control for services FoundationaLLM takes a least privilege approach to access control. This means that by default, users have no access to any resources. You must explicitly grant access to users for each resource they need to access. This guide walks you through the process of granting access to users as needed. Prerequisites You have a FoundationaLLM solution deployed and running. You have a user account with the Contributor role on the Azure resource group or subscription where the solution is deployed. Azure App Configuration service The Azure App Configuration service provides FoundationaLLM solution components with a centralized location to store and manage application settings and feature flags. Role-based access controls (RBAC) are used to control access to the App Configuration service for managing settings and feature flags, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read application settings and feature flags. You can use the same approach to grant access to users as needed. App Configuration roles The following table summarizes the roles FoundationaLLM uses for the App Configuration service: Role Description Target Users App Configuration Data Reader Allows users to read settings and feature flags. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. App Configuration Data Owner Allows users to read and write settings and feature flags. Administrators that need to manage settings and feature flags. Grant access to the App Configuration service Use the steps below to grant access to the App Configuration service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. 3. Select the App Configuration resource. The name should end with -appconfig. 4. Select Access Control (IAM) in the left-hand menu. ![The Access Control (IAM) menu item is highlighted.](media/appconfig-access-control-link.png) Select + Add and then Add role assignment. Select the App Configuration Data Reader or the App Configuration Data Owner role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment. Azure Key Vault service The Azure Key Vault service provides FoundationaLLM solution components with a centralized location to store and manage secrets. Role-based access controls (RBAC) are used to control access to the Key Vault service for managing secrets, as well as accessing them. The deployment scripts assign access controls to service accounts to allow them to read secrets. You can use the same approach to grant access to users as needed. Key Vault roles The following table summarizes the roles FoundationaLLM uses for the Key Vault service: Role Description Target Users Key Vault Secrets User Allows users to read secrets. The system-assigned managed identities for the api services and any developers or admins that need to run the solution locally. Key Vault Secrets Officer Allows users to read and write secrets. Administrators that need to manage secrets. Grant access to the Key Vault service Use the steps below to grant access to the Key Vault service: Sign in to the Azure portal as at least a Contributor. Navigate to the resource group where the solution is deployed. Note If you performed an Azure Container Apps (ACA) or Azure Kubernetes Service (AKS) deployment, you will see an extra Resource Group that starts with ME_ or MC_ in addition to the Resource Group defined during the deployment. You will need to navigate to the Resource Group that does not start with ME_ or MC_ to access the App Configuration resource. 3. Select the Key Vault resource. The name should end with -kv. 4. Select Access Control (IAM) in the left-hand menu. ![The Access Control (IAM) menu item is highlighted.](media/keyvault-access-control-link.png) Select + Add and then Add role assignment. Select the Key Vault Secrets User or the Key Vault Secrets Officer role and then select Next. Select the + Select members link, search for user or group you want to grant access to, select the member to add them to the Selected members list, and then select Next. Select Review + assign to complete the assignment."
  },
  "deployment/custom-domains.html": {
    "href": "deployment/custom-domains.html",
    "title": "Custom Domains | FoundationaLLM",
    "summary": "Custom Domains FoundationaLLM uses Azure Container Apps (ACA) or Azure Kubernetes Services (AKS) to deploy the various services needed to support the GenAI platform. Both of these support the ability to add custom domains. Azure Container Apps To add a custom domain to your ACA environments, perform the following: Open the Azure Portal. Browse to the subscription and resource group that contains the target FLLM instance. Select the ACA instance that you want to add a custom domain too. Select Settings, select Custom domains. Select Add custom domain. Type the domain you would like to add. In the dialog, notice the DNS entries you will need to add/modify in order to validate your environment. Once you have validated the domain, select Add. If you selected a managed certificate, after a few moments, an Azure based SSL certificate will be bound to your custom domain. For more information, reference Custom domain names and bring your own certificates in Azure Container Apps. Kubernetes For more information, reference Set up a custom domain name and SSL certificate with the application routing add-on. Application Registration Redirects URIs Two of the ACA instances (management and chat) will require you to add redirect urls in order for the custom domain to function properly. Open the Azure Portal. Browse to Microsoft Entra. Select Application Registrations. Search for the chat UI application, then select it. Under Manage, select Authentication. In the Single-page application Redirect URIs section, add your custom domain appended with signin-oidc. Select Save For the management UI, perform the following: Select Application Registrations. Search for the chat UI application, then select it. Under Manage, select Authentication. In the Single-page application Redirect URIs section, add your custom domain appended with /management/signin-oidc. Select Save."
  },
  "deployment/deployment-configuration.html": {
    "href": "deployment/deployment-configuration.html",
    "title": "Configuration for deployment | FoundationaLLM",
    "summary": "Configuration for deployment Configuration settings used by the FoundationaLLM platform Name Default Type Area Used by Description foundationallm-core-api-url Environment variable User Portal ChatThread.vue, index.vue The URL of the FoundationaLLM Core API. foundationallm-core-api-keyvault-name Environment variable Core API The name of the Azure Key Vault used by the Core API. foundationallm-core-api-entra-instance https://login.microsoftonline.com/ Environment variable Core API The Entra instance used by the Core API. foundationallm-core-api-entra-tenant-id View the Entra setup document for instructions Environment variable Core API The Entra tenant ID used by the Core API. foundationallm-core-api-entra-client-id Environment variable Core API The Entra client ID used by the Core API. foundationallm-core-api-entra-client-secret-name Key Vault secret Core API Name of the Entra client secret used by the Core API. foundationallm-core-api-entra-callback-path /signin-oidc Environment variable Core API The Entra callback path used by the Core API. foundationallm-core-api-entra-scopes Environment variable Core API The Entra scopes used by the Core API. foundationallm-core-api-gatekeeper-api-url Environment variable Core API The URL of the Gatekeeper API used by the Core API. foundationallm-gatekeeper-api-keyvault-name Environment variable Gatekeeper API The name of the Azure Key Vault used by the Gatekeeper API. foundationallm-gatekeeper-api-key Key Vault secret Gatekeeper API The first Gatekeeper API key. foundationallm-gatekeeper-api-orchestration-api-url Environment variable Gatekeeper API The URL of the Orchestration API used by the Gatekeeper API. foundationallm-orchestration-api-keyvault-name Environment variable Orchestration API The name of the Azure Key Vault used by the Orchestration API. foundationallm-orchestration-api-key Key Vault secret Orchestration API The first Orchestration API key. foundationallm-orchestration-api-agenthub-api-url Environment variable Orchestration API The URL of the Agent Hub API used by the Orchestration API. foundationallm-orchestration-api-prompthub-api-url Environment variable Orchestration API The URL of the Prompt Hub API used by the Orchestration API. foundationallm-orchestration-api-datasourcehub-api-url Environment variable Orchestration API The URL of the Data Source Hub API used by the Orchestration API. foundationallm-orchestration-api-langchain-api-url Environment variable Orchestration API The URL of the LangChain API used by the Orchestration API. foundationallm-orchestration-api-semantickernel-api-url Environment variable Orchestration API The URL of the Semantic Kernel API used by the Orchestration API. foundationallm-agenthub-api-key Key Vault secret Agent Hub API APIKeyValidator (SDK) The Agent Hub API key. foundationallm-prompthub-api-key Key Vault secret Prompt Hub API APIKeyValidator (SDK) The Prompt Hub API key. foundationallm-datasourcehub-api-key Key Vault secret Data Source Hub API APIKeyValidator (SDK) The Data Source Hub API key. foundationallm-langchain-api-key Key Vault secret LangChain API APIKeyValidator (SDK) The first LangChain API key. foundationallm-langchain-sqldb-testdb-server-name Environment variable LangChain API SqlDbConfig (SDK) The name of the Azure SQL Server used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-name Environment variable LangChain API SqlDbConfig (SDK) The name of the database used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-username Environment variable LangChain API SqlDbConfig (SDK) The user name used by the LangChain testdb SQL agent. foundationallm-langchain-sqldb-testdb-database-password Key Vault Secret LangChain API SqlDbConfig (SDK) The user password used by the LangChain testdb SQL agent. foundationallm-azure-openai-api-url Environment variable LangChain API AzureChatLLM (SDK) The URL of the Azure OpenAI API. foundationallm-azure-openai-api-completions-deployment Environment variable LangChain API AzureChatLLM (SDK) The name of the completions Azure Open AI deployment used by LangChain API. foundationallm-azure-openai-api-completions-model-version Environment variable LangChain API AzureChatLLM (SDK) The version of the completions model used by LangChain API. foundationallm-azure-openai-api-version Environment variable LangChain API AzureChatLLM (SDK) The version of the Azure Open AI API used by LangChain API. foundationallm-azure-openai-api-key Key Vault secret LangChain API AzureChatLLM (SDK) The key of the Azure Open AI API used by LangChain API. foundationallm-langchain-summary-model-name gpt-35-turbo Environment variable LangChain API SummaryAgent (SDK) The name of the summary model used by the LangChain summary agent. foundationallm-langchain-summary-max-tokens 4097 Environment variable LangChain API SummaryAgent (SDK) The maximum number of input tokens used by the LangChain summary agent. foundationallm-keyvault-name Environment variable LangChain API, PythonSDK AgentHub(SDK), DataSourceHub(SDK),PromptHub(SDK) The name of the Azure Key Vault used by the FoundationaLLM platform. foundationallm-configuration-allow-environment-variables Environment variable PythonSDK Configuration(SDK) When True checks environment first then key vault, otherwise checks App config (not yet implemented) then key vault foundationallm-prompt-metadata-storage-container Environment variable PythonSDK PromptHubStorageManager(SDK) The name of the Azure Blob Storage container where prompt metadata is stored. foundationallm-datasource-metadata-storage-container Environment variable PythonSDK DataSourceHubStorageManager(SDK) The name of the Azure Blob Storage container where data source metadata is stored. foundationallm-agent-metadata-storage-container Environment variable PythonSDK AgentHubStorageManager(SDK) The name of the Azure Blob Storage container where agent metadata is stored. Temporary configuration settings used by the FoundationaLLM platform NOTE: These configuration settings are temporary and will be removed in the future. Name Type Area Used by Description foundationallm-langchain-csv-file-url Environment variable LangChain API CSVAgent (SDK) The URL (including the SAS token) of the CSV file used by the LangChain CSV agent."
  },
  "deployment/deployment-quick-start.html": {
    "href": "deployment/deployment-quick-start.html",
    "title": "Deployment - Quick Start | FoundationaLLM",
    "summary": "Deployment - Quick Start FoundationaLLM is designed for seamless deployment within your Azure Subscription. It initially utilizes Azure Container Apps (ACA) for rapid deployment and streamlined development. For scaling up to production environments, FoundationaLLM also supports deployment on Azure Kubernetes Service (AKS), offering robust scalability and management features. Be mindful of the Azure OpenAI regional quota limits on the number of Azure OpenAI Service instances. To optimize resource usage, FoundationaLLM offers the flexibility to connect to an existing Azure OpenAI Service resource, thereby avoiding the creation of additional instances during deployment. This feature is particularly useful for managing resource allocation and ensuring efficient Azure OpenAI Service quota utilization. Prerequisites You will need the following resources and access to deploy the solution: Azure Subscription: An Azure Subscription is a logical container in Microsoft Azure that links to an Azure account and is the basis for billing, resource management, and allocation. It allows users to create and manage Azure resources like virtual machines, databases, and more, providing a way to organize access and costs associated with these resources. Subscription access to Azure OpenAI service: Access to Azure OpenAI Service provides users with the ability to integrate OpenAI's advanced AI models and capabilities within Azure. This service combines OpenAI's powerful models with Azure's robust cloud infrastructure and security, offering scalable AI solutions for a variety of applications like natural language processing and generative tasks. Start here to Request Access to Azure OpenAI Service Minimum quota of 65 CPUs across all VM family types: Azure CPU quotas refer to the limits set on the number and type of virtual CPUs that can be used in an Azure Subscription. These quotas are in place to manage resource allocation and ensure fair usage across different users and services. Users can request quota increases if their application or workload requires more CPU resources. Start here to Manage VM Quotas App Registrations created in the Entra ID tenant (formerly Azure Active Directory): Azure App Registrations is a feature in Entra ID that allows developers to register their applications for identity and access management. This registration process enables applications to authenticate users, request and receive tokens, and access Azure resources that are secured by Entra ID. Follow the instructions in the Authentication and Authorization setup document to configure authentication for the solution. User with the proper role assignments: Azure Role-Based Access Control (RBAC) roles are a set of permissions in Azure that control access to Azure resource management. These roles can be assigned to users, groups, and services in Azure, allowing granular control over who can perform what actions within a specific scope, such as a subscription, resource group, or individual resource. Owner on the target subscription Owner on the App Registrations described in the Authentication setup document You will use the following tools during deployment: Azure Developer CLI (v1.6.1 or greater) Azure CLI (v2.51.0 or greater): Latest Git PowerShell 7 (7.4.1 or greater) Optional To run or debug the solution locally, you will need to install the following dependencies: .NET 8 SDK Visual Studio 2022 Optional To build or test container images, you will need to install the following dependencies: Docker Desktop Important The perception of the main branch in GitHub, or any version control system, can vary depending on the development workflow adopted by a particular team or organization. The FoundationaLLM team uses the main branch as the primary development branch. In this case, the main branch might indeed be considered a work in progress, with developers regularly pushing changes and updates directly to it. It is where ongoing development work happens. So for deployment purposes, it is recommended to use the latest release branch, which is considered stable and tested. The release branch is a snapshot of the main branch at a specific point in time, where the code is considered stable and ready for deployment. The release branch is tagged with a version number, such as 0.6.0, and is the recommended branch for deployment. Please find our latest releases here Deployment steps Follow the steps below to deploy the solution to your Azure subscription. If you are upgrading from a previous version, like 0.5.0, please refer to the changes in the breaking changes notes. Important Follow the instructions in the Authentication and Authorization setup document to finalize authentication and authorization for the solution. Bear in mind that creating the app registrations in the Entra ID tenant is a prerequisite for the deployment, but you will have to revisit some of these settings after the deployment is complete later to fill in some missing values that are generated during the deployment. Ensure all the prerequisites are met and you have installed the tools required to complete the deployment. From a PowerShell prompt, execute the following to clone the repository: git clone https://github.com/solliancenet/foundationallm.git cd foundationallm/deploy/quick-start git checkout release/0.8.3 Run the following script to install the deployment utilities, including AzCopy, locally. cd .\\deploy\\common\\scripts .\\Get-AzCopy.ps1 Run the following commands to log into Azure CLI, Azure Developer CLI and AzCopy (the instance you just installed above): cd .\\deploy\\quick-start az login # Log into Azure CLI azd auth login # Log into AZD ..\\common\\tools\\azcopy\\azcopy login # Log into AzCopy Set up an azd environment targeting your Azure subscription and desired deployment region: # Set your target Subscription and Location azd env new --location <Supported Azure Region> --subscription <Azure Subscription ID> Run the following commands to set the appropriate application registration settings for OIDC authentication. cd .\\deploy\\quick-start ..\\common\\scripts\\Set-AzdEnvEntra.ps1 Optional: Bring Your Own Azure OpenAI Instance If you have an existing Azure OpenAI instance, you can use it by setting the following environment variables: azd env set OPENAI_NAME <OpenAI Name> azd env set OPENAI_RESOURCE_GROUP <OpenAI Resource Group> azd env set OPENAI_SUBSCRIPTION_ID <OpenAI Subscription ID> Important Deploying with Bring Your Own Azure OpenAI, customers need to make sure that the relevant Managed Identities (LangChain API, Semantic Kernel API, and Gateway API) are assigned the Open AI reader role on the Azure OpenAI account object. Deploy the solution After setting the OIDC-specific settings in the AZD environment above, run azd up in the same folder location to provision the infrastructure, update the App Configuration entries, deploy the API and web app services, and import files into the storage account. azd up Running script to allow MS Graph access through Role Permissions After the deployment is complete, you will need to run the following script to allow MS Graph access through Role Permissions. (See below) Important The user running the script will need to have the appropriate permissions to assign roles to the managed identities. The user will need to be a Global Administrator or have the Privileged Role Administrator role in the Entra ID tenant. The syntax for running the script from the deploy\\quick-start\\common\\scripts folder is: cd .\\deploy\\quick-start ..\\common\\scripts\\Set-FllmGraphRoles.ps1 -resourceGroupName rg-<azd env name> Finally, you will need to update the Authorization Callbacks in the App Registrations created in the Entra ID tenant by running the following script: cd .\\deploy\\quick-start ..\\common\\scripts\\Update-OAuthCallbackUris.ps1 Teardown To tear down the environment, execute azd down in the same folder location. azd down --purge Note The --purge argument in the command above. This ensures that resources that would otherwise be soft-deleted are instead completely purged from your Azure subscription."
  },
  "deployment/deployment-standard.html": {
    "href": "deployment/deployment-standard.html",
    "title": "Deployment - Standard with AKS | FoundationaLLM",
    "summary": "Deployment - Standard with AKS Compared to the quick start deployment using Azure Container Apps (ACA), the FoundationaLLM Standard Deployment with AKS is tailored for scaling up to production environments. It leverages Azure Kubernetes Service (AKS) for robust scalability and management, requiring an Azure Subscription with Azure OpenAI access. Be mindful of the Azure OpenaAI regional quota limits on the number of Azure OpenAI Service instances. This deployment option for FoundationaLLM uses Azure Kubernetes Service (AKS) to host the applications. Compared to Azure Container Apps (ACA) deployment, AKS provides more advanced orchestration and scaling capabilities suitable for larger workloads. The Standard Deployment will configure OpenAI instances to use the maximum quota available. If existing OpenAI resources are already deployed in the subscription, the Standard Deployment will not be able to deploy. The Standard Deployment should be deployed to a subscription with no existing OpenAI resources, or a new subscription should be created for the Standard Deployment. As a final option, the template can be updated to allocate a smaller quota. Prerequisites You will need the following resources and access to deploy the solution: Azure Subscription: An Azure Subscription is a logical container in Microsoft Azure that links to an Azure account and is the basis for billing, resource management, and allocation. It allows users to create and manage Azure resources like virtual machines, databases, and more, providing a way to organize access and costs associated with these resources. Subscription access to Azure OpenAI service: Access to Azure OpenAI Service provides users with the ability to integrate OpenAI's advanced AI models and capabilities within Azure. This service combines OpenAI's powerful models with Azure's robust cloud infrastructure and security, offering scalable AI solutions for a variety of applications like natural language processing and generative tasks. Start here to Request Access to Azure OpenAI Service Minimum quota of vCPUs across all VM family types: Azure CPU quotas refer to the limits set on the number and type of virtual CPUs that can be used in an Azure Subscription. For Azure Kubernetes Service (AKS) deployment, you will need a quota of around 24 vCPUs across all VM family types to ensure that the solution can be deployed and run successfully as the system deploys 2 clusters with 2 node pools each, each pool is set to scale between 1 and 3 instances where each instance has 2 vCPUS which brings the total to 24 vCPUS. These quotas are in place to manage resource allocation and ensure fair usage across different users and services. Users can request quota increases if their application or workload requires more CPU resources. Start here to Manage VM Quotas App Registrations created in the Entra ID tenant (formerly Azure Active Directory): Azure App Registrations is a feature in Entra ID that allows developers to register their applications for identity and access management. This registration process enables applications to authenticate users, request and receive tokens, and access Azure resources that are secured by Entra ID. Follow the instructions in the Authentication setup document to configure authentication for the solution. User with the proper role assignments: Azure Role-Based Access Control (RBAC) roles are a set of permissions in Azure that control access to Azure resource management. These roles can be assigned to users, groups, and services in Azure, allowing granular control over who can perform what actions within a specific scope, such as a subscription, resource group, or individual resource. Owner on the target subscription Owner on the app registrations described in the Authentication setup document You will use the following tools during deployment: Azure CLI (v2.51.0 or greater) git PowerShell 7 (7.4.1 or greater) Helm kubectl kubelogin Optional To run or debug the solution locally, you will need to install the following dependencies: .NET 8 SDK Visual Studio 2022 Optional To build or test container images, you will need to install the following dependencies: Docker Desktop Pre-Deployment steps Follow the steps below to deploy the solution to your Azure subscription. Ensure all the prerequisites are met and gather the following information (you will be prompted for it during the deployment): Azure Service Principal Credentials for Deployment Requires Directory Reader role on the Azure Tenant Requires Owner role on the target resource groups If the target resource groups do not already exist, requires Owner role on the target subscription Requires DNS Zone Contributor role on the DNS resource group (resource group containing private DNS zones necessary for private endpoint provisioning) Requires Network Contributor role on the HUB VNET resource (virtual network resource to which the FoundationaLLM VNET will be peered) Either Owner of the AD Group specified for the FoundationaLLM Administrator role or a member of said AD Group FoundationaLLM Project ID - a 3 to 8 character identifier for a FoundationaLLM deployment Target Azure Location - default is eastus2 Target Resource Groups for the specified workloads APP - defaults to rg-(azd environment name)-(azure location)-app-(project id) AUTH - defaults to rg-(azd environment name)-(azure location)-auth-(project id) DATA - defaults to rg-(azd environment name)-(azure location)-data-(project id) JBX - defaults to rg-(azd environment name)-(azure location)-jbx-(project id) NET - defaults to rg-(azd environment name)-(azure location)-net-(project id) OAI - defaults to rg-(azd environment name)-(azure location)-oai-(project id) OPS - defaults to rg-(azd environment name)-(azure location)-ops-(project id) STORAGE - defaults to rg-(azd environment name)-(azure location)-storage-(project id) VEC - defaults to rg-(azd environment name)-(azure location)-vec-(project id) Pre-created AD Group for the FoundationaLLM Administrator role (default name is FLLM-Admins) Pre-created AD Group for the FoundationaLLM Users role (default name is FLLM-Users) Pre-created and configured FoundationaLLM specific App Registrations necessary to facilitate RBAC (see here and the Entra setup script in deploy/common/scripts/Create-FllmEntraIdApps.ps1) FoundationaLLM-Core-API FoundationaLLM-Reader FoundationaLLM-Core-Portal FoundationaLLM-Management-API FoundationaLLM-Authorization-API FoundationaLLM-Management-Portal Private DNS Zone resource group, subscription Id (if it is in a different subscription), and tenant Id HUB virtual network resource, resource group, subscription Id (if it is in a different subscription), and tenant Id FoundationaLLM Virtual Network and AKS configurations AKS Service CIDR range (default is 10.100.0.0/16) FoundationaLLM VNET CIDR range (default is 10.220.128.0/20 - must be a /20 netmask) Allowed External CIDRs or IPs (default is 192.168.100.0/24,192.168.101.0/28) Backend AKS User Node Pool VM SKU (default is Standard_D8_v5) Backend AKS System Node Pool VM SKU (default is Standard_D2_v5) Frontend AKS User Node Pool VM SKU (default is Standard_D2_v5) Frontend AKS System Node Pool VM SKU (default is Standard_D2_v5) AKS Node Pool VM Availability Zones (default is 1,2,3) Ensure you have adequate quota and availability for selected SKUs in target region and availability zones - a minimal configuration using the same family requires a quota of 64 vCPUs Hostnames and associated SSL certificates in PFX format for the following endpoints User Portal (i.e chat.example.com) Management Portal (i.e. management.example.com) Core API (i.e. api.example.com) Management API (i.e. management-api.example.com) The SSL certificates will need to be copied to the corresponding folders in deploy/standard/certs Desired Azure Container Registry endpoint and credentials if you are escrowing container images and helm charts From a PowerShell prompt, execute the following to clone the repository: git clone https://github.com/solliancenet/foundationallm.git cd foundationallm git checkout release/0.9.6 Set up an azd environment targeting your Azure subscription and desired deployment region: # Set your target Subscription and Location azd env new --location <Supported Azure Region> --subscription <Azure Subscription ID> Provision SSL certificates for the appropriate domains and package them in PFX format. Place the PFX files in foundationallm/deploy/standard/certs following the naming convention below. The values for Host Name and Domain Name should match the values you provided in your deployment manifest: Service Name Host Name Domain Name File Name coreapi api example.com api.example.com.pfx managementapi management-api example.com management-api.example.com.pfx chatui chat example.com chat.example.com.pfx managementui management example.com management.example.com.pfx Provision Infrastructure Provision platform infrastructure with AZD: cd .\\deploy\\standard azd provision The deployment process will take some time. The AZD post-provisioning hook script will generate a hosts file in the .\\deploy\\standard\\config folder describing all the private endpoint IPs and the associated hostnames. These values can be used to populate your computer's local hosts file, or may assist with configuring your organization's DNS system. This guide will assume that you have taken the contents of the generated file and added them to your local hosts file. Configure and Deploy Ensure that you have network access to the deployed resources and that DNS resolution to deployed resources is configured (this is environment specific). Deploy to platform infrastructure with AZD: cd .\\deploy\\standard azd deploy The deployment process will take some time. The process will: Generate the configuration for the system. Load the configuration into App Configuration. Load default system files into Azure Storage. Configure the backend cluster. Create the FLLM namespace in the backend cluster Deploy the backend services to the cluster in the FLLM namespace Create the gateway-system namespace Deploy the secret class provider to the gateway-system namespace Deploy ingress-nginx Deploy Ingress Configurations and External Services Configure the frontend cluster. Create the FLLM namespace in the frontend cluster Deploy the frontend services to the cluster in the FLLM namespace Create the gateway-system namespace Deploy the secret class provider to the gateway-system namespace Deploy ingress-nginx Deploy Ingress Configurations and External Services Generate host file entries for the deployed services on AKS that you can add to your host file or DNS server. The AZD deploy hook script will generate a hosts.ingress file in the .\\deploy\\standard\\config folder describing the api and frontend endpoints and the associated hostnames. These values can be used to populate your computer's local hosts file, or may assist with configuring your organization's DNS system. This guide will assume that you have taken the contents of the generated file and added them to your local hosts file.16. Update your local hosts file with the entries from the generated host file. Running script to allow MS Graph access through Role Permissions After the deployment is complete, you will need to run the following script to allow MS Graph access through Role Permissions. (See below) Important The user running the script will need to have the appropriate permissions to assign roles to the managed identities. The user will need to be a Global Administrator or have the Privileged Role Administrator role in the Entra ID tenant. The syntax for running the script from the deploy\\standard folder is: cd .\\deploy\\standard ..\\common\\scripts\\Set-FllmGraphRoles.ps1 -resourceGroupName <APP workload resource group name> Important The user running the following script will need to have the appropriate permissions to update app registration configuration for the FoundationaLLM specific app registrations used to enable RBAC. This means either Owner role on the aforementioned app registrations or the Application Administrator role in the Azure tenant. Update the Authorization Callbacks in the App Registrations created in the Entra ID tenant by running the following script: cd .\\deploy\\standard ..\\common\\scripts\\Update-OAuthCallbackUris.ps1 Connect and Test Visit the chat UI in your browser and send a message to verify the deployment. The message can be very simple like \"Who are you?\". The default agent should respond with a message explaining it's persona."
  },
  "deployment/index.html": {
    "href": "deployment/index.html",
    "title": "Deployment | FoundationaLLM",
    "summary": "Deployment Deployment choices The following table summarizes the deployment choices available for the solution: Deployment type Description When to use CloudShell Coming Soon - Use Azure CloudShell to deploy the solution using only a browser. Best suited for situations where you want to deploy without needing to install anything in your local development environment. Quick Start Use your local development environment to deploy the solution to your Azure subscription. Best suited for situations where you need the flexibility of a full development environment (e.g. to customize the solution) and you have a local development environment available. Select the links in the table above to learn more about each deployment choice. Post-deployment configuration Authentication setup Follow the instructions in the Authentication setup document to configure authentication for the solution."
  },
  "deployment/soft-delete.html": {
    "href": "deployment/soft-delete.html",
    "title": "| FoundationaLLM",
    "summary": "Which resources in FoundationaLLM are soft-deleted? In FoundationaLLM, the following resources are soft-deleted: Azure OpenAI Resources Azure Key Vault Resources Azure AI Search Resources Azure Content Safety Resources Note If you do not use the azd down --purge command when you delete your resources, you will need to do so manually in the portal to purge (delete permenantly) these resources. Otherwise, you will have to make sure to name the resources differently when you redeploy the FoundationaLLM platform. Another concern is that you may exceed the capacity or tokens allowed for your subscription if you do not purge the resources before creating another one. So, be aware of these issues when you deploy and delete resources from your subscription."
  },
  "deployment/standard/manifest.html": {
    "href": "deployment/standard/manifest.html",
    "title": "Deployment Manifest Setup | FoundationaLLM",
    "summary": "Deployment Manifest Setup The Deployment Manifest is a JSON file that defines the configuration for a FoundationaLLM Standard deployment. You will find an empty Deployment Manifest template in foundationallm/deploy/standard/Deployment-Manifest.template.json. Once you have filled in the required values, you can use the Deployment Manifest to deploy the solution to your Azure subscription using the provided deployment scripts. Create the Deployment Manifest To create the Deployment Manifest, first copy the template file to a new file, for example Deployment-Manifest.json. Then, fill in the required values for your deployment. The following sections describe the different parts of the Deployment Manifest and the values you need to provide. Note You may create several deployment manifests for different environments, such as development, testing, and production. Each manifest should have the appropriate values for the environment in which you are deploying the solution. Deployment-Manifest.json is the default name expected by scripts. You can name your manifest files as you see fit and pass the file name as an argument to the deployment scripts. Property Values General The root section of the Deployment Manifest defines the general properties of the deployment. The following table describes each property and provides an example value. Name Description Value Example adminObjectId The Azure AD Group's Object ID designated as the deployment's admin. Entra Group ID 995a549b-067e-4fe3-9f90-98d78b9ed086 baseDomain The base domain for the deployment. Internet Domain Name example.com createVpnGateway Whether to create a VPN Gateway for the deployment. Boolean true environment A token for naming deployment resources in the environment. String dev, test, prod instanceId The unique ID for the deployment instance. GUID 5d40d2ee-aeb5-4391-95a0-1fd9045d7720 k8sNamespace The Kubernetes namespace for the FLLM Helm deployments. String fllm letsEncryptEmail The email address for Let's Encrypt notifications. Email Address admin@example.com location The Azure region where the deployment resources will be created. Azure Region eastus2, francecentral networkName The name of the network pre-provisioned before the deployment. String fllm-network project A token for naming deployment resources in the environment. String ai, fllm, rd, fred, sally subscription The Azure subscription ID for the deployment. GUID ad82622e-458a-4a48-8023-6b18eed1cf79 Notes createVpnGateway is a boolean value that determines whether a VPN Gateway should be created as part of the deployment. Set this value to true if you want to create a VPN Gateway. You do not need to create a VPN gateway if your networking environment already has a VPN gateway that you want to use or a similar solution like Express Route. instanceId is a GUID that uniquely identifies the deployment instance. You can generate a GUID using PowerShell or other tools. Each deployment instance should have a unique instanceId, this value is used by the authorization system when determining access to resources. This is similar to the subscription ID in Azure. letsEncryptEmail is the email address that will be used for Let's Encrypt notifications. Let's Encrypt is used to generate SSL certificates for the deployment. You do not need to provide this value unless you plan to use the optional pre-deployment script to generate certificates. If you already have certificates, or you plan to use a different certificate provider, you can leave this value blank. The deployment instructions will cover how to provide certificates during deployment. location is the Azure region where the deployment resources will be created. You should choose a region that supports OpenAI and the models needed by FoundationaLLM. The standard deployment supports automatically deploying the following models, not all models are available in every region, the template will configure the models supported in the specified location. Consult the Azure documentation and choose a region supporting the models you would like to use: gpt-35-turbo (0613) gpt-35-turbo (1106) gpt-4 (1106-Preview) gpt-4o (2024-05-13) text-embedding-ada-002 (2) text-embedding-3-large text-embedding-3-small networkName is the name of the network pre-provisioned before the deployment. The deployment will create the requird subnets and other networking resources in this network. If you do not have a pre-provisioned network, the template will create one for you. The network should be created in the networking resource group described later in the manifest. Entra Client IDs The entraClientIds section of the Deployment Manifest defines the client IDs for the different parts of the FoundationaLLM system. These client IDs are used by the authentication system to determine access to resources. The client IDs are unique to each deployment and should be kept secure. See the Authentication setup document for more information on the authentication system. Name Description Value See Also authorization The client ID for the authorization API. GUID API Application Setup chat The client ID for the chat service. GUID Client Application Setup core The client ID for the core API. GUID API Application Setup managementapi The client ID for the management API. GUID Management API Application Setup managementui The client ID for the management UI. GUID Management UI Application Setup vectorizationapi The client ID for the vectorization API. GUID Vectorization API Application Setup Entra Client Secrets The entraClientSecrets section of the Deployment Manifest provides the secrets use for authorization. Name Description Value authorization The client secret (password) for the authorization Application Registration A client secret value generated in the Entra portal Entra Instances The entraInstances section of the Deployment Manifest defines the cloud that can be used for authorization. In most cases this value will be https://login.microsoftonline.com/. Name Description Value authorization The login URL for the Entra cloud https://login.microsoftonline.com/ Entra Scopes The entraScopes section of the Deployment Manifest defines the scopes for the different parts of the FoundationaLLM system. These scopes are used by the authentication system to determine access to resources. See the Authentication setup document for more information on the authentication system. Name Description Example See Also authorization The scope for the authorization API api://FoundationaLLM-Authorization-Auth API Application Setup chat The scope for the chat service api://FoundationaLLM-Auth/Data.Read Client Application Setup core The scope for the core API Data.Read API Application Setup managementapi The scope for the management API Data.Manage Management API Application Setup managementui The scope for the management UI api://FoundationaLLM-Management-Auth/Data.Manage Management UI Application Setup vectorizationapi The scope for the vectorization API Data.Manage Vectorization API Application Setup Ingress Configuration The ingress section of the Deployment Manifest defines the configuration for the Ingress resources that route traffic to the different parts of the FoundationaLLM system. The Ingress resources are used to route traffic from the internet to the different services in the deployment. The following table describes the properties of the ingress section. Section Service Name Description Example apiIngress Ingress Configuration for the APIs in the backend AKS cluster coreapi The Ingress configuration for the Core API host The host name for the Ingress resource api.fllm.example.com path The path for the Ingress resource /core/ pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to core-api sslCert The SSL certificate to use for the Ingress resource coreapi managementapi The Ingress configuration for the Management API host The host name for the Ingress resource management-api.fllm.example.com path The path for the Ingress resource /management/ pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to management-api sslCert The SSL certificate to use for the Ingress resource managementapi vectorizationapi The Ingress configuration for the Vectorization API host The host name for the Ingress resource vectorization-api.fllm.example.com path The path for the Ingress resource /vectorization/ pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to vectorization-api sslCert The SSL certificate to use for the Ingress resource vectorizationapi frontendIngress Ingress Configuration for the portals in the frontend AKS cluster chatui The Ingress configuration for the Chat UI host The host name for the Ingress resource chat.fllm.example.com path The path for the Ingress resource / pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to chat-ui sslCert The SSL certificate to use for the Ingress resource chatui managementui The Ingress configuration for the Management UI host The host name for the Ingress resource management.fllm.example.com path The path for the Ingress resource / pathType The path type for the Ingress resource ImplementationSpecific serviceName The name of the service that the Ingress routes to management-ui sslCert The SSL certificate to use for the Ingress resource managementui Resource Group Configuration The resourceGroups section of the Deployment Manifest defines the names of the resource groups that will be created as part of the deployment. The following table describes the properties of the resourceGroups section. Name Description Example app The resource group for the application hosting resources (AKS). rg-ai-dev-eastus2-app auth The resource group for the authorization API storage resources. rg-ai-dev-eastus2-auth data The resource group for the customer source data resources. rg-ai-dev-eastus2-data dns The resource group for the Private DNS resources. rg-ai-dev-eastus2-dns jbx The resource group for the Jumpbox resources. rg-ai-dev-eastus2-jbx net The resource group for the networking resources. rg-ai-dev-eastus2-net oai The resource group for the OpenAI resources. rg-ai-dev-eastus2-oai ops The resource group for the operations resources. rg-ai-dev-eastus2-ops storage The resource group for the FLLM internal storage resources. rg-ai-dev-eastus2-storage vec The resource group for the vectorization resources. rg-ai-dev-eastus2-vec External Resource Group Configuration The externalResourceGroups section of the Deployment Manifest defines the names of the resource groups that contain resources that are external to the deployment. When pre-provisioning resources for FLLM, be sure to remove the corresponding entry from the resourceGroups section. The following table describes the properties of the externalResourceGroups section. Name Description Example dns The resource group containing pre-provisioned Private DNS resources. rg-ai-shared-eastus2-dns Next Return to the standard deployment steps."
  },
  "development/calling-apis/directly-calling-core-api.html": {
    "href": "development/calling-apis/directly-calling-core-api.html",
    "title": "Directly calling the Core API | FoundationaLLM",
    "summary": "Directly calling the Core API Typically, the only interaction with the FoundationaLLM (FLLM) APIs is indirectly through the User Portal and Management Portal. However, you can also call the APIs directly to perform certain tasks, such as using your configured FLLM agents to perform completions (via the Core API), or updating your branding configurations (via the Management API). API architecture The FLLM architecture contains layers of APIs that are used to perform different tasks along a call chain, starting with the Core API. The following diagram shows a very high-level flow of the API architecture: sequenceDiagram actor U as Caller participant C as CoreAPI participant A as OrchestrationAPI participant O as OrchestrationWrapperAPI U->>C: Calls Orchestration endpoint C->>A: Calls Orchestration endpoint Note over A,O: Agent resolution from cache or hubs A->>+O: Invokes orchestrator Note over O: Calls LangChain or Semantic Kernel O->>-A: Returns result A->>C: Returns result C->>U: Returns result Note The OrchestrationAPI contains a caching layer for the full agent metadata, including the agent, its datasource(s), and prompts. This caching layer is used to improve performance by reducing the number of calls to the underlying hubs. The OrchestrationAPI also includes endpoints to clear the cache across different categories. In the more detailed diagram below, you can see that the OrchestrationAPI calls the AgentHubAPI, PromptHubAPI, and DataSourceHubAPI to retrieve the agent metadata. When we look a level deeper, we see that there are several interactions between the APIs that occur during the call chain. The following diagram shows a more detailed flow of the API architecture: graph TD; A[CoreAPI] -->|1. User Request| B[GatekeeperAPI] -->|Gatekeeper Extensions| BB[GatekeeperIntegrationAPI] A -...->|\"1a. User Request (Bypass Gatekeeper)\"| C[OrchestrationAPI] B ---->|2. Processed Request| C[OrchestrationAPI] C -->|3. Request| E[(AgentHubAPI)] C --->|4. Instantiate Agent| D[[Agent]] D -->|Request| F[(PromptHubAPI)] D -->|Request| G[(DataSourceHubAPI)] E -->|Metadata| C F -->|Metadata| D G -->|Metadata| D D -->|Hydrated Agent| C D -->|5. Composed Information| H[OrchestrationWrapperAPI] H -->|6. Response| D C -->|7. Response| B C -...->|\"7a. Response (Bypass Gatekeeper)\"| A B -->|8. Final Response| A Note Notice that there is an alternate path that bypasses the Gatekeeper API. This path is used when the FoundationaLLM:APIs:CoreAPI:BypassGatekeeper configuration value is set to true. By default, the Core API bypasses the Gatekeeper API. To override this behavior and enable the Gatekeeper API, set this value to true. Bypassing the Gatekeeper means that you bypass content protection and filtering in favor of improved performance. Postman collection The ability to test the API endpoints of FoundationaLLM is a critical part of the development process. Postman is a tool that allows you to do just that. This document will walk you through the process of setting up Postman to work with FoundationaLLM. Tip To find the Core API URL for your deployment, you can retrieve it from your App Configuration resource in the portal by viewing the FoundationaLLM:APIs:CoreAPI:APIUrl configuration value. Alternatively, follow the instructions in the Quickstart guide to find the Core API URL. To see the API endpoints available in FoundationaLLM, you can get your Core API endpoint from your App Configuration resource in the portal and add /swagger/ to the end of it. For example, if your Core API endpoint is https://fllmaca002coreca.graybush-c554b849.eastus.azurecontainerapps.io, then you would navigate to https://fllmaca002coreca.graybush-c554b849.eastus.azurecontainerapps.io/swagger/ to see the API endpoints. Note The example link above is for a Quick Start deployment of FoundationaLLM, which deploys the APIs to Azure Container Apps (ACA). If you are using the standard deployment that deploys the APIs to Azure Kubernetes Service (AKS), then you cannot currently access the Swagger UI for the APIs. However, you will be able to obtain the OpenAPI swagger.json file from the Core API endpoint by navigating to https://{{AKS URL}}/core/swagger/v1/swagger.json. Install Postman If you don't have Postman installed on your machine, visit the Postman website and download the app. Once you have it installed, Create a Blank Workspace. Import the Postman collection First, select the button below to fork and import the Postman collection for the Core API. Select Fork Collection to create a fork and import the collection into your Postman workspace. Within the dialog that displays, enter your fork label, select the Postman workspace into which you want to create the fork, optionally check the Watch original collection checkbox to receive updates to the original collection, and then select Fork collection. You will now see the FoundationaLLM.Core.API collection in your Postman workspace. Set up the Postman environment variables The Postman collection you imported contains a number of API endpoints that you can use to test the Core API. However, before you can use these endpoints, you need to set up a Postman environment variables within your collection that contains the Core API URL, agent hint value, and other variables. We will set up your authentication token in the next section. Select the FoundationaLLM.Core.API collection in the left-hand menu. Select the Variables tab. Tip The https://localhost:63279 value is the default value for the Core API URL (baseUrl variable) when debugging it locally. You can leave this value as-is if you are testing locally, or you can replace it with the Core API URL for your deployment. Note The Initial value column is the value that will be used when you first import the collection. The Current value column is the value that will be used when you run the collection. If you change the Current value column, the Initial value column will not be updated. For the steps that follow, you will be updating the Current value column. Update the baseUrl variable Current value with the Core API URL for your deployment. Fill out the tenantId, appClientId, and appScope Current value settings for your Core Client Entra ID app registration (setup instructions). Use the list below the screenshot to find the values. tenantId: The tenant ID of your Core Client (Chat UI) Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appClientId: The client ID of your Core Client Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appScope: The scope of your Core Client Entra ID app. You can find this value in the Api Permissions section of your Entra ID app in the portal. Select the Save button in the top right corner of the Variables pane to save your changes. Set up the Postman authentication token There are two ways to obtain the authentication token that you will use to authenticate your API calls: Configure the Postman collection authorization token (recommended) Though this method takes a few more steps, it is the recommended method because it allows you to use the same token for all of the API calls in the collection. Important If you previously configured the Microsoft Entra ID app registration for the Chat UI application (Core Client), you will need to update the Redirect URI to https://oauth.pstmn.io/v1/callback in order to use the Postman mobile app to get the token. You can do this by following the steps in the Add a redirect URI to the client application section of the authentication setup guide. Select the Authorization tab within the FoundationaLLM.Core.API collection. You will see the Authorization tab at the collection level. This means that you can configure the token at the collection level and use it for all of the requests in the collection. Notice that the Token Name is FLLM CoreAPI Token. This will automatically be used by the requests in the collection. Note All of the values are pre-filled and use the variables that you set up in the previous section. You do not need to change any values at this time. Scroll down to the bottom of the page and click on Get New Access Token. This will open a new window in your browser and will ask you to login with your credentials. Once you login, you will be asked to consent to the permissions that you specified in the Scope field. Click on Accept to consent to the permissions. You will then be redirected to the callback url that you specified in the Callback Url field. This will close the browser window and will take you back to Postman. You should now see the token in the Authorization tab. Click on Use Token to use the token in the collection. Important Be sure to click the Save button in the top right corner of the Postman app to save your changes. Now you are ready to make your first CoreAPI request. Within the FoundationaLLM.Core.API collection, select the Sessions GET request under the sessions folder. When you select the Authorization tab, notice that the selected type is Inherit auth from parent. This means that the request will use the token that you configured at the collection level. Also notice that the {{baseUrl}} variable is used in the Request Url field. This means that the request will use the Core API URL that you configured at the collection level. Select the Send button to send the request. Even if you do not have any chat sessions in your system, you should receive a successful response (200) from the Core API. Now you can use the same token to test any other request in the collection with ease. Obtain the authentication token from the User Portal (not recommended) As an alternative to saving the authentication token at the collection level, you can obtain the token from the User Portal and save it at the request level. This method is not recommended because it requires you to obtain a new token for each request that you want to make, and the token expires after a certain amount of time. Navigate to the User Portal and log in. Open the browser's developer tools (F12), select the Network tab, refresh the page, and copy the value of the token under the XHR tab from any of the API calls that are made to the Core API. Within the FoundationaLLM.Core.API collection, select the Sessions GET request under the sessions folder. Select the Authorization tab, select Bearer Token as the type, and paste the token value into the Token field. Select Send to send the request. Even if you do not have any chat sessions in your system, you should receive a successful response (200) from the Core API."
  },
  "development/calling-apis/directly-calling-management-api.html": {
    "href": "development/calling-apis/directly-calling-management-api.html",
    "title": "Directly calling the Management API | FoundationaLLM",
    "summary": "Directly calling the Management API This guide provides steps for importing and configuring the Postman collection for the FoundationaLLM Management API. The Management API is used to manage the FoundationaLLM system, including creating and managing agents, vectorization profiles, and more. Once you configure the Postman collection, including authentication, follow the instructions in the links below to perform various operations using the Management API: Managing agents Vectorization management Postman collection The ability to test the API endpoints of FoundationaLLM is a critical part of the development process. Postman is a tool that allows you to do just that. This document will walk you through the process of setting up Postman to work with FoundationaLLM. Tip To find the Management API URL for your deployment, you can retrieve it from your App Configuration resource in the portal by viewing the FoundationaLLM:APIs:ManagementAPI:APIUrl configuration value. To see the API endpoints available in FoundationaLLM, you can get your Management API endpoint from your App Configuration resource in the portal and add /swagger/ to the end of it. For example, if your Management API endpoint is https://fllmaca729managementca.icelake-c554b849.eastus.azurecontainerapps.io, then you would navigate to https://fllmaca729managementca.icelake-c554b849.eastus.azurecontainerapps.io/swagger/ to see the API endpoints. Note The example link above is for a Quick Start deployment of FoundationaLLM, which deploys the APIs to Azure Container Apps (ACA). If you are using the standard deployment that deploys the APIs to Azure Kubernetes Service (AKS), then you cannot currently access the Swagger UI for the APIs. However, you will be able to obtain the OpenAPI swagger.json file from the Management API endpoint by navigating to https://{{AKS URL}}/management/swagger/v1/swagger.json. Install Postman If you don't have Postman installed on your machine, visit the Postman website and download the app. Once you have it installed, Create a Blank Workspace. Import the Postman collection First, select the button below to fork and import the Postman collection for the Management API. Select Fork Collection to create a fork and import the collection into your Postman workspace. Within the dialog that displays, enter your fork label, select the Postman workspace into which you want to create the fork, optionally check the Watch original collection checkbox to receive updates to the original collection, and then select Fork collection. You will now see the FoundationaLLM.Management.API collection in your Postman workspace. Set up the Postman environment variables The Postman collection you imported contains a number of API endpoints that you can use to test the Management API. However, before you can use these endpoints, you need to set up a Postman environment variables within your collection that contains the Management API URL and other variables. We will set up your authentication token in the next section. Select the FoundationaLLM.Management.API collection in the left-hand menu. Select the Variables tab. Note The Initial value column is the value that will be used when you first import the collection. The Current value column is the value that will be used when you run the collection. If you change the Current value column, the Initial value column will not be updated. For the steps that follow, you will be updating the Current value column. Update the baseUrl variable Current value with the Management API URL for your deployment. Update the instanceId variable Current value with the instance ID of your FoundationaLLM deployment. You can find the instance ID in the FoundationaLLM:Instance:Id Azure App Configuration property. Fill out the tenantId, appClientId, and appScope Current value settings for your Management Client Entra ID app registration (setup instructions). Use the list below the screenshot to find the values. tenantId: The tenant ID of your Management Client (Management Portal) Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appClientId: The client ID of your Management Client Entra ID app. You can find this value in the Overview tab of your Entra ID app in the portal. appScope: The scope of your Management Client Entra ID app. You can find this value in the Api Permissions section of your Entra ID app in the portal. Select the Save button in the top right corner of the Variables pane to save your changes. Set up the Postman authentication token Configure the Postman collection authorization token Complete these steps to configure Postman to use the same token for all of the API calls in the collection. Important If you previously configured the Microsoft Entra ID app registration for the Management Client (UI) application, you will need to update the Redirect URI to https://oauth.pstmn.io/v1/callback in order to use the Postman mobile app to get the token. You can do this by following the steps in the Add a redirect URI to the client application section of the authentication setup guide. Select the Authorization tab within the FoundationaLLM.Management.API collection. You will see the Authorization tab at the collection level. This means that you can configure the token at the collection level and use it for all of the requests in the collection. Notice that the Token Name is FLLM Management Token. This will automatically be used by the requests in the collection. Note All of the values are pre-filled and use the variables that you set up in the previous section. You do not need to change any values at this time. Scroll down to the bottom of the page and click on Get New Access Token. This will open a new window in your browser and will ask you to login with your credentials. Once you login, you will be asked to consent to the permissions that you specified in the Scope field. Click on Accept to consent to the permissions. You will then be redirected to the callback url that you specified in the Callback Url field. This will close the browser window and will take you back to Postman. You should now see the token in the Authorization tab. Click on Use Token to use the token in the collection. Important Be sure to click the Save button in the top right corner of the Postman app to save your changes. Now you are ready to make your first ManagementAPI request. Within the FoundationaLLM.Management.API collection, select the Get Agents GET request. When you select the Authorization tab, notice that the selected type is Inherit auth from parent. This means that the request will use the token that you configured at the collection level. Also notice that the {{baseUrl}} and {{instanceId}} variables is used in the Request Url field. This means that the request will use the Management API URL and Instance Id that you configured at the collection level. Select the Send button to send the request. Even if you do not have any agents sessions in your system, you should receive a successful response (200) from the Management API. Now you can use the same token to test any other request in the collection with ease."
  },
  "development/calling-apis/index.html": {
    "href": "development/calling-apis/index.html",
    "title": "Directly calling APIs | FoundationaLLM",
    "summary": "Directly calling APIs Although FoundationaLLM provides user interfaces for most of the operations, you can also call the APIs directly. This is useful when you want to automate some operations or when you want to integrate FoundationaLLM with other systems. The links below provide the documentation for calling the Core and Management APIs, respectively: Core API Management API"
  },
  "development/calling-apis/standard-deployment-local-api-access.html": {
    "href": "development/calling-apis/standard-deployment-local-api-access.html",
    "title": "Standard Deployment Local API Access | FoundationaLLM",
    "summary": "Standard Deployment Local API Access Standard deployments expose backend services internally, preventing API access over the public internet. Using the kubectl CLI, however, it is possible to forward FoundationaLLM APIs deployed within Kubernetes for local consumption. kubectl Forwarding Script Prerequisites kubectl with the kubelogin extension Both of these utilities can be installed by the Azure CLI: az aks install-cli. If you use this command, you will need to restart your terminal to reflect the changes to $PATH. Kubernetes credentials stored in $HOME/.kube/config Obtain these credentials using the Azure CLI. az login az aks get-credentials --name MyManagedCluster --resource-group MyResourceGroup Script Navigate to /deploy/standard/scripts/Kubectl-Proxy.ps1 or copy the following PowerShell script to your local environment. Before running it, ensure that no applications are running on ports 5000-5010. To stop the tunnels, press any key in the terminal context where you started the script. #!/bin/pwsh Set-PSDebug -Trace 0 # Echo every command (0 to disable, 1 to enable, 2 to enable verbose) Set-StrictMode -Version 3.0 $ErrorActionPreference = \"Stop\" $services = @{ \"foundationallm-orchestration-api\" = 5000 \"foundationallm-gatekeeper-api\" = 5001 \"foundationallm-agent-hub-api\" = 5002 \"foundationallm-core-api\" = 5003 \"foundationallm-data-source-hub-api\" = 5004 \"foundationallm-gatekeeper-integration-api\" = 5005 \"foundationallm-langchain-api\" = 5006 \"foundationallm-management-api\" = 5007 \"foundationallm-prompt-hub-api\" = 5008 \"foundationallm-semantic-kernel-api\" = 5009 \"foundationallm-vectorization-api\" = 5010 } $jobIds = @() try { foreach ($servicePortPairing in $services.GetEnumerator()) { Write-Host \"Starting Kubectl Tunnel for $($servicePortPairing.key)\" $job = Start-Job -ScriptBlock ([scriptblock]::Create(\"kubectl port-forward service/$($servicePortPairing.key) $($servicePortPairing.value):80\")) Write-Host \"Job: $($job.Command)\" $jobIds += $job.Id } Write-Host \"Press any key to kill the Kubernetes tunnels...\" $Host.UI.RawUI.ReadKey(\"NoEcho,IncludeKeyDown\") } catch {} finally { foreach ($jobId in $jobIds) { Write-Host \"Killing $jobId\" Stop-Job -Id $jobId } } Note You will need to rerun the script if you restart any nodes while the script is running. Verification Run the following script to ensure that all APIs are accessible through kubectl forwarding. #!/bin/pwsh Set-PSDebug -Trace 0 # Echo every command (0 to disable, 1 to enable, 2 to enable verbose) Set-StrictMode -Version 3.0 $ErrorActionPreference = \"Stop\" foreach ($servicePort in 5000..5010) { Write-Host \"Testing Port #$servicePort...\" curl \"http://localhost:$servicePort/status\" }"
  },
  "development/contributing/git-workflow.html": {
    "href": "development/contributing/git-workflow.html",
    "title": "Git workflow | FoundationaLLM",
    "summary": "Git workflow The general process for working with FoundationaLLM is: Fork on GitHub Clone your fork locally Configure the upstream repo (git remote add upstream git://github.com/solliancenet/foundationallm) Switch to the default branch (e.g. main, using git checkout main) Create a local branch from that (git checkout -b myBranch) Work on your feature Rebase if required (see below) Push the branch up to GitHub (git push origin myBranch) Send a Pull Request on GitHub - the PR should target (have as base branch) the default branch (e.g. main). You should never work on a clone of the default branch, and you should never send a pull request from it - always from a branch. The reasons for this are detailed below. Learning Git Workflow For an introduction to Git, check out GitHub Guides. For more information about GitHub Flow, please head over to the Understanding the GitHub Flow illustrated guide, both by the awesome people at GitHub. Handling Updates from the default branch While you're working away in your branch, it's quite possible that the upstream target branch may be updated. If this happens you should: Stash any uncommitted changes you need to git checkout vX_Y_Z git pull upstream main git rebase main myBranch git push origin main - (optional) this this makes sure your remote main branch is up to date This ensures that your history is \"clean\" i.e. you have one branch off from main followed by your changes in a straight line. Failing to do this ends up with several \"messy\" merges in your history, which we don't want. This is the reason why you should always work in a branch and you should never be working in, or sending pull requests from, main. Rebasing public commits is very problematic, which is why we require you to rebase any updates from upstream/main. If you're working on a long running feature then you may want to do this quite often, rather than run the risk of potential merge issues further down the line. Sending a Pull Request While working on your feature you may well create several branches, which is fine, but before you send a pull request you should ensure that you have rebased back to a single \"Feature branch\" - we care about your commits, and we care about your feature branch; but we don't care about how many or which branches you created while you were working on it :) When you're ready to go you should confirm that you are up to date and rebased with upstream (see \"Handling Updates from the default branch\" above), and then: git push origin myBranch Send a descriptive Pull Request on GitHub - making sure you have selected the correct branch in the GitHub UI!"
  },
  "development/contributing/index.html": {
    "href": "development/contributing/index.html",
    "title": "Contributing to FoundationaLLM | FoundationaLLM",
    "summary": "Contributing to FoundationaLLM We are happy to accept contributions to the FoundationaLLM project in the form of feedback, bug reports, and pull requests. If you want to make code contributions, please be sure to branch from the head of the default branch. For GitHub workflow guidance, please review the Git workflow document. Style guide Please abide by the style guide when contributing to the project."
  },
  "development/contributing/repro.html": {
    "href": "development/contributing/repro.html",
    "title": "Bug report reproduction guide | FoundationaLLM",
    "summary": "Bug report reproduction guide When customers plan to report an issue with FoundationaLLM, we will most likely ask them to provide a so called minimal reproduction project (repro). This serves two purposes: It helps issue reporters validate their assumptions by trying to recreate the behavior in a new project. It helps eliminate ambiguity and speeds up investigations. We may also be able to provide workarounds in certain scenarios. This document describes what a minimal repro project is, and why it's important to us. What is a minimal repro project? A repro (or a reproduction) is a project, which can be used to reproduce the reported behavior with minimal effort from a product team, which has the minimum code required to demonstrate the concerning behavior. Please provide a project hosted in a public GitHub repository as described below: Create a new project with the simplest structure you can get by with to reproduce your issue. Add the minimum amount of code necessary to reproduce the behavior you are reporting on this newly created project. Make sure you do not add any dependencies that are irrelevant to the behavior. Include sample data, if relevant. Host the project as a public repository on GitHub. Make sure you haven't included any binaries in your project (this is usually about the bin and obj folders in your project) Note: that this step is important and we won't be able to open zip attachments in your issues. Zip files are potential attack vectors that we try to avoid at all cost. Important considerations Never include any sensitive information in your reproduction project. Never include any code that is not intended to be public in a repro. Do not reference any external services or data sources."
  },
  "development/contributing/style-guide.html": {
    "href": "development/contributing/style-guide.html",
    "title": "Style guide | FoundationaLLM",
    "summary": "Style guide FoundationaLLM is a growing project with many contributors. To ensure that the code is consistent and easy to read, we have created this style guide. Please follow these guidelines when contributing to the project. General The solution contains different languages and frameworks. The following guidelines apply to all of them: Simple, clean, and readable is always better Dependency Injection is the name of the game Avoid passing data structures around, always use strongly-typed classes Use the latest language features Use well-established design patterns Always think about the bigger picture (how will my choice potentially impact everyone else?) When introducing a new pattern/approach in your code, share with the rest of the team Measure 10 times, cut once (i.e. design before you code) Primarily, we strive to use a uniform approach across all the modules of the platform. Commenting Use comments to explain why you are doing something, not what you are doing. Apply comments to all public classes, methods, and properties. Comments should be written in complete sentences with proper casing and punctuation. Add a space after the comment delimiter (//, #, etc.). Do: // If the Azure Cognitive Search index does not exists, create the index. Don't: //Create index C# Follow the C# identifier naming rules and conventions. Follow the standard C# coding conventions. Python Abide by the Python naming and coding rules (PEP (Python Enhancement Proposal) 8)."
  },
  "development/development-approach.html": {
    "href": "development/development-approach.html",
    "title": "FoundationaLLM DevOps rules and guidelines | FoundationaLLM",
    "summary": "FoundationaLLM DevOps rules and guidelines FoundationaLLM adheres to the trunk-based development philosophy. If you are a member of the FoundationaLLM core development team or you want to contribute to the code, we strongly encourage you to go through the following materials: Microsoft's Azure DevOps team branching strategy How Microsoft develops modern software with DevOps DORA's research program (Google) The state of DevOps - 2021 edition (DORA, Google) Trunk-based development (Google Cloud Architecture Center) Trunk-based development e-book by Paul Hammant Our move to trunk-based development is driven by the vision to build and deliver the FoundationaLLM solution using a solid DevOps process centered on a Git-centric release flow. How? The core rules of development: When a developer starts working on a feature or a bug fix, a new branch gets created from main. When the work ends, a PR is created to bring the work back into main. We encourage a granular approach, where each individual feature or bug fix has it's own branch. Work should be moved back into the trunk via a PR as soon as possible. NOTE: Committing directly into main is not allowed. All changes are merged via PRs which allows for consistent review, validation, and testing processes. When a sprint ends, a release branch is created. The release branch will be used to deploy the changes to production. Work on main ca resume right after the release branch was created. The release branch will live until the next release branch is created. In the case of critical bug fixes, the process will follow the same approach as described above at step 1. Once the PR is approved and the code merged to main, it will also be cherry-picked into the current release branch. From there, it will be deployed into production. NOTE: This approach ensures that no matter how critical a bug fix is and no matter how much pressure there is to fix an issue in production, the code for the fix always ends up in main. Why? Analysis of DevOps Research and Assessment (DORA) data from 2016, 2017 shows that teams achieve higher levels of software delivery and operational performance (delivery speed, stability, and availability) if they follow these practices: Have three or fewer active branches in the application's code repository. Merge branches to trunk at least once a day. Don't have code freezes and don't have integration phases. Common pitfalls Some common obstacles to full adoption of trunk-based development include the following: An overly heavy code-review process. Many organizations have a heavyweight code review process that requires multiple approvals before changes can be merged into trunk. When code review is laborious and takes hours or days, developers avoid working in small batches and instead batch up many changes. This in turn leads to a downward spiral where reviewers procrastinate with large code reviews due to their complexity. Consequently, merge requests often languish because developers avoid them. Because it is hard to reason about the impact of large changes on a system through inspection, defects are likely to escape the attention of reviewers, and the benefits of trunk-based development are diminished. Performing code reviews asynchronously. If your team practices pair programming, then the code has already been reviewed by a second person. If further reviews are required, they should be performed synchronously: when the developer is ready to commit the code, they should ask somebody else on the team to review the code right then. They should not ask for asynchronous review—for example, by submitting a request into a tool and then starting on a new task while waiting for the review. The longer a merge is delayed, the more likely it is to create merge conflicts and associated issues. Implementing synchronous reviews requires the agreement of the team to prioritize reviewing each others' code over other work. Not running automated tests before committing code. In order to ensure trunk is kept in a working state, it's essential that tests are run against code changes before commit. This can be done on developer workstations, and many tools also provide a facility to run tests remotely against local changes and then commit automatically when they pass. When developers know that they can get their code into trunk without a great deal of ceremony, the result is small code changes that are easy to understand, review, test, and which can be moved into production faster. Actions to take Develop in small batches (even smaller than we are used to) Speed up code review so that commits do not need to wait long times to get into main. Have comprehensive, automated testing Have a fast build Metrics Metric Goal Number of active branches (not including the ones developers create for their tasks) Three or less Code freeze periods (merge, stabilization, etc.) No code freeze Frequency of merging branches/forks to trunk At least once per day Time spent in code review (includes time waiting for code review) Average code review time per PR less than 30 min We strongly encourage you to go through the following: A synthetic description of the journey of our goals - sourced from https://devops.paulhammant.com/trunk-correlated-practices-chart/ A tool to calculate the DevOps performance our our team - sourced from https://paulhammant.com/2021/10/08/software-project-guidelines/ Feature flags To be used extensively to control the stability of the releases in production."
  },
  "development/development-local.html": {
    "href": "development/development-local.html",
    "title": "Configure local development environment | FoundationaLLM",
    "summary": "Configure local development environment Prerequisites Environment variables: Create a system environment variable for the Application Configuration Service connection string named FoundationaLLM_AppConfig_ConnectionString. This is used by the .NET projects. Create a system environment variable for the Application Configuration Service URI named FOUNDATIONALLM_APP_CONFIGURATION_URI. This is used by the Python projects. Create a system environment variable named FOUNDATIONALLM_VERSION and set it to the version of the FoundationaLLM deployment you are working with. This is used by the .NET projects to validate your environment configuration based on the version. Tip You can view the FoundationaLLM release versions by viewing the branches in the FoundationaLLM repository. The format is release/n.n.n, where n.n.n is the version number. The FOUNDATIONALLM_VERSION environment variable should be set to the version number without the release/ prefix (example: 0.4.0). Follow the instructions in Configure access control for services to grant your user account access to the Azure App Configuration and Key Vault services. You may need an Azure admin to perform these steps on your behalf. Backend (APIs and worker services): Visual Studio 2022 17.8 or later (required for passthrough Visual Studio authentication for the Docker container and .NET 8 support) with the Python workload installed .NET 8 SDK or greater Python 3.11 (learn more about Python environments in Visual Studio) Docker Desktop (with WSL for Windows machines) (Mac install or Windows install) Azure CLI (v2.51.0 or greater) Microsoft Azure PowerShell Helm 3.11.1 or greater Frontend (Vue.js (Nuxt) web app) Visual Studio Code (recommended for development) Node.js v18.0.0 or newer NPM v10.2.3 or newer Recommended way to install the latest version of NPM and node.js on Windows: Install NVM from https://github.com/coreybutler/nvm-windows Run nvm install latest Run nvm list (to see the versions of NPM/node.js available) Run nvm use latest (to use the latest available version) Setup RBAC permissions when running locally When you run the solution locally, you will need to set role-based access control (RBAC) permissions on the Azure Cosmos DB account. You can do this by running the following command in the Azure Cloud Shell or Azure CLI: Assign yourself to the \"Cosmos DB Built-in Data Contributor\" role: az cosmosdb sql role assignment create --account-name YOUR_COSMOS_DB_ACCOUNT_NAME --resource-group YOUR_RESOURCE_GROUP_NAME --scope \"/\" --principal-id YOUR_AZURE_AD_PRINCIPAL_ID --role-definition-id 00000000-0000-0000-0000-000000000002 UI User Portal The UserPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps: Open the /src/ui/UserPortal folder in Visual Studio Code. Copy the .env.example file in the root directory to a new file named .env and update the values: The APP_CONFIG_ENDPOINT value should be the Connection String for the Azure App Configuration service. This should be the same value as the FoundationaLLM_AppConfig_ConnectionString environment variable. The LOCAL_API_URL should be the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Management Portal The ManagementPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps: Open the /src/ui/ManagementPortal folder in Visual Studio Code. Copy the .env.example file in the root directory to a new file named .env and update the values: The APP_CONFIG_ENDPOINT value should be the Connection String for the Azure App Configuration service. This should be the same value as the FoundationaLLM_AppConfig_ConnectionString environment variable. The LOCAL_API_URL should be the URL of the local Management API service (https://localhost:63267). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the MANAGEMENT API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. .NET projects Core API Core API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"GatekeeperAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7180/ }, , \"OrchestrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: \"https://localhost:7324/\" } } } } CoreWorker The CoreWorker project is a .NET worker service that acts as the Cosmos DB change feed processor. When you debug it locally, it runs within a Docker container. Because of this, it is important to make sure the App Configuration service connection string is set in the appsettings.Development.json file. This is because the Docker container will not have access to the environment variable. CoreWorker app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"DetailedErrors\": true, \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } }, \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"<...>\" } } } Gatekeeper API Gatekeeper API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"OrchestrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7324/ }, \"GatekeeperIntegrationAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8042/ } } } } Orchestration API Orchestration API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"AppConfig\": { \"ConnectionString\": \"\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"APIs\": { \"LangChainAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8765/ }, \"SemanticKernelAPI\": { \"APIUrl\": \"<...>\" // Default local value: https://localhost:7062/ }, \"AgentHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8742/ }, \"PromptHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8642/ }, \"DataSourceHubAPI\": { \"APIUrl\": \"<...>\" // Default local value: http://localhost:8842/ } } } } Semantic Kernel API Semantic Kernel API app settings Make sure the contents of the appsettings.json file has this structure and similar values: { \"Logging\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" }, \"ApplicationInsights\": { \"LogLevel\": { \"Default\": \"Information\", \"Microsoft.AspNetCore\": \"Warning\", \"Microsoft.SemanticKernel\": \"Error\" } } }, \"AllowedHosts\": \"*\", \"FoundationaLLM\": { \"CognitiveSearch\": { \"IndexName\": \"vector-index\", \"MaxVectorSearchResults\": 10 }, \"OpenAI\": { \"CompletionsDeployment\": \"completions\", \"CompletionsDeploymentMaxTokens\": 8096, \"EmbeddingsDeployment\": \"embeddings\", \"EmbeddingsDeploymentMaxTokens\": 8191, \"ChatCompletionPromptName\": \"RetailAssistant.Default\", \"ShortSummaryPromptName\": \"Summarizer.TwoWords\", \"PromptOptimization\": { \"CompletionsMinTokens\": 50, \"CompletionsMaxTokens\": 300, \"SystemMaxTokens\": 1500, \"MemoryMinTokens\": 1500, \"MemoryMaxTokens\": 3000, \"MessagesMinTokens\": 100, \"MessagesMaxTokens\": 3000 } }, \"DurableSystemPrompt\": { \"BlobStorageContainer\": \"prompts\" }, \"CognitiveSearchMemorySource\": { \"IndexName\": \"vector-index\", \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"ACSMemorySourceConfig.json\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageContainer\": \"memory-source\", \"ConfigFilePath\": \"BlobMemorySourceConfig.json\" }, \"SemanticKernelOrchestration\": { \"APIKeySecretName\": \"foundationallm-semantickernel-api-key\" } } } Create the appsettings.Development.json file or update it with the following content and replace all <...> placeholders with the values from your deployment: { \"FoundationaLLM\": { \"CognitiveSearch\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\" }, \"OpenAI\": { \"Endpoint\": \"https://<...>-openai.openai.azure.com/\", \"Key\": \"<...>\" }, \"DurableSystemPrompt\": { \"BlobStorageConnection\": \"<...>\" }, \"CognitiveSearchMemorySource\": { \"Endpoint\": \"https://<...>-cog-search.search.windows.net\", \"Key\": \"<...>\", \"ConfigBlobStorageConnection\": \"<...>\" }, \"BlobStorageMemorySource\": { \"ConfigBlobStorageConnection\": \"<...>\" } } } Python projects Python Environment Variables Create local environment variables named: FOUNDATIONALLM_APP_CONFIGURATION_URI. The value should be the URI of the Azure App Configuration service and not the connection string. We use role-based access controls (RBAC) to access the Azure App Configuration service, so the connection string is not required. FOUNDATIONALLM_ENV: This is required by the OperationsManager to disable the verify setting on requests. By setting the value to dev, it allows calls to the State API from LangChain and other Python-based APIs when running locally (FOUNDATIONALLM_ENV = dev) by disabling the check for a valid SSL cert on requests. This is only necessary when running the State API locally. Otherwise, the setting should be set to prod. Name Value Description FOUNDATIONALLM_APP_CONFIGURATION_URI REDACTED Azure App Configuration URI FOUNDATIONALLM_ENV dev or prod Environment specification. Acceptable values are dev and prod. Defaults to prod if not set. Running the solution locally Configure and run the backend components The backend components consist of the .NET projects and the Python projects. The .NET projects are all ASP.NET Core Web API projects. The Python projects are all FastAPI projects. Open the solution in Visual Studio 2022 17.6 or later. The solution file is located at /src/FoundationaLLM.sln. Reference the API sections above to configure the app settings for each project. This primarily involves just creating the appsettings.development.json file for each of the .NET (located under the dotnet solution folder) API projects and adding the documented values within. For local development, use the localhost URLs for each of the API projects. Note The appsettings.development.json files are excluded from source control. This is to prevent sensitive information from being committed to source control. You will need to create these files locally. Expand the python solution folder. Expand the AgentHubAPI project, then expand the Python Environments folder underneath it. You will likely see a warning icon next to an environment named env. This is because the Python environment has not been created yet. Right-click the Python Environments folder and select Add Environment.... Ensure the Name field is set to env and the Version field is set to Python 3.11 (or your latest version). Also make sure the Install packages from file field is set to the requirements.txt file for the project. This will install the required Python packages after creating the environment. Click Create. You should now see the env environment listed under the Python Environments folder. The warning icon should be gone. Complete steps 4-7 for the DataSourceHubAPI, LangChainAPI, PromptHubAPI, and PythonSDK projects. You may optionally complete these steps for the Python test projects as well. Right-click the Solution in Visual Studio, then select Configure Startup Projects.... Select the Multiple startup projects option, then set the Action for the following projects to Start. Click OK. OrchestrationAPI AgentHubAPI CoreAPI DataSourceHubAPI GatekeeperAPI GatekeeperIntegrationAPI LangChainAPI PromptHubAPI SemanticKernelAPI ManagementAPI VectorizationAPI Press F5 to start debugging the solution. This will start all of the .NET projects and the Python projects. The Vue.js (Nuxt) web app will not be started by default. To start it, follow the steps below. Configure and run the frontend components The frontend components consist of the Vue.js (Nuxt) web apps. Run the User Portal The UserPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps Open the /src/ui/UserPortal folder in Visual Studio Code. Open the .env file and update the LOCAL_API_URL value to the URL of the local Core API service (https://localhost:63279). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the CORE API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Open a terminal in Visual Studio Code and run the following commands: npm install npm run dev The web app should now be running at http://localhost:3000. Run the Management Portal The ManagementPortal project is a Vue.js (Nuxt) project. To configure it to run locally, follow these steps Open the /src/ui/Management folder in Visual Studio Code. Open the .env file and update the LOCAL_API_URL value to the URL of the local Core API service (https://localhost:63267). Important: Only set this value if you wish to debug the entire solution locally and bypass the App Config service value for the MANAGEMENT API URL. If you do not wish to debug the entire solution locally, leave this value empty or comment it out. Open a terminal in Visual Studio Code and run the following commands: npm install npm run dev The web app should now be running at http://localhost:3001."
  },
  "development/index.html": {
    "href": "development/index.html",
    "title": "Development | FoundationaLLM",
    "summary": "Development Development approach Are you interested in contributing to the code? We would love your help! However, we do have some guidelines that we need contributors to follow so that we can keep things running smoothly. Please review the FoundationaLLM DevOps rules and guidelines document. Set up your development environment To successfully build and run the solution, you need to set up your development environment. Follow the instructions in the Configure local development environment document."
  },
  "documentation-generation.html": {
    "href": "documentation-generation.html",
    "title": "Documentation generation | FoundationaLLM",
    "summary": "Documentation generation There are various layers of documentation for this project. This document describes the different layers and how they are generated. Documentation layers The following layers of documentation are available for this project: Markdown files - These are the source files for FoundationaLLM documentation. They are located in the docs folder in the main branch of the repository. API documentation - This is the documentation for the FoundationaLLM API. Language-specific API documentation is generated using tools (more on tools below). GitHub Pages - This is the primary documentation for the project. It is generated from the markdown files in the docs folder. It also includes the API documentation. Documentation tools We use a number of tools to generate the documentation for this project. The following table lists the tools and their purpose: Tool Purpose DocFX Generates the .NET API documentation for the FoundationaLLM API. It also generates the docs website, which includes custom documentation (markdown files) and the combined .NET and Python API documentation. Sphinx Generates the Python API documentation for the FoundationaLLM API. Sphinx DocFX YAML Generates the DocFX YAML files for the Python API documentation. This allows the DocFx build process to incorporate the Python documentation as well. GitHub Pages Hosts the documentation website. It is configured to use the gh-pages branch of the repository as the source for the website. DocFX Execute the following command from the repository root to generate the .NET API documentation: docfx docs/docfx.json"
  },
  "how-to-guides/create-model-agnostic-agent-claude.html": {
    "href": "how-to-guides/create-model-agnostic-agent-claude.html",
    "title": "Overview | FoundationaLLM",
    "summary": "Overview In this step-by-step guide, you will create a model agnostic agent using Claude, a code interpreter tool that uses Python custom containers and a knowledge search tool that uses the uploaded files as a data source. Creating a model agnostic agent Navigate to the Management Portal. Select Create New Agent from the menu bar. In the Agent Name provide a unique name for the agent. In the Agent Display Name provide a user friendly name for the agent. In the Description, provide a description of the agent. Under User Portal Experience, change Would you like to allow the uder to upload files? to Yes. In the Knowledge Source section, under does this agent have an inline context, select Yes. In the Workflow section, and provide the following values: What workflow should the agent use? Select ExternalAgentWorkflow in the drop down. Workflow name: MAA-Workflow Workflow package name: foundationallm_agent_plugins Workflow class name: FoundationaLLMFunctionCallingWorkflow Workflow host: select LangChain Workflow main model: select a Claude based model from the list. Under workflow main model parameters, select Add Property and in the dialog that appears provide these values: Property Key: temperature Property Type: number Property Value: 0.5 Select Save to create the property. Under what is the main workflow prompt, copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Main.txt. Create the Workflow Prompts Open a new browser window to the Management Portal. Select Prompts. First you will create the main workflow prompts. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Workflow-Files. Replace Your-Agent-Name with the name of your agent. Description: Provides instructions that are specific for the identification of the files that are relevant to the question. Category: Workflow Prompt Prefix: Copy and paste the prompt from: https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Files.txt Select Create Prompt Next, create the Workflow Final prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Workflow-Final. Replace Your-Agent-Name with the name of your agent. Description: Provides instructions to build the final response based on the results provided by tools. Category: Workflow Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Final.txt. Select Create Prompt Next, create the Workflow Router prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Workflow-Router. Replace Your-Agent-Name with the name of your agent. Description: Provides instructions that are specific for the selection of tools. Category: Workflow Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Router.txt. Select Create Prompt Create the Tool Prompts First, create the Tool Code Main prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Code-Main. Replace Your-Agent-Name with the name of your agent. Description: Provides the main instructions for the tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Code-Main.txt. Select Create Prompt Next, create the Tool Code Router prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Code-Router. Replace Your-Agent-Name with the name of your agent. Description: Provides additional instructions for the selection of this tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Code-Router.txt. Select Create Prompt Next, create the Tool Knowledge Main prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Knowledge-Main. Replace Your-Agent-Name with the name of your agent. Description: Provides the main instructions for the tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Knowledge-Main.txt. Select Create Prompt Next, create the Tool Knowledge Router prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Knowledge-Router. Replace Your-Agent-Name with the name of your agent. Description: Provides the main instructions for the tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Knowledge-Router.txt. Select Create Prompt Configure the Prompt Resources Under the additional workflow resources, select Add Workflow Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Router prompt (e.g., Your-Agent-Name--Workflow-Router) you previously created for this agent. Resource Role: Enter router_prompt. Select Save to add the prompt resource. Under the additional workflow resources, select Add Workflow Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Files prompt (e.g., Your-Agent-Name--Workflow-Files) you previously created for this agent. Resource Role: Enter files_prompt. Select Save to add the prompt resource. Under the additional workflow resources, select Add Workflow Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Final prompt (e.g., Your-Agent-Name--Workflow-Final) you previously created for this agent. Resource Role: Enter final_prompt. Select Save to add the prompt resource. Configure the Tools First, you will add a code interpreter tool. Under the Tools sections select Add New Tool. Enter the following values: Tool name enter Code-01. This MUST be called Code-01 to match the name used in the prompts. Tool description: Answers questions that require dynamic generation of code. Tool package name: foundationallm_agent_plugins Tool class name: FoundationaLLMCodeInterpreterTool Under Tool resources, select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Model Resource: Select your Claude model Resource Role: Enter main_model. Select Save. Expand the newly created AI model object and select Add Property. Property Key: model_parameters Property Type: Select Object / Array Property Value: Select text and then enter the following and select Save: { \"temperature\": 0.2 } Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Code Interpreter Main prompt (e.g., Your-Agent-Name-Tool-Code-Main) you previously created for this agent. Resource Role: Enter main_prompt. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Code Interpreter Router prompt (e.g., Your-Agent-Name-Tool-Code-Router) you previously created for this agent. Resource Role: Enter router_prompt. Select Save. Under Tool properties, select Add Property and provide these values, then select Save: Property Key: code_session_required Property Type: Boolean Property Value: True Under Tool properties, select Add Property and provide these values, then select Save: Property Key: code_session_endpoint_provider Property Type: String Property Value: AzureContainerAppsCustomContainer Under Tool properties, select Add Property and provide these values, then select Save: Property Key: code_session_language Property Type: String Property Value: Python In the Configure Tool dialog, select Save. Next, you will add Knowledge Conversation Files tool. Under the Tools sections select Add New Tool. Enter the following values: Tool name enter Knowledge-Conversation-Files. This MUST be called Knowledge-Conversation-Files to match the name used in the prompts. Tool description: Retrieves content from files uploaded to conversations. Tool package name: foundationallm_agent_plugins Tool class name: FoundationaLLMKnowledgeTool Under Tool resources, select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Model Resource: Select your Claude model Resource Role: Enter main_model. Select Save. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Knowledge Main prompt (e.g., Your-Agent-Name-Tool-Knowledge-Main) you previously created for this agent. Resource Role: Enter main_prompt. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Knowledge Router prompt (e.g., Your-Agent-Name-Tool-Knowledge-Router) you previously created for this agent. Resource Role: Enter router_prompt. Select Save. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Data Pipeline Resource: Select DefaultFileUpload Resource Role: Enter file_upload_data_pipeline. Select Save. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Vector Database Resource: Select ConversationFiles Resource Role: Enter vector_database. Select Save. Under Tool properties, select Add Property and provide these values, then select Save: Property Key: embedding_model Property Type: String Property Value: text-embedding-3-large Under Tool properties, select Add Property and provide these values, then select Save: Property Key: embedding_dimensions Property Type: Number Property Value: 2048 In the Configure Tool dialog, select Save. Select Create Agent to save the new agent."
  },
  "how-to-guides/create-model-agnostic-agent-gpt4o.html": {
    "href": "how-to-guides/create-model-agnostic-agent-gpt4o.html",
    "title": "Overview | FoundationaLLM",
    "summary": "Overview In this step-by-step guide, you will create a model agnostic agent using GPT-4o, a code interpreter tool that uses Python custom containers and a knowledge search tool that uses the uploaded files as a data source. Creating a model agnostic agent Navigate to the Management Portal. Select Create New Agent from the menu bar. In the Agent Name provide a unique name for the agent. In the Agent Display Name provide a user friendly name for the agent. In the Description, provide a description of the agent. Under User Portal Experience, change Would you like to allow the uder to upload files? to Yes. In the Knowledge Source section, under does this agent have an inline context, select Yes. In the Workflow section, and provide the following values: What workflow should the agent use? Select ExternalAgentWorkflow in the drop down. Workflow name: MAA-Workflow Workflow package name: foundationallm_agent_plugins Workflow class name: FoundationaLLMFunctionCallingWorkflow Workflow host: select LangChain Workflow main model: select a GPT4o based model from the list. Under workflow main model parameters, select Add Property and in the dialog that appears provide these values: Property Key: temperature Property Type: number Property Value: 0.5 Select Save to create the property. Under what is the main workflow prompt, copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Main.txt. Create the Workflow Prompts Open a new browser window to the Management Portal. Select Prompts. First you will create the main workflow prompts. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Workflow-Files. Replace Your-Agent-Name with the name of your agent. Description: Provides instructions that are specific for the identification of the files that are relevant to the question. Category: Workflow Prompt Prefix: Copy and paste the prompt from: https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Files.txt Select Create Prompt Next, create the Workflow Final prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Workflow-Final. Replace Your-Agent-Name with the name of your agent. Description: Provides instructions to build the final response based on the results provided by tools. Category: Workflow Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Final.txt. Select Create Prompt Next, create the Workflow Router prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Workflow-Router. Replace Your-Agent-Name with the name of your agent. Description: Provides instructions that are specific for the selection of tools. Category: Workflow Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Workflow-Router.txt. Select Create Prompt Create the Tool Prompts First, create the Tool Code Main prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Code-Main. Replace Your-Agent-Name with the name of your agent. Description: Provides the main instructions for the tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Code-Main.txt. Select Create Prompt Next, create the Tool Code Router prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Code-Router. Replace Your-Agent-Name with the name of your agent. Description: Provides additional instructions for the selection of this tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Code-Router.txt. Select Create Prompt Next, create the Tool Knowledge Main prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Knowledge-Main. Replace Your-Agent-Name with the name of your agent. Description: Provides the main instructions for the tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Knowledge-Main.txt. Select Create Prompt Next, create the Tool Knowledge Router prompt. Select Create Prompt. Provide the values as follows: Prompt Name: Your-Agent-Name-Tool-Knowledge-Router. Replace Your-Agent-Name with the name of your agent. Description: Provides the main instructions for the tool. Category: Tool Prompt Prefix: Copy and paste the prompt from https://github.com/foundationallm/foundationallm-packages/blob/main/ModelAgnosticAgent/artifacts/Agent-Tool-Knowledge-Router.txt. Select Create Prompt Configure the Prompt Resources Under the additional workflow resources, select Add Workflow Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Router prompt (e.g., Your-Agent-Name--Workflow-Router) you previously created for this agent. Resource Role: Enter router_prompt. Select Save to add the prompt resource. Under the additional workflow resources, select Add Workflow Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Files prompt (e.g., Your-Agent-Name--Workflow-Files) you previously created for this agent. Resource Role: Enter files_prompt. Select Save to add the prompt resource. Under the additional workflow resources, select Add Workflow Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Final prompt (e.g., Your-Agent-Name--Workflow-Final) you previously created for this agent. Resource Role: Enter final_prompt. Select Save to add the prompt resource. Configure the Tools First, you will add a code interpreter tool. Under the Tools sections select Add New Tool. Enter the following values: Tool name enter Code-01. This MUST be called Code-01 to match the name used in the prompts. Tool description: Answers questions that require dynamic generation of code. Tool package name: foundationallm_agent_plugins Tool class name: FoundationaLLMCodeInterpreterTool Under Tool resources, select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Model Resource: Select your GPT4o model Resource Role: Enter main_model. Select Save. Expand the newly created AI model object and select Add Property. Property Key: model_parameters Property Type: Select Object / Array Property Value: Select text and then enter the following and select Save: { \"temperature\": 0.2 } Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Code Interpreter Main prompt (e.g., Your-Agent-Name-Tool-Code-Main) you previously created for this agent. Resource Role: Enter main_prompt. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Code Interpreter Router prompt (e.g., Your-Agent-Name-Tool-Code-Router) you previously created for this agent. Resource Role: Enter router_prompt. Select Save. Under Tool properties, select Add Property and provide these values, then select Save: Property Key: code_session_required Property Type: Boolean Property Value: True Under Tool properties, select Add Property and provide these values, then select Save: Property Key: code_session_endpoint_provider Property Type: String Property Value: AzureContainerAppsCustomContainer Under Tool properties, select Add Property and provide these values, then select Save: Property Key: code_session_language Property Type: String Property Value: Python In the Configure Tool dialog, select Save. Next, you will add Knowledge Conversation Files tool. Under the Tools sections select Add New Tool. Enter the following values: Tool name enter Knowledge-Conversation-Files. This MUST be called Knowledge-Conversation-Files to match the name used in the prompts. Tool description: Retrieves content from files uploaded to conversations. Tool package name: foundationallm_agent_plugins Tool class name: FoundationaLLMKnowledgeTool Under Tool resources, select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Model Resource: Select your GPT4o model Resource Role: Enter main_model. Select Save. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Knowledge Main prompt (e.g., Your-Agent-Name-Tool-Knowledge-Main) you previously created for this agent. Resource Role: Enter main_prompt. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Prompt Resource: Select the Knowledge Router prompt (e.g., Your-Agent-Name-Tool-Knowledge-Router) you previously created for this agent. Resource Role: Enter router_prompt. Select Save. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Data Pipeline Resource: Select DefaultFileUpload Resource Role: Enter file_upload_data_pipeline. Select Save. Select Add Tool Resource. In the Add Resource dialog, provides these values: Resource Type: Vector Database Resource: Select ConversationFiles Resource Role: Enter vector_database. Select Save. Under Tool properties, select Add Property and provide these values, then select Save: Property Key: embedding_model Property Type: String Property Value: text-embedding-3-large Under Tool properties, select Add Property and provide these values, then select Save: Property Key: embedding_dimensions Property Type: Number Property Value: 2048 In the Configure Tool dialog, select Save. Select Create Agent to save the new agent."
  },
  "index.html": {
    "href": "index.html",
    "title": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots | FoundationaLLM",
    "summary": "FoundationaLLM: A platform accelerating delivery of secure, trustworthy enterprise copilots FoundationaLLM simplifies and streamlines building knowledge management (e.g., question/answer agents) and analytic (e.g., self-service business intelligence) copilots over the data sources present across your enterprise. FoundationaLLM deploys a secure, comprehensive and highly configurable copilot platform to your Azure cloud environment: Simplifies integration with enterprise data sources used by agent for in-context learning (e.g., enabling RAG, CoT, ReAct and inner monologue patterns). Provides defense in depth with fine-grain security controls over data used by agent and pre/post completion filters that guard against attack. Hardened solution attacked by an LLM red team from inception. Scalable solution load balances across multiple LLM endpoints. Extensible to new data sources, new LLM orchestrators and LLMs. Reality What it really takes to create a secure, well governed, scalable and extensible enterprise copilot solution: Where does FoundationaLLM stack against the other copilot solutions? What do WE mean by \"copilot\" It's a rapidly evolving AI world out there, so let's level set on what we mean when we say copilot as this is concept core to FoundationaLLM. At its most basic, a copilot uses enterprise supplied knowledge and generative AI models to author text, write code or render images, often by reasoning over human supplied prompts. Across these modalities, the AI is used to assist a human directly with a specific task. That's what makes it a copilot. This basic capability emerges in copilots which power these scenarios: Knowledge Management: Help users quickly find the information they seek and deliver at the right level and in the right format. Examples include summarization, rephrasing or retargeting to address a persona (e.g., explain it like I'm five), sentiment analysis and recommendations. Analytics: Help users quickly get to the data driven insights they seek. Examples include recommendations, predictions, anomaly detection, statistical analysis and data querying and reporting. Why is FoundationaLLM Needed? Simply put we saw lot of folks reinventing the wheel just to get a customized copilot that was grounded and bases its responses in their own data as opposed to the trained parametric knowledge of the model. Many of the solutions we saw made for great demos, but were effectively toys wrapping calls to OpenAI endpoints- they were not something intended or ready to take into production. We built FoundationaLLM to provide a continous journey, one that was quick to get started with so folks could experiment quickly with LLM's but not fall off a cliff after that with a solution that would be insecure, unlicensed, inflexible and not fully featured enough to grow from the prototype into a production solution without having to start all over. The core problems to deliver enterprise copilots are: Enterprise grade copilots are complex and have lots of moving parts (not to mention infrastructure). The industry has a skills gap when it comes to filling the roles needed to deliver these complex copilot solutions. The top AI risks (inaccuracy, cybersecurity, compliance, explainability, privacy) are not being mitigated. Delivery of a copilot solution is time consuming, expensive and frustrating. Where can FoundationaLLM fill the need? Documentation Get up to speed with FoundationaLLM by reading the documentation. This includes deployment instructions, quickstarts, architecture, and API references. Getting Started FoundationalLLM provides a simple command line driven approach to getting your first deployment up and running. Basically, it's two commands. After that, you can customize the solution, run it locally on your machine and update the deployment with your customizations. Follow the Quick Start Deployment instructions to get FoundationaLLM deployed in your Azure subscription. If you want to run the solution locally, follow the Local Development instructions. You can browse the documentation using the sidebar or visit the API section for the reference documentation."
  },
  "operations/backups.html": {
    "href": "operations/backups.html",
    "title": "FoundationaLLM Backups & data resiliency | FoundationaLLM",
    "summary": "FoundationaLLM Backups & data resiliency Before implementing any backup strategy, it's important to carefully plan and consider factors such as recovery time objectives (RTO), recovery point objectives (RPO), and compliance requirements. Choose the method or combination of methods that best align with your specific backup and recovery needs. CosmosDB Ensuring regular backups for Azure Cosmos DB is crucial to protect data such as private agents, user profiles, and chat history. Backups play a vital role in safeguarding your data against accidental deletions, data corruption, or other unforeseen issues. Here are some key points to consider when planning your Cosmos DB backup strategy: Backup and Restore: Automated Backups: Azure Cosmos DB includes automated backups that are taken at regular intervals. These backups are used to provide point-in-time restore capabilities. Retention Period: Backups are retained for a specific retention period, allowing you to restore your data to a previous state within that time frame. The options for retention period are 7 or 30 days. The Standard deployment configures 30 days retention. How to Configure Backup Policy: Backup policies can be configured at the Cosmos DB account level, specifying the frequency and duration of backups. Restore from Backup: You can initiate a point-in-time restore using the Azure Portal, Azure PowerShell, or Azure SDKs. Data Resiliency: Global Distribution: Distributing your Cosmos DB data globally across multiple regions ensures that your data is available even in the face of regional outages. This enhances data resiliency and availability. The Standard Deployment does not currently enable global data distribution. Data is replicated within a single region by the Cosmos DB service. Consistency Levels: Azure Cosmos DB offers various consistency levels, allowing you to balance between consistency and availability based on your application's requirements. The Standard Deployment uses Session consistency by default. Manual Backups and Data Migration: Export and Import: You can manually export your Cosmos DB data to Azure Storage or another Cosmos DB account, providing an additional layer of backup and migration capability. The Standard Deployment does not configure this capability by default. Storage Accounts Backing up the storage account where your prompts, agents, and data sources are defined is crucial to ensure the integrity and availability of your conversational data. Here are steps you can take to back up an Azure Storage account: Azure Storage Account Replication: Azure Storage offers built-in redundancy options like Locally Redundant Storage (LRS), Zone-Redundant Storage (ZRS), Geo-Redundant Storage (GRS), and Read-Access Geo-Redundant Storage (RA-GRS). These options replicate your data across different locations for high availability and durability. By default, LRS is enabled for all new storage accounts in the Standard Deployment. You can change the replication option for an existing storage account by navigating to the Replication tab in the Azure portal. Azure Backup: Azure Backup service allows you to create backups of your virtual machines, files, and databases, including Azure Storage accounts. You can configure backup policies and retention rules to meet your data protection requirements. Configuring Azure Backup is not currently enabled in the Standard Deployment, but you can use the Azure portal to manually configure back up for your storage account. Azure Blob Storage Versioning: Azure Blob Storage versioning is a feature that allows you to enable versioning on your storage account. When versioning is enabled, any update or deletion of a blob results in the creation of a new version of that blob. This helps you maintain a historical record of changes made to your data. This feature is enabled in the Standard Deployment. Azure Blob Storage Soft Delete: Soft delete is a feature in Azure Blob Storage that provides an extra layer of protection against accidental data deletion. When soft delete is enabled, deleted blobs are retained for a specified retention period before being permanently deleted. In the Standard Deployment, soft delete is enabled for 30 days for blobs and containers. Key Vault Azure Key Vault provides several features to help you protect and manage your keys and secrets effectively. Purge Protection: Purge protection is a feature in Azure Key Vault that helps prevent the permanent deletion of a key vault. When purge protection is enabled, the key vault cannot be permanently deleted immediately after deletion. Instead, there is a retention period during which the key vault is retained, and it can be recovered. Key Vaults in the Standard Deployment have purge protection enabled by default and deleted Key Vaults are retained for 7 days. Soft Delete: Soft delete is a feature that protects keys, secrets, and certificates in Azure Key Vault from immediate and irreversible deletion. When soft delete is enabled, deleted items are retained for a specified retention period before they are permanently deleted. Soft delete is enabled by default for all new key vaults in the Standard Deployment. Deleted keys, secrets, and certificates are retained for 7 days. Secret Versioning: Secret versioning is a feature that allows you to store multiple versions of a secret within a key vault. Each time you create or update a secret, a new version is generated. Secret versions help you maintain a history of changes and facilitate rollbacks if needed. This feature is enabled on all Key Vaults in Azure. Backups: Azure Key Vault provides a backup and restore capability, allowing you to create backups of your key vault's keys, secrets, and certificates. These backups can be used for data recovery and protection against accidental data loss. There is no way to backup the entire Key Vault or to schedule regular backups. App Config Azure App Configuration provides features related to backup, versioning, and data resiliency to help you effectively manage and deploy application configuration settings. Backup in Azure App Configuration: Azure App Configuration allows you to back up your configuration settings, including feature flags, connection strings, and other key-value pairs using the Import/Export feature. Backups can be sent to another App Configuration instance, an App Service, or a local file. Versioning in Azure App Configuration: Azure App Configuration automatically version-controls your configuration settings. Each change to a key-value pair creates a new version. Versioning helps track changes to configuration settings over time. You can access and roll back to previous versions of a key-value pair. Data Resiliency in Azure App Configuration: Azure App Configuration is designed with built-in redundancy across multiple regions to ensure high availability and data resiliency. App Configuration supports multi-region replication, allowing you to replicate your configuration settings to different regions for additional resilience. This feature is not currently enabled in the Standard Deployment."
  },
  "operations/graph-api-permissions.html": {
    "href": "operations/graph-api-permissions.html",
    "title": "Why FoundationaLLM needs Graph API permissions | FoundationaLLM",
    "summary": "Why FoundationaLLM needs Graph API permissions Summary A fully functional, robust, and scalable Role-Based Access Control (RBAC) implementation is critical for the success of any enterprise software platform. This is especially true with Generative AI platforms where the new ways in which data is transported, processed, and transformed must be secured and governed. A fully functional RBAC implementation relies on capabilities provided by the underlying identity management platform like: Enumeration of users, groups, and security principals Mapping of object identifiers to their display names Identification of security groups membership. The RBAC implementation provided by FoundationaLLM is designed from the ground up to provide the necessary security layers required by a Generative AI platform deployed in the enterprise. For transparency and auditing purposes, FoundationaLLM keeps all its source code out in the open (in a public GitHub repository) allowing all of the claims made about the behavior of the code to be validated and confirmed by any interested party. Context Graph API permissions are required for the managed identities of the two surface APIs of the platform: Core API Management API These APIs are involved in authenticating their clients (the FoundationaLLM portals and any other actor calling them). They are also involved in enforcing and managing the underlying Role-Based Access Control model of the platform. Rationale behind the architectural decision When authenticating against Graph API, any custom-built API has two choices: Using an Entra ID application registration with a client secret or using a managed identity In both cases, the underlying service principal (the enterprise application associated with the application registration or the managed identity itself) will need the proper permissions to the Graph API to fulfill its tasks. According to Microsoft's official documentation: \"Managed identities provide an automatically managed identity in Microsoft Entra ID for applications to use when connecting to resources that support Microsoft Entra ID authentication. Applications can use managed identities to obtain Microsoft Entra ID tokens without having to manage any credentials.\" The recommended path forward is using managed identities as opposed to any approach that involves using secrets that need to be managed (plain or certificates). This is the underlying justification for our architectural decision to assign permissions to the managed identities. Justification of the need Any standard Role-Based Access Control capability requires the following core features (none of them being optional): Based on the object ID of a security principal, retrieve the security groups it belongs to (either directly or transitively). Based on a list of object IDs of security principals, retrieve their display names (to display meaningful information in the RBAC management experience). Select users, groups, or service principals that are targets for role assignments in the RBAC model. Note \"Entry-level\" approach is to ask for group membership in access tokens. This approach has significant limitations as it is limited to a small number of groups which, if exceeded, will result in a Graph API reference added to the access token, forcing the code to call into Graph API. This limit is hit with almost certainty in enterprise scenarios, hance our decision to use the robust approach (directly calling Graph API) by default. Based on all of the above, the justification for the requested roles is as follows: Group.Read.All - required to get the group membership for security principals authenticated against the APIs which is in turn used to evaluate their role membership and level of access to the capabilities of the platform. Also required to list security groups when FoundationaLLM RBAC roles are assigned to them. User.Read.All - required for group membership retrieval and to list users when FoundationaLLM RBAC roles are assigned to them. Application.Read.All - required for group membership retrieval and to list security principals when FoundationaLLM RBAC roles are assigned to them. Note From the Graph API documentation (https://learn.microsoft.com/en-us/graph/permissions-reference): \"In some cases, an app might need extra permissions to read some group properties like member and memberOf. For example, if a group has one or more service principals as members, the app also needs permissions to read service principals, otherwise Microsoft Graph returns an error or limited information.\" Transparency and auditing The FoundationaLLM source code is fully available in a public GitHub repo: https://github.com/solliancenet/foundationallm. We took this critical decision precisely for cases like this, where our customers need to understand (and also fully audit if needed) the security implications of the permissions granted to various FoundationaLLM components during deployment. For the specific case of Graph API interactions, the behavior is fully encapsulated in one service implementation It can be immediately verified that: Our code performs only the operations mentioned above. Our code uses the smallest possible subset of properties to fulfill its required functionality."
  },
  "operations/index.html": {
    "href": "operations/index.html",
    "title": "Standard platform administration documentation | FoundationaLLM",
    "summary": "Standard platform administration documentation Environment Setup: Initial environment setup (Quick Start Deployment) Initial environment setup (Standard Deployment) Configuration settings for different components: App Configuration Settings Configuration for deployment Configure Core API Settings Configure Management API Settings User Management: Creating, modifying, and deleting user accounts: Authentication setup Assigning roles and permissions: Access control for azure services FoundationaLLM Role-Based Access Control System Maintenance: FoundationaLLM Backups & Data Resiliency Purge user conversations Security Measures: Platform Security Features & Best Practices Logging and Auditing: Accessing System Logs & Audit Trails Troubleshooting: Troubleshooting & Issue Reporting Guide Platform Features: Use cases and best practices for utilizing specific features Update Process: Release Notes: Guidance for creating release notes Update Procedure: Updating container versions in the Standard Deployment Vulnerabilities: Vulnerabilities: Identification, Communication, and Remediation"
  },
  "operations/logs.html": {
    "href": "operations/logs.html",
    "title": "Accessing system logs & audit trails | FoundationaLLM",
    "summary": "Accessing system logs & audit trails Maintaining visibility into system activities is paramount for ensuring security, troubleshooting issues, and monitoring overall system health. Our system generates various logs that provide valuable insights into events, errors, and user activities, and these logs are centrally stored in an Azure Log Analytics Workspace. Accessing these logs is crucial for effective system management. Below, we outline the procedures for accessing logs within our system. 1. Log location Our system logs are stored in the Azure Log Analytics Workspace. This centralized location within Azure ensures ease of access and management. After deployment, customers can redirect these logs to an existing Log Analytics Workspace within their Azure environment, if desired. 2. Log types Different types of logs are generated, including: Security Logs: Capturing security-related events and potential threats. System Logs: Detailing system-level activities and performance metrics. Application Logs: Recording application-specific events and errors. 3. Access permissions Access to logs is restricted to authorized personnel with the appropriate permissions using Azure RBAC. Ensure that only individuals with a legitimate need for log access have the required Azure Roles. 4. Access methods Azure Portal: Navigate to the Azure Portal and access the Log Analytics Workspace for log retrieval. Azure Command-Line Interface (CLI): Use Azure CLI commands for programmatic access to logs. 5. Log retention For long term retention, export logs to a storage account or archive them to a data lake. This is not configured by default but can be added by customers after the initial deployment. The default retention period for logs is 30 days. This can be changed by customers after the initial deployment. 6. Monitoring Tools Utilize Azure Monitor and Log Analytics tools to receive real-time alerts for critical events. Integration with Azure monitoring solutions enhances proactive incident response and system stability. Additional tools like Azure Sentinel can be used for advanced security monitoring and threat detection but are not configured by default. 8. Audit Trails All diagnostics are enabled by default in the standard deployment, including audit trails for Key Vault and similar resources. Audit trails are stored in the Azure Log Analytics Workspace. Regularly review audit trails to ensure the integrity and security of log data."
  },
  "operations/network-security-groups.html": {
    "href": "operations/network-security-groups.html",
    "title": "Network Security Group Configurations | FoundationaLLM",
    "summary": "Network Security Group Configurations FoundationaLLM uses Azure Virtual Networks for network segmentation. The Standard Deployment uses Network Security Groups (NSGs) to control inbound and outbound traffic. The following table lists the NSGs used in the Standard Deployment and the ports that are open by default. NSG Rules Application Gateway Rule Name Access DestinationAddressPrefix DestinationPortRange Direction Priority Protocol ProvisioningState SourceAddressPrefix SourcePortRange Notes allow-internet-http-inbound Allow VirtualNetwork 80 Inbound 128 Tcp Succeeded Internet * Customers may restrict inbound connectivity as desired. allow-internet-https-inbound Allow VirtualNetwork 443 Inbound 132 Tcp Succeeded Internet * Customers may restrict inbound connectivity as desired. allow-gatewaymanager-inbound Allow * 65200-65535 Inbound 148 Tcp Succeeded GatewayManager * This rule is required by Azure and cannot be changed.1 allow-loadbalancer-inbound Allow * * Inbound 164 * Succeeded AzureLoadBalancer * This rule is required by Azure and cannot be changed.1 deny-all-inbound Deny * * Inbound 4096 * Succeeded * * Customers may modify this rule if needed (not reccomended) 1: For further information regarding required NSG rules for Application Gateway, please see this article."
  },
  "operations/purge-conversations.html": {
    "href": "operations/purge-conversations.html",
    "title": "Cosmos DB stored procedure to anonymize deleted sessions (conversations) | FoundationaLLM",
    "summary": "Cosmos DB stored procedure to anonymize deleted sessions (conversations) User conversations are stored in Cosmos DB. When a user deletes a conversation, the session document and associated documents (CompletionPrompt and Message) are marked as deleted (soft-deleted). As opposed to hard-deleting the documents, which would remove them from the database, soft-deleting allows for the possibility of restoring the conversation later. However, in some cases, it may be necessary to anonymize the deleted session to ensure that no sensitive information is retained in the database. Anonymizing the deleted session involves updating the associated documents to remove any potentially sensitive information, such as user input or analysis results. As opposed to hard-deleting the documents, which would remove them from the database, soft-deleting allows for the possibility of retaining statistical information and other metrics, such as token usage, user feedback, etc. This stored procedure anonymizes the deleted session by updating the associated documents to remove any potentially sensitive information. Creating the stored procedure To create the stored procedure, follow these steps: Open the Azure portal and navigate to your Cosmos DB account. Select the \"Data Explorer\" option from the left-hand menu. Right-click the Sessions container and select the New Stored Procedure option. Copy and paste the following code into the stored procedure editor: function anonymizeDeletedSession() { var collection = getContext().getCollection(); var response = getContext().getResponse(); // Retrieve Session document var sessionQuery = `SELECT * FROM c WHERE c.type = 'Session'`; var isSessionAccepted = collection.queryDocuments( collection.getSelfLink(), sessionQuery, {}, function (err, sessionDocuments, responseOptions) { if (err) throw err; if (sessionDocuments.length === 0 || !sessionDocuments[0].deleted) { response.setBody(\"Session cannot be anonymized because it was not deleted.\"); return; } // Session marked as deleted, proceed var query = `SELECT * FROM c WHERE c.type = 'CompletionPrompt' OR c.type = 'Message'`; var isAccepted = collection.queryDocuments( collection.getSelfLink(), query, {}, function (err, documents, responseOptions) { if (err) throw err; if (documents.length === 0) { response.setBody(\"No related documents found.\"); return; } var updatedCount = 0; var processedCount = 0; documents.forEach(function (doc) { if (doc.type === \"CompletionPrompt\") { doc.prompt = \"Deleted\"; } if (doc.type === \"Message\") { doc.text = \"Deleted\"; if (Array.isArray(doc.content)) { doc.content.forEach(function (contentItem) { contentItem.value = \"Deleted\"; }); } if (Array.isArray(doc.analysisResults)) { doc.analysisResults.forEach(function (analysisItem) { analysisItem.toolInput = \"Deleted\"; analysisItem.toolOutput = \"Deleted\"; }); } } // Update the document var acceptUpdate = collection.replaceDocument(doc._self, doc, function (err) { if (err) throw err; updatedCount++; processedCount++; // Check if all documents processed if (processedCount === documents.length) { response.setBody(\"Updated \" + updatedCount + \" documents.\"); } }); if (!acceptUpdate) throw new Error(\"Update not accepted, aborting\"); }); } ); if (!isAccepted) throw new Error(\"Query was not accepted by server.\"); } ); if (!isSessionAccepted) throw new Error(\"Session query was not accepted by server.\"); } Provide a name for the stored procedure (e.g., anonymizeDeletedSession). Select the Save button to create the stored procedure. Executing the stored procedure When you wish to anonymize a deleted session, you can execute the stored procedure by following these steps: In the Azure portal, navigate to your Cosmos DB account and select the Data Explorer option. Expand the Sessions container and expand the Stored Procedures option. Select the stored procedure you created (e.g., anonymizeDeletedSession). Click the Execute button to run the stored procedure. In the input parameters panel that appears, enter the sessionId of the session you want to anonymize into the Partition key value field, then select Execute. The stored procedure will run and anonymize the deleted session, updating the associated documents as necessary. The output will indicate the number of documents that were updated. If the session was not deleted, the output will indicate that the session cannot be anonymized because it was not deleted."
  },
  "operations/release-notes.html": {
    "href": "operations/release-notes.html",
    "title": "Guidance for creating release notes | FoundationaLLM",
    "summary": "Guidance for creating release notes Creating release notes is an essential part of the software development and release process. Release notes provide valuable information to end-users, stakeholders, and other team members about the changes, enhancements, and fixes introduced in a software release. Here's a structured process for creating release notes: 1. Define the release scope and content Understand the changes included in the release. Identify new features, enhancements, bug fixes, and any other significant changes. 2. Use a version control system Review the commit history and pull requests associated with the release. Identify the issues or features implemented during the release period. 3. Categorize changes Group changes into categories for clarity. Common categories include: New Features Enhancements Bug Fixes Deprecations Security Updates 4. Collect information Gather details for each change, including: Brief description of the change. Associated issue or feature request numbers. Names of contributors or teams involved. 5. Prioritize information Arrange the changes in order of importance or relevance to users. Highlight major features or critical bug fixes at the top. 6. Write Release Notes Craft concise and clear release notes. Use a consistent format and style. Include a header with the release version, date, and any important announcements. 7. Provide context Offer context for each change. Explain why a feature was added or why a bug fix was necessary. Include information that helps users understand the impact of the changes. 8. Include links Add links to relevant documentation, issue trackers, or pull requests for more details. This helps users and developers find additional information if needed. 9. Test Release Notes Review the release notes to ensure accuracy and completeness. Verify that all changes are appropriately documented. 10. Review with stakeholders Share the draft release notes with relevant stakeholders, such as product managers, developers, and quality assurance teams. Incorporate feedback and make necessary adjustments. 11. Publish release notes We will publish release notes as part of creating a new release in github. If applicable, notify users through email, social media, or other communication channels. 12. Archive previous release notes Maintain a historical record by archiving previous release notes. Relase notes for previous releases will remain visible with those releases in github. This helps users track changes over time and understand the evolution of the software. 13. Update documentation Ensure that other documentation, such as user guides or API documentation, is updated to reflect the changes introduced in the release. 14. Automate if possible Consider automating parts of the release notes generation process, especially if your project follows a structured development workflow with clear commit messages and pull request descriptions. 15. Seek user feedback Encourage users to provide feedback on the release notes. This can help you improve the clarity and usefulness of future release notes. By following this process, you can create comprehensive and user-friendly release notes that effectively communicate the changes made in each software release."
  },
  "operations/security.html": {
    "href": "operations/security.html",
    "title": "Platform security features & best practices | FoundationaLLM",
    "summary": "Platform security features & best practices Maintaining the security of the Azure platform is crucial for protecting sensitive data and ensuring the integrity of your infrastructure. Identity and Access Management (IAM) Ensure that only authorized users have access to your Azure resources. FoundationaLLM uses Azure Entra ID for centralized identity management. Enable multi-factor authentication (MFA) for all user accounts. Network Security The standard deployment: Uses Azure Virtual Networks for network segmentation. Implements Network Security Groups (NSGs) to control inbound and outbound traffic. Network Security Rule Details Data Encryption Wherever possible the Standard Deployment uses encryption at rest with system-managed keys. Customer managed keys can be enabled at your discretion. Threat Detection and Monitoring Wherever supported the Standard Deployment enables Azure Diagnostics on the resources it deploys. These logs are sent to a Log Analytics workspace. as part of the standard resources. Customers are encouraged to enable Azure Defender for additional threat detection and monitoring. Customers may use Azure Sentinel for advanced security information and event management (SIEM). Customers already using Azure Sentinel may redirect the logs from the Standard Deployment to their existing Azure Sentinel instance. Patch Management Regularly check the FoundationaLLM github repository for new image releases and update your deployment accordingly."
  },
  "operations/troubleshooting.html": {
    "href": "operations/troubleshooting.html",
    "title": "Troubleshooting & issue reporting guide | FoundationaLLM",
    "summary": "Troubleshooting & issue reporting guide There are three common issues that may arise when using the FoundationaLLM platform. This guide provides a structured approach to troubleshooting these issues. Troubleshooting Azure App Registration misconfiguration 1. Symptoms: Users unable to authenticate or access Azure services using the app. Error messages related to authentication failures. 2. Troubleshooting Steps: a. Verify App Registration Configuration: Check the Azure Portal for the App Registration settings. Ensure the correct redirect URIs, client secrets, and authentication settings are configured by reviewing (the setup guide)[../deployment/authentication/core-authentication-setup-entra.md#update-app-configuration-settings]. b. Error Logs Examination: Review logs for any authentication-related errors. Check for error details and correlate them with misconfigured settings. Troubleshooting missing Azure App Registration details in Azure App Configuration 1. Symptoms: Application unable to retrieve configuration settings. Errors related to missing or invalid configuration values. Login problems similar to those described in the previous section. 2. Troubleshooting Steps: a. Check Azure App Configuration: Verify that the App Registration details are correctly stored in Azure App Configuration using the setup guide. Ensure that keys, secrets, and connection strings are accurate. c. Azure App Configuration Logs: Inspect Azure App Configuration logs for any errors related to configuration retrieval. Look for issues such as key not found or invalid values. d. Azure Key Vault Integration: FoundationaLLM Azure Key Vault for sensitive configuration, verify the correct values are in Key Vault using [the setup guide][1]. Ensure the Azure App Configuration managed identity has the necessary permissions to access Key Vault secrets. Troubleshooting container crashing 1. Symptoms: Containers restarting frequently or failing to start. Application unavailability due to container issues. 2. Troubleshooting Steps: a. Container Logs Examination: Access container logs in Log Analytics to identify error messages or issues during startup. Look for any crashes, exceptions, or resource constraints. b. Resource Utilization: Check resource utilization metrics (CPU, memory) for the container. Ensure that the container has adequate resources allocated. c. Dependency Check: Examine dependencies within the containerized application. Verify that required services or components are accessible. d. Container Health Checks: Identify and address health check failures impacting container stability. e. Container Image Update: Review the container image version, update to the latest version to receive bug fixes and new features. Additional support and issue reporting If you encounter an issue that is not addressed by the troubleshooting steps outlined in this document, we encourage you to open a GitHub issue. This ensures that our team can provide tailored assistance and continuously improve our troubleshooting resources. Steps to open a GitHub issue Navigate to our GitHub Repository: Visit our GitHub repository at https://github.com/solliancenet/foundationallm. Check Existing Issues: Before creating a new issue, check the existing issues to see if the problem has already been reported or discussed. Create a New Issue: Click on the \"Issues\" tab in the repository. Select \"New Issue\" to open a new issue template. Provide Detailed Information: Clearly describe the issue, including symptoms, error messages, and steps to reproduce. Attach relevant logs or screenshots that can assist in understanding the problem. Tag the Issue Appropriately: Tag the issue with relevant labels, such as \"bug,\" \"enhancement,\" or \"question,\" to categorize it correctly. Monitor for Updates: After creating the issue, monitor it for updates and respond promptly to any requests for additional information. By opening a GitHub issue at https://github.com/solliancenet/foundationallm, you contribute to our collaborative effort in maintaining a robust and well-supported system. Our team values your feedback, and addressing issues through GitHub allows for a transparent and efficient resolution process. Thank you for your collaboration, and we look forward to assisting you with any challenges you may encounter. Your input is instrumental in enhancing the overall reliability and functionality of our system."
  },
  "operations/update.html": {
    "href": "operations/update.html",
    "title": "Updating container versions in the Standard Deployment | FoundationaLLM",
    "summary": "Updating container versions in the Standard Deployment The Standard Deployment uses the foundationallm/deploy/scripts/Deploy-Images-Aks.ps1 script to deploy latest version of the FoundationaLLM images during initial setup. However, you may want to update the images to a specific version. This can be done by updating the values file and redeploying the images. PREREQUISITES Azure CLI set to the correct tenant/subscription context AKS credentials located in the .kube/config directory To obtain AKS credentials, use the following Azure CLI command: az aks get-credentials --name \"[PREFIX]-aks\" --resource-group \"[DEPLOYMENT RESOURCE GROUP]\" Helm CLI DESCRIPTION This script deploys multiple images on an AKS (Azure Kubernetes Service) cluster using Helm charts. It takes various parameters such as the release name, AKS name, resource group, tag, charts to deploy, values file, namespace, TLS/SSL environment, TLS host, TLS secret name, and autoscale option. PARAMETER name The release name for the deployment. Default is \"foundationallm\". PARAMETER aksName The name of the AKS cluster. PARAMETER resourceGroup The resource group of the AKS cluster. PARAMETER tag The tag of the images to deploy. Default is \"latest\". PARAMETER charts The charts to deploy. Use \"\" to deploy all charts. Default is \"\". PARAMETER valuesFile The path to the values file for Helm charts. Default is \"gvalues.yaml\". PARAMETER namespace The namespace to deploy the charts. If empty, it uses the namespace specified in .kube/config. PARAMETER tlsEnv The TLS/SSL environment to enable. Valid values are \"prod\", \"staging\", \"none\", and \"custom\". Default is \"prod\". PARAMETER tlsHost The hostname of the AKS cluster. Required if tlsEnv is set to \"custom\". PARAMETER tlsSecretName The name of the TLS secret. Required if tlsEnv is set to \"custom\". PARAMETER autoscale Specifies whether to enable autoscaling for the core-job chart. Default is $false. EXAMPLE Deploy-Images-Aks.ps1 ` -aksName \"myAKS\" ` -resourceGroup \"myResourceGroup\" ` -tag \"v1.0\" ` -charts \"core-api,core-job\" ` -valuesFile \"myvalues.yaml\" ` -namespace \"myNamespace\" ` -tlsEnv \"prod\" ` -tlsHost \"myaks.example.com\" ` -tlsSecretName \"myTLSSecret\" ` -autoscale $true Note: The script will NOT generate a gvalues.yaml file for you. If you do not have a gvalues.yaml file locally, use the Helm CLI to obtain it. # Get all releases (e.g., foundationallm-web) helm list # Write gvalues.yaml for release helm get values \"foundationallm-web\" --all > gvalues.yaml"
  },
  "operations/vulnerabilities.html": {
    "href": "operations/vulnerabilities.html",
    "title": "Vulnerabilities: Identification, communication, and remediation | FoundationaLLM",
    "summary": "Vulnerabilities: Identification, communication, and remediation FoundationaLLM is committed to maintaining the security of our platform and protecting the integrity of your data. We conduct regular security testing to identify and address potential vulnerabilities in our platform. Vulnerability Identification: Regular Red-Team Exercises: Our security protocols include routine red-team exercises aimed at identifying potential vulnerabilities and misconfigurations within the Azure platform. Through these exercises, we simulate real-world attack scenarios to proactively identify and address any weaknesses in our security posture. Regular Builds and Container Image Scans: To stay ahead of emerging threats, we conduct regular builds and scans of our container images. This proactive approach involves identifying and addressing newly reported Common Vulnerabilities and Exposures (CVEs) promptly. By integrating security scans into our regular build processes, we ensure that our container images adhere to the latest security standards and mitigate potential risks effectively. Vulnerability Severity Categorization: Severity levels for vulnerabilities and other security findings are defined as follows: Minor: Vulnerabilities categorized as minor pose low or negligible risk to our system's security. These issues typically have minimal impact on operations and can be addressed during routine maintenance. Major: Major vulnerabilities signify a moderate level of risk and may have a noticeable impact on security if left unaddressed. Immediate attention is given to major vulnerabilities to mitigate potential security gaps and maintain a secure environment. High: Vulnerabilities classified as high represent a significant risk to the security and stability of our Azure platform. Urgent action is taken to address high-severity issues, often involving immediate patches or remediation steps to minimize potential threats. Critical: Critical vulnerabilities pose a severe and imminent threat to the integrity and confidentiality of our system. Immediate and comprehensive measures are implemented to address critical vulnerabilities, including rapid deployment of patches, configuration changes, or other necessary security controls. This severity categorization allows us to prioritize our response efforts based on the potential impact and urgency associated with each vulnerability. Regular assessments and adjustments are made to ensure the accuracy and relevance of the severity levels assigned to vulnerabilities. Communication of Patched Versions: We are committed to maintaining transparent and effective communication regarding security updates and patched versions. Our primary channel for disseminating information about patched versions is our official GitHub release page. This ensures that our users and stakeholders have immediate access to crucial details about the updates, including security enhancements and fixes. Key points related to the communication of patched versions on our GitHub release page: Release Notifications: Timely notifications about new releases, including security patches, will be posted on our GitHub release page. Users are encouraged to subscribe to release notifications to stay informed about the latest updates and security improvements. Detailed Release Notes: Each release on our GitHub page will include comprehensive release notes outlining the changes, enhancements, and specific security vulnerabilities addressed. This transparent approach provides our community with detailed insights into the updates and the importance of applying the latest patches. Vulnerability Disclosure: We adhere to responsible disclosure practices by openly acknowledging and crediting the individuals or organizations that report security vulnerabilities to us. Detailed information about the vulnerabilities, their potential impact, and the corresponding patches will be shared on our GitHub release page. Encouraging Regular Updates: Users are strongly encouraged to regularly check our GitHub release page for the latest updates and security patches. Proactive adoption of the latest releases ensures that users benefit from the most recent security enhancements and protection against potential threats. By leveraging our GitHub release page as a central hub for communication, we aim to streamline the process of disseminating critical information and empowering our user community to maintain a secure environment."
  },
  "release-notes/breaking-changes.html": {
    "href": "release-notes/breaking-changes.html",
    "title": "History of breaking changes | FoundationaLLM",
    "summary": "History of breaking changes Note This section is for changes that are not yet released but will affect future releases. Starting from 0.9.7 Configuration changes The value of the FoundationaLLM:Events:Profiles:DataPipelineAPI configuration entry is changed to: { \"EventProcessingCycleSeconds\": 5, \"Topics\": [ { \"Name\": \"resource-providers\", \"SubscriptionPrefix\": \"rp-dp\" } ] } The FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CompletionResponsePollingIntervalSeconds configuration entry is replaced by the FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CompletionResponsePollingIntervalMilliseconds configuration entry. The default value is now 100 milliseconds instead of 1 second. This change is made to improve the responsiveness of the completion response polling mechanism. The values of the FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeGraphService:Embedding configuration value (listed below as a newly added value) must be configured with a content type of application/json and must have the following structure: { \"EmbeddingAPIEndpointConfigurationObjectId\": \"/instances/<instance_id>/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/AzureOpenAI\", \"ModelDeployments\": { \"text-embedding-3-large\": \"embeddings-3-large\" } } where: <instance_id> is the identifier of the FoundationaLLM instance. It is assumed that the AzureOpenAI API endpoint configuration is already created. If not, AzureOpenAI must be replaced with the name of the API endpoint configuration that is used for embeddings. It is assumed that a model deployment named embeddings-3-large is already created in the Azure OpenAI service for the text-embedding-3-large embedding model. If not, it must be replaced with the name of the model deployment that is used for embeddings with the text-embedding-3-large embedding model. The following App Configuration value have been added: Name Default value Description FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Embedding {\"EmbeddingAPIEndpointConfigurationObjectId\": null, \"ModelDeployments\": {}} The embedding configuration used by the FoundationaLLM Context API Knowledge service. This configuration value must have a content type of application/json. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Storage:AccountName <storage_account_name> The name of the dedicated storage account used by the FoundationaLLM Context API Knowledge service. This must be the same storage account as the one used by the FoundationaLLM Context API. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:KnowledgeService:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Context API Knowledge service to connect to the dedicated storage account. FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:TokenRateLimitMultiplier 0.8 The multiplier used to calculate the token rate limit for the Gateway API. This value is used to ensure that the rate limit is not exceeded and accounts for the possible differences in tokenization between the Gateway API and the deployed model(s). FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchFileExtensions c, cpp, cs, css, doc, docx, html, java, js, json, md, pdf, php, pptx, py, rb, sh, tex, ts, txt, gif, jpeg, jpg, png The comma-separated list file extensions that are processed as sources for knowledge search. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchContextFileExtensions c, cs, cpp, css, html, java, js, json, jsonl, md, php, py, rb, sh, ts, tex, txt, gif, jpeg, jpg, png The comma-separated list of file extensions that indicate files that can be directly used in the context of a completion request. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:KnowledgeSearchContextFileMaxSizeBytes {\"c,cs,cpp,html,java,js,json,jsonl,md,php,py,rb,sh,ts,tex,txt\": 25000, \"gif,jpeg,jpg,png\":500000} The dictionary of lists of extensions of files that can be directly used in the context of a completion request and their associated maximum file sizes. FoundationaLLM:DataPipeline:State:CosmosDB:Containers DataPipelines The names of the Azure Cosmos DB containers used by the Data Pipeline State service. FoundationaLLM:DataPipeline:State:CosmosDB:Database database The Azure Cosmos DB database name used by the Data Pipeline State service. FoundationaLLM:DataPipeline:State:CosmosDB:Endpoint <cosmos_db_endpoint> The endpoint URL of the Azure Cosmos DB used by the Data Pipeline State service. FoundationaLLM:DataPipeline:State:Storage:AccountName <storage_account_name> The name of the dedicated storage account used by the FoundationaLLM Data Pipeline State service. This must be the same storage account as the one used by the FoundationaLLM Context API. FoundationaLLM:DataPipeline:State:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Data Pipeline State service to connect to the dedicated storage account. FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:Storage:AccountName <storage_account_name> The name of the dedicated storage account used by the FoundationaLLM Data Pipeline API. FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Data Pipeline API to connect to the dedicated storage account. FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:FrontendWorkerQueue frontend-worker The queue used to submit data pipeline work items for the Data Pipeline Frontend Worker service. FoundationaLLM:APIEndpoints:DataPipelineAPI:Configuration:BackendWorkerQueue backend-worker The queue used to submit data pipeline work items for the Data Pipeline Backend Worker service. FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Storage:AccountName <storage_account_name> The name of the dedicated storage account used by the FoundationaLLM Data Pipeline Frontend Worker service. FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Data Pipeline Frontend Worker service to connect to the dedicated storage account. FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:Queue frontend-worker The queue used to process data pipeline work items by the Data Pipeline Frontend Worker service. FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Configuration:ParallelProcessorsCount 10 The number of parallel processors of data pipeline run work items used by the Data Pipeline Frontend Worker service. FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Storage:AccountName <storage_account_name> The name of the dedicated storage account used by the FoundationaLLM Data Pipeline Backend Worker service. FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Data Pipeline Backend Worker service to connect to the dedicated storage account. FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:Queue frontend-worker The queue used to process data pipeline work items by the Data Pipeline Backend Worker service. FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Configuration:ParallelProcessorsCount 10 The number of parallel processors of data pipeline run work items used by the Data Pipeline Backend Worker service. FoundationaLLM:Events:Profiles:DataPipelineAPI {\"EventProcessingCycleSeconds\":60,\"Topics\":[]} The event processing settings for the Data Pipeline API. FoundationaLLM:Events:Profiles:DataPipelineFrontendWorker {\"EventProcessingCycleSeconds\":60,\"Topics\":[]} The event processing settings for the Data Pipeline Frontend Worker service. FoundationaLLM:Events:Profiles:DataPipelineBackendWorker {\"EventProcessingCycleSeconds\":60,\"Topics\":[]} The event processing settings for the Data Pipeline Backend Worker service. FoundationaLLM:ResourceProviders:Vector:Storage:AccountName <storage_account_name> The name of the storage account used by the FoundationaLLM Vector resource provider. FoundationaLLM:ResourceProviders:Vector:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Vector resource provider to connect to the storage account. FoundationaLLM:ResourceProviders:Plugin:Storage:AccountName <storage_account_name> The name of the storage account used by the FoundationaLLM Plugin resource provider. FoundationaLLM:ResourceProviders:Plugin:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Plugin resource provider to connect to the storage account. Important A new Azure Cosmos DB container named DataPipelines must be created with a parition key of /runId and an autoscale transactional throughput of maximum 4000 RU/s. Important A new APIEndpointConfiguration artifact named DataPipelineAPI must be created and saved to a file named DataPipelineAPI.json. The file must be created in the FoundationaLLM.Configuration resource provider folder of the FoundationaLLM storage account. The file must contain the following content: { \"type\": \"api-endpoint\", \"name\": \"DataPipelineAPI\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/DataPipelineAPI\", \"display_name\": null, \"description\": null, \"cost_center\": null, \"category\": \"General\", \"subcategory\": null, \"authentication_type\": \"APIKey\", \"url\": \"<deployed_api_endpoint>\", \"status_endpoint\": \"/instances/<instance_id>/status\", \"url_exceptions\": [], \"authentication_parameters\": { \"api_key_configuration_name\": \"FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:APIKey\", \"api_key_header_name\": \"X-API-KEY\" }, \"timeout_seconds\": 2400, \"retry_strategy_name\": \"ExponentialBackoff\", \"provider\": null, \"api_version\": null, \"operation_type\": null, \"properties\": null, \"created_on\": \"0001-01-01T00:00:00-05:00\", \"updated_on\": \"2025-02-25T11:10:55.3458874-05:00\", \"created_by\": null, \"updated_by\": \"ciprian@foundationaLLM.ai\", \"deleted\": false, \"expiration_date\": null } where <deployed_api_endpoint> is the endpoint of the Data Pipeline API. Also, a new entry must be added to the _resource-references.json file from the FoundationaLLM.Configuration resource provider folder with the following content: { \"Name\": \"DataPipelineAPI\", \"Filename\": \"/FoundationaLLM.Configuration/DataPipelineAPI.json\", \"Type\": \"api-endpoint\", \"Deleted\": false } Important Two new storage queues must be created in the FoundationaLLM storage account: frontend-worker - used by the Data Pipeline Frontend Worker to process requests. backend-worker - used by the Data Pipeline Backend Worker to process requests. The previous queues extract, partition, embed, and index are now deprecated. For each existing FoundationaLLM deployment, they should be removed as soon as it is confirmed that the previous version of vectorization process is no longer used. Important A new container with the name of the FoundationaLLM instance identifier must be created in the FoundationaLLM main storage account. The container will be used by the Data Pipeline API and the Data Pipeline Frontend/Backend Worker to store data pipeline work items. Role assignment changes The following role assignments must be added to the Management API's Managed Identity: Name Type Target Data Pipelines Execution Manager FoundationaLLM FoundationaLLM instance. The following role assignments must be added to the Context API's Managed Identity: Name Type Target Reader FoundationaLLM FoundationaLLM instance. App Configuration Data Reader Azure Azure App Configuration service. Key Vault Secrets User Azure Azure Key Vault service. Storage Blob Data Contributor Azure Storage account used by the FoundationaLLM Context API. Storage Blob Data Contributor Azure Main FoundationaLLM storage account. Azure ContainerApps Session Executor Azure Azure Container Apps Dynamic Sessions used by the FoundationaLLM Context API. Azure ContainerApps Session Executor Azure Azure Container Apps Custom Container used by the FoundationaLLM Context API. Search Index Data Reader Azure Azure AI Search service used by the FoundationaLLM instance. The following role assignments must be added to the Orchestrations API's Managed Identity: Name Type Target Data Pipelines Execution Manager FoundationaLLM FoundationaLLM instance. The following role assignments must be added to the Data Pipeline API's Managed Identity: Name Type Target App Configuration Data Reader Azure Azure App Configuration service. Key Vault Secrets User Azure Azure Key Vault service. Key Vault Certificate User Azure Azure Key Vault service. Storage Blob Data Contributor Azure Main FoundationaLLM storage account. Storage Blob Data Contributor Azure Storage account used by the FoundationaLLM Context API. Cosmos DB Built-in Data Contributor Azure Azure Cosmos DB account used by the FoundationaLLM Data Pipeline API. Storage Queue Data Message Sender Azure Storage account used by the FoundationaLLM Data Pipeline API. EventGrid Contributor Azure Azure EventGrid Namespace used by the FoundationaLLM Data Pipeline API. Data Pipelines Execution Manager FoundationaLLM FoundationaLLM instance. Reader FoundationaLLM FoundationaLLM instance. The following role assignments must be added to the Data Pipeline Frontend Worker's Managed Identity: Name Type Target App Configuration Data Reader Azure Azure App Configuration service. Key Vault Secrets User Azure Azure Key Vault service. Key Vault Certificate User Azure Azure Key Vault service. Storage Blob Data Contributor Azure Main FoundationaLLM storage account. Storage Blob Data Contributor Azure Storage account used by the FoundationaLLM Context API. Cosmos DB Built-in Data Contributor Azure Azure Cosmos DB account used by the FoundationaLLM Data Pipeline Frontend Worker. Storage Queue Data Contributor Azure Storage account used by the FoundationaLLM Data Pipeline Frontend Worker. EventGrid Contributor Azure Azure EventGrid Namespace used by the FoundationaLLM Data Pipeline Frontend Worker. Search Service Contributor Azure Azure AI Search service used by the FoundationaLLM instance. Search Index Data Contributor Azure Azure AI Search service used by the FoundationaLLM instance. Data Pipelines Execution Manager FoundationaLLM FoundationaLLM instance. Reader FoundationaLLM FoundationaLLM instance. The following role assignments must be added to the Data Pipeline Backend Worker's Managed Identity: Name Type Target App Configuration Data Reader Azure Azure App Configuration service. Key Vault Secrets User Azure Azure Key Vault service. Key Vault Certificate User Azure Azure Key Vault service. Storage Blob Data Contributor Azure Main FoundationaLLM storage account. Storage Blob Data Contributor Azure Storage account used by the FoundationaLLM Context API. Cosmos DB Built-in Data Contributor Azure Azure Cosmos DB account used by the FoundationaLLM Data Pipeline Backend Worker. Storage Queue Data Contributor Azure Storage account used by the FoundationaLLM Data Pipeline Backend Worker. EventGrid Contributor Azure Azure EventGrid Namespace used by the FoundationaLLM Data Pipeline Backend Worker. Search Service Contributor Azure Azure AI Search service used by the FoundationaLLM instance. Search Index Data Contributor Azure Azure AI Search service used by the FoundationaLLM instance. Data Pipelines Execution Manager FoundationaLLM FoundationaLLM instance. Reader FoundationaLLM FoundationaLLM instance. New resource providers FoundationaLLM.Vector The FoundationaLLM.Vector resource provider has been added. A new folder named FoundationaLLM.Vector must be created in the FoundationaLLM storage account under the resource-provider container. The folder must contain the following files: _resource-references.json - the resource references file. ConversationFiles.json - the resource file for the ConversationFiles vector database resource. The content of the resource-references.json file is as follows: { \"ResourceReferences\": [ { \"Name\": \"ConversationFiles\", \"Filename\": \"/FoundationaLLM.Vector/ConversationFiles.json\", \"Type\": \"vector-database\", \"Deleted\": false } ], \"DefaultResourceName\": null } The content of the ConversationFiles.json file is as follows: { \"type\": \"vector-database\", \"name\": \"ConversationFiles\", \"object_id\": \"/instances/{instanceId}/providers/FoundationaLLM.Vector/vectorDatabases/ConversationFiles\", \"display_name\": \"Conversation files vectorization\", \"description\": \"The vector database that used by default when processing files that are uploaded in conversations.\", \"cost_center\": null, \"database_type\": \"AzureAISearch\", \"database_name\": \"conversation-files\", \"embedding_property_name\": \"Embedding\", \"content_property_name\": \"Text\", \"vector_store_id_property_name\": \"VectorStoreId\", \"metadata_property_name\": \"Metadata\", \"api_endpoint_configuration_object_id\": \"/instances/{instanceId}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/AzureAISearch\", \"properties\": null, \"created_on\": \"2025-05-20T13:57:58.9770592+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": \"SYSTEM\", \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Important The configuration entries for the FoundationaLLM.Vector resource provider are specified above, in the Configuration changes section. FoundationaLLM.Plugin The FoundationaLLM.Plugin resource provider has been added. A new folder named FoundationaLLM.Plugin must be created in the FoundationaLLM storage account under the resource-provider container. Important The configuration entries for the FoundationaLLM.Plugin resource provider are specified above, in the Configuration changes section. Starting from 0.9.7-beta147 The following App Configuration value has been added: Name Default value Description FoundationaLLM:ResourceProviders:AzureAI:Storage:AccountName The name of the deployment storage account. The name of the Azure Blob Storage account used by the FoundationaLLM.AzureAI resource provider. FoundationaLLM:ResourceProviders:AzureAI:Storage:AuthenticationType AzureIdentity The authentication type used by the FoundationaLLM.AzureAI resource provider to connect to the storage account. Policy assignment changes The FLLM-Users will need an entry in the policy-assignments file for agentConversationMappings and agentFileMappings resources in the FoundationaLLM.AzureAI resource provider. { \"name\": \"87e6fd6e-ddd3-4054-b382-d7f0fa190aa9\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/87e6fd6e-ddd3-4054-b382-d7f0fa190aa9\", \"description\": \"Ownership on agent conversation mapping resources managed by the FoundationaLLM.AzureAI resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"c54871ba-1fa1-439a-9e86-30d74dfe4a4a\", \"principal_type\": \"Group\", \"scope\": \"/instances/{instanceId}/providers/FoundationaLLM.AzureAI/agentConversationMappings\", \"created_on\": \"2025-01-14T17:58:19.5954014Z\", \"updated_on\": \"2025-01-14T17:58:19.5954014Z\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" }, { \"name\": \"0e7684d2-e8b9-40ba-88b4-3f358f93afa3\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/0e7684d2-e8b9-40ba-88b4-3f358f93afa3\", \"description\": \"Ownership on agent file mapping resources managed by the FoundationaLLM.AzureAI resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"c54871ba-1fa1-439a-9e86-30d74dfe4a4a\", \"principal_type\": \"Group\", \"scope\": \"/instances/{instanceId}/providers/FoundationaLLM.AzureAI/agentFileMappings\", \"created_on\": \"2025-01-14T17:58:19.5954014Z\", \"updated_on\": \"2025-01-14T17:58:19.5954014Z\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" } Starting from 0.9.7-beta139 Configuration changes The following App Configuration value have been added: Name Default value Description FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureAIAgentServiceMaxVectorizationTimeSeconds 120 The maximum time in seconds allowed for an Azure AI Agent Service vectorization process to complete. FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureAIAgentsFileSearchExensions c, cpp, cs, css, doc, docx, html, java, js, json, md, pdf, php, pptx, py, rb, sh, tex, ts, txt The comma-separated list file extensions that are supported by the Azure AI Agent Service file search tool. The following App Configuration value have been removed as they are no longer needed: ResourceProviders:AzureOpenAI:Storage:AuthenticationType ResourceProviders:AzureOpenAI:Storage:AccountName A new workflow resource must be added to support the AzureAIAgentServiceWorkflow. Ensure the reference is added to _resource-references.json as well. { \"type\": \"azure-ai-agent-service-workflow\", \"name\": \"AzureAIAgentServiceWorkflow\", \"object_id\": \"/instances/{instanceId}/providers/FoundationaLLM.Agent/workflows/AzureAIAgentServiceWorkflow\", \"display_name\": \"AzureAIAgentServiceWorkflow\", \"description\": \"Azure AI Agent Service Workflow\", \"cost_center\": null, \"properties\": null, \"created_on\": \"2024-11-08T10:08:27.1953263+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": \"SYSTEM\", \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Starting from 0.9.7-beta138 Configuration changes The FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions configuration setting has been replaced by the following configuration settings: Name Content Type Description Default value FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions:CodeInterpreter application/json The settings for the Azure Container Apps Dynamic Sessions code interpreter. { \"Endpoints\": { \"Python\": [], \"CSharp\": []} } FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions:CustomContainer application/json The settings for the Azure Container Apps Dynamic Sessions custom container. { \"Endpoints\": { \"Python\": [], \"CSharp\": []} } FoundationaLLM now supports Azure AI Inference APIs accessible to the agent using the LangChain workflow host. This functionality expects an Azure AI Service resource. Authentication is accomplished support is via Azure Identity (Entra) or API Key. If using Azure Identity, ensure the LangChain managed identity has Cognitive Services User role on the Azure AI Service resource (may be inherited). Within the project defined in AI Foundry, ensure the LangChain managed identity has the Azure AI Developer role. If using API Key, ensure the API Key is securely stored in the key vault and exposed via an Application Configuration value. When defining the API Endpoint Configuration, add the authentication parameter api_key_configuration_name with the name of the Application Configuration key. Code sessions The tool property foundationallm_aca_code_execution_enabled has been renamed to code_session_required. The property indicates whether the tool requires a code session during its execution. If the property is set to true, the following additional properties must be set: code_session_endpoint_provider: Supported values are AzureContainerAppsCodeInterpreter (indicates that the code session is provided by the Azure Container Apps Dynamic Sessions code interpreter) and AzureContainerAppsCustomContainer (indicates that the code session is provided by the Azure Container Apps Dynamic Sessions custom container). code_session_language: Supported values are Python and CSharp. Tools that require a code session should expect the following properties to be injected: code_session_endpoint (instead of the previous foundationallm_aca_code_execution_session_id) code_session_id (instead of the previous foundationallm_aca_code_execution_session_id) Starting from 0.9.7-beta128 Configuration changes Agent Workflow configuration now has a class_name field. This is the underlying implementation class of the workflow. This is not a breaking change, as in previous versions the name field contained the class name and if the class_name field is empty, it will default to the name field. However, it is recommended to set the class_name field to the implementation class name. Starting from 0.9.7-beta112 Configuration changes Added the following App Configuration value: Name Default value Description FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:APIKey Points to foundationallm-apiendpoints-datapipelineapi-apikey KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:DataPipelineAPI:Essentials:AppInsightsConnectionString Points to foundationallm-appinsights-connectionstring KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials:APIKey Points to foundationallm-apiendpoints-datapipelinefrontendworker-apikey KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:DataPipelineFrontendWorker:Essentials:AppInsightsConnectionString Points to foundationallm-appinsights-connectionstring KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials:APIKey Points to foundationallm-apiendpoints-datapipelinebackendworker-apikey KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:DataPipelineBackendWorker:Essentials:AppInsightsConnectionString Points to foundationallm-appinsights-connectionstring KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:ContextAPI:Essentials:APIKey Points to foundationallm-apiendpoints-contextapi-apikey KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:ContextAPI:Essentials:AppInsightsConnectionString Points to foundationallm-appinsights-connectionstring KeyVault reference value pointing to the specified secret. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:Storage:AccountName <context_api_file_storage_account_name> The name of the dedicated storage account used by the FoundationaLLM Context API file service. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:Storage:AuthenticationType AzureIdentity The type of authentication used by the FoundationaLLM Context API file service to connect to the dedicated storage account. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Endpoint <cosmos_db_endpoint> The endpoint URL of the Azure Cosmos DB. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Database database The Azure Cosmos DB database name. FoundationaLLM:APIEndpoints:ContextAPI:Configuration:FileService:CosmosDB:Containers Context The list of Azure CosmosDB containers used by the Context API file service. Important A dedicated storage account for the FoundationaLLM Context API must be created. The account should be isolated in a dedicated resource group and permissions should only be granted to the FoundationaLLM Context API managed identity. The account should be configured the same way the main FoundationaLLM storage account is. A new storage container with a name equal to the FoundationaLLM instance identifier must be created in the storage account. Important A new Azure Cosmos DB container named Context must be created with a parition key of /upn and an autoscale transactional throughput of maximum 4000 RU/s. Important A new Azure Container Apps Session Pool must be created with in the same resource groups as the Context API storage account. Network egress should be disabled. The FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions must be set to the following value: {\"DynamicSessionsEndpoints\": [ \"<session_pool_endpoint>\" ]} where <session_pool_endpoint> is the endpoint of the Azure Container Apps Session Pool. Role assignment changes The following role assignments must be added to the Context API's Managed Identity: Name Target App Configuration Data Reader Azure App Configuration service. Key Vault Secrets User Azure Key Vault service. Storage Blob Data Contributor Dedicated storage account used by the FoundationaLLM Context API. Cosmos DB Built-in Data Contributor Azure Cosmos DB account used by the FoundationaLLM Context API. Azure ContainerApps Session Executor Azure Container Apps Session Pool. The following role assignments must be added to the LangChain API's Managed Identity: Name Target Azure ContainerApps Session Executor Azure Container Apps Session Pool. The following role assignments must be added to the Semantic Kernel API's Managed Identity: Name Target Azure ContainerApps Session Executor Azure Container Apps Session Pool. Starting from 0.9.7-beta107 For External Agent Workflows, the workflow invokation now includes conversation file history. The complete file history is passed regardless of conversation history settings. The signature is now as follows: async def invoke_async(self, operation_id: str, user_prompt: str, user_prompt_rewrite: Optional[str], message_history: List[MessageHistoryItem], file_history: List[FileHistoryItem])-> CompletionResponse: Starting from 0.9.7-beta106 For External Agent Workflows, the invocation of the workflow now sends the completion request MessageHistoryItem list vs the translated LangChain BaseMessage construct. This way workflows have more control on how to handle the message history of a conversation. Starting from 0.9.7-beta105 Configuration changes The FoundationaLLM.Common.Models.ResourceProviders.Agent.AgentTool definition now contains a ClassName property. This should be set to the implementation class name of the tool. The Name property of the tool is what will be used for uniqueness in the case multipe tools of the same type/class are used in the same agent. Note: This is not a breaking change as if the ClassName property is not set, the Name property will be used as the class name which is the existing pattern. However, it is recommended to set the ClassName property to adhere to the new pattern. Agent configuration tools property is impacted as follows: Old pattern sample: { \"name\": \"DALLEImageGeneration\", \"description\": \"Generates an image based on a prompt.\", \"package_name\": \"FoundationaLLM\", \"resource_object_ids\": { \"/instances/8ac6074c-bdde-43cb-a140-ec0002d96d2b/providers/FoundationaLLM.AIModel/aiModels/DALLE3Model\": { \"object_id\": \"/instances/8ac6074c-bdde-43cb-a140-ec0002d96d2b/providers/FoundationaLLM.AIModel/aiModels/DALLE3Model\", \"properties\": { \"object_role\": \"main_model\", \"model_parameters\": {} } } }, \"properties\": {} } New pattern: { \"name\": \"DALLETool1\", \"description\": \"Generates an image based on a prompt.\", \"package_name\": \"FoundationaLLM\", \"class_name\": \"DALLEImageGenerationTool\", \"resource_object_ids\": { \"/instances/8ac6074c-bdde-43cb-a140-ec0002d96d2b/providers/FoundationaLLM.AIModel/aiModels/DALLE3Model\": { \"object_id\": \"/instances/8ac6074c-bdde-43cb-a140-ec0002d96d2b/providers/FoundationaLLM.AIModel/aiModels/DALLE3Model\", \"properties\": { \"object_role\": \"main_model\", \"model_parameters\": {} } } }, \"properties\": {} } Starting from 0.9.7-beta103 Configuration changes Added the following App Configuration value: Name Default value Description FoundationaLLM:Quota:Storage:AccountName <storage_account_name> Provides the storage account used by the FoundationaLLM quota management service. FoundationaLLM:Quota:Storage:AuthenticationType AzureIdentity Indicates the authentication type used by the FoundationaLLM quota management service to connect to the storage account. A new container named quota must be created in the default storage account. The quota definitions are stored in the quota container in a file named quota-store.json. If the file does not exist, the file is automatically created. The file contains a list of quota definitions with the following structure: { \"name\": \"TestAPI01CompletionsUPNRawRequestRateLimit\", \"description\": \"Defines a per UPN raw request rate limit on the TestAPI01 Completions controller.\", \"context\": \"TestAPI01:Completions\", \"type\": \"RawRequestRateLimit\", \"metric_partition\": \"UserPrincipalName\", \"metric_limit\": 120, \"metric_window_seconds\": 60, \"lockout_duration_seconds\": 60, \"distributed_enforcement\": false } The following table provides details about the quota definition properties: Name Description Notes name The name of the quota definition. description A description of the quota definition. context The context of the quota definition. The format of the context is <service_name>:<controller_name> or <service_name>:<controller_name>:<agent_name>. Currently the following contexts can be used: CoreAPI:Completions, CoreAPI:Completions:<agent_name> where <agent_name> must be a valid agent name. type The type of the quota enforcement applied. The following types are supported: RawRequestRateLimit and AgentRequestRateLimit. RawRequestRateLimt defines the quota metric to be raw API requests and requires a context of <service_name>:<controller_name>. AgentRequestRateLimit defines the quota metric to be agent completion requests and requires a context of <service_name>:<controller_name>:<agent_name>. metric_partition The metric partition used to enforce the quota. The following partitions are supported: None (the metric is not partitioned) UserPrincipalName (the metric is partitioned by user principal name) and UserIdentifier (the metric is partitioned by user identifier). metric_limit The limit of the metric. The limit is enforced over the metric_window_seconds. In the example above, a maximum number of 120 raw API requests are allowed per user principal name in a 60-second window. metric_window_seconds The time window in seconds over which the limit is enforced. In the example above, a maximum number of 120 raw API requests are allowed per user principal name in a 60-second window. lockout_duration_seconds The duration in seconds for which the caller is locked out after exceeding the quota. The lockout duration is applied after the user exceeds the quota limit. The user is locked out for the specified duration before the quota is reset. distributed_enforcement Indicates whether the quota is enforced across multiple instances of the same API. If true, the quota is enforced across multiple instances. If false, the quota is enforced on a single instance. Currently, only false is supported. Starting from 0.9.7-beta101 Configuration changes Added the following App Configuration value: Name Default value Description FoundationaLLM:ResourceProviders:DataPipeline:Storage:AccountName <storage_account_name> Provides the storage account used by the FoundationaLLM.DataPipeline resource provider. FoundationaLLM:ResourceProviders:DataPipeline:Storage:AuthenticationType AzureIdentity Indicates the authentication type used by the FoundationaLLM.DataPipeline resource provider to connect to the storage account. FoundationaLLM:ResourceProviders:Plugin:Storage:AccountName <storage_account_name> Provides the storage account used by the FoundationaLLM.Plugin resource provider. FoundationaLLM:ResourceProviders:Plugin:Storage:AuthenticationType AzureIdentity Indicates the authentication type used by the FoundationaLLM.Plugin resource provider to connect to the storage account. Management API The POST /instances/{instanceId}/providers/{resourceProvider}/{resourcePath} endpoint now supports providing a resource form data key in the request body. This key is used to provide the serialized resource FoundationaLLM resource when a file upload is performed using a form-data request body. The call to POST /instances/{instanceId}/providers/FoundationaLLM.Plugin/pluginPackages/Dotnet-FoundationaLLMDataPipelinePlugins expects a form-data request body with the following keys: file (of type file) - the plugin package file to upload. resource (of type text) - the serialized plugin package FoundationaLLM resource. Starting with 0.9.7-beta100 Configuration changes App configuration settings The value of the FoundationaLLM:Events:Profiles:CoreAPI must be updated to include the api-statistics topic. The updated value is as follows: { \"EventProcessingCycleSeconds\": 5, \"Topics\": [ { \"Name\": \"resource-providers\", \"SubscriptionPrefix\": \"rp-core\" }, { \"Name\": \"api-statistics\", \"SubscriptionPrefix\": \"as-core\" } ] } Starting with 0.9.4-rc100 Configuration changes App configuration settings Important The App Config setting FoundationaLLM:Instance:EnableResourceProvidersCache is obsolete and should be removed from the App Config settings. The following App Config properties make cache settings for the resource providers configurable: Name Description Default Value FoundationaLLM:ResourceProvidersCache:EnableCache Indicates whether resource providers should cache resources or not. true FoundationaLLM:ResourceProvidersCache:AbsoluteCacheExpirationSeconds Absolute cache expiration in seconds. 300 FoundationaLLM:ResourceProvidersCache:SlidingCacheExpirationSeconds Sets how many seconds the cache entry can be inactive (e.g. not accessed) before it will be removed. This will not extend the entry lifetime beyond the absolute expiration (if set). 120 FoundationaLLM:ResourceProvidersCache:CacheSizeLimit The maximum number of items that can be stored in the cache. 10000 FoundationaLLM:ResourceProvidersCache:CacheExpirationScanFrequencySeconds Gets or sets the minimum length of time between successive scans for expired items in seconds. 30 Starting with 0.9.3 This version introduces the concept of a well-known virtual security group (AllAgentsVirtualSecurityGroup) that is used by agents using Agent Access Token authentication and have their own virtual security group defined. Assign the following PBAC and RBAC roles to the AllAgentsVirtualSecurityGroup (replace the tokens denoted by {{...}} with the actual values): PBAC changes { \"name\": \"{{pbacConversationsOwnerGuid}}\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/{{pbacConversationsOwnerGuid}}\", \"description\": \"Ownership on conversation resources for AllAgentsVirtualSecurityGroup by the FoundationaLLM.Conversation resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Conversation/conversations\", \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" }, { \"name\": \"{{pbacConversationMappingsGuid}}\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/{{pbacConversationMappingsGuid}}\", \"description\": \"Ownership on conversation mapping resources for AllAgentsVirtualSecurityGroup managed by the FoundationaLLM.AzureOpenAI resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.AzureOpenAI/conversationMappings\", \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" }, { \"name\": \"{{pbacAttachmentsOwnerGuid}}\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/{{pbacAttachmentsOwnerGuid}}\", \"description\": \"Ownership on attachment resources for AllAgentsVirtualSecurityGroup managed by the FoundationaLLM.Attachment resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Attachment/attachments\", \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" }, { \"name\": \"{{pbacFileMappingsGuid}}\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/{{pbacFileMappingsGuid}}\", \"description\": \"Ownership on file mapping resources for AllAgentsVirtualSecurityGroup managed by the FoundationaLLM.AzureOpenAI resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.AzureOpenAI/fileMappings\", \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" } RBAC changes { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{openAiAssistantsReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{openAiAssistantsReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for OpenAIAssistants for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/workflows/OpenAIAssistants\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{langGraphReactAgentReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{langGraphReactAgentReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for LangGraphReactAgent for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/workflows/LangGraphReactAgent\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{attachmentContributorGuid2}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{attachmentContributorGuid2}}\", \"display_name\": null, \"description\": \"Attachment contributor role for AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/8e77fb6a-7a78-43e1-b628-d9e2285fe25a\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{conversationContributorGuid2}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{conversationContributorGuid2}}\", \"display_name\": null, \"description\": \"Conversation contributor role for AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/d0d21b90-5317-499a-9208-3a6cb71b84f9\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{configReadAccessGuid3}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{configReadAccessGuid3}}\", \"display_name\": null, \"description\": \"Read Access for configuration for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Configuration/appConfigurations/FoundationaLLM:APIEndpoints:CoreAPI:Configuration:MaxUploadsPerMessage\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{configReadAccessGuid4}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{configReadAccessGuid4}}\", \"display_name\": null, \"description\": \"Read Access for configuration for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Configuration/appConfigurations/FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CompletionResponsePollingIntervalSeconds\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{externalAgentWorkflowReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{externalAgentWorkflowReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for ExternalAgentWorkflow for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/workflows/ExternalAgentWorkflow\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{langChainExpressionLanguageReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{langChainExpressionLanguageReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for LangChainExpressionLanguage for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/workflows/LangChainExpressionLanguage\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{openAIAssistantsFileSearchReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{openAIAssistantsFileSearchReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for OpenAIAssistantsFileSearch for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/tools/OpenAIAssistantsFileSearch\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{openAIAssistantsCodeInterpreterReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{openAIAssistantsCodeInterpreterReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for OpenAIAssistantsCodeInterpreter for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/tools/OpenAIAssistantsCodeInterpreter\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{dalleImageGenerationReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{dalleImageGenerationReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for DALLEImageGeneration for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/tools/DALLEImageGeneration\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null }, { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"{{foundationaLLMContentSearchToolReaderGuid}}\", \"object_id\": \"/providers/FoundationaLLM.Authorization/roleAssignments/{{foundationaLLMContentSearchToolReaderGuid}}\", \"display_name\": null, \"description\": \"Read Access for FoundationaLLMContentSearchTool for the AllAgentsVirtualSecurityGroup group.\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"principal_id\": \"5bb493a2-5909-4771-93ba-d83b7b5a1de9\", \"principal_type\": \"Group\", \"scope\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/tools/FoundationaLLMContentSearchTool\", \"properties\": null, \"created_on\": \"{{deployTime}}\", \"updated_on\": \"{{deployTime}}\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Starting with 0.9.3-rc016 Configuration Resource Provider The APIEnpointConfiguration class has been updated to change the previous StatusUrl property to StatusEndpoint, which is a relative path to the status endpoint. By extension, the related JSON files now have a status_endpoint property that contains the relative path. Here is the OrchestrationAPI JSON template as an example of this change: { \"type\": \"api-endpoint\", \"name\": \"OrchestrationAPI\", \"object_id\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/OrchestrationAPI\", \"display_name\": null, \"description\": null, \"cost_center\": null, \"category\": \"General\", \"authentication_type\": \"APIKey\", \"authentication_parameters\": { \"api_key_configuration_name\": \"FoundationaLLM:APIEndpoints:OrchestrationAPI:Essentials:APIKey\", \"api_key_header_name\": \"X-API-KEY\" }, \"url\": \"http://orchestration-api.{{serviceNamespaceName}}.svc.cluster.local\", \"status_endpoint\": \"/instances/{{instanceId}}/status\", \"url_exceptions\": [], \"timeout_seconds\": 2400, \"retry_strategy_name\": \"ExponentialBackoff\", \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": \"SYSTEM\", \"deleted\": false } The status path is used by the Management Portal's Deployment Information page to show the status of each of the APIs. This path is also used by the /Orchestration/Services/LangChainService and /Orchestration/Services/SemanticKernelService classes to check the status of the respective APIs. Important All files within the /resource-provider/FoundationaLLM.Configuration directory must be updated to change the name of the status_url field to status_endpoint and change the value to a relative path as needed. Vectorization resource provider changes Vectorization indexing and partitioning profile settings dictionary keys are now persisted as snake case (ex. IndexName becomes index_name). Agent resource provider changes Deployment notes Ensure the feature flag is enabled for FoundationaLLM.Agent.PrivateStore if using the private store feature on OpenAI Assistants workflow agents is desired. Open existing OpenAIAssistantsWorkflow agents in the Management portal and select Save to populate the global vector store in the OpenAI service for the assistant. Agent file resources The agent file references are now stored in a new Cosmos DB container, while the file contents are stored in the storage account. Here are the configuration parameters for the required Cosmos DB container: Name Value Name Agents Maximum RU/s 4000 Hierarchical Partition key /instanceId + /agentName As a result of the migration, the newly created Agents container will initially contain only ony type of times: AgentFileReference. This is an example of such item: { \"instanceId\": \"8ac6074c-bdde-43cb-a140-ec0002d96d2b\", \"agentName\": \"TestAgentFiles1\", \"originalFilename\": \"curious_cat_story.pdf\", \"contentType\": \"application/pdf\", \"size\": 2433, \"upn\": \"andrei@foundationaLLM.ai\", \"id\": \"af-0285ddb8-a5b8-48b0-8248-bd0ad2f123bf\", \"objectId\": \"/instances/8ac6074c-bdde-43cb-a140-ec0002d96d2b/providers/FoundationaLLM.Agent/agents/TestAgentFiles1/agentFiles/af-0285ddb8-a5b8-48b0-8248-bd0ad2f123bf\", \"name\": \"af-0285ddb8-a5b8-48b0-8248-bd0ad2f123bf\", \"filename\": \"/FoundationaLLM.Agent/8ac6074c-bdde-43cb-a140-ec0002d96d2b/TestAgentFiles1/private-file-store/af-0285ddb8-a5b8-48b0-8248-bd0ad2f123bf.pdf\", \"type\": \"agent-file\", \"deleted\": false, \"_rid\": \"ie9IAMu0+b0EAAAAAAAAAA==\", \"_self\": \"dbs/ie9IAA==/colls/ie9IAMu0+b0=/docs/ie9IAMu0+b0EAAAAAAAAAA==/\", \"_etag\": \"\\\"37012abc-0000-0200-0000-67afaa800000\\\"\", \"_attachments\": \"attachments/\", \"_ts\": 1739565696 } The agent-file type has been removed and the references are no longer saved in the agent reference store _resource-references.json. Tools In the agent resource provider storage folder (resource-provider/FoundationaLLM.Agent), add a tool resource reference entry (_resource_references.json) as well as configuration file for the following tools: OpenAIAssistantsFileSearch, OpenAIAssistantsCodeInterpreter, DALLEImageGeneration, and FoundationaLLMContentSearchTool. Reference example: { \"Name\": \"OpenAIAssistantsFileSearch\", \"Filename\": \"/FoundationaLLM.Agent/OpenAIAssistantsFileSearch.json\", \"Type\": \"tool\", \"Deleted\": false } File example: { \"type\": \"tool\", \"name\": \"OpenAIAssistantsFileSearch\", \"object_id\": \"/instances/{{instanceId}}/providers/FoundationaLLM.Agent/tools/OpenAIAssistantsFileSearch\", \"display_name\": \"OpenAIAssistantsFileSearch\", \"description\": \"OpenAIAssistantsFileSearch\", \"cost_center\": null, \"properties\": null, \"created_on\": \"2025-01-10T08:22:34.2682433+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": \"dev@foundationaLLM.ai\", \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Starting with 0.9.3-rc010 Resource provider cache warm-up Resource providers now support a cache warm-up mechanism. This mechanism allows the cache to be pre-populated with the resource provider data before the service starts processing requests. This feature is useful when the service is deployed in a cold environment and needs to be warmed up before it can handle requests. The cache warm-up mechanism is enabled when a file named _cache_warmup.json exists in the blob storage location associated with the resource provider. Here is an example of such a file: [ { \"ServiceName\": \"OrchestrationAPI\", \"Description\": \"Resources required by: service principal x, service principal y.\", \"ResourceObjectIds\": [ \"/instances/73fad442-.../providers/FoundationaLLM.Configuration/apiEndpointConfigurations/GatewayAPI\", \"/instances/73fad442-.../providers/FoundationaLLM.Configuration/apiEndpointConfigurations/AzureAISearch\", \"/instances/73fad442-.../providers/FoundationaLLM.Configuration/apiEndpointConfigurations/LangChainAPI\", \"/instances/73fad442-.../providers/FoundationaLLM.Configuration/apiEndpointConfigurations/StateAPI\" ], \"SecurityPrincipalIds\": [ \"4150c6b3-...\", \"949195b1-...\" ] }, { \"ServiceName\": \"OrchestrationAPI\", \"Description\": \"Resources required by: service principal x, service principal y, service principal z.\", \"ResourceObjectIds\": [ \"/instances/73fad442-.../providers/FoundationaLLM.Configuration/apiEndpointConfigurations/AzureOpenAI\" ], \"SecurityPrincipalIds\": [ \"4150c6b3-...\", \"949195b1-...\", \"d6a6317a-...\" ] } ] The configuration contains an array of objects, each representing a cache warm-up configuration. Each object contains the following properties: ServiceName - The name of the service that the cache warm-up configuration is for. Description - A description of the cache warm-up configuration. ResourceObjectIds - The list of resource object identifiers that will be pre-loaded into the resource provider cache. Note The resource object identifiers must be specific to the resource provider. SecurityPrincipalIds - The list of security principal identifiers that will be used to authenticate the cache warm-up requests. Important As a result of the cache warm-up process, the client authorization cache will be populated with all combinations of security principal and resource object identifiers that exist in the cache warm-up configuration. Make sure the two lists only contain the necessary values to avoid a long startup time for the resource provider. Starting with 0.9.3-rc002 App configuration settings The following App Config properties make cache settings for the AuthorizationServiceClientCacheService configurable: Name Description Default Value FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:EnableCache Indicates whether calls to the Authorization API should be cached or not. false FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:AbsoluteCacheExpirationSeconds Absolute cache expiration in seconds. 300 FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:SlidingCacheExpirationSeconds Sets how many seconds the cache entry can be inactive (e.g. not accessed) before it will be removed. This will not extend the entry lifetime beyond the absolute expiration (if set). 120 FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:CacheSizeLimit The maximum number of items that can be stored in the cache. 10000 FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:CacheExpirationScanFrequencySeconds Gets or sets the minimum length of time between successive scans for expired items in seconds. 30 Starting with 0.9.2-rc005 Agent configuration changes Starting with this version, all agents MUST transition to the agent workflow configuraiton approach. The following agent properties are no longer supported and should be deleted as part of upgrading to this version: OrchestrationSettings - fully replaced by the agent worflow settings. PromptObjectId - replaced by the agent workflow resource object identifier with an object_role of main_prompt. AIModelObjectId - replaced by the agent workflow resource object identifier with an object_role of main_model. Capabilities - removed. The equivalent of having Azure OpenAI Assistants capabilities is having an agent workflow with the type azure-openai-assistants-workflow. Azure.OpenAI.Assistant.Id property in properties - replaced by the assistant_id property of an agent workflow witht the type azure-openai-assistants-workflow. Important If the Azure.OpenAI.Assistant.Id property is set in the agent properties, it's value must be copied to the assistant_id property of the agent workflow. Here is an example of a fully configured worfklow section for an agent: { \"type\": \"azure-openai-assistants-workflow\", \"name\": \"OpenAIAssistants\", \"package_name\": \"FoundationaLLM\", \"assistant_id\": \"asst_...\", \"resource_object_ids\": { \"/instances/.../providers/FoundationaLLM.Agent/workflows/OpenAIAssistants\": { \"object_id\": \"/instances/.../providers/FoundationaLLM.Agent/workflows/OpenAIAssistants\", \"properties\": {} }, \"/instances/.../providers/FoundationaLLM.AIModel/aiModels/GPT4oMiniCompletionAIModel\" : { \"object_id\": \"/instances/.../providers/FoundationaLLM.AIModel/aiModels/GPT4oMiniCompletionAIModel\", \"properties\": { \"object_role\": \"main_model\", \"model_parameters\": {} } }, \"/instances/.../providers/FoundationaLLM.Prompt/prompts/FoundationaLLM-mini\": { \"object_id\": \"/instances/.../providers/FoundationaLLM.Prompt/prompts/FoundationaLLM-mini\", \"properties\": { \"object_role\": \"main_prompt\" } } } } Starting from 0.9.1 App configuration settings To support the event grid infrastructure, the following new App Configuration settings are required. [ { \"key\": \"FoundationaLLM:Events:Profiles:CoreAPI\", \"label\": null, \"value\": \"{\\\"EventProcessingCycleSeconds\\\": 5,\\\"Topics\\\": [{\\\"Name\\\": \\\"resource-providers\\\",\\\"SubscriptionPrefix\\\": \\\"rp-core\\\"}]}\", \"content_type\": \"application/json\", \"tags\": {} }, { \"key\": \"FoundationaLLM:Events:Profiles:GatekeeperAPI\", \"label\": null, \"value\": \"{\\\"EventProcessingCycleSeconds\\\":60,\\\"Topics\\\":[]}\", \"content_type\": \"application/json\", \"tags\": {} }, { \"key\": \"FoundationaLLM:Events:Profiles:GatewayAPI\", \"label\": null, \"value\": \"{\\\"EventProcessingCycleSeconds\\\": 5,\\\"Topics\\\": [{\\\"Name\\\": \\\"resource-providers\\\",\\\"SubscriptionPrefix\\\": \\\"rp-gateway\\\"}]}\", \"content_type\": \"application/json\", \"tags\": {} }, { \"key\": \"FoundationaLLM:Events:Profiles:ManagementAPI\", \"label\": null, \"value\": \"{\\\"EventProcessingCycleSeconds\\\": 5,\\\"Topics\\\": [{\\\"Name\\\": \\\"resource-providers\\\",\\\"SubscriptionPrefix\\\": \\\"rp-management\\\"}]}\", \"content_type\": \"application/json\", \"tags\": {} }, { \"key\": \"FoundationaLLM:Events:Profiles:OrchestrationAPI\", \"label\": null, \"value\": \"{\\\"EventProcessingCycleSeconds\\\": 5,\\\"Topics\\\": [{\\\"Name\\\": \\\"resource-providers\\\",\\\"SubscriptionPrefix\\\": \\\"rp-orch\\\"}]}\", \"content_type\": \"application/json\", \"tags\": {} }, { \"key\": \"FoundationaLLM:Events:Profiles:VectorizationAPI\", \"label\": null, \"value\": \"{\\\"EventProcessingCycleSeconds\\\":60,\\\"Topics\\\":[]}\", \"content_type\": \"application/json\", \"tags\": {} }, { \"key\": \"FoundationaLLM:Events:Profiles:VectorizationWorker\", \"label\": null, \"value\": \"{\\\"EventProcessingCycleSeconds\\\":60,\\\"Topics\\\":[]}\", \"content_type\": \"application/json\", \"tags\": {} } ] Note: The event grid system topics need to be removed. The following topic needs to be created in the event grid namespace, must have a resource-providers topic with a publisher type of Custom and an input schema of Cloud Events v1.0. Configuration changes Added the following App Configuration value: Name Default value Description FoundationaLLM:UserPortal:Authentication:Entra:TimeoutInMinutes 60 The timeout in minutes for a user's auth token in the User Portal. FoundationaLLM:UserPortal:Configuration:ShowFileUpload true Global setting to determine if file upload is allowed on chat messages. Starting with 0.9.1-rc117 Agent configuration changes \"text_rewrite_settings\": { \"user_prompt_rewrite_enabled\" : true, \"user_prompt_rewrite_settings\": { \"user_prompt_rewrite_ai_model_object_id\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.AIModel/aiModels/GPT4oCompletionAIModel\", \"user_prompt_rewrite_prompt_object_id\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.Prompt/prompts/FoundationaLLM-v2-Rewrite\", \"user_prompts_window_size\": 1 } }, \"cache_settings\": { \"semantic_cache_enabled\": true, \"semantic_cache_settings\": { \"embedding_ai_model_object_id\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.AIModel/aiModels/DefaultEmbeddingAIModel\", \"embedding_dimensions\": 2048, \"minimum_similarity_threshold\": 0.975 } }, Semantic cache Enable vector search in the Cosmos DB database using the following CLI command: az cosmosdb update --resource-group <resource-group-name> --name <account-name> --capabilities EnableNoSQLVectorSearch Create the CompletionsCache container in the Cosmos DB database with the following properties: Container id: CompletionsCache Partition key: /operationId Container Vector Policy: a policy with the following properties: Path: /userPromptEmbedding Data type: float32 Distance function: Cosine Dimensions: 2048 Index type: diskANN (leave the default values) After the container is created, set the Time to Live property on the container to 300 seconds. Starting with 0.9.1-rc105 Configuration changes The following new App Configuration settings are required: Name Default value Description FoundationaLLM:PythonSDK:Logging:LogLevel:Azure Warning Provides the default level of logging for Azure modules in the Python SDK. Agent workflow configuration changes Agent resource configuration files that have a workflow property now requires a name and package_name property. This is to support loading external workflows via plugins. For internal workflows, the package_name should be set to FoundationaLLM. Example below truncated for brevity. { \"workflow\": { \"type\": \"langgraph-react-agent-workflow\", \"name\": \"LangGraphReactAgent\", \"package_name\": \"FoundationaLLM\", \"workflow_host\": \"LangChain\", \"graph_recursion_limit\": 10, \"resource_object_ids\": {} } } A new Workflow resource must be added to the FoundationaLLM.Agent resource provider: { \"type\": \"external-agent-workflow\", \"name\": \"ExternalAgentWorkflow\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Agent/workflows/ExternalAgentWorkflow\", \"display_name\": \"ExternalAgentWorkflow\", \"description\": \"External Agent workflow\", \"cost_center\": null, \"properties\": null, \"created_on\": \"2024-11-13T18:12:07.0223039+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": \"dev@foundationaLLM.ai\", \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Starting with 0.9.1-rc102 Configuration changes The following new App Configuration settings are required: Name Default value Description FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:AccountName <main_storage_account_name> Provides the storage account used by the Orchestration API to persist completion requests. FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:AuthenticationType AzureIdentity Indicates that managed identity authentication should be used to access the storage account. FoundationaLLM:APIEndpoints:OrchestrationAPI:Configuration:CompletionRequestsStorage:ContainerName orchestration-completion-requests Provides the storage container name used by the Orchestration API to persist completion requests. Should always be orchestration-completion-requests User profile changes A new flag named persistOrchestrationCompletionRequests is added to the user profile. This flag is used to determine whether the user's completion requests should be persisted in the storage account. The default value is false. Sample configuration: \"flags\": { \"oneDriveWorkSchoolEnabled\": true, \"persistOrchestrationCompletionRequests\": true }, Starting with 0.9.1-rc101 Configuration changes The following new App Configuration settings are required: Name Default value Description FoundationaLLM:Code:CodeExecution:AzureContainerAppsDynamicSessions {\"DynamicSessionsEndpoints\": []} Provides the configuration for the Azure Container Apps Dynamic Sessions code execution service. DynamicSessionsEnpoints is a list of Dynamic Sessions endpoints that are used to run code execution sessions. Must contain at least one value. Agent tool configuration changes Each agent tool should have an entry in the properties dictionary named foundationallm_aca_code_execution_enabled (true or false) to indicate whether the tool requires code execution sessions based on the the Azure Container Apps Dynamic Sessions service. Prompt definition changes Prompt prefixes and suffixes support FoundationaLLM variables for dynamic replacement at runtime. The variable format is {{foundationallm:variable_name[:format]}} where variable_name is the name of the well-known variable. format is the optional formatting applied to the value of the variable. The following variables are supported: Name Value Example current_datetime_utc The current UTC date and time. The current date is {{foundationallm:current_datetime_utc:dddd, MMMM dd, yyyy}}. This looks great. -> The current date is Sunday, December 15, 2024. This looks great. Starting with 0.9.0 Configuration changes The following new App Configuration settings are required: Name Default value Description FoundationaLLM:PythonSDK:Logging:LogLevel:Default Information - FoundationaLLM:PythonSDK:Logging:EnableConsoleLogging false - FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:RequireScopes true Indicates whether a scope claim (scp) is required for authorization. Set to false to allow authentication from an external proxy API. FoundationaLLM:APIEndpoints:CoreAPI:Configuration:Entra:AllowACLAuthorization false Indicates whether tokens that do not have either of the \"scp\" or \"roles\" claims are accepted (True means they are accepted). Set to true to allow authentication from an external proxy API. FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Storage:AccountName - - FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Storage:AuthenticationType - - FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:RootStorageContainer - - FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:ExternalModules:Modules - - FoundationaLLM:APIEndpoints:LangChainAPI:Configuration:PollingIntervalSeconds 1 The interval in seconds at which the LangChain API will be polled for status. FoundationaLLM:UserPortal:Configuration:ShowMessageRating true If true, rating options on agent messages will appear. FoundationaLLM:UserPortal:Configuration:ShowLastConversationOnStartup false If true, the last conversation will be displayed when the user logs in. Otherwise, a new conversation placeholder appears on page load. FoundationaLLM:UserPortal:Configuration:ShowMessageTokens true If true, the number of consumed tokens on agent and user messages will appear. FoundationaLLM:UserPortal:Configuration:ShowViewPrompt true If true, the \"View Prompt\" button on agent messages will appear. FoundationaLLM:Instance:EnableResourceProvidersCache false If true, the caching of resource providers will be enabled. FoundationaLLM:APIEndpoints:AuthorizationAPI:Essentials:EnableCache false If true, the caching of authorization call results will be enabled. Agent Tool configuration changes Agent tools are now an array of AgentTool objects rather than a dictionary. When defining tools for an agent, each tool now requires a package_name property. This property is used to identify the package that contains the tool's implementation. If the tool is internal, the package_name should be set to FoundationaLLM, if the tool is external, the package_name should be set to the name of the external package. Security-related changes The Authorization API now requires the ability to write to the Key Vault account contained within the auth resource group. Currently, the Authorization APIs managed identity is assigned to the Key Vault Secrets User role on the Key Vault account. This role assignment must be updated to include the Key Vault Secrets Officer role in addition to the user role. Renamed classes The following classes have been renamed: Original Class New Class FoundationaLLM.Common.Models.Orchestration.Response.Citation FoundationaLLM.Common.Models.Orchestration.Response.ContentArtifact API endpoint changes Core API The /instances/{instanceId}/sessions/{sessionId}/message/{id}/rate endpoint has been updated to accept the rating in the message body, rather than as a query parameter. Send the following payload in the request body: { \"rating\": true, \"comments\": \"string\" } Note Please note that both properties are nullable. Set them to null to clear out the rating and comments. Starting with 0.8.4 Configuration changes The following new App Configuration settings are required: Name Default value FoundationaLLM:APIEndpoints:ManagementAPI:Configuration:AllowedUploadFileExtensions c, cpp, cs, css, csv, doc, docx, gif, html, java, jpeg, jpg, js, json, md, pdf, php, png, pptx, py, rb, sh, tar, tex, ts, txt, xlsx, xml, zip FoundationaLLM:Branding:NoAgentsMessage No agents available. Please check with your system administrator for assistance. FoundationaLLM:Branding:DefaultAgentWelcomeMessage Start the conversation using the text box below. The following new App Configuration feature flags are required: Name Default value FoundationaLLM.Agent.PrivateStore Not enabled Assistants API enabled Agent(s) Important Any existing agent that has the Assistants API enabled needs to be saved from the Management UI to update itself. Resource provider changes FoundationaLLM.Authorization The following entries need to be added to the policy store file: { \"name\": \"GUID03\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/GUID03\", \"description\": \"Ownership on conversation mapping resources managed by the FoundationaLLM.AzureOpenAI resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"SECURITY_GROUP_ID\", \"principal_type\": \"Group\", \"scope\": \"/instances/FOUNDATIONALLM_INSTANCEID/providers/FoundationaLLM.AzureOpenAI/conversationMappings\", \"created_on\": \"DEPLOY_TIME\", \"updated_on\": \"DEPLOY_TIME\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" }, { \"name\": \"GUID04\", \"type\": \"FoundationaLLM.Authorization/policyAssignments\", \"object_id\": \"/providers/FoundationaLLM.Authorization/policyAssignments/GUID04\", \"description\": \"Ownership on file mapping resources managed by the FoundationaLLM.AzureOpenAI resource provider.\", \"policy_definition_id\": \"/providers/FoundationaLLM.Authorization/policyDefinitions/00000000-0000-0000-0001-000000000001\", \"principal_id\": \"SECURITY_GROUP_ID\", \"principal_type\": \"Group\", \"scope\": \"/instances/FOUNDATIONALLM_INSTANCEID/providers/FoundationaLLM.AzureOpenAI/fileMappings\", \"created_on\": \"DEPLOY_TIME\", \"updated_on\": \"DEPLOY_TIME\", \"created_by\": \"SYSTEM\", \"updated_by\": \"SYSTEM\" } The following placehoders need to be replaced with the actual values: SECURITY_GROUP_ID - the ID of the security group that needs to be assigned to the policy FOUNDATIONALLM_INSTANCEID - the ID of the FoundationaLLM instance DEPLOY_TIME - the time when the policy was deployed GUID03 and GUID04 - unique identifiers for the policy assignments FoundationaLLM.AzureOpenAI The assistant and file user context artifacts are now simplified and stored in a new Cosmos DB container. Here are the configuration parameters for the new Cosmos DB container: Name Value Name ExternalResources Maximum RU/s 1000 Time to live Off Partition key /partitionKey Part of the upgrade to this version is to migrate the existing assistant and file user context artifacts to the new Cosmos DB container. Refer to the dedicated upgrade tool for instructions on how to perform this update. As a result of the migration, the newly created ExternalResources container will contain two types of items: AzureOpenAIConversationMapping and AzureOpenAIFileMapping. This is an example of an AzureOpenAIConversationMapping item: { \"conversationId\": \"0e56a170-5355-...\", \"openAIAssistantsAssistantId\": \"asst_kc...\", \"openAIAssistantsThreadId\": \"thread_73...\", \"openAIAssistantsThreadCreatedOn\": \"2024-10-14T17:57:10.510345+00:00\", \"openAIVectorStoreId\": \"vs_X6...\", \"openAIVectorStoreCreatedOn\": null, \"type\": \"AzureOpenAIConversationMapping\", \"id\": \"0e56a170-5355-...\", \"partitionKey\": \"...-73fad442-f614-4510-811f-414cb3a3d34b\", \"upn\": \"jackthecat@foundationaLLM.ai\", \"instanceId\": \"73fad442-f614-4510-811f-414cb3a3d34b\", \"openAIEndpoint\": \"https://openai-....openai.azure.com/\", \"objectId\": null, \"displayName\": null, \"description\": null, \"costCenter\": null, \"properties\": null, \"createdOn\": \"0001-01-01T00:00:00+00:00\", \"updatedOn\": \"0001-01-01T00:00:00+00:00\", \"createdBy\": null, \"updatedBy\": null, \"deleted\": false, \"expirationDate\": null, \"name\": \"0e56a170-5355-...\", \"_rid\": \"J2BUAKktW41bAAAAAAAAAA==\", \"_self\": \"dbs/J2BUAA==/colls/J2BUAKktW40=/docs/J2BUAKktW41bAAAAAAAAAA==/\", \"_etag\": \"\\\"8702b793-0000-0200-0000-672a60b90000\\\"\", \"_attachments\": \"attachments/\", \"_ts\": 1730830521 } This is an example of an AzureOpenAIFileMapping item: { \"fileObjectId\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.Attachment/attachments/a-f8...\", \"originalFileName\": \"some_file.csv\", \"fileContentType\": \"text/csv\", \"fileRequiresVectorization\": false, \"openAIFileId\": \"assistant-8G...\", \"openAIFileUploadedOn\": \"2024-10-14T23:01:02.3075592+00:00\", \"openAIAssistantsFileGeneratedOn\": null, \"openAIVectorStoreId\": null, \"type\": \"AzureOpenAIFileMapping\", \"id\": \"assistant-8G...\", \"partitionKey\": \"...-73fad442-f614-4510-811f-414cb3a3d34b\", \"upn\": \"jackthecat@foundationaLLM.ai\", \"instanceId\": \"73fad442-f614-4510-811f-414cb3a3d34b\", \"openAIEndpoint\": \"https://openai-....openai.azure.com/\", \"objectId\": null, \"displayName\": null, \"description\": null, \"costCenter\": null, \"properties\": null, \"createdOn\": \"0001-01-01T00:00:00+00:00\", \"updatedOn\": \"0001-01-01T00:00:00+00:00\", \"createdBy\": null, \"updatedBy\": null, \"deleted\": false, \"expirationDate\": null, \"name\": \"assistant-8G...\", \"_rid\": \"J2BUAKktW40yAAAAAAAAAA==\", \"_self\": \"dbs/J2BUAA==/colls/J2BUAKktW40=/docs/J2BUAKktW40yAAAAAAAAAA==/\", \"_etag\": \"\\\"87025e93-0000-0200-0000-672a60b70000\\\"\", \"_attachments\": \"attachments/\", \"_ts\": 1730830519 } Cleanup role assignments As a result of migrated resources from storage account to Cosmos DB, as well as the new policy-assignments mentioned above, the role-assignments store will have obsolete Owner role assignments on those objects. Please refer to the dedicated tool for instructions on how to perform this cleanup. The dedicated tool will cleanup role assignments for the following resources: FoundationaLLM.Attachment/attachments FoundationaLLM.AzureOpenAI/fileUserContexts FoundationaLLM.AzureOpenAI/assistantUserContexts FoundationaLLM.Conversation/conversations Configuration changes Resource provider templates The AzureOpenAI.template.json files within deploy/quick-start/data/resource-provider/FoundationaLLM.Configuration and deploy/standard/data/resource-provider/FoundationaLLM.Configuration have been updated to set the category field to the value LLM. This discriminator allows the Management Portal to filter the list of API endpoints by category and provide options to add AI Models to endpoints with the LLM category. The existing category property needs to be set to LLM on existing API endpoint configurations in the FoundationaLLM.Configuration resource provider that fit this description, including the AzureOpenAI endpoint configuration. Starting with 0.8.3 Resource provider changes If a user/group is not assigned to the instance-level Contributor role, then they will not be able to create new Conversations or upload Attachments. To adjust their permissions, the following changes are required: FoundationaLLM.Conversation In addition to assigning users/groups to the policy-assignments/<instance_id>-policy.json file within the FoundationaLLM.Authorization resource provider to assign them to the Conversation policy, we must now add them to the new Conversation contributor role (role_definition_id: d0d21b90-5317-499a-9208-3a6cb71b84f9) within the role-assignments/<instance_id>-role.json file within the FoundationaLLM.Authorization resource provider if the user/group is not assigned to the Contributor role on the FoundationaLLM instance (role_definition_id: a9f0020f-6e3a-49bf-8d1d-35fd53058edf). Here is an example entry: { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"a40b15f1-75ce-4a40-a857-1093ac9adf4d\", \"object_id\": \"/instances/0a1840df-71b6-496d-905a-145d93d827f3/providers/FoundationaLLM.Authorization/roleAssignments/a40b15f1-75ce-4a40-a857-1093ac9adf4d\", \"display_name\": null, \"description\": \"Conversation contributor role for FLLM Users\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/d0d21b90-5317-499a-9208-3a6cb71b84f9\", \"principal_id\": \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\", \"principal_type\": \"Group\", \"scope\": \"/instances/0a1840df-71b6-496d-905a-145d93d827f3\", \"properties\": null, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } FoundationaLLM.Attachment In addition to assigning users/groups to the policy-assignments/<instance_id>-policy.json file within the FoundationaLLM.Authorization resource provider to assign them to the Attachment policy, we must now add them to the new Attachment contributor role (role_definition_id: 8e77fb6a-7a78-43e1-b628-d9e2285fe25a) within the role-assignments/<instance_id>-role.json file within the FoundationaLLM.Authorization resource provider if the user/group is not assigned to the Contributor role on the FoundationaLLM instance (role_definition_id: a9f0020f-6e3a-49bf-8d1d-35fd53058edf). Here is an example entry: { \"type\": \"FoundationaLLM.Authorization/roleAssignments\", \"name\": \"891ca947-e648-46cf-a12a-774b52ded886\", \"object_id\": \"/instances/0a1840df-71b6-496d-905a-145d93d827f3/providers/FoundationaLLM.Authorization/roleAssignments/891ca947-e648-46cf-a12a-774b52ded886\", \"display_name\": null, \"description\": \"Attachment contributor role for FLLM Users\", \"cost_center\": null, \"role_definition_id\": \"/providers/FoundationaLLM.Authorization/roleDefinitions/8e77fb6a-7a78-43e1-b628-d9e2285fe25a\", \"principal_id\": \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\", \"principal_type\": \"Group\", \"scope\": \"/instances/0a1840df-71b6-496d-905a-145d93d827f3\", \"properties\": null, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false, \"expiration_date\": null } Starting with 0.8.2 Configuration changes The following settings are required: Name Default value FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AllowedUploadFileExtensions c, cpp, cs, css, csv, doc, docx, gif, html, java, jpeg, jpg, js, json, md, pdf, php, png, pptx, py, rb, sh, tar, tex, ts, txt, xlsx, xml, zip FoundationaLLM:APIEndpoints:CoreAPI:Configuration:AzureOpenAIAssistantsFileSearchFileExtensions c, cpp, cs, css, doc, docx, html, java, js, json, md, pdf, php, pptx, py, rb, sh, tex, ts, txt FoundationaLLM:APIEndpoints:CoreAPI:Configuration:MaxUploadsPerMessage { \"value\": 10, \"value_exceptions\": [] } FoundationaLLM:APIEndpoints:CoreAPI:Configuration:CompletionResponsePollingIntervalSeconds { \"value\": 5, \"value_exceptions\": [] } FoundationaLLM:APIEndpoints:GatewayAPI:Configuration:AzureOpenAIAssistantsMaxVectorizationTimeSeconds 120 Note Here is an example of an override for the MaxUploadsPerMessage setting: { \"value\": 10, \"value_exceptions\": [ { \"user_principal_name\": \"ciprian@solliance.net\", \"value\": 5, \"enabled\": true } ] } Note Here is an example of an override for the CompletionResponsePollingIntervalSeconds setting: { \"value\": 5, \"value_exceptions\": [ { \"user_principal_name\": \"ciprian@solliance.net\", \"value\": 3, \"enabled\": true } ] } The following settings are optional (they should not be set by default): Name Default value FoundationaLLM:Instance:IdentitySubstitutionSecurityPrincipalId <security_principal_id> FoundationaLLM:Instance:IdentitySubstitutionUserPrincipalNamePattern ^fllm_load_test_user_\\d{5}_\\d{3}@solliance\\.net$ Note The FoundationaLLM:Instance:IdentitySubstitutionSecurityPrincipalId and FoundationaLLM:Instance:IdentitySubstitutionUserPrincipalNamePattern settings are used for load testing purposes only. If set, their values must be replaced with the appropriate values for the specific Entra ID tenant. Resource provider changes The following resource provider files must be renamed (if they already exist): Location Old name New name resource-provider/FoundationaLLM.Agent _agent-references.json _resource-references.json resource-provider/FoundationaLLM.AIModel _ai-model-references.json _resource-references.json resource-provider/FoundationaLLM.Configuration _api-endpoint-references.json _resource-references.json resource-provider/FoundationaLLM.DataSource _data-source-references.json _resource-references.json resource-provider/FoundationaLLM.Prompt _prompt-references.json _resource-references.json Note Within each of the renamed files, the <entity>References property must be renamed to ResourceReferences. FoundationaLLM.Agent A new property can be added to agent definitions: \"tools\": { \"dalle-image-generation\": { \"name\": \"dalle-image-generation\", \"description\": \"Generates an image based on a prompt.\", \"ai_model_object_ids\": { \"main_model\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.AIModel/aiModels/DALLE3\" } } } FoundationaLLM.Authorization A new storage container named policy-assignments is required. The FoundationaLLM.Authorization resource provider will use this container to store policy assignments. Within the container, the <instance_id>-policy.json must be deployed with the default policy assignments. The template for the default policy assignments is available in Common/Constants/Data/DefaultPolicyAssignments.json. FoundationaLLM.Conversation When upgrading an existing FoundationaLLM instance, the items in the Sessions collection in Cosmos DB must be updated according to the following rules: if Object is of type Session of KioskSession: If the property DisplayName exists and is set to a non-empty string: Don't touch the item else: Set DisplayName to the value of Name Set Name to the value of SessionId else: No action needed Refer to the dedicated upgrade tool for instruction on how to perform this update. FoundationaLLM.Configuration The OneDrive (Work or School) integration requires the following API Endpoint Configuration entry in the storage account: FoundationaLLM.Configuration/OneDriveFileStoreConnector.json { \"type\": \"api-endpoint\", \"name\": \"OneDriveFileStoreConnector\", \"object_id\": \"/instances/{{instance_id}}/providers/FoundationaLLM.Configuration/apiEndpointConfigurations/OneDriveFileStoreConnector\", \"display_name\": null, \"description\": null, \"cost_center\": null, \"category\": \"FileStoreConnector\", \"subcategory\": \"OneDriveWorkSchool\", \"authentication_type\": \"AzureIdentity\", \"authentication_parameters\": { \"scope\": \"Files.Read.All\" }, \"url\": \"{{onedrive_base_url}}\", \"status_url\": \"\", \"url_exceptions\": [], \"timeout_seconds\": 2400, \"retry_strategy_name\": \"ExponentialBackoff\", \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": \"SYSTEM\", \"deleted\": false } Update FoundationaLLM.Configuration/_resource-references_.json with the reference to the file above. { \"Name\": \"OneDriveFileStoreConnector\", \"Filename\": \"/FoundationaLLM.Configuration/OneDriveFileStoreConnector.json\", \"Type\": \"api-endpoint\", \"Deleted\": false } FoundationaLLM.Attachment The Attachment resource provider now saves the attachment references to Cosmos DB, instead of Data Lake storage. A new Cosmos DB container must be created, named Attachments, with the following partition key: /upn. The following MSIs require a Cosmos DB role assigned: Gateway API Orchestration API Management API Long-Running Operations The context for a long-running operation is now stored in Cosmos DB. A new Cosmos DB container must be created, named Operations, with a partition key /id. Starting with 0.8.0 Core API changes: All Core API endpoints have been moved to the /instances/{instanceId} path. For example, the /status endpoint is now /instances/{instanceId}/status. The /orchestration/* endpoints have been moved to /instances/{instanceId}/completions/*. The previous /orchestration/completions endpoint is now /instances/{instanceId}/completions. The /sessions/{sessionId}/completion endpoint has been moved to /instances/{instanceId}/completions. Instead of having the sessionId as a path parameter, it is now in the request body as part of the CompletionRequest payload. /sessions/{sessionId}/summarize-name has been removed. In the future, the /completions endpoint will be used to generate summaries. OrchestrationRequest and CompletionRequest have combined into a single CompletionRequest object. DirectionCompletionRequest has been removed. Use CompletionRequest instead. Status controllers \\status action in the .NET API projects return value has renamed the Instance property to InstanceName. The CompletionController.cs file under dotnet/CoreApi/controllers has introduced the Async-Completions endpoint to handle asynchronous completions. With the introduction of Async-Completions, long running operations can now report on completion status based on Pending, InProgress, Completed and Failed states. Vectorization Embedding Profile introduces a required key in the Settings property named model_name. Every embedding request now flows through the Gateway API. Vectorization Indexing Profile introduces a required key api_endpoint_configuration_object_id in the Settings property. Retirement of SemanticKernel embedding type. All embedding requests now flow through the Gateway API. Gatekeeper API changes: All Gatekeeper API endpoints have been moved to the /instances/{instanceId} path. For example, the /status endpoint is now /instances/{instanceId}/status. The /orchestration/* endpoints have been moved to /instances/{instanceId}/completions/*. Orchestration API changes: All Gatekeeper API endpoints have been moved to the /instances/{instanceId} path. For example, the /status endpoint is now /instances/{instanceId}/status. The /orchestration/* endpoints have been moved to /instances/{instanceId}/completions/*. ======= New APIs Gateway Adapter API - requires the following configuration settings: FoundationaLLM:APIs:GatewayAdapterAPI:APIUrl FoundationaLLM:APIs:GatewayAdapterAPI:APIKey (mapped to the foundationallm-apis-gatewayadapterapi-apikey secret) FoundationaLLM:APIs:GatewayAdapterAPI:APIAppInsightsConnectionString (mapped to the foundationallm-app-insights-connection-string secret) State API - requires the following configuration settings: FoundationaLLM:APIs:StateAPI:APIUrl FoundationaLLM:APIs:StateAPI:APIKey (mapped to the foundationallm-apis-stateapi-apikey secret) FoundationaLLM:APIs:StateAPI:APIAppInsightsConnectionString (mapped to the foundationallm-app-insights-connection-string secret) Note These new APIs will be converted to use the new APIEndpoint artifacts. Changes in app registration names API Name Entra ID app registration name Application ID URI Scope name Core API FoundationaLLM-Core-API api://FoundationaLLM-Core Data.Read Management API FoundationaLLM-Management-API api://FoundationaLLM-Management Data.Manage Authorization API FoundationaLLM-Authorization-API api://FoundationaLLM-Authorization Authorization.Manage User Portal FoundationaLLM-Core-Portal api://FoundationaLLM-Core-Portal N/A Management Portal FoundationaLLM-Management-Portal api://FoundationaLLM-Management-Portal N/A Changes in app configuration settings The FoundationaLLM:APIs and FoundationaLLM:ExternalAPIs configuration namespaces have been replaced with the FoundationaLLM:APIEndpoints configuration namespace. Important All existing API registrations need to be updated to reflect these changes. The only two settings that will exist under FoundationaLLM:APIEndpoints are APIKey (for those API enpoints which use API key authentication) and AppInsightsConnectionString, all the other settings are now part of the APIEndpoint artifact managed by the FoundationaLLM.Configuration resource provider. This is an example for CoreAPI: FoundationaLLM:APIEndpoints:CoreAPI:APIKey FoundationaLLM:APIEndpoints:CoreAPI:AppInsightsConnectionString The FoundationaLLM:AzureAIStudio configuration namespace expects an APIEndpointConfigurationName property instead of BaseUrl. A new configuration setting named FoundationaLLM:Instance:SecurityGroupRetrievalStrategy with a value of IdentityManagementService must exist in the app configuration. It will be added by default in new deployments. Two new configuration settings required by the new FoundationaLLM.AzureOpenAI resource provider: FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AuthenticationType FoundationaLLM:ResourceProviders:AzureOpenAI:Storage:AccountName Pre-0.8.0 Vectorization resource stores use a unique collection name, Resources. They also add a new top-level property named DefaultResourceName. The items in the index_references collection have a property incorrectly named type which was renamed to index_entry_id. New gateway API, requires the following app configurations: FoundationaLLM:APIs:GatewayAPI:APIUrl FoundationaLLM:APIs:GatewayAPI:APIKey (with secret foundationallm-apis-gatewayapi-apikey) FoundationaLLM:APIs:GatewayAPI:AppInsightsConnectionString (with secret foundationallm-app-insights-connection-string) FoundationaLLM:Gateway:AzureOpenAIAccounts The AgentFactory and AgentFactoryAPI classes have been renamed to Orchestration and OrchestrationAPI, respectively. The following App Config settings need to be replaced in existing environments: FoundationaLLM:APIs:AgentFactoryAPI:APIKey -> FoundationaLLM:APIs:OrchestrationAPI:APIKey FoundationaLLM:APIs:AgentFactoryAPI:APIUrl -> FoundationaLLM:APIs:OrchestrationAPI:APIUrl FoundationaLLM:APIs:AgentFactoryAPI:AppInsightsConnectionString -> FoundationaLLM:APIs:OrchestrationAPI:AppInsightsConnectionString FoundationaLLM:Events:AzureEventGridEventService:Profiles:AgentFactoryAPI -> FoundationaLLM:Events:AzureEventGridEventService:Profiles:OrchestrationAPI FoundationaLLM:APIs:AgentFactoryAPI:ForceHttpsRedirection -? FoundationaLLM:APIs:OrchestrationAPI:ForceHttpsRedirection The following Key Vault secrets need to be replaced in existing environments: foundationallm-apis-agentfactoryapi-apikey -> foundationallm-apis-orchestrationapi-apikey There is an upgrade script available that migrates these settings and secrets to their new names. The following App Config settings are no longer needed: FoundationaLLM:Vectorization:Queues:Embed:ConnectionString FoundationaLLM:Vectorization:Queues:Extract:ConnectionString FoundationaLLM:Vectorization:Queues:Index:ConnectionString FoundationaLLM:Vectorization:Queues:Partition:ConnectionString The following Key Vault secret is no longer needed: foundationallm-vectorization-queues-connectionstring The following App Config settings need to be added as key-values: FoundationaLLM:Vectorization:Queues:Embed:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) FoundationaLLM:Vectorization:Queues:Extract:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) FoundationaLLM:Vectorization:Queues:Index:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) FoundationaLLM:Vectorization:Queues:Partition:AccountName (set to the name of the storage account that contains the vectorization queues - e.g., stejahszxcubrpi) The value for the App Config setting FoundationaLLM:Events:AzureEventGridEventService:Profiles:OrchestrationAPI should be set in the following format: { \"EventProcessingCycleSeconds\": 20, \"Topics\": [ { \"Name\": \"storage\", \"SubscriptionPrefix\": \"orch\", \"EventTypeProfiles\": [ { \"EventType\": \"Microsoft.Storage.BlobCreated\", \"EventSets\": [ { \"Namespace\": \"ResourceProvider.FoundationaLLM.Agent\", \"Source\": \"/subscriptions/0a03d4f9-c6e4-4ee1-87fb-e2005d2c213d/resourceGroups/rg-fllm-aca-050/providers/Microsoft.Storage/storageAccounts/stejahszxcubrpi\", \"SubjectPrefix\": \"/blobServices/default/containers/resource-provider/blobs/FoundationaLLM.Agent\" }, { \"Namespace\": \"ResourceProvider.FoundationaLLM.Vectorization\", \"Source\": \"/subscriptions/0a03d4f9-c6e4-4ee1-87fb-e2005d2c213d/resourceGroups/rg-fllm-aca-050/providers/Microsoft.Storage/storageAccounts/stejahszxcubrpi\", \"SubjectPrefix\": \"/blobServices/default/containers/resource-provider/blobs/FoundationaLLM.Vectorization\" }, { \"Namespace\": \"ResourceProvider.FoundationaLLM.Prompt\", \"Source\": \"/subscriptions/0a03d4f9-c6e4-4ee1-87fb-e2005d2c213d/resourceGroups/rg-fllm-aca-050/providers/Microsoft.Storage/storageAccounts/stejahszxcubrpi\", \"SubjectPrefix\": \"/blobServices/default/containers/resource-provider/blobs/FoundationaLLM.Prompt\" } ] } ] } ] } Vectorization text embedding profiles require only two items in the configuration_references section: DeploymentName and Endpoint. Optionally, a deployment_name entry can be specified in the settings section to override the default value in configuration_references.Endpoint. Here is an example of the updated format for a text embedding profile: { \"type\": \"text-embedding-profile\", \"name\": \"AzureOpenAI_Embedding_BaselineGlobalMacro\", \"object_id\": \"/instances/a6221c30-0bf2-4003-adb8-d3086bb2ad49/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/AzureOpenAI_Embedding_BaselineGlobalMacro\", \"display_name\": null, \"description\": null, \"text_embedding\": \"SemanticKernelTextEmbedding\", \"settings\": { \"deployment_name\": \"embeddings-3-large\" }, \"configuration_references\": { \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" }, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } External orchestration APIs must be configured using the FoundationaLLM:ExternalAPIs configuration namespace. For example, the BaselineTradingGlobalMacro external API has the following configurations: FoundationaLLM:ExternalAPIs:BaselineTradingGlobalMacro:APIUrl FoundationaLLM:ExternalAPIs:BaselineTradingGlobalMacro:APIKey Note These entries do not need to be created as part of the deployment process. App Config key namespace that was previously FoundationaLLM:Vectorization:ContentSources:* has been moved to FoundationaLLM:DataSources:*. All existing keys need to be moved to the new namespace. New app config entries required: FoundationaLLM:Attachment:ResourceProviderService:Storage:AuthenticationType FoundationaLLM:Attachment:ResourceProviderService:Storage:AccountName App Config key namespace that was previously FoundationaLLM:Vectorization:ContentSources:* has been moved to FoundationaLLM:DataSources:*. All existing keys need to be moved to the new namespace. The following App Config setting needs to be added/updated as key-values: Add FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableAzureContentSafetyPromptShield Add FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableLakeraGuard Add FoundationaLLM:APIs:GatekeeperAPI:Configuration:EnableEnkryptGuardrails Rename FoundationaLLM:AzureContentSafety:APIKey in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIKey Rename FoundationaLLM:AzureContentSafety:APIUrl in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:APIUrl Rename FoundationaLLM:AzureContentSafety:HateSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:HateSeverity Rename FoundationaLLM:AzureContentSafety:SelfHarmSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SelfHarmSeverity Rename FoundationaLLM:AzureContentSafety:SexualSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:SexualSeverity Rename FoundationaLLM:AzureContentSafety:ViolenceSeverity in FoundationaLLM:APIs:Gatekeeper:AzureContentSafety:ViolenceSeverity Add FoundationaLLM:APIs:Gatekeeper:LakeraGuard:APIKey Add FoundationaLLM:APIs:Gatekeeper:LakeraGuard:APIUrl Add FoundationaLLM:APIs:Gatekeeper:EnkryptGuardrails:APIKey Add FoundationaLLM:APIs:Gatekeeper:EnkryptGuardrails:APIUrl The following Key Vault secret is needed: lakera-guard-api-key enkrypt-guardrails-apikey"
  },
  "role-based-access-control/agent-role-assignments.html": {
    "href": "role-based-access-control/agent-role-assignments.html",
    "title": "Automate the management of role assignments for agents | FoundationaLLM",
    "summary": "Automate the management of role assignments for agents Calling the Management REST API All calls to the FoundationaLLM Management REST API must use HTTPS and include the Authorization header with a valid Bearer token for the Microsoft Entra ID identity used to perform the call. The token must have the Data.Manage scope. The identity must have one of the following roles assigned at the scope of the FoundationaLLM agent: Owner User Access Administrator The URL of the Management REST API can be obtained from the Deployment information section of the FoundationaLLM Management Portal: Here is an example of how to get an access token for the FoundationaLLM Management REST API: az login az account get-access-token --scope api://FoundationaLLM-Management/Data.Manage Listing available agents To list all agents in your FoundationaLLM instance, you can use the following REST API call: HTTP GET {managementAPIUrl}/instances/{instanceId}/providers/FoundationaLLM.Agent/agents where: {managementAPIUrl} is the URL of the FoundationaLLM Management REST API. {instanceId} is the ID of your FoundationaLLM instance. The response will be a list of objects representing agents. Each object has a property named resource that contains the agent's details as follows: [ { \"resource\": { \"type\": \"knowledge-management\", \"name\": \"FoundationaLLM\", \"object_id\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.Agent/agents/FoundationaLLM\", \"display_name\": null, \"description\": \"Useful for answering questions about FoundationaLLM.\", \"cost_center\": \"\", \"vectorization\": { \"dedicated_pipeline\": true, \"data_source_object_id\": \"\", \"indexing_profile_object_ids\": [ \"\" ], \"text_embedding_profile_object_id\": \"\", \"text_partitioning_profile_object_id\": \"\", \"vectorization_data_pipeline_object_id\": \"\", \"trigger_type\": \"Event\", \"trigger_cron_schedule\": \"* * * * *\" }, \"inline_context\": true, \"sessions_enabled\": true, \"conversation_history_settings\": { \"enabled\": false, \"max_history\": 5 }, \"gatekeeper_settings\": { \"use_system_setting\": false, \"options\": [] }, \"orchestration_settings\": { \"orchestrator\": \"LangChain\", \"agent_parameters\": null }, \"prompt_object_id\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.Prompt/prompts/FoundationaLLM\", \"ai_model_object_id\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.AIModel/aiModels/GPT4oMiniCompletionAIModel\", \"capabilities\": [ \"OpenAI.Assistants\" ], \"tools\": { \"dalle-image-generation\": { \"name\": \"dalle-image-generation\", \"description\": \"Generates an image based on a prompt.\", \"ai_model_object_ids\": { \"main_model\": \"/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.AIModel/aiModels/DALLEImageGenerationModel\" }, \"api_endpoint_configuration_object_ids\": {}, \"properties\": {} } }, \"properties\": { \"welcome_message\": \"<p>You are chatting with an agent named FoundationaLLM, who can answer questions about the FoundationaLLM platform.</p><p>Additional capabilities include:</p><ul><li>Upload files and ask the agent to analyze them</li><li>Generate charts, files, and downloadable content</li><li>Generate images using DALL-E</li></ul><p><em>Please avoid sharing personally identifiable information (PII) while conversing with the agent.</em></p>\", \"Azure.OpenAI.Assistant.Id\": \"asst_wNLRX3klgprrg6ZFSbigfSJg\" }, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"2024-11-13T16:50:28.6257554+00:00\", \"created_by\": null, \"updated_by\": \"ciprian@foundationaLLM.ai\", \"deleted\": false, \"expiration_date\": null } } ] Make a note of the object_id property for the agent you want to assign a role to. You will need this value when requesting to add or remove role assignments for the agent. Adding or removing role assignments for an agent To request adding or removing role assignments for an agent, you can use the following REST API call: HTTP POST {managementAPIUrl}/instances/{instanceId}/providers/FoundationaLLM.Agent/agents/{agentName}/externalRoleAssignments where: {managementAPIUrl} is the URL of the FoundationaLLM Management REST API. {instanceId} is the ID of your FoundationaLLM instance. {agentName} is the name of the agent you want to assign a role to. For the example above, the agentName would be FoundationaLLM and the request should be: HTTP POST {managementAPIUrl}/instances/73fad442-f614-4510-811f-414cb3a3d34b/providers/FoundationaLLM.Agent/agents/FoundationaLLM/externalRoleAssignments The body of the request should contain the following JSON object: { \"roleAssignmentsToAdd\": [ { \"roleDefinitionId\": \"00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"identities\": [ \"user1@foundationallm.ai\", \"user2@foundationallm.ai\" ], \"expirationDate\": \"2024-12-31T23:59:59Z\" } ], \"roleAssignmentsToRemove\": [ { \"roleDefinitionId\": \"00a53e72-f66e-4c03-8f81-7e885fd2eb35\", \"identities\": [] } } where: The role definition identifier 00a53e72-f66e-4c03-8f81-7e885fd2eb35 is the well-known identifier for the Reader role. The identities array contains the list of user principal names (UPNs) that you want to assign or remove to or from the role. expirationDate is an optional property that specifies the date and time when the role assignment will expire."
  },
  "role-based-access-control/index.html": {
    "href": "role-based-access-control/index.html",
    "title": "FoundationaLLM RBAC documentation | FoundationaLLM",
    "summary": "FoundationaLLM RBAC documentation FoundationaLLM role-based access control (FoundationaLLM RBAC) is a system that provides fine-grained access control to FoundationaLLM resources. It is a system that allows you to control who can access what in your FoundationaLLM instance. Concepts Understand FoundationaLLM role definitions Understand FoundationaLLM role assignments Understand scope for FoundationaLLM RBAC Manage role assignments Automate the management of role assignments for agents"
  },
  "role-based-access-control/role-assignments.html": {
    "href": "role-based-access-control/role-assignments.html",
    "title": "Understand FoundationaLLM role assignments | FoundationaLLM",
    "summary": "Understand FoundationaLLM role assignments Role assignments enable you to grant a principal (such as a user, a group, a managed identity, or a service principal) access to a specific FoundationaLLM resource. Role assignment Acess to FoundationaLLM resources is granted through role assignments, and is reoked by removing a role assignment. A role assignment has several components: The principal, or who is being given access. The role definition (role), or what access is being granted. The scope at which the role is assigned, or where the access applies. The name of the role assignment. The description of the role assignment that helps explain why it exists. The following is an example of a FoundationaLLM role assignment: { \"RoleAssignmentName\": \"00000000-0000-0000-0000-000000000000\", \"RoleAssignmentId\": \"/instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000\", \"Scope\": \"/instances/11111111-1111-1111-1111-111111111111\", \"RoleDefinitionName\": \"Contributor\", \"RoleDefinitionId\": \"e459c3a6-6b93-4062-85b3-fffc9fb253df\", \"ObjectId\": \"22222222-2222-2222-2222-222222222222\", \"ObjectType\": \"User\", \"DisplayName\": \"Jack The Cat\", \"SignInName\": \"jackthecat@foundationallm.ai\", \"Description\": \"Jack The Cat has contributor access to the FoundationaLLM instance.\" } The following table describes the properties of a role assignment. Property Description RoleAssignmentName The name of the role assignment (is always a GUID). RoleAssignmentId The unique identifier of the role assignment which includes the name. Scope The FoundationaLLM resource identifier that the role assignment applies to. RoleDefinitionName The name of the role definition. RoleDefinitionId The unique identifier of the role definition. DisplayName The display name of the principal. ObjectId The unique identifier of the principal (can be a user, a group, a managed identity, or a service principal). ObjectType The type of the principal. Valid values include User, Group, and ServicePrincipal. DisplayName The display name of the principal. SignInName The unique principal name (UPN) of the principal. Description The description of the role assignment."
  },
  "role-based-access-control/role-definitions.html": {
    "href": "role-based-access-control/role-definitions.html",
    "title": "Understand FoundationaLLM role definitions | FoundationaLLM",
    "summary": "Understand FoundationaLLM role definitions Role definition A role defininition (or just role) is a collection of permissions. A role definition lists the actions that can be performed, such as read, write, and delete. The following table describes the propoerties of a role definition. Property Description Name The display name of the role definition. Id The unique identifier of the role definition. Description The description of the role definition. Actions An array of strings that lists the control plane actions that a role definition can perform. For example, FoundationaLLM.Agent/agents/create. NotActions An array of strings that lists the actions that are excluded from the actions listed in the Actions property. DataActions An array of strings that lists the data plane actions that a role definition can perform. For example, FoundationaLLM.Agent/agents/read. NotDataActions An array of strings that lists the data plane actions that are excluded from the actions listed in the DataActions property. AssignableScopes An array of strings that lists the scopes that the role definition can be assigned to. Actions format The string that represents an action has the following format: FoundationaLLM.{ProviderName}/{resourceType}/{action} Examples of actions include read, write, and delete. The wildcard character (*) can be used to match any resource type or action. For example, FoundationaLLM.Agent/*/read matches all read actions for all resource types in the FoundationaLLM.Agent provider. Role definition example The following example shows the Contributor role definition. The wildcard (*) character under Actions indicates that the principal assigned to the role can perform all actions (i.e., it can manage everything). This includes also actions defined in the future, as FoundationaLLM adds new resource types. The actions under NotActions are subtracted from Actions. In this specific case, NotActions removes the role's ability to manage access to resources. { \"Name\": \"Contributor\", \"Id\": \"e459c3a6-6b93-4062-85b3-fffc9fb253df\", \"Description\": \"Allows you to manage everything except access to resources.\", \"Actions\": [ \"*\" ], \"NotActions\": [ \"FoundationaLLM.Authorization/*/delete\", \"FoundationaLLM.Authorization/*/write\" ], \"DataActions\": [], \"NotDataActions\": [], \"AssignableScopes\": [ \"/\" ] } Control and data actions Control plane actions are specified in the Actions and NotActions properties. Examples of control plane actions in FoundationaLLM include: Manage access to an agent Create a new data source Delete a prompt Data plane actions are specified in the DataActions and NotDataActions properties. NOTE: FoundationaLLM maintains a strict separation between the control and data planes. Control plane access is not inherited to the data plane. For example, if a user has the FoundationaLLM.Agent/agents/create permission, it does not mean that the user has the FoundationaLLM.Agent/agents/read permission."
  },
  "role-based-access-control/role-management.html": {
    "href": "role-based-access-control/role-management.html",
    "title": "Manage role assignments | FoundationaLLM",
    "summary": "Manage role assignments FoundationaLLM roles are assigned to users, groups, service principals, and managed identities through the Management API. As described in the role definitions article, administrators can apply fine-grained access control to features and resources to ensure the deployment adheres to least-privilege best practices when properly assigned. Management API Important The authenticated user must be assigned to the User Access Administrator role (/providers/FoundationaLLM.Authorization/roleDefinitions/fb8e0fd0-f7e2-4957-89d6-19f44f7d6618) on the FoundationaLLM instance to manage role assignments and call the identity endpoints through the Management API. The Management API provides endpoints for managing role assignments and retrieving identities. The API is secured with Microsoft Entra ID and requires a valid access token to access the endpoints. The access token must be obtained by authenticating with Entra ID and acquiring the required permissions to call the Management API endpoints. Role management endpoints The Management API provides the following role management endpoints: Method Endpoint Description GET /instances/{instanceId}/providers/FoundationaLLM.Authorization/roleDefinitions Returns a list of all role definitions. POST /instances/{instanceId}/providers/FoundationaLLM.Authorization/roleAssignments/filter Returns the role assignments for a given scope. Here is a sample request payload for retrieving all RBAC role assignments for an FLLM instance: {\"scope\":\"/instances/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\"}. To retrieve the role assignments for a specific resource, set the request body to the resource's scope: {\"scope\":\"/instances/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/providers/FoundationaLLM.Agent/agents/FoundationaLLM\"} POST /instances/{instanceId}/providers/FoundationaLLM.Authorization/roleAssignments/{roleAssignmentName} Creates a new role assignment. Here is an example request payload: {\"name\":\"55555555-4444-3333-2222-111111111111\",\"description\":\"\",\"principal_id\":\"11111111-2222-3333-4444-555555555555\",\"role_definition_id\":\"/providers/FoundationaLLM.Authorization/roleDefinitions/a9f0020f-6e3a-49bf-8d1d-35fd53058edf\",\"type\":\"FoundationaLLM.Authorization/roleAssignments\",\"principal_type\":\"User\",\"scope\":\"/instances/aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee/providers/FoundationaLLM.Agent/agents/FoundationaLLM\"} DELETE /instances/{instanceId}/providers/FoundationaLLM.Authorization/roleAssignments/{roleAssignmentName} Deletes a role assignment. Identity endpoints The Management API provides the following identity endpoints: Method Endpoint Description POST /instances/{instanceId}/identity/users/retrieve Returns a list of user identities. Filter and page through the identities with the following request payload structure: {\"name\":\"\",\"ids\":[],\"page_number\":1,\"page_size\":null} POST /instances/{instanceId}/identity/groups/retrieve Returns a list of group identities. Filter and page through the identities with the following request payload structure: {\"name\":\"\",\"ids\":[],\"page_number\":1,\"page_size\":null} POST /instances/{instanceId}/identity/objects/retrievebyids Returns user and group objects by the passed in list of IDs. Here is a sample request payload: {\"ids\":[\"11111111-2222-3333-4444-555555555555\",\"66666666-7777-8888-9999-000000000000\"]} Management Portal The Management Portal provides a graphical user interface over the Management API for managing role assignments, among other FLLM configuration settings. Role assignment management Important The authenticated user must be assigned to the User Access Administrator role (/providers/FoundationaLLM.Authorization/roleDefinitions/fb8e0fd0-f7e2-4957-89d6-19f44f7d6618) on the FoundationaLLM instance to manage role assignments and call the identity endpoints through the Management Portal. All role assignment changes are audited and can be viewed in the Management Portal. Auditing ensures that all changes to role assignments are tracked and can be reviewed at a later time, which is often required for compliance purposes. The following screenshot shows the role assignment management page in the Management Portal: You can expand and contract each role assignment name to view the role assignment details. Each role assignment name has an info icon next to it that displays a description within a tooltip. The role assignment details include the role assignment name, type (user or group), and scope (instance or resource). You can sort by each of these columns. The Delete column provides an option to delete the role assignment. Please note that you cannot edit a role assignment. You must delete the role assignment and create a new one to make changes. The following screenshot shows the role assignment management form: Use the Browse button to search for users, groups, service principals, and managed identities. Selecting a user, group, service principal, or managed identity will populate the Principal Type, Principal Name, Principal Email, and Principal ID fields with the selected identity's information. Assign access control to the FoundationaLLM instance There are two levels of access control in FoundationaLLM: instance level and resource level. The instance level is the highest level of access control and applies to all resources within the instance. The resource level is a more granular level of access control and applies to specific resources within the instance. When you assign a role to a user, group, service principal, or managed identity at the instance level, the role is inherited by all resources within the instance. To assign access control to the FoundationaLLM instance, select the Instance Access Control item under the Security group within the left-hand navigation menu of the Management Portal: Assign access control to a specific resource Most resources, such as Agents, provide an option to directly assign role-based access control to the resource. The following screenshot shows an Access Control button on top of a selected agent's form with the access control dialog displayed after selecting the button: Note that the Scope column of the list of role assignments shows whether the role assignment is at the instance level or at the resource level. A value of This resource indicates a direct role assignment on the resource. When the value is Instance (inherited), the role assignment is inherited from the instance level. This is similar to how Azure RBAC works. Role assignment data store The role-based access control (RBAC) engine uses a dedicated data store to manage role assignments. Doing so ensures isolation from the rest of the FoundationaLLM data platform, which is used to store data sources, prompts, and other resources accessible to users possessing varying levels of access. The isolation also supports the ability to scale the RBAC engine independently from the rest of the FoundationaLLM data platform. The data store is implemented as a dedicated Azure Cosmos DB account or Azure Data Lake Storage Gen2 account."
  },
  "role-based-access-control/scope.html": {
    "href": "role-based-access-control/scope.html",
    "title": "Understand scope for FoundationaLLM RBAC | FoundationaLLM",
    "summary": "Understand scope for FoundationaLLM RBAC Scope is the set of resources that a role assignment can access. When assigning roles, it is importan to understand how scope works so that you grant security principals only the level of access they need. Limiting scope also limits the potential damage that can be done if a security principal is compromised. Scope levels In FoundationaLLM, you can specify a scope at the following levels: Instance: The FoundationaLLM deployment itself. Resource: A specific resource in FoundationaLLM, such as an agent. The following rules apply to scope levels: Scopes are structured as a hierarchy. For example, a resource scope is always a child of an instance scope. Each level make the scope more specific. For example, a resource scope is more specific than an instance scope. Roles can be assigned at any of these levels of scope. Lower levels inherit the permissions of higher levels. For example, a role assignment at the instance level applies to all resources in the instance. Scope format Scope is a string that identifies the exact scope of the role assignment. The scope is usually referred to as the resource identifier or resource ID. The scope consists of a series of identifiers separated by the slash (/) character. You can think of this string as expressing the following hierarchy, where text without placeholders ({}) are fixed identifiers: /instances /{instanceId} /providers /{providerName} /{resourceType} /{resourceSubType1} /{resourceSubType2} /{resourceName} {instanceId} is unique identifier of the FoundationaLLM deployment (a GUID). {providerName} is the name of the FoundationaLLM resource provider (for example, FoundationaLLM.Agent). {resourceType} and {resourceSubType*} identify levels within the resource provider. {resourceName} is the name of a specific resource. Scope examples Scope Example Instance /instances/11111111-1111-1111-1111-111111111111 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Agent/agents/agent1 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.DataSource/dataSources/datasource1 Resource /instances/11111111-1111-1111-1111-111111111111/providers/FoundationaLLM.Agent/agents/agent1/models/gpt4."
  },
  "schema.html": {
    "href": "schema.html",
    "title": "Agent Schemas | FoundationaLLM",
    "summary": "Agent Schemas This document provides a general overview of agent, data source, and vectorization configuration."
  },
  "setup-guides/agents/Agent_AccessToken.html": {
    "href": "setup-guides/agents/Agent_AccessToken.html",
    "title": "Agent Access Token | FoundationaLLM",
    "summary": "Agent Access Token To allow the flexibility of using an agent without requiring the user to be authenticated using Entra ID credentials, you can create an Agent Access Token. This is particularly useful for public applications that want to provide access to the agent without requiring users to log in with their Entra ID credentials. How to create an Agent Access Token In the Security section of the agent configuration, click on the Create Access Token button to create a new access token. In the Create Access Token dialog, enter a description for the access token and an expiration date then click on the Create Access Token button. The access token will be created and displayed in a dialog, make sure to save it or copy it for future use. Assigning permission to the new Virtual Security Group ID of the agent Copy the GUID of the new Virtual Security Group ID of the agent. At the top of the page while editing the agent, click on the Access Control. In the Access Control page, click on the Add Role Assignment for this resource button. Verify that the Scope is set to providers/FoundationaLLM.Agent/agents/{agent_name}. Choose Group as the Prinicipal Type. Paste the GUID of the new Virtual Security Group ID of the agent in the Principal ID field. Choose Reader as the Role to assign. Accessing the agent using the Agent Access Token To share an example of how to use the Agent Access Token, we will use the API collection from POSTMAN that is publicly available and part of the FoundationaLLM documentation. There are two steps required to use the agent using the Agent Access Token in POSTMAN by accessing the FoundationaLLM.Core.API collection: Under sessions, pick the POST Creates a new Chat session with Agent Access Token Under completions, expand completion and pick POST Requests a completion with Agent Access Token You have to start with the Creates a new Chat session with Agent Access Token request to create a new chat session as the request for completion requires a sessionId. Start by setting the Authorization type to No Auth On the Headers tab, set a new key X-AGENT-ACCESS-TOKEN with the value of the Access Token that you were asked to save or copy previously On the Body tab, enter a name for your chat conversation session in the name key in raw JSON format Click on the Send button to send the request and save the sessionId from the response as it will be needed in the next step. The next step is to POST to the completion endpoint to get a response from the agent utilizing the sessionId received in the previous step. 1- Set the Authorization type to No Auth 2- On the Headers tab, set a new key X-AGENT-ACCESS-TOKEN with the value of the Access Token that you were asked to save or copy previously 3- On the Body tab, enter the sessionId received in the previous POST in the sessionId key in raw JSON format 4- Click on the Send button to send the request and receive a response from the agent explaining why the sky is blue."
  },
  "setup-guides/agents/agents_workflows.html": {
    "href": "setup-guides/agents/agents_workflows.html",
    "title": "Agents and Workflows | FoundationaLLM",
    "summary": "Agents and Workflows FoundationaLLM (FLLM) agents are the core of the solution. They are responsible for providing users with a customized experience based on its configuration. Creation of a new Agent To create a new agent, you can use the Create Agent hyperlink in the Agents section of the Management Portal. The creation of a new agent consists of 5 sections: General Agent Configuration Workflow Tools Security General Section In this section, you can define the name, description and welcome message of the agent. The Welcome message is what a user will see in the Chat portal as soon as they pick that agent from the dropdown to learn about the agent and its services that it provides before starting a chat conversation. Agent Configuration Section In this section, you can define the following configurations: Chat History: This setting allows you to enable or disable the chat history feature for the agent. When enabled, the agent will remember the context of previous conversations, allowing for more personalized and relevant responses. If disabled, the agent will not retain any memory of past interactions. It also allows you to define the number of messages to be stored in the chat history. The default is 5 messages. Gatekeeper: This setting allows you to enable or disable the gatekeeper feature for the agent. When enabled, the agent will have a gatekeeper that can filter and moderate the content of conversations, ensuring that inappropriate or harmful content is not generated. If disabled, the agent will not have any content moderation capabilities. You can choose from multiple options for the content safety: Azure Content Safety Azure Content Safety Prompt Shield Lakera Guard Enkrypt Guardrails The Gatekeeper also allows you to enable the Data Protection aspect of the agent, which currently uses Microsoft Presidio to filter sensitive data in the conversations. Cost Center: This setting allows you to define a cost center for the agent. A cost center is a department or unit within an organization that is responsible for its own expenses and budget. By assigning a cost center to the agent, you can track and manage the costs associated with its operations. Expiration: This setting allows you to define an expiration date for the agent. After this date, the agent will no longer be available for use. This is useful for managing the lifecycle of agents and ensuring that they are only active when needed. Chat Portal Displays: This setting allows you to turn on or off 4 valuable capabilities in the Chat Portal. The amount of tokens used in the conversation. (Questions and Responses) The prompt used by the agent for a specific question including history and context. The option to rate the response of the agent. The ability to allow the user to upload files to the agent in the conversation. Workflow Section In this section, you can define the workflow of the agent. The workflow is a sequence of steps that the agent follows to process user requests and provide responses. You can define the following aspects of the workflow: Workflow Type: This setting allows you to choose the type of workflow for the agent. You can choose from the following options: OpenAIAssistants: Gives your agent the ability to take advantage of Code Interpreter, File Search and Function Calling. LangGraphReactAgent: Gives your agent the ability to dynamically choose a tool from a predefined toolset in LangGraph ExternalAgentWorkflow: Gives your agent the ability to use external workflows developed in Python and registered to be used by your Agent. Workflow name: This setting allows you to define the name of the workflow for the agent. The name should be descriptive and reflect the purpose of the workflow. Workflow Package Name: This setting allows you to define the name of the workflow package for the agent. The package name should be descriptive and reflect the purpose of the workflow. Workflow Host: This setting allows you to define the host of the workflow for the agent. Currently the host is required to be Langchain for all OpenAIAssistants workflows. Workflow Main Model: This setting allows you to define the main model of the workflow for the agent. The main model is the primary large language model (LLM) that the agent uses to generate responses. You can choose from any of the models deployed as part of your instance. Workflow Main Model Parameters: This setting allows you to define the parameters of the main model for the agent. The parameters are the settings that control the behavior of the model, such as temperature, max tokens, and top_p. Workflow Main Prompt: This setting allows you to define the main prompt of the workflow for the agent. The main prompt is the definition of the persona of the agent and the instructions that it follows to generate responses. Tools Section In this section, you can define the tools that the agent can use to perform tasks and provide responses. The tools are external services or APIs that the agent can call to retrieve information or perform actions. Currently, the following tools are available out of the box: DALLE3 Image Generator Important The name of the tool HAS to be DALLEImageGeneration in order for the agent to be able to use it. The AI Model's Object role has to be main_model in the Tool Resources section. Security Section In this section, you can define an Agent Access Token to be used by the agent. The Agent Access Token is a security token that is used to authenticate and authorize access to the agent's resources and services. It is a unique identifier that is generated for each agent and is used to ensure that only authorized users can access the agent's capabilities without requiring the user to be authenticated using Entra ID credentials. This is particularly useful for public applications that want to provide access to the agent without requiring users to log in with their Entra ID credentials. Access Token scenario"
  },
  "setup-guides/agents/index.html": {
    "href": "setup-guides/agents/index.html",
    "title": "Agents | FoundationaLLM",
    "summary": "Agents FoundationaLLM (FLLM) agents are the core of the solution. They are responsible for providing users with a customized experience based on its configuration. Agents and Workflows Prompts Prompts are an important aspect for agents. A prompt defines the persona, instructions and guardrails provided to the large language model (LLM) so that it formulates accurate responses in desired formats. Prompt resources Access Tokens Access tokens are used to authenticate and authorize access to agents without the need for Entra ID credentials. This is useful for scenarios where you want to provide access to an agent without requiring users to log in with their Entra ID credentials. Agent Access Token"
  },
  "setup-guides/agents/knowledge-management-agent.html": {
    "href": "setup-guides/agents/knowledge-management-agent.html",
    "title": "Knowledge management agent | FoundationaLLM",
    "summary": "Knowledge management agent The FoundationaLLM (FLLM) Knowledge Management agent type supports the following scenarios: With an Inline Context: Knowledge Management agents with an Inline Context pass the user's prompt directly to the Large Language Model (LLM). Without an Inline Context: Knowledge Management agents without an Inline Context implement the Retrieval Augmented Generation (RAG) design pattern. RAG augments the user prompt with additional context to generate a more accurate response. The RAG flow uses a retrieval model to retrieve relevant documents from a knowledge base, such as a vector store, and then uses the retrieved documents to augment the user prompt before sending it to the LLM. The creation of a Knowledge Management agent without an Inline Context requires an existing knowledge base, such as a vector store. Use the Vectorization API to create a vector store prior to the creation of the agent. Knowledge Management Agent Configuration The Knowledge Management agent configuration may reference the following resources: Vectorization text embedding profile: The text embedding profile contains the configuration of the text embedding model used to embed the user prompt and perform a vector search in the knowledge base. This must match the text embedding profile used to populate the knowledge base. Vectorization indexing profile: The indexing profile contains the configuration of the service hosting the index. Prompt: The system prompt of the agent, describing the persona of the agent. Note: The Knowledge Management agent implementation currently supports the AzureAISearchIndexer indexing profile. The structure of a Knowledge Management agent is the following: { \"type\": \"knowledge-management\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Agent/agents/<name>\", \"description\": \"<description>\", \"display_name\": \"<display_name>\", \"inline_context\": true, \"vectorization\": { \"dedicated_pipeline\": \"\", \"data_source_object_id\": \"<data_source_object_id>\", \"indexing_profile_object_id\": \"<indexing_profile_object_id>\", \"text_embedding_profile_object_id\": \"<text_embedding_profile_object_id>\", \"text_partitioning_profile_object_id\": \"<text_partitioning_profile_object_id>\", \"vectorization_data_pipeline_object_id\": \"\", \"trigger_type\": \"\", \"trigger_cron_schedule\": \"\" }, \"prompt_object_id\": \"<prompt_resource_objectid>\", \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.0, \"use_chat\": true, \"api_endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"version\": \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\", \"deployment\": \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" }, \"sessions_enabled\": true, \"conversation_history\": { \"enabled\": true, \"max_history\": 5 }, \"gatekeeper\": { \"use_system_setting\": false, \"options\": [ \"ContentSafety\", \"Presidio\" ] }, \"orchestration_settings\": { \"orchestrator\": \"LangChain\", \"endpoint_configuration\": { \"endpoint\": \"\", \"api_version\": \"\", \"api_key\": \"\", \"auth_type\": \"\", \"api_key\": \"\", \"provider\": \"\", \"operation_type\": \"chat\" }, \"model_parameters\": { \"deployment_name\": \"\" } } } where: <name> is the name of the agent. <instance_id> is the instance ID of the deployment. <description> is the description of the agent. Ensure that this description details the purpose of the agent. <display_name> controls the title of the agent in the Chat UI dropdown menu. <data_source_object_id> is the object ID of the Data Source resource. <indexing_profile_object_id> is the object ID of the indexing profile resource. <text_embedding_profile_object_id> is the object ID of the text embedding profile resource. <text_partitioning_profile_object_id> is the object ID of the text partitioning profile resource. <prompt_resource_objectid> is the object ID of the prompt resource. Parameter Description type The type of the agent - will always be knowledge-management. type must be the first key in the request body. name The name of the agent. object_id The object ID of the agent. Remove this element when creating an agent as this is generated by the Management API. description The description of the agent, ensure this description details the purpose of the agent. display_name The title of the agent in the Chat UI dropdown menu. This field is optional. inline_context Whether or not the agent has an Inline Context. vectorization The vectorization object is only required for Knowledge Management agents without an Inline Context (inline_context is false). If the vectorization object is included, the indexing_profile_object_id and text_embedding_profile_object_id keys are required. vectorization.dedicated_pipeline A boolean indicating whether or not the agent has a dedicated Vectorization pipeline (implemented in an upcoming release). vectorization.data_source_object_id The object ID of the Data Source resource. vectorization.indexing_profile_object_id The object ID of the indexing profile resource. vectorization.text_embedding_profile_object_id The object ID of the text embedding profile resource. vectorization.text_partitioning_profile_object_id The object ID of the text partitioning profile resource. vectorization.vectorization_data_pipeline_object_id The resource ID of the agent's Vectorization pipeline (implemented in an upcoming release). vectorization.trigger_type The trigger type of the agent's Vectorization pipeline (implemented in an upcoming release). Permissible values are Manual, Schedule, and Event. vectorization.trigger_cron_schedule The schedule of the trigger in Cron format (implemented in an upcoming release). This property is valid only when trigger_type is Schedule. prompt_object_id The object ID of the prompt resource. language_model The language model configuration. The language_model object has been deprecated as of release 0.6.0. language_model.type The type of the language model. Currently supporting OpenAI based langauge models. language_model.provider The provider of the language model. Currently supporting microsoft or openai. language_model.temperature The temperature value for the language model. A value between 0 and 1. Values closer to 0 return more factual information whereas values closer to 1 yield more creative responses. language_model.use_chat Determines the type of language model to use, as an example, when using Microsoft's Azure OpenAI, specifying use_chat equal to true will use the AzureChatOpenAI model vs. the AzureOpenAI model in LangChain. language_model.api_endpoint The configuration setting key that houses the API endpoint of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.api_key The configuration setting key that houses a reference to a key vault value containing the API key for the language model service. Ensure these values are populated in key vault and app configuration. language_model.api_version The configuration setting key that houses the API version of the language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.version The configuration setting key that houses the version of the language model deployment. The example above uses default FLLM values. Ensure this value is populated in application configuration. language_model.deployment The configuration setting key that houses the name given to the deployed language model. The example above uses default FLLM values. Ensure this value is populated in application configuration. sessions_enabled A boolean value that indicates whether the agent is session-less (false) or supports sessions(true). conversation_history The conversation history configuration. conversation_history.enabled Indicates if conversation history is retained for subsequent agent interactions(true). conversation_history.max_history indicates the number of messages to be retained. gatekeeper The gatekeeper configuration. gatekeeper.use_system_setting Indicates if the system settings are used for the gatekeeper. gatekeeper.options Contains the list of gatekeeper options. The sample provided overrides the system setting for gatekeeper and enables Azure Content Safety and MS Presidio in the messaging pipeline. orchestration_settings The settings for the agent orchestrator. orchestration_settings.orchestrator FoundationaLLM currently supports LangChain and SemanticKernel for both types of Knowledge Management agents; however, Knowledge Management agents with an Inline Context can also use the AzureOpenAIDirect and AzureAIDirect orchestrators. orchestration_settings.endpoint_configuration The endpoint configuration of the hosted LLM. FoundationaLLM currently supports Azure OpenAI and OpenAI. orchestration_settings.endpoint_configuration.endpoint The endpoint URL of the hosted LLM. The URL should be provided directly for the LangChain or SemanticKernel orchestrators; it should be provided as an Azure App Configuration key reference for the AzureOpenAIDirect or AzureAIDirect orchestrators. orchestration_settings.endpoint_configuration.api_version The API version of the hosted LLM. For Azure OpenAI, this value should be set to the latest GA version. The API version should be provided directly for the LangChain or SemanticKernel orchestrators; it should be provided as an Azure App Configuration key reference for the AzureOpenAIDirect or AzureAIDirect orchestrators. orchestration_settings.endpoint_configuration.auth_type The authentication method of the hosted LLM. This value can either be token or key. For Azure OpenAI deployments, this value should be token, which configures the orchestrator to use Managed Identities for authentication. key-based authentication uses API keys. orchestration_settings.endpoint_configuration.api_key The name of the Azure App Configuration key storing the LLM endpoint API key. This parameter is required if auth_type is set to key. orchestration_settings.endpoint_configuration.provider The provider of the hosted LLM. FoundationaLLM currently supports microsoft (Azure OpenAI) or openai. orchestration_settings.endpoint_configuration.operation_type This field is set to chat by default and can be omitted. orchestration_settings.model_parameters Endpoint-specific model parameters. This field must be non-null if the provider is microsoft. orchestration_settings.model_parameters.deployment_name This field should be set to the name of the Azure OpenAI model deployment if the provider is microsoft. AzureOpenAIDirect Orchestrator The AzureOpenAIDirect orchestrator passes the user's prompt to an LLM deployed in an instance of Azure OpenAI Service, bypassing LangChain or Semantic Kernel. Example Configuration: { \"orchestration_settings\": { \"orchestrator\": \"AzureOpenAIDirect\", \"endpoint_configuration\": { \"endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"auth_type\": \"key\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"operation_type\": \"chat\" }, \"model_parameters\": { \"deployment_name\": \"completions\" } } } Note: AzureOpenAIDirect is only compatible with Knowledge Management agents with an Inline Context. AzureAIDirect Orchestrator The AzureAIDirect orchestrator passes the user's prompt to an LLM deployed as an Azure AI Studio real-time endpoint. This orchestrator allows customers to use a wider range of LLMs with FLLM agents. Example Configuration: { \"orchestration_settings\": { \"orchestrator\": \"AzureAIDirect\", \"endpoint_configuration\": { \"endpoint\": \"<AZURE APP CONFIGURATION KEY>\", \"api_key\": \"<AZURE APP CONFIGURATION KEY>\" }, \"model_parameters\": { \"temperature\": 0.8, \"max_new_tokens\": 1000, \"deployment_name\": \"<AZURE AI STUDIO DEPLOYMENT NAME>\" } } } Note: AzureAIDirect is only compatible with Knowledge Management agents with an Inline Context. Managing Knowledge Management Agents This section describes how to manage knowledge management agents using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Content-Type: application/json BODY <agent_configuration> where <agent_configuration> is the JSON agent configuration structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Agent/agents/<name> Note FLLM currently implements logical deletes for Knowledge Management agents. This means that users cannot create a Knowledge Management agent with the same name as a deleted Knowledge Management agent. Support for purging Knowledge Management agents will be added in a future release. Validating a Knowledge Management Agent Once configured, the knowledge management agent can be validated using an API call to the Core API or via the User Portal. Note It can take up to 5 minutes for a new Knowledge Management agent to appear in the User Portal or be accessible for requests from the Core API. Overriding agent parameters The agent parameters can be overridden at the time of the API call. Refer to the Core API documentation for more information."
  },
  "setup-guides/agents/prompt-resource.html": {
    "href": "setup-guides/agents/prompt-resource.html",
    "title": "Prompt | FoundationaLLM",
    "summary": "Prompt The FoundationaLLM (FLLM) prompt resource encapsulates the system prompt of an agent. The system prompt describes the persona of the agent and any instructional guardrails used to generate the desired responses to user prompts. The prompt resource is used in the Knowledge Management agent configuration. Prompt configuration The structure of a prompt is the following: { \"type\": \"multipart\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.Prompt/prompts/<name>\", \"description\": \"<description>\", \"prefix\": \"<prompt_prefix>\", \"suffix\": \"<prompt_suffix>\" } where: <name> is the name of the agent. <instance_id> is the instance ID of the deployment. <description> is the description of the prompt, describing the persona of the agent. <prompt_prefix> is the beginning of the prompt. <prompt_suffix> (optional) appended to the end of the prompt (after any prefix and context). Parameter Description type The type - will be multipart. multipart prompts have a prefix and suffix. Support for basic prompts, which have no suffix, will be added in a future release. type must be the first parameter in the request body. name The name of the prompt. object_id The object ID of the prompt. Remove this key when creating a prompt, as it is automatically populated by the Management API. description The description of the prompt, ensure this description details the purpose or role of the prompt. prompt_prefix The beginning of the prompt. prompt_suffix Text appended to the ending of the prompt. Managing prompts This section describes how to manage knowledge management prompts using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name> Content-Type: application/json BODY <prompt_configuration> where <prompt_configuration> is the prompt configuration structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name> Note The delete operation is a logical delete. To purge a Prompt, call the /purge endpoint after deleting the Prompt. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Prompt/prompts/<name>/purge Content-Type: application/json BODY {}"
  },
  "setup-guides/branding/branding-app-configuration.html": {
    "href": "setup-guides/branding/branding-app-configuration.html",
    "title": "Branding Customization using the App Configurator | FoundationaLLM",
    "summary": "Branding Customization using the App Configurator The FoundationaLLM application provides a way to customize the branding of the applications. The branding customization can be done by setting any of the 21 configuration values available in the App Configuration resource in your Azure Resource Group. It can also be changed using the REST API calls pertaining to Branding. Accessing the App Configuration for branding customization In your Azure Resource Group, navigate to the App Configuration resource and select the Configuration Explorer option under Operations. You will see a list of all configuration settings for FoundationaLLM , filter the list on the word Branding and you will be able to see the 21 relevant configuration settings pertaining to Branding. The default User Interface of the FoundationaLLM is shown below The Login screen can also be customized as shown below The chat window can be customized as shown below FoundationaLLM:Branding:AccentColor Takes a hexadecimal or RGB color value to set the accent color of the chat application which is used for top header and the the token counter in the chat. FoundationaLLM:Branding:AccentTextColor Takes a hexadecimal or RGB color value to set the accent text color of the chat application which is used for top header and the the token counter in the chat. FoundationaLLM:Branding:AgentIconUrl A string value to set the Agent Icon Url which is displayed in the chat window. Important The AgentIconUrl can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the LogoUrl is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the configuration value directly. FoundationaLLM:Branding:BackgroundColor Takes a hexadecimal or RGB color value to set the background color of the chat application. FoundationaLLM:Branding:CompanyName Not is use. Reserved for future enhancements. FoundationaLLM:Branding:FavIconUrl A string value to set the FavIcon Url which is displayed in the browser tab. Important The FavIconUrl can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the FavIconUrl is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the configuration value directly. Important Any changes to the FoundationaLLM:Branding:FavIconUrl will require a restart of the CoreAPI image to take effect. FoundationaLLM:Branding:FooterText A string value to set the Footer Text value which is displayed at the bottom right of the screen. FoundationaLLM:Branding:KioskMode This is a boolean flag to indicate if the application is running in kiosk mode, if true will remove the sessions panel on the left navigation panel. Kiosk mode does not store user conversations and is meant to be used within a public kiosk setting FoundationaLLM:Branding:LogoText A string value to set the Logo Text value which is displayed only if the FoundationaLLM:Branding:LogoUrl is not set. FoundationaLLM:Branding:LogoUrl A string value to set the Logo Url which is displayed in top left header and also in the login screen. Important The LogoUrl can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the LogoUrl is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the configuration value directly. FoundationaLLM:Branding:PageTitle A string value to set the Page Title value which is displayed in the browser tab. Important Any changes to the FoundationaLLM:Branding:PageTitle will require a restart of the CoreAPI image to take effect. FoundationaLLM:Branding:PrimaryButtonBackgroundColor Takes a hexadecimal or RGB color value to set the Primary Button Background color of the chat application. It affects the Send button in the chat at the bottom right, the Close button the View Prompt screen and the login button in the login screen. FoundationaLLM:Branding:PrimaryButtonTextColor Takes a hexadecimal or RGB color value to set the Primary Button Text color of the chat application. It affects the Send button in the chat at the bottom right, the Close button the View Prompt screen and the login button in the login screen. FoundationaLLM:Branding:PrimaryColor Takes a hexadecimal or RGB color value to set the Primary color of the chat application. It affects the left navigation panel and the User Message panel in the chat. FoundationaLLM:Branding:PrimaryTextColor Takes a hexadecimal or RGB color value to set the Primary Text color of the chat application. It affects the left navigation panel and the User Message panel in the chat. FoundationaLLM:Branding:SecondaryButtonBackgroundColor Takes a hexadecimal or RGB color value to set the Secondary Button Background color of the chat application. It affects the collapsable arrow in the left navigation panel, the Sign Out bottom at the bottom and the attachment of files button in the chat window. FoundationaLLM:Branding:SecondaryButtonTextColor Takes a hexadecimal or RGB color value to set the Secondary Button Text color of the chat application. It affects the collapsable arrow in the left navigation panel, the Sign Out bottom at the bottom and the attachment of files button in the chat window. FoundationaLLM:Branding:SecondaryColor Takes a hexadecimal or RGB color value to set the Secondary color of the chat application. It affects the background color of the session identifier in the left navigations panel and the background of the entire login screen. FoundationaLLM:Branding:SecondaryTextColor Takes a hexadecimal or RGB color value to set the Secondary Text color of the chat application. It affects the background color of the session identifier in the left navigations panel. FoundationaLLM:Branding:NoAgentsMessage A string value to set the No Agents Message value which is displayed in the chat window when no agents are available. HTML allowed in this field. FoundationaLLM:Branding:DefaultAgentWelcomeMessage A string value to set the Default Agent Welcome Message value which is displayed in the chat window when the agent is connected. HTML allowed in this field."
  },
  "setup-guides/branding/branding-management-portal.html": {
    "href": "setup-guides/branding/branding-management-portal.html",
    "title": "| FoundationaLLM",
    "summary": "Company Name Not in use. Reserved for future enhancements. Fav Icon Url A string value to set the FavIcon Url which is displayed in the browser tab. Important The FavIconUrl can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the FavIconUrl is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the textbox directly.Any changes to the Fav Icon Url will require a restart of the CoreAPI image to take effect. Footer Text A string value to set the Footer Text value which is displayed at the bottom right of the screen. You can edit the text in the HTML editor as well to include special characters like ©. Kiosk Mode This is a boolean flag to indicate if the application is running in kiosk mode, if true will remove the sessions panel on the left navigation panel. Kiosk mode does not store user conversations and is meant to be used within a public kiosk setting Logo Text A string value to set the Logo Text value which is displayed only if the Logo Url is not set. Logo Url A string value to set the Logo Url which is displayed in top left header and also in the login screen. Important The Logo Url can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the Logo Url is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the textbox directly. A preview of the image will show up underneath the textbox. Page Title A string value to set the Page Title value which is displayed in the browser tab. Important Any changes to the Page Title will require a restart of the CoreAPI image to take effect. Agent Icon Url A string value to set the Agent Icon Url which is displayed in the chat window. Important The Agent Icon Url can be an SVG or PNG image placed in the Public folder of the application's source code but will require rebuilding of the docker image to reflect the changes. The preferred ways of setting the LogoUrl is to set it to a relative accessible public URL to an SVG or PNG image or include the full Base64 encoded image in the textbox directly. No Agents Message A string value to set the No Agents Message value which is displayed in the chat window when no agents are available. HTML allowed in this field. Default Agent Welcome Message A string value to set the Default Agent Welcome Message value which is displayed in the chat window when the agent is connected. HTML allowed in this field. Agents can have their own welcome message. If the selected agent does not have a configured welcome message, the Default Agent Welcome Message is displayed. It's also displayed when no agent is selected. Accent Color Takes a hexadecimal or RGB color value to set the accent color of the chat application which is used for top header and the the token counter in the chat. You can use the color picker to choose a color Accent Text Color Takes a hexadecimal or RGB color value to set the accent text color of the chat application which is used for top header and the the token counter in the chat. You can use the color picker to choose a color Background Color Takes a hexadecimal or RGB color value to set the background color of the chat application. You can use the color picker to choose a color Primary Button Background Color Takes a hexadecimal or RGB color value to set the Primary Button Background color of the chat application. It affects the Send button in the chat at the bottom right, the Close button the View Prompt screen and the login button in the login screen. You can use the color picker to choose a color Primary Button Text Color Takes a hexadecimal or RGB color value to set the Primary Button Text color of the chat application. It affects the Send button in the chat at the bottom right, the Close button the View Prompt screen and the login button in the login screen. You can use the color picker to choose a color Primary Color Takes a hexadecimal or RGB color value to set the Primary color of the chat application. It affects the left navigation panel and the User Message panel in the chat. You can use the color picker to choose a color Primary Text Color Takes a hexadecimal or RGB color value to set the Primary Text color of the chat application. It affects the left navigation panel and the User Message panel in the chat. You can use the color picker to choose a color Secondary Button Background Color Takes a hexadecimal or RGB color value to set the Secondary Button Background color of the chat application. It affects the collapsable arrow in the left navigation panel, the Sign Out bottom at the bottom and the attachment of files button in the chat window. You can use the color picker to choose a color Secondary Button Text Color Takes a hexadecimal or RGB color value to set the Secondary Button Text color of the chat application. It affects the collapsable arrow in the left navigation panel, the Sign Out bottom at the bottom and the attachment of files button in the chat window. You can use the color picker to choose a color Secondary Color Takes a hexadecimal or RGB color value to set the Secondary color of the chat application. It affects the background color of the session identifier in the left navigations panel and the background of the entire login screen. You can use the color picker to choose a color Secondary Text Color Takes a hexadecimal or RGB color value to set the Secondary Text color of the chat application. It affects the background color of the session identifier in the left navigations panel. You can use the color picker to choose a color Saving, resetting and Setting Default At the bottom of the branding page, you will find the Reset, Set Default and Save buttons. Reset: Returns any changed values to what they were before you changed them while editing the form. Set Default: This sets the branding values to the default out-of-the-box FoundationaLLM branding settings. Save: This will save the current values and apply them to the chat application. Show Contrast Information At the top of the branding page, you will find the Show Contrast Information toggle button. This will show the contrast information of the current branding settings. AA and AAA are levels of color contrast for web pages that indicate how readable the text is: AA: The minimum contrast ratio for normal text is 4.5:1, and 3:1 for large text. This level is considered a passing grade, but it might still be difficult for some users to read. AAA: The contrast ratio for normal text is 7:1, and 4.5:1 for large text. This level is considered to create the most accessible content and best user experience. Color contrast is important for legibility, especially for users with color blindness or other conditions that make it difficult to differentiate between colors. The Web Content Accessibility Guidelines (WCAG) recommend these contrast ratios to help designers create readable interfaces. While Level AAA is recommended, it's not required for all sites. The best approach is to consider your organization, the purpose of your content, and your typical users."
  },
  "setup-guides/branding/index.html": {
    "href": "setup-guides/branding/index.html",
    "title": "Branding Customization | FoundationaLLM",
    "summary": "Branding Customization The FoundationaLLM application provides three ways to customize the branding of the applications. Feel free to use whichever meets your needs. Using the App Configuration resource in your Azure Resource Group. Using the REST API calls pertaining to Branding. Using the Branding section in the FoundationaLLM Managment Portal application."
  },
  "setup-guides/exposed-apis/core-api.html": {
    "href": "setup-guides/exposed-apis/core-api.html",
    "title": "Core API | FoundationaLLM",
    "summary": "Core API The Core API serves as the entry point for user requests to FoundationaLLM's underlying engine. While clients primarily interact with the Core API through the Chat UI, the Core API exposes some convenient interfaces for developers. Sessionless Completion The sessionless completion endpoint enables users to query agents without first creating a chat session. Endpoint: [DEPLOYMENT URL]/core/orchestration/completion?api-version=1.0 Note: For AKS deployments, [DEPLOYMENT URL] is the same as the cluster FQDN, while for ACA deployments, the Core API endpoint can be found by navigating to the [DEPLOYMENT PREFIX]coreca Container App in the Azure Portal. Sample Request: { \"user_prompt\": \"What are your capabilities?\", \"settings\": { \"agent_name\": \"internal-context\", \"model_parameters\": { \"temperature\": 0.4, \"deployment_name\": \"completions\", \"top_k\": 5, \"top_p\": 0.9, \"do_sample\": true, \"max_new_tokens\": 100, \"return_full_text\": true, \"ignore_eos\": true }, \"agent_parameters\": { \"index_filter_expression\": \"search.ismatch('FoundationaLLM', 'Text')\", \"index_top_n\": 5 } } } Note The settings object provides to override various parameters at runtime, and is optional. Within settings both model_parameters and settings.agent_parameters (along with their members) are optional. If not provided, the Core API will use the default model and agent settings. model_parameters: Name Type Description temperature float Controls randomness. Lowering the temperature means that the model will produce more repetitive and deterministic responses. Increasing the temperature will result in more unexpected or creative responses. Try adjusting temperature or Top P but not both. This value should be a float between 0.0 and 1.0. deployment_name string The deployment name for the language model. top_k int The number of highest probability vocabulary tokens to keep for top-k-filtering. Default value is null, which disables top-k-filtering. top_p float The cumulative probability of parameter highest probability vocabulary tokens to keep for nucleus sampling. Top P (or Top Probabilities) is imilar to temperature, this controls randomness but uses a different method. Lowering Top P will narrow the model’s token selection to likelier tokens. Increasing Top P will let the model choose from tokens with both high and low likelihood. Try adjusting temperature or Top P but not both. do_sample bool Whether or not to use sampling; use greedy decoding otherwise. max_new_tokens int Sets a limit on the number of tokens per model response. The API supports a maximum of number of tokens (depending on the deployment) shared between the prompt (including system message, examples, message history, and user query) and the model's response. One token is roughly 4 characters for typical English text. return_full_text bool Whether or not to return the full text (prompt + response) or only the generated part (response). Default value is false. ignore_eos bool Whether to ignore the End of Sequence(EOS) token and continue generating tokens after the EOS token is generated. Defaults to False. agent_parameters: Name Type Description index_filter_expression string This value should be a string representing the search filter expression to limit documents to be searched by the index retriever index_top_n int Controls the number of search results to return from an index for prompt augmentation. Payload Headers: Header Value Details Authorization Bearer [ENTRA ID BEARER TOKEN] Valid token from Entra ID Content-Type application/json Sample Response: { \"text\": \"FoundationaLLM is a copilot platform that simplifies and streamlines building knowledge management and analytic agents over the data sources present across your enterprise. It provides integration with enterprise data sources used by agents for in-context learning, fine-grain security controls over data used by agents, and pre/post completion filters that guard against attack. The solution is scalable and load balances across multiple endpoints. It is also extensible to new data sources, new LLM orchestrators, and LLMs. You can learn more about FoundationaLLM at https://foundationallm.ai.\" } Sample Postman Request: /orchestration/completion/Requests a completion from the downstream APIs."
  },
  "setup-guides/exposed-apis/index.html": {
    "href": "setup-guides/exposed-apis/index.html",
    "title": "Exposed API Documentation | FoundationaLLM",
    "summary": "Exposed API Documentation FoundationaLLM (FLLM) exposes two convenient API interfaces that enable developers and architects to directly interact with the FLLM platform for automation and integration tasks. This approach provides an alternative to using the provided user interfaces. Core API: The Core API supports direct completion requests against FLLM's agents. Management API: The Management API abstracts FLLM's configuration, enabling programmatic setup of agents, datasources, and prompts. The Management UI implements a frontend interface on top of the Management API, simplifying common agent configuration tasks"
  },
  "setup-guides/exposed-apis/management-api.html": {
    "href": "setup-guides/exposed-apis/management-api.html",
    "title": "| FoundationaLLM",
    "summary": "Management API Think of the FoundationaLLM Core API as a read-only API. It provides a way to query the system for information about agents, users, and other resources. The Management API, on the other hand, is a read-write API. It allows you to create, update, and delete resources in the system. Management API Endpoints The Management API provides configuration and resource management endpoints that can be consumed in the following three ways: Direct REST-based calls programmatically or through some tool like Postman. Through the Management Portal user interface. Through the FoundationaLLM CLI (Coming Soon). These options eliminate the need to directly manipulate files to define agents and their related resources, enable certain users to update categories of app configurations without needing to have access to the Azure App Configuration service, and perform additional platform-related steps as needed when changing configurations without the user needing to know about them (restart services, refresh caches, etc.). Management API Features In addition to modifying/creating content and platform components, the Management API centralizes health and service monitoring. Using the Management API from Postman, you can replace the {{baseUrl}} variable with the actual URL of the Management API resource, and the {{InstanceId}} variable with the actual instance ID from your app configuration resource that was generated for you. You can \"GET\" the configuration of an agent, and \"POST\" to create a new agent or \"PUT\" to update an existing agent."
  },
  "setup-guides/exposed-apis/resource-management/resource-management.html": {
    "href": "setup-guides/exposed-apis/resource-management/resource-management.html",
    "title": "Resource Management in FoundationaLLM | FoundationaLLM",
    "summary": "Resource Management in FoundationaLLM With the introduction of the Management API, you can now manage resources in FoundationaLLM programmatically or through the Management API User Interface Portal. This includes creating, updating, and deleting resources in the system. Resource Providers The main concept of the Management API is the resource provider. A resource provider is a service that provides resources to the FoundationaLLM system. For example, the agents, prompts and datasources are provided by a resource provider. The Management API provides a way to manage these resources without the need to manually work with JSON files in storage containers and mimics the same concept and functionality of resources in the Azure Portal. Resource Provider Structure The resource-provider container in the main storage account that was deployed on your behalf in your subscription contains the following structure: Agent References This first folder FoundationaLLM.Agent contains the Agent References. The content of the _agent-references references all the locations of the JSON files that contain the agent information. The _agent-references folder contains the following structure: { \"AgentReferences\": [ { \"Name\": \"sotu-2023\", \"Filename\": \"/FoundationaLLM.Agent/sotu-2023.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu2\", \"Filename\": \"/FoundationaLLM.Agent/sotu2.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu3\", \"Filename\": \"/FoundationaLLM.Agent/sotu3.json\", \"Type\": \"knowledge-management\" }, { \"Name\": \"sotu\", \"Filename\": \"/FoundationaLLM.Agent/sotu.json\", \"Type\": \"knowledge-management\" } ] } From that starting point for the agent references, we get to point to JSON file that describes each agent available to the system. Let's start by taking a look at one odf the agents from above called sotu-2023.json { \"name\": \"sotu-2023\", \"type\": \"knowledge-management\", \"object_id\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Agent/agents/sotu-2023\", \"description\": \"Knowledge Management Agent that queries the State of the Union speech transcript\", \"indexing_profile\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/indexingprofiles/sotu-index\", \"embedding_profile\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding\", \"language_model\": { \"type\": \"openai\", \"provider\": \"microsoft\", \"temperature\": 0.0, \"use_chat\": true, \"api_endpoint\": \"FoundationaLLM:AzureOpenAI:API:Endpoint\", \"api_key\": \"FoundationaLLM:AzureOpenAI:API:Key\", \"api_version\": \"FoundationaLLM:AzureOpenAI:API:Version\", \"version\": \"FoundationaLLM:AzureOpenAI:API:Completions:ModelVersion\", \"deployment\": \"FoundationaLLM:AzureOpenAI:API:Completions:DeploymentName\" }, \"sessions_enabled\": true, \"conversation_history\": { \"enabled\": true, \"max_history\": 5 }, \"gatekeeper\": { \"use_system_setting\": false, \"options\": [ \"ContentSafety\", \"Presidio\" ] }, \"orchestrator\": \"LangChain\", \"prompt\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Prompt/prompts/sotu\" } Notice all the different keys and values that are present to identify the agent. This JSON file is usually created or modifed through the Management API UI Portal or via POST or PUT requests to the Management API using a product like POSTMAN. The type could be \"knowledge-management\" or \"analytical\" The language-model section is to identify the provider, its accuracy and endpoints to retrieve from the app configuration resource. sessions_enabled is a boolean to enable or disable the ability to start a session Vs just a one time query using an API tool like Postman. conversation_history is to enable or disable the ability to store the conversation history and the maximum number of conversations to store in case the previous session_enabled is set to true. The gatekeeper section is to enable or disable the use of the system settings for content safety and presidio. If set to false, then the options array will be used to identify the specific gatekeepers to use. The orchestrator is the name of the orchestrator to use for the agent. The orchestrator is the component that is responsible for managing the flow of the conversation and the execution of the agent's logic. It could be LangChain or Semantic Kernel and more options could be used in the future with the growth of the platform and the industry for orchestrators. The prompt is the reference to the prompt that the agent will use to start the conversation. The prompt is a resource that is used to start the conversation with the agent. It is a JSON file that contains the prompt text and the prompt settings. Prompt References The second folder FoundationaLLM.Prompt contains the Prompt References. Within that folder, we have the _prompt-references JSON file that contains the following structure: { \"PromptReferences\": [ { \"Name\": \"sotu5\", \"Filename\": \"/FoundationaLLM.Prompt/sotu5.json\" }, { \"Name\": \"sotu-test\", \"Filename\": \"/FoundationaLLM.Prompt/sotu-test.json\" }, { \"Name\": \"sotu\", \"Filename\": \"/FoundationaLLM.Prompt/sotu.json\" } ] } These references point to the JSON files that contain the prompt information. Let's take a look at one of the prompts from above called sotu5.json for an example: { \"name\": \"sotu5\", \"type\": \"prompt\", \"object_id\": \"/instances/1bc45134-6985-48b9-9466-c5f70ddaaa65/providers/FoundationaLLM.Prompt/prompts/sotu5\", \"description\": \"Prompt for the Knowledge Management Agent that queries the State of the Union speech transcript\", \"prefix\": \"You are a political science professional named Baldwin. You are responsible for answering questions regarding the February 2023 State of the Union Address.\\nAnswer only questions about the February 2023 State of the Union address. Do not make anything up. Check your answers before replying.\\nProvide concise answers that are polite and professional.\", \"suffix\": \"\" } It contains the name, type of prompt, the object_id reference, description and of course most importantly the prefix and suffix of the prompt. The prefix and suffix are the text that will be used to start and end the conversation with the agent. Data Source References A Data Source refers to the location of data that is to be leveraged by an agent. The data source could be a storage account, database, website, etc. The data source references are stored in the FoundationaLLM.DataSource folder. The references are stored in the _datasource-references JSON file that contains the following structure: { \"DataSourceReferences\": [ { \"Name\": \"datalake01\", \"Filename\": \"/FoundationaLLM.DataSource/datalake01.json\", \"Type\": \"azure-data-lake\", \"Deleted\": false }, { \"Name\": \"sharepointsite01\", \"Filename\": \"/FoundationaLLM.DataSource/sharepointsite01.json\", \"Type\": \"sharepoint-online-site\", \"Deleted\": false } ] } These references point to the JSON files that contain the prompt information. Let's take a look at one of the prompts from above called datalake01.json for an example: { \"name\": \"datalake01\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"display_name\": null, \"description\": \"Azure Data Lake data source.\", \"folders\": [ \"/vectorization-input/journals/2024\" ], \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:DataSources:datalake01:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:DataSources:datalake01:ConnectionString\", \"APIKey\": \"FoundationaLLM:DataSources:datalake01:APIKey\", \"Endpoint\": \"FoundationaLLM:DataSources:datalake01:Endpoint\" }, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } In this example, the data source is an Azure Data Lake data source. The folders array contains the paths to the folders in the data lake that contain the data to be used by the agent. The configuration_references section contains the references to the configuration settings that are used to connect to the data source. The created_on, updated_on, created_by, updated_by are the timestamps and the user that created and updated the data source. The deleted flag is used to mark the data source as deleted. Vectorization Profile References Finally the third folder FoundationaLLM.Vectorization contains the Vectorization References. Where you will find important JSON files: vectorization-indexing-profiles.json { \"DefaultResourceName\": \"AzureAISearch_Default_002\", \"Resources\": [ { \"type\": \"indexing-profile\", \"name\": \"AzureAISearch_Default_002\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/indexingprofiles/AzureAISearch_Default_002\", \"description\": null, \"deleted\": false, \"indexer\": \"AzureAISearchIndexer\", \"settings\": { \"IndexName\": \"fllm-default-002\", \"TopN\": \"3\", \"Filters\": \"\", \"EmbeddingFieldName\": \"Embedding\", \"TextFieldName\": \"Text\" }, \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } } ] } This is where we identify the name and the Indexer to use for the indexing of the content. And within the configuration_references section, we identify the AuthenticationType and Endpoint to use for the indexing. It could be indexing against the Azure AI Search or any other indexer that is available in the system and more will be supported in the future. The DefaultResourceName is the name of the default indexing profile to use in the system if none is specified. vectorization-text-embedding-profiles.json { \"DefaultResourceName\": \"AzureOpenAI_Embedding\", \"Resources\": [ { \"type\": \"text-embedding-profile\", \"name\": \"AzureOpenAI_Embedding\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding\", \"description\": null, \"deleted\": false, \"text_embedding\": \"SemanticKernelTextEmbedding\", \"settings\": {}, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey\", \"APIVersion\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType\", \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" } } ] } This is where we identify the name and the Text Embedding to use for the vectorization of the text. And within the configuration_references section, we identify the APIKey, APIVersion, AuthenticationType, DeploymentName and Endpoint to use for the text embedding. vectorization-text-partitioning-profiles.json { \"DefaultResourceName\": \"DefaultTokenTextPartition_Small\", \"Resources\": [ { \"type\": \"text-partitioning-profile\", \"name\": \"DefaultTokenTextPartition_Small\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textpartitioningprofiles/DefaultTokenTextPartition_Small\", \"display_name\": null, \"description\": null, \"text_splitter\": \"TokenTextSplitter\", \"settings\": { \"Tokenizer\": \"MicrosoftBPETokenizer\", \"TokenizerEncoder\": \"cl100k_base\", \"ChunkSizeTokens\": \"500\", \"OverlapSizeTokens\": \"50\" }, \"configuration_references\": {}, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } ] } This is where we identify the name and the Text Splitter to use for the chunking and overlapping of the text. In the settings section, we identify the tokenizer and the encoder to use for the text partitioning and the chunk size and overlap size in tokens. vectorization-pipelines.json A vectorization pipeline provides a definition for a reusable and triggerable profile that includes identifying a data source that is the source for vectorization, vectorization profiles, as well as the trigger type. { \"DefaultResourceName\": \"sdzwa\", \"Resources\": [ { \"type\": \"vectorization-pipeline\", \"name\": \"sdzwa\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationPipelines/sdzwa\", \"display_name\": null, \"description\": \"Vectorization data pipeline dedicated to the sdzwa january 2024 pdf.\", \"active\": false, \"data_source_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"text_partitioning_profile_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/Streamline\", \"text_embedding_profile_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/textembeddingprofiles/AzureOpenAI_Embedding_v2\", \"indexing_profile_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/indexingprofiles/AzureAISearch_Default_002\", \"trigger_type\": \"Event\", \"trigger_cron_schedule\": null, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } ] } Vectorization Request Resources The storage of vectorization request resources are located in the vectorization-state container following the standard organization of /requests/yyyyMMdd/yyyyMMdd-vectorizationrequestid.json where yyyyMMdd (UTC) is the date of the request and vectorizationrequestid is the unique identifier of the request. When a vectorization request is received, the request gets created and is updated once the request has been processed. An example of a completed vectorization request is: { \"id\": \"f8d940a2-77c0-4b3e-8709-e26445f9743e\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationRequests/f8d940a2-77c0-4b3e-8709-e26445f9743e\", \"Expired\": false, \"resource_filepath\": \"requests/20240419/20240419-f8d940a2-77c0-4b3e-8709-e26445f9743e.json\", \"content_identifier\": { \"data_source_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"multipart_id\": [ \"fllmaks14sa.dfs.core.windows.net\", \"vectorization-input\", \"sdzwa/journals/2024/SDZWA-Journal-January-2024.pdf\" ], \"canonical_id\": \"sdzwa/journals/2024/SDZWA-Journal-January-2024\", \"metadata\": null }, \"processing_type\": \"Asynchronous\", \"pipeline_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationPipelines/sdzwa\", \"pipeline_execution_id\": \"541ae81c-08ea-4ba0-b58c-9d904260a5a2\", \"processing_state\": \"Completed\", \"execution_start\": \"2024-04-19T03:57:33.4571856Z\", \"execution_end\": \"2024-04-19T04:00:41.8572236Z\", \"error_messages\": [], \"steps\": [ { \"id\": \"extract\", \"parameters\": {} }, { \"id\": \"partition\", \"parameters\": { \"text_partitioning_profile_name\": \"Streamline\" } }, { \"id\": \"embed\", \"parameters\": { \"text_embedding_profile_name\": \"AzureOpenAI_Embedding_v2\" } }, { \"id\": \"index\", \"parameters\": { \"indexing_profile_name\": \"AzureAISearch_Default_002\" } } ], \"completed_steps\": [ \"extract\", \"partition\", \"embed\", \"index\" ], \"remaining_steps\": [], \"current_step\": null, \"error_count\": 0, \"running_operations\": {}, \"last_successful_step_time\": \"2024-04-19T04:00:41.8554435Z\" } Valid states for the processing_state property are New, InProgress, Completed, and Failed. Any errors encountered during the processing of a request are stored in the error_messages array. Note: Triggering the vectorization process is done through the Management API by issuing a process action on the resource. See the Triggering Vectorization section for more information. Synchronous Versus Asynchronous Vectorization The vectorization process can be done in a synchronized or asynchronized manner. The synchronized manner is when the vectorization process is done in real time in memory and the results are returned immediately. The asynchronized manner is when the vectorization process is done in the background and the results are returned at a later time. The asynchronized manner is useful when the vectorization process is expected to take a long time to complete and the user does not want to wait for the results. The asynchronized manner is also useful when the vectorization process is expected to be done in batches and the user does not want to wait for the results of each batch. For example, you would use syncronized vactorization when you have one or few files that you want to vectorize and you want the results immediately. You would use asynchronized vectorization when you have hundred or thousands of files that you want to vectorize and you want the results at a later time."
  },
  "setup-guides/index.html": {
    "href": "setup-guides/index.html",
    "title": "Setup guides | FoundationaLLM",
    "summary": "Setup guides After deploying FoundationaLLM, you can customize the solution components to adapt it for your needs. Follow the Quickstart guide to get started with FoundationaLLM. Set up FLLM agents to define a persona and connect to your data sources to generate responses. Configure vectorization to enable vector search."
  },
  "setup-guides/management-ui/management-ui.html": {
    "href": "setup-guides/management-ui/management-ui.html",
    "title": "Management UI | FoundationaLLM",
    "summary": "Management UI The Management UI enables FLLM administrators to configure agents without directly calling the Management API. Creating New Agent Navigate to the Create New Agent page using the side navigation bar. Set the agent type: Knowledge Management or Analytics. FoundationaLLM currently only supports Knowledge Management agents. Set the agent Knowledge Source: Expand the dropdown arrow next to the upper left box. Select the correct Content Source Profile. Expand the dropdown arrow next to the upper right box to open the Indexing Profile dropdown. Select the correct Indexing Profile. Expand the dropdown arrow next to the lower left box. Set the Chunk size and Overlap size settings for text partitioning. Select Done. Expand the dropdown arrow next to the lower right box. Set the trigger Frequency; FoundationaLLM currently only supports Manual triggers. Configure user-agent interactions. Enable conversation history using the Yes/No Radio Button. Select Done. Configure the Gatekeeper. Then, select Done. Enable/Disable the Gatekeeper using the Radio Button Set the Content Safety platform to either None or Azure Content Safety using the dropdown menu Set the Data Protection platform to either None or Microsoft Presidio using the dropdown menu Lastly, set the System Prompt. The prompt prefixes users' requests to the agent, influencing the tone and functionality of the agent. After setting the desired agent configuration, select Create Agent at the bottom right-hand corner of the page. You will be able to edit the agent configuration after creation from the Public Agents page."
  },
  "setup-guides/quickstart.html": {
    "href": "setup-guides/quickstart.html",
    "title": "Quickstart guide | FoundationaLLM",
    "summary": "Quickstart guide After deploying FoundationaLLM, complete the following steps to get started: Configure your deployment's authentication settings. Setup your agents to define a persona and connect to your data sources to generate responses. Find your User Portal URL and log in to start using FoundationaLLM. Find your User Portal (chat UI) URL If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with chatuica. Within the Overview pane, copy the Application Url value. This is the URL for the chat application. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. When you navigate to the chat UI application, you will be prompted to log in. Find your Core API URL If you performed an Azure Container Apps (ACA) deployment, follow these steps to obtain the URL for the Core API: Within the Resource Group that was created as part of the deployment, select the Container App resource whose name ends with coreca. Within the Overview pane, copy the Application Url value. This is the URL for the Core API. If you performed an Azure Kubernetes Service (AKS) deployment, follow these steps to obtain the URL for the chat UI application: Within the Resource Group that was created as part of the deployment, select the Kubernetes Service resource. Select Properties in the left-hand menu and copy the HTTP application routing domain value. This is the URL for the chat application. Your Core API URL (for your AKS deployment) is the URL you just copied with /core appended to the end of it. For example, if your Core API URL is https://1cf699fd0d89446eabf2.eastus.aksapp.io/, then your Core API URL is https://1cf699fd0d89446eabf2.eastus.aksapp.io/core."
  },
  "setup-guides/vectorization/index.html": {
    "href": "setup-guides/vectorization/index.html",
    "title": "Vectorization | FoundationaLLM",
    "summary": "Vectorization This section describes the content vectorization concepts and how to configure vectorization in FoundationaLLM. Use the links below to learn more about configuring vectorization in FoundationaLLM: Vectorization concepts Configuring vectorization Managing vectorization profiles Triggering vectorization Monitoring and troubleshooting vectorization"
  },
  "setup-guides/vectorization/vectorization-concepts.html": {
    "href": "setup-guides/vectorization/vectorization-concepts.html",
    "title": "Vectorization Concepts | FoundationaLLM",
    "summary": "Vectorization Concepts FoundationaLLM (FLLM) provides utilities and services to support vectorizing your data in batch and on-demand modalities. Vectorization is a multi-step process, starting with loading your data, splitting (or chunking) the data as required, performing vector embeddings, and storing the vectors into a vector index so an agent can later retrieve relevant information through a vector search. In FLLM, vectorization is an idempotent operation, meaning that vectorizing the same document multiple times will result in the same vector being stored in the vector index. This is useful for re-vectorizing documents that have been updated, or for cases where only parts of the vectorization process need to be run (e.g., only the vector embeddings need to be updated). For each individual document, vectorization is performed by executing a vectorization request process action via the Management API upon receiving a valid vectorization request, either through a direct call or via a triggered vectorization pipeline. Based on the details of the vectorization request, a processing a vectorization request can be executed in one of the following modes: Synchonously - the vectorization steps start executing immediately and execute sequentially until the processing is completed or an error occurs. This type of execution is used for on-demand vectorization and is well suited for small to medium sized documents and relatively small numbers of documents at a time. Asynchronously - the vectorization steps are submitted to queues and executed by workers. This type of execution is used for batch vectorization and is well suited for large numbers of documents at a time. It is also well suited for vectorizing documents of any size. The FLLM platform components involved in vectorization are: Management API (creates vectorization requests and exposes the process action on vectorization request resources). Vectorization API (processes vectorization requests and executes synchonous vectorization pipelines). Note: The Vectorization API is used internally by the FoundationaLLM platform and is not intended to be used directly by users. Vectorization Worker(s) (execute asynchronous vectorization pipelines). A FLLM instance deploys one instance of the Vectorization API and one or more instances of the Vectorization Worker. See Configuring vectorization for more details on configuring these components. Note The initialization of both the Vectorization API and the Vectorization Worker is a time consuming process, as it involves dowloading and initializing various elements (e.g., Byte-Pair encoding dictionaries). As a result, after restarting the API, it might take up to a minute until it becomes ready to accept vectorization requests. It is recommended to either use the status endpoint of the Vectorization API to determine when it is ready to accept requests, or to wait for a minute after restarting the API before sending vectorization requests. Vectorization Pipelines Vectorization pipelines are aggregations of multiple vectorization requests, for example, a vectorization pipeline may be defined to vectorize all documents in a specific data source, such as an ADLS Gen2 container. Vectorization pipelines can be triggered in one of the following ways: None (no triggering of vectorization pipelines). Manual (vectorization pipelines are triggered manually by calling the Vectorization API). The typical use cases for on-demand vectorization (either synchronous or asynchronous) are testing, manual vectorization (or re-vectorization), and application integration (where another platform component triggers vectorization). Content-based (vectorization pipelines are triggered automatically when either new content is added to a content source or existing content is updated). Schedule-based (vectorization pipelines are triggered automatically based on a schedule). Note Content-based and schedule-based triggering are currently in pre-release and are not yet available in public releases of FLLM. When working with vectorization in FLLM, the typical steps you have to perform are: Ensure that the Management API, Vectorization API and Vectorization Worker are configured and running. This is a one-time operation. For more details, see Configuring vectorization. Create vectorization profiles. You can either reuse existing profiles or create new ones. For more details, see Managing vectorization profiles. Submit vectorization requests to the Management API. For more details, see Triggering vectorization."
  },
  "setup-guides/vectorization/vectorization-configuration.html": {
    "href": "setup-guides/vectorization/vectorization-configuration.html",
    "title": "Configuring vectorization | FoundationaLLM",
    "summary": "Configuring vectorization This section provides details on how to configure the vectorization API and workers in FoundationaLLM. Note These configurations should already be in place if you deployed FoundationaLLM (FLLM) using the recommended deployment scripts. The details presented here are provided for cases in which you need to troubleshoot or customize the configuration. Configuration for Vectorization API The following table describes the Azure artifacts required for the vectorization pipelines. Artifact name Description vectorization-input Azure storage container used by default to store documents to be picked up by the vectorization pipeline. Must be created on a Data Lake storage account (with the hierarchical namespace enabled). The following table describes the environment variables required for the vectorization pipelines. Environment variable Description FoundationaLLM_AppConfig_ConnectionString Connection string to the Azure App Configuration instance. The following table describes the required configuration parameters for the vectorization pipelines. App Configuration Key Default Value Description FoundationaLLM:APIs:VectorizationAPI:APIUrl The URL of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:APIKey Key Vault secret name: foundationallm-apis-vectorizationapi-apikey The API key of the vectorization API. FoundationaLLM:APIs:VectorizationAPI:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization API. Note Refer to the App Configuration values page for more information on how to set these and other configuration values. Configuration for Vectorization workers The following table describes the Azure artifacts required for the vectorization pipelines. Artifact Name Description embed Azure storage queue used for the embed vectorization pipeline. Can be created on the storage account used for the other queues. extract Azure storage queue used for the extract vectorization pipeline. Can be created on the storage account used for the other queues. index Azure storage queue used for the index vectorization pipeline. Can be created on the storage account used for the other queues. partition Azure storage queue used for the partition vectorization pipeline. Can be created on the storage account used for the other queues. vectorization-state Azure storage container used for the vectorization state service. Can be created on the storage account used for the other queues. resource-provider Azure storage container used for the internal states of the FoundationaLLM resource providers. resource-provider/FoundationaLLM.Vectorization/vectorization-pipelines.json Azure storage blob used for the vectorization pipeline resources managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization pipelines. resource-provider/FoundationaLLM.Vectorization/vectorization-text-partitioning-profiles.json Azure storage blob used for the text partitioning profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization text partitioning profiles. resource-provider/FoundationaLLM.Vectorization/vectorization-text-embedding-profiles.json Azure storage blob used for the text embedding profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization text embedding profiles. resource-provider/FoundationaLLM.Vectorization/vectorization-indexing-profiles.json Azure storage blob used for the indexing profiles managed by the FoundationaLLM.Vectorization resource provider. For more details, see vectorization indexing profiles. resource-provider/FoundationaLLM.DataSources Azure storage directory where the data sources managed by the FoundationaLLM.DataSources resource provider are stored. vectorization-state/requests/{requestid-yyyyMMdd}.json Azure storage directory where vectorization requests managed by the vectorization state service are stored. vectorization-state/execution-state/{canonical_id} Azure storage directory where the execution state of the vectorization requests and their resulting artifacts are stored. The canonical_id is defined in the vectorization request. vectorization-state/pipeline-state/{pipeline_name}/{pipeline_name}-{execution_id}.json Azure storage directory where the state of the vectorization pipeline execution is stored. The pipeline_name is the name of the vectorization pipeline and the execution_id is the unique identifier of the execution. The following table describes the environment variables required for the vectorization pipelines. Environment variable Description FoundationaLLM_AppConfig_ConnectionString Connection string to the Azure App Configuration instance. The following table describes the required App Configuration parameters for the vectorization pipelines. App Configuration Key Default Value Description FoundationaLLM:APIs:VectorizationWorker:APIUrl The URL of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:APIKey Key Vault secret name: foundationallm-apis-vectorizationworker-apikey The API key of the vectorization worker API. FoundationaLLM:APIs:VectorizationWorker:AppInsightsConnectionString Key Vault secret name: foundationallm-app-insights-connection-string The connection string to the Application Insights instance used by the vectorization worker API. FoundationaLLM:Vectorization:VectorizationWorker The settings used by each instance of the vectorization worker service. For more details, see default vectorization worker settings. FoundationaLLM:Vectorization:Queues:Embed:AccountName The account name of the Azure Storage account used for the embed vectorization queue. FoundationaLLM:Vectorization:Queues:Extract:AccountName The account name of the Azure Storage account used for the extract vectorization queue. FoundationaLLM:Vectorization:Queues:Index:AccountName The account name of the Azure Storage account used for the index vectorization queue. FoundationaLLM:Vectorization:Queues:Partition:AccountName The account name of the Azure Storage account used for the partition vectorization queue. FoundationaLLM:Vectorization:StateService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:ResourceProviderService:Storage:AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey Key Vault secret name: foundationallm-vectorization-semantickerneltextembedding-openai-apikey The API key used to connect to the Azure OpenAI service. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName The name of the Azure OpenAI model deployment. The default value is embeddings. FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint The endpoint of the Azure OpenAI service. FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey Key Vault secret name: foundationallm-vectorization-azureaisearch-apikey The API key used to connect to the Azure OpenAI service. FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint The endpoint of the Azure OpenAI service. Note Refer to the App Configuration values page for more information on how to set these and other configuration values. The following table describes the external content used by the vectorization worker to initialize: Uri Description https://openaipublic.blob.core.windows.net/encodings/cl100k_base.tiktoken The public Azure Blob Storage account used to download the OpenAI BPE ranking files. Note The vectorization worker must be able to open HTTPS connections to the external content listed above. Default vectorization worker settings The default settings for the vectorization worker are stored in the FoundationaLLM:Vectorization:VectorizationWorker App Configuration key. The default structure for this key is: { \"RequestManagers\": [ { \"RequestSourceName\": \"extract\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"partition\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"embed\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 }, { \"RequestSourceName\": \"index\", \"MaxHandlerInstances\": 1, \"QueueProcessingPace\": 5, \"QueuePollingInterval\": 60, \"QueueMaxNumberOfRetries\": 5 } ], \"RequestSources\": [ { \"Name\": \"extract\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"partition\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"embed\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 }, { \"Name\": \"index\", \"AccountName\": \"{{accountName}}\", \"VisibilityTimeoutSeconds\": 600 } ], \"QueuingEngine\": \"AzureStorageQueue\" } The following table provides details about the configuration parameters: Parameter Description RequestManagers The list of request managers used by the vectorization worker. Each request manager is responsible for managing the execution of vectorization pipelines for a specific vectorization step. The configuration must include all request managers. RequestManagers.MaxHandlerInstances The maximum number of request handlers that process requests for the specified request source. By default, the value is 1. You can change the value to increase the processing capacity of each vectorization worker instance. The value applies to all istances of the vectorization worker. NOTE: It is important to align the value of this setting with the level of compute and memory resources allocated to the individual vectorization worker instances. RequestManagers.QueueProcessingPace Optional The delay in seconds to wait between requests after a request has been processed. The default value is 5. RequestManagers.QueuePollingInterval Optional The polling interval in seconds, this is the amount of time to wait if the previous check on the queue had no items. The default value is 60. RequestManagers.QueueMaxNumberOfRetries Optional The maximum number of retries to attempt to process a request before being removed from the queue. The default value is 5. RequestSources The list of request sources used by the vectorization worker. Each request source is responsible for managing the requests for a specific vectorization step. The configuration must include all request sources. RequestSources.Name The name of the request source. The name must match the name of the request manager. RequestSources.AccountName The name of the configuration key for the Azure Storage account used for the queue (include the tokens after FoundationaLLM:Vectorization:Queues:). RequestSources.VisibilityTimeoutSeconds In the case of queue-based request sources (the default for the vectorization worker), specifies the time in seconds until a dequeued vectorization step request must be executed. During this timeout, the message will not be visible to other handler instances within the same worker or from other worker instances. If the handler fails to process the vectorization step request successfully and remove it from the queue within the specified timeout, the message will become visibile again. The default value is 600 seconds and should not be changed."
  },
  "setup-guides/vectorization/vectorization-monitoring-troubleshooting.html": {
    "href": "setup-guides/vectorization/vectorization-monitoring-troubleshooting.html",
    "title": "Monitoring and troubleshooting vectorization | FoundationaLLM",
    "summary": "Monitoring and troubleshooting vectorization The typical steps you have to perform when monitoring and troubleshooting vectorization in FoundationaLLM (FLLM) are: Check the configuration of the Vectorization API and Vectorization Worker. For more details, see Configuring vectorization. Check the working condition of the Management API, Vectorization API and Vectorization Worker(s). Ensure the services have started and initialized successfully. Check the status endpoints for the Core API, Vectorization API and the Management API. You can do this by submitting a HTTP GET request to the /status endpoint of these APIs and validate that you get a HTTP 200 OK response with body like <api_name> - ready. Check the logs of the Management Vectorization API and Vectorization Worker(s) for errors. By default, the logs are written to the Azure App Insights Log Analytics Workspace deployed by FLLM. Check the definitions of the vectorization profiles used in the vectorization requests. For more details, see Managing vectorization profiles. Ensure all the required app configuration elements are present and have the correct values. Check the state of the vectorization requests. By default, the vectorization requests are stored in the vectorization-state container of the Azure Storage account deployed by FLLM. State and logging of vectorization requests All state and logging of vectorization requests are stored in the vectorization-state container of the Azure Storage account deployed by FLLM. Vectorization request resource files Each vectorization request resource is stored in the vectorization-state/requests folder. The request resources are created and managed through the Management API. The naming convention is: vectorization-state/requests/<request_id>-<yyyMMdd>.json. The resource file is updated as the vectorization request progresses through the processing. The resource file contains the following fields that can assist in troubleshooting: Field Description id The unique identifier of the vectorization request. When looking up the subsequent execution state, this is the identifier that is used in the file name. content-identifier.canonical_id The canonical id of the vectorization request. This is the path within the execution-state folder where additional logs and associated vectorization artifacts are stored. processing-state The current state of the vectorization request, values can be New, InProgress, Completed, Failed error_messages A high level list of error messages encountered during processing. current_step The step currently being executed, or the step in which a failure occurred. pipeline_object_id When created through a vectorization pipeline, this field contains the object id of the pipeline. pipeline_execution_id When process is initiated through a vectorization pipeline, this field contains the unique identifier of the pipeline execution. Vectorization execution state files The execution state of a vectorization request is stored in the vectorization-state/execution-state folder. The naming convention is: vectorization-state/execution-state/<canonical_id>/<file_name>_state_<request_id>.json. The execution state file provide verbose details about the request that is updated as the vectorization request is processed. This file records generated assets and logs. Error messages can be found in the log field. Vectorization pipeline state files The state of the vectorization pipeline is stored in the vectorization-state/pipeline-state folder. The naming convention is: vectorization-state/pipeline-state/<pipeline_name>/<pipeline_name>-<pipeline_execution_id>.json. The pipeline state records associated vectorization requests that are processed together in a single pipeline in the vectorization_requests field. The overall pipeline state is calculated based on the states of the collection of vectorization requests, this state is calculated by the following table in order: Condition Pipeline state At least one request is InProgress InProgress All requests are Completed Completed At least one request is Failed Failed All requests are New or there are no requests being tracked. New You can use the Management API with the object id of the request to retrieve the vectorization request resource that contains a high level overview of any errors that have occurred. If more detailed information is required, then reviewing the execution state file is recommended."
  },
  "setup-guides/vectorization/vectorization-profiles.html": {
    "href": "setup-guides/vectorization/vectorization-profiles.html",
    "title": "Managing vectorization profiles | FoundationaLLM",
    "summary": "Managing vectorization profiles The FoundationaLLM (FLLM) vectorization pipelines require the following types of profiles: Data Sources Text partitioning profiles Text embedding profiles Indexing profiles Data Sources Data sources are managed with the FoundationaLLM.DataSource resource provider through the Management API. The structure of a data source profile is the following: { \"type\": \"<data_source_type>\", \"name\": \"<name>\", \"object_id\": \"/instances/<instance_id>/providers/FoundationaLLM.DataSource/dataSources/<name>\", \"display_name\": null, \"description\": \"<description>\", \"<settings>\": [ \"<value>\" ], \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:DataSources:datalake01:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:DataSources:datalake01:ConnectionString\" }, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } where: <data_source_type> is the type of the data source. The supported types are AzureDataLake, SharePointOnline, WebSite and AzureSQLDatabase. <name> is the name of the data source. <instance_id> is the unique identifier of the FLLM instance. <description> is the description of the Data Source. <settings> is a JSON object containing the data source settings, the name of the property varies by data source type. <configuration_references> is a JSON object containing the profile configuration references. The content of this object also varies by data source type. The reminder of this section describes the configuration parameters for each of the supported Data Source types. AzureDataLake \"folders\": [ \"/vectorization-input/sdzwa/journals/2024\" ], \"configuration_references\": { \"AuthenticationType\": \"FoundationaLLM:DataSources:datalake01:AuthenticationType\", \"ConnectionString\": \"FoundationaLLM:DataSources:datalake01:ConnectionString\", \"APIKey\": \"FoundationaLLM:DataSources:datalake01:APIKey\", \"Endpoint\": \"FoundationaLLM:DataSources:datalake01:Endpoint\" }, The configuration parameters for AzureDataLake are the following: Parameter Description folders The list of folders in the Azure Data Lake storage account that contain the data to be vectorized. configuration_references.AuthenticationType The authentication type used to connect to the underlying storage. Can be one of AzureIdentity, AccountKey, or ConnectionString. configuration_references.ConnectionString The connection string to the Azure Storage account used for the the Azure Data Lake vectorization Data Source. SharePointOnline \"site_url\": \"https://solliance.sharepoint.com/sites/foundationallm01\", \"document_libraries\": [ \"/documents01\" ], \"configuration_references\": { \"ClientId\": \"FoundationaLLM:DataSources:sharepointsite01:ClientId\", \"TenantId\": \"FoundationaLLM:DataSources:sharepointsite01:TenantId\", \"CertificateName\": \"FoundationaLLM:DataSources:sharepointsite01:CertificateName\", \"KeyVaultURL\": \"FoundationaLLM:DataSources:sharepointsite01:KeyVaultURL\" }, The configuration parameters for SharePointOnline are the following: Parameter Description site_url The URL of the SharePoint Online site collection. document_libraries The list of document libraries in the SharePoint Online site collection that contain the data to be vectorized. configuration_references.CertificateName The name of the X.509 Certificate. The certificate must be valid and be uploaded into an Azure Key Vault certificate store. configuration_references.KeyVaultURL The URL of the KeyVault where the X.509 Certificate is stored. configuration_references.ClientId The Application (client) Id of the Microsoft Entra ID App Registration. See Entra ID app registration for SharePoint Online Data Source. configuration_references.TenantId The unique identifier of the SharePoint Online tenant. AzureSQLDatabase \"tables\": [ \"Table1\" ], \"configuration_references\": { \"ConnectionString\": \"FoundationaLLM:DataSources:sqldatabase01:ConnectionString\", \"AuthenticationType\": \"FoundationaLLM:DataSources:sqldatabase01:AuthenticationType\" }, The configuration parameters for AzureSQLDatabase are the following: Parameter Description tables The list of tables in the Azure SQL database that contain the data to be vectorized. configuration_references.ConnectionString The connection string to the Azure SQL database used for the Azure SQL Database vectorization Data Source. configuration_references.AuthenticationType The authentication type used to connect to the Azure SQL database. Can be one of AzureIdentity or ConnectionString. Managing Data Sources This section describes how to manage Data Sources using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/<name> Content-Type: application/json BODY <data source> where <data source> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/<name> Note The delete operation is a logical delete. To purge a Data Source, call the /purge endpoint after deleting the Data Source. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/<name>/purge Content-Type: application/json BODY {} Check Name HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.DataSource/dataSources/checkname Content-Type: application/json BODY { \"name\": \"<name>\" } Text partitioning profiles The structure of a text partitioning profile is the following: { \"type\": \"text-partitioning-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name>\", \"description\": \"<description>\", \"deleted\": false, \"text_splitter\": \"<text_splitter>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>} } where: <name> is the name of the text partitioning profile. <description> is the description of the text partitioning profile. <text_splitter> is the type of the text splitter. The supported types are TextTokenSplitter. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported text splitters. TextTokenSplitter \"settings\" : { \"Tokenizer\": \"MicrosoftBPETokenizer\", \"TokenizerEncoder\": \"cl100k_base\", \"ChunkSizeTokens\": \"2000\", \"OverlapSizeTokens\": \"200\" }, \"configuration_references\": {} The configuration parameters for TokenTextSplitter are the following: Parameter Description settings.Tokenizer The tokenizer used to split the text into tokens. Currently, the only supported tokenizer is MicrosoftBPETokenizer. Under the hood, it uses the .NET equivalent of OpenAI's tiktoken. settings.TokenizerEncoder The encoder used by the tokenizer. Currently, the only supported encoder is cl100k_base. This encoder is the one currently used by Azure OpenAI (and OpenAI) in gpt-3.5-turbo and gpt-4. settings.ChunkSizeTokens The maximum number of tokens in each text chunk. settings.OverlapSizeTokens The maximum number of tokens that overlap between two consecutive chunks. Managing text partitioning profiles This section describes how to manage text partitioning profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name> Content-Type: application/json BODY <text partitioning profile> where <text partitioning profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name> Note The delete operation is a logical delete. To purge a Text Partitioning Profile, call the /purge endpoint after deleting the Text Partitioning Profile. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textPartitioningProfiles/<name>/purge Content-Type: application/json BODY {} Text embedding profiles The structure of a text embedding profile is the following: { \"type\": \"text-embedding-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name>\", \"display_name\": null, \"description\": \"<description>\", \"text_embedding\": \"<text_embedding>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>}, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } where: <name> is the name of the text embedding profile. <description> is the description of the text embedding profile. <text_embedding> is the type of the text embedder. The supported types are SemanticKernelTextEmbedding and GatewayTextEmbedding. SemanticKernelTextEmbedding supports synchronous and asynchronous vectorization, while GatewayTextEmbedding only supports asynchronous vectorization. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported text embedders. SemanticKernelTextEmbedding \"settings\": {}, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIKey\", \"APIVersion\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:APIVersion\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:AuthenticationType\", \"DeploymentName\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:DeploymentName\", \"Endpoint\": \"FoundationaLLM:Vectorization:SemanticKernelTextEmbeddingService:Endpoint\" } The configuration parameters for SemanticKernelTextEmbedding are the following: Parameter Description configuration_references.APIKey The API key used to connect to the Azure OpenAI service. By default, this maps to the Azure OpenAI service deployed by FLLM. configuration_references.APIVersion The API version used to connect to the Azure OpenAI service. By default, this value is 2023-05-15. configuration_references.AuthenticationType The authentication type used to connect to the Azure OpenAI service. Can be one of AzureIdentity or APIKey. By default, it is set to APIKey. configuration_references.DeploymentName The name of the Azure OpenAI model deployment. The default value is embeddings. configuration_references.Endpoint The endpoint of the Azure OpenAI service. By default, this maps to the Azure OpenAI service deployed by FLLM. GatewayTextEmbedding \"settings\": { \"model_name\": \"embeddings\" }, \"configuration_references\": {} The settings for GatewayTextEmbedding are the following: Parameter Description settings.model_name The name of the embeddings model deployment in Azure OpenAI Service. Managing text embedding profiles This section describes how to manage text embedding profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name> Content-Type: application/json BODY <text embedding profile> where <text embedding profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name> Note The delete operation is a logical delete. To purge a Text Embedding Profile, call the /purge endpoint after deleting the Text Embedding Profile. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/textEmbeddingProfiles/<name>/purge Content-Type: application/json BODY {} Indexing profiles The structure of an indexing profile is the following: { \"type\": \"indexing-profile\", \"name\": \"<name>\", \"object_id\": \"/instances/[INSTANCE ID]/providers/FoundationaLLM.Vectorization/indexingProfiles/<name>\", \"display_name\": null, \"description\": \"<description>\", \"deleted\": false, \"indexer\": \"<indexer>\", \"settings\": {<profile_settings>}, \"configuration_references\": {<profile_configuration_references>}, \"created_on\": \"0001-01-01T00:00:00+00:00\", \"updated_on\": \"0001-01-01T00:00:00+00:00\", \"created_by\": null, \"updated_by\": null, \"deleted\": false } where: <name> is the name of the indexing profile. <description> is the description of the indexing profile. <indexer> is the type of the indexer. The supported types are AzureAISearchIndexer. <profile_settings> is a JSON object containing the profile settings. <profile_configuration_references> is a JSON object containing the profile configuration references. The reminder of this section describes the configuration parameters for each of the supported indexers. AzureAISearchIndexer \"settings\": { \"IndexName\": \"fllm-default-001\", \"TopN\": \"3\", \"Filters\": \"\", \"EmbeddingFieldName\": \"Embedding\", \"TextFieldName\": \"Text\" }, \"configuration_references\": { \"APIKey\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:APIKey\", \"AuthenticationType\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:AuthenticationType\", \"Endpoint\": \"FoundationaLLM:Vectorization:AzureAISearchIndexingService:Endpoint\" } The configuration parameters for AzureAISearchIndexer are the following: Parameter Description settings.IndexName The name of the Azure AI Search index. If the index does not exist, it will be created. settings.TopN The number of embeddings closest to the index query to return. settings.Filters Optional filters to further refine the index search. settings.EmbeddingFieldName Field name of the embedding vector in the JSON documents returned by Azure AI Search. settings.TextFieldName Field name of the text equivalent of the embedding vector in the JSON documents returned by Azure AI Search. configuration_references.APIKey The API key used to connect to the Azure AI Search service. By default, this maps to the Azure AI Search service deployed by FLLM. ConfigurationReference.AuthenticationType The authentication type used to connect to the Azure AI Search service. Can be one of AzureIdentity or APIKey. By default, it is set to APIKey. configuration_references.Endpoint The endpoint of the Azure AI Search service. By default, this maps to the Azure AI Search service deployed by FLLM. Managing indexing profiles This section describes how to manage indexing profiles using the Management API. {{baseUrl}} is the base URL of the Management API. {{instanceId}} is the unique identifier of the FLLM instance. Retrieve HTTP GET {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles Create or update HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/<name> Content-Type: application/json BODY <indexing profile> where <indexing profile> is a JSON object with the structure described above. Delete HTTP DELETE {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/<name> Note The delete operation is a logical delete. To purge an Indexing Profile, call the /purge endpoint after deleting the Indexing Profile. Purge HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/<name>/purge Content-Type: application/json BODY {} Check Name HTTP POST {{baseUrl}}/instances/{{instanceId}}/providers/FoundationaLLM.Vectorization/indexingProfiles/checkname Content-Type: application/json BODY { \"name\": \"<name>\" } Additional configuration steps Entra ID app registration for SharePoint Online Data Source Apps typically access SharePoint Online through certificates: Anyone having the certificate and its private key can use the app with the permissions granted to it. Create a new App registration in your Microsoft Entra ID tenant. Next, provide a Name for your application and click on Register at the bottom of the blade. Navigate to the API Permissions blade and click on Add a permission button Here you choose the permissions that you will grant to this application. Select SharePoint from the Microsoft APIs tab, then select Application permissions as the type of permissions required, choose the desired permissions (i.e. Sites.Read.All) and click on Add permissions. Here are the required scopes: Group.ReadWrite.All User.ReadWrite.All Sites.Read.All OR Sites.Selected Sites.Read.All will allow the application to read documents and list items in all site collections. Sites.Selected will allow the application to access only a subset of site collections. The specific site collections and the permissions granted will be configured separately, in SharePoint Online. The application permission requires admin consent in a tenant before it can be used. In order to do this, click on API permissions in the left menu again. At the bottom you will see a section Grant consent. Click on the Grant admin consent for {{organization}} button and confirm the action by clicking on the Yes button that appears at the top. To invoke SharePoint Online with an app-only access token, you have to create and configure a self-signed X.509 certificate, which will be used to authenticate your application against Microsoft Entra ID. You can find additional details on how to do this in this document. Next step is to register the certificate you created to this application. Click on Certificates & secrets blade. Next, click on the Upload certificate button, select the .CER file you generated earlier and click on Add to upload it. To confirm that the certificate was successfully registered, click on Manifest blade and search for the keyCredentials property, which contains your certificate details. It should look like this: \"keyCredentials\": [ { \"customKeyIdentifier\": \"<$base64CertHash>\", \"endDate\": \"yyyy-MM-ddThh:mm:ssZ\", \"keyId\": \"<$guid>\", \"startDate\": \"yyyy-MM-ddThh:mm:ssZ\", \"type\": \"AsymmetricX509Cert\", \"usage\": \"Verify\", \"value\": \"<$base64Cert>\", \"displayName\": \"CN=<$name of your cert>\" } ] Upload and store the certificate in the KeyVault where the FoundationaLLM Vectorization API has permissions to read Secrets. You will need the Certificate Name for the App Configuration settings listed in the table above. NOTE Can I use other means besides certificates for realizing app-only access for my Azure AD app? NO, all other options are blocked by SharePoint Online and will result in an Access Denied message. Create a new Data Source using the Management API. Ensure that you set the necessary App Configuration settings appropriately."
  },
  "setup-guides/vectorization/vectorization-triggering.html": {
    "href": "setup-guides/vectorization/vectorization-triggering.html",
    "title": "Triggering vectorization | FoundationaLLM",
    "summary": "Triggering vectorization Vectorization pipelines are started when the Management API receives a processvectorization request. The following types of triggers are supported: None (no triggering of vectorization pipelines). Manual (vectorization pipelines are triggered manually by calling the Vectorization API). The typical use cases for on-demand vectorization (either synchronous or asynchronous) are testing, manual vectorization (or re-vectorization), and application integration (where another platform component triggers vectorization). Content-based (vectorization pipelines are triggered automatically when either new content is added to a content source or existing content is updated). Schedule-based (vectorization pipelines are triggered automatically based on a schedule). Note Content-based and schedule-based triggering are currently in pre-release and are not yet available in public releases of FLLM. Vectorization requests The typical structure of a vectorization request is the following { \"id\": \"fc4a2499-4771-4a2d-9ba0-3874c3d4586c\", \"object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationRequests/fc4a2499-4771-4a2d-9ba0-3874c3d4586c\", \"content_identifier\": { \"data_source_object_id\": \"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.DataSource/dataSources/datalake01\", \"multipart_id\": [ \"abcdefg.dfs.core.windows.net\", \"vectorization-input\", \"/journals/2024/Journal-January-2024.pdf\" ], \"canonical_id\": \"/journals/Journal-January-2024\", \"metadata\": null }, \"processing_type\": \"Synchronous\", \"steps\": [ { \"id\": \"extract\", \"parameters\": {} }, { \"id\": \"partition\", \"parameters\": { \"text_partitioning_profile_name\": \"DefaultTokenTextPartition_Small\" } }, { \"id\": \"embed\", \"parameters\": { \"text_embedding_profile_name\": \"AzureOpenAI_Embedding\" } }, { \"id\": \"index\", \"parameters\": { \"indexing_profile_name\": \"AzureAISearch_CPTEST\" } } ], \"completed_steps\": [ ], \"remaining_steps\": [ \"extract\", \"partition\", \"embed\", \"index\" ] } The following table describes the properties of a vectorization request. Property Description id The unique identifier of the vectorization request. The system issuing the request is responsible for generating this value. object_id The object ID of the vectorization request. This can be empty when creating the request. content_identifier The content identifier of the content to be vectorized. content_identifier.data_source_object_id The object id of the data source resource indicating the location of the data to be vectorized. content_identifier.multipart_id The multipart ID of the content to be vectorized. The multipart ID is a list of strings that uniquely identifies the content. The multipart ID is specific to the content source profile. content_identifier.canonical_id The canonical ID of the content to be vectorized. The canonical ID is a string that uniquely identifies the content in a logical namespace. The caller is responsible for the generation of this identifier. The identifier should have a path form (using the / separator). The last part of the path should always be equal to the file name (without its extension). processing_type The type of processing to be performed. The following values are supported: Synchronous and Asynchronous. See Vectorization concepts for more details. steps The vectorization steps to be executed. Most vectorization requests will contain the full set of standard steps: extract, partition, embed, and index. Each step (except for the extract one) will contain one parameter specifying the name of the associated vectorization profile name. completed_steps The list of steps that have been completed. This array needs to be empty when creating a vectorization request. remaining_steps The list of steps that are yet to be executed. This array can't be empty when creating a vectorization request, at least one step is needed. The meaning of the multipart strings depends on the specific type of the data source. The following table describes the meaning of the multipart strings for the AzureDataLake content source. Position Description 1 The URL of the Azure Data Lake storage account. When providing this value, you can use the known neutral URLs naming conventions. 2 The name of the container. 3 The path of the file relative to the container. The following table describes the meaning of the multipart strings for the SharePointOnline content source. Position Description 1 The URL of the SharePoint Online tenant. When providing this value, you can use the known neutral URLs naming conventions. 2 The path of the site/subsite relative to the tenant URL. 3 The folder path, starting with the document library name. 4 The name of the file. The following table describes the meaning of the multipart strings for the AzureSQLDatabase content source. Position Description 1 The name of the database schema. 2 The name of the table. 3 The name of the column that stores file content. 4 The name of the column that stores file row identifier. 5 The value of the row identifier. 5 The file name. The following table describes the meaning of the multipart strings for the WebSite content source. Position Description 1 The protocol, either http or https. 2 The web URL without the protocol. 3 CSS classes to filter by, space delimited. Known neutral URLs Depending on the specific configuration of various layers of security, vectorization request might end up being filtered out by infrastructure components like firewalls or proxies. To avoid this, the Vectorization API supports the use of known neutral URLs. Known neutral URLs are URLs that have a neutral form that is not subject to filtering. The platform currently supports two conventions for specifing known neutral URLs: Simple: xyz.blob.core.windows.net - this will be translated into https://xyz.blob.core.windows.net by the platform. Complex: FLLM:xyz#blob#core#windows#net - this will be translated into https://xyz.blob.core.windows.net by the platform. Depending on the specific configuration of the infrastructure, one of the two conventions might be more suitable than the other. Note To avoid bypassing security measures, the use of known neutral URLs is currently restricted to the following domains: onelake.dfs.fabric.microsoft.com, blob.core.windows.net, dfs.core.windows.net, and sharepoint.com. When parsing multipart components that are subject to known neutral URL naming conventions, the platform will apply the following logic: If the component starts with https:// or http:// (case-insensitive), the platform will not apply any transformation since the explicit intent is to use a fully qualified URL. If the component starts with FLLM:, the platform will replace the FLLM: prefix with https:// and replace all # characters with .. Then, it will check if the tail of the resulting URL is in the list of allowed domains. If it is, the platform will use the resulting URL. If it is not, the platform will use the original form of the component. At this point, the platform will assume that the component is a simple known neutral URL and will prepend https:// to it. Then, if the tail of the resulting URL is in the list of allowed domains, the platform will use the resulting URL. If it is not, the platform will use the original form of the component. Creating a vectorization request See Vectorization Request Resources for more information on creating a vectorization request. Upon completion, the API will return a response with the following structure: { \"object_id\":\"/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationrequests/6041849a-d4d8-428d-97ff-c6a3443ecdae\", \"is_success\":true, \"error_message\":null } Processing a vectorization request To initiate the processing of a vectorization request, the caller must issue a process request to the Management API through a POST on the resource object id (the body is {}). The following is an example of a process, example: {baseUrl}/instances/1e22cd2a-7b81-4160-b79f-f6443e3a6ac2/providers/FoundationaLLM.Vectorization/vectorizationrequests/6041849a-d4d8-428d-97ff-c6a3443ecdae/process."
  }
}
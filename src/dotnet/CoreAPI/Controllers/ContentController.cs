using FoundationaLLM.Core.Interfaces;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;

namespace FoundationaLLM.Core.API.Controllers
{
    /// <summary>
    /// Provides methods for retrieving and managing contents.
    /// </summary>
    [Authorize(Policy = "DefaultPolicy")]
    [ApiController]
    [Route("instances/{instanceId}")]
    public class ContentController : ControllerBase
    {
        private readonly ICoreService _coreService;

        /// <remarks>
        /// Constructor for the Content Controller.
        /// </remarks>
        /// <param name="coreService">The Core service provides methods for getting
        /// completions from the orchestrator.</param>
        public ContentController(ICoreService coreService) => _coreService = coreService;

        /// <summary>
        /// Get file content link generated by OpenAI assistant.
        /// </summary>
        /// <param name="provider"> A route parameter that specifies the content provider.</param>
        /// <param name="contentId">A route parameter that identifies the specific content.</param>
        [HttpGet("content/{provider}/{contentId}")]
        public async Task<string> GetFileContentLink(string provider, string contentId)
            => await _coreService.GetFileContentLink(provider, contentId);
    }
}

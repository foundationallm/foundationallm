<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ assembly name="System.Text.Json" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ assembly name="System.Memory" #>
<#@ import namespace="System.Text.Json" #>
<#@ import namespace="System.Text.Json.Nodes" #>
<#@ output extension=".cs" #>
<#
    string inputFileName = this.Host.ResolvePath($"../Constants/Data/AppConfiguration.json");
    string inputContent = File.ReadAllText(inputFileName);
    var jsonObjects = JsonNode.Parse(inputContent)!;
    Func<JsonNode, string> getName = n => n.GetValue<string>().Replace(":", "_").Replace(".appconfig.featureflag/","");
#>
// -------------------------------------------------------------------------------
//
// WARNING!
// This file is auto-generated based on the AppConfiguration.json file.
// Do not make changes to this file, as they will be automatically overwritten.
//
// -------------------------------------------------------------------------------
namespace FoundationaLLM.Common.Constants.Configuration
{
    /// <summary>
    /// Defines all App Configuration key names used by FoundationaLLM.
    /// </summary>
    public static class AppConfigurationKeys
    {<#
    foreach (var jsonObject in jsonObjects.AsArray())
    {
#>

        #region FoundationaLLM:<#=jsonObject["namespace"]#>
<#
        foreach (var key in jsonObject["configuration_keys"].AsArray())
        {
            var originalKeyName = key["name"].GetValue<string>();
            var keyName = originalKeyName.StartsWith(".appconfig.featureflag/")
                ? $"FeatureFlag_{originalKeyName.Replace(".appconfig.featureflag/","").Replace(".", "_")}"
                : $"FoundationaLLM_{jsonObject["namespace"].GetValue<string>().Replace(":", "_")}_{originalKeyName.Replace(":", "_")}";
            var keyValue = originalKeyName.StartsWith(".appconfig.featureflag/")
                ? originalKeyName
                : $"FoundationaLLM:{jsonObject["namespace"].GetValue<string>()}:{originalKeyName}";
#>
        
        /// <summary>
        /// The app configuration key for the <#=keyValue#> setting.
        /// <para>Value description:<br/><#=key["description"]#></para>
        /// </summary>
        public const string <#=keyName#> =
            "<#=keyValue#>";
<#
        }
#>

        #endregion
<#
    }
#>
    }
}

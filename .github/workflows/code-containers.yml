name: Code Containers

on:
  workflow_dispatch:
    inputs: {}

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.set-registry.outputs.result }}
      service_matrix: ${{ steps.set-service-matrix.outputs.result }}
      docker_tag: ${{ steps.docker-tag.outputs.docker_tag }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set Service Matrix
      uses: actions/github-script@v7
      id: set-service-matrix
      with:
        result-encoding: string
        script: |
          const fs = require('fs')
          const jsonString = fs.readFileSync('./tests/config/code-containers-manifest.json')
          var data = JSON.parse(jsonString)
          return JSON.stringify(data.service_matrix)
    
    - name: Set Container registry
      uses: actions/github-script@v7
      id: set-registry
      with:
        result-encoding: string
        script: |
          const fs = require('fs')
          const jsonString = fs.readFileSync('./tests/config/sandbox-registry.json')
          var data = JSON.parse(jsonString)
          return data.registry

    - name: Set Git and Helm Tag
      id: docker-tag
      run: |
        DOCKER_TAG=$(echo ${{ github.ref_name }} |  cut -d'/' -f 2)
        echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
        echo "docker_tag: Latest Tag is : $DOCKER_TAG"
        echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT      

  docker_build:
    name: Build Docker Images
    if: startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/poc/') || (github.ref_type == 'tag' && contains(github.ref_name, '-rc')) || (github.ref_type == 'tag' && contains(github.ref_name, '-poc'))
    needs: 
      - generate_matrix
    strategy:
      fail-fast: false
      matrix:
        object: ${{ fromJson(needs.generate_matrix.outputs.service_matrix) }}
    uses: ./.github/workflows/build-docker-image.yml
    with:
      image: ${{ matrix.object.name }}
      context: ${{ matrix.object.context }}
      dockerfile: ${{ matrix.object.dockerfile }}
      registry: ${{ needs.generate_matrix.outputs.registry }}
      tag: ${{ needs.generate_matrix.outputs.docker_tag }}
      username: foundationallm
      target: sandbox
    secrets: inherit

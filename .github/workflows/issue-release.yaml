name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version_update:
        type: choice
        description: Semantic version update type
        required: true
        options:
          - NONE
          - MAJOR
          - MINOR
          - PATCH
      prerelease_version_update:
        type: choice
        description: Pre-release suffix update type
        required: true
        options:
          - REMOVE
          - ALPHA
          - BETA
          - RC
      changelog:
        type: string
        description: Release changelog
        required: true

env:
  REGISTRY: ghcr.io

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Fetching the Latest Release Tag number
      id: releaseVersion
      run: |
        release_json=$(curl https://api.github.com/repos/${{ github.repository }}/releases)
        release_tag=$(echo "$release_json" | jq -r '.[0].tag_name')
        echo "release_tag: Latest Tag is : $release_tag"
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

    - name: Bumping Release Index
      id: bump_version_pre
      uses: cookbenjamin/update-version@v1.0.1
      with:
        current-version: ${{ steps.releaseVersion.outputs.release_tag }}
        increment-version-fragment: ${{ github.event.inputs.version_update }}
        prerelease-fragment: ${{ github.event.inputs.prerelease_version_update }}

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.bump_version.outputs.updated-version }}
        release_name: Release ${{ steps.bump_version.outputs.updated-version }}
        body: |
          ${{ github.event.inputs.changelog }}
        draft: false
        prerelease: false

  release_build:
    needs: release
    strategy:
      matrix:
        include:
        - name: agent-factory-api
          context: ./src
          dockerfile: ./src/dotnet/AgentFactoryAPI/Dockerfile
        - name: agent-hub-api
          context: ./src/python
          dockerfile: ./src/python/AgentHubAPI/Dockerfile
        - name: chat-ui
          context: ./src/ui/UserPortal
          dockerfile: ./src/ui/UserPortal/Dockerfile
        - name: core-api
          context: ./src
          dockerfile: ./src/dotnet/CoreAPI/Dockerfile
        - name: core-job
          context: ./src
          dockerfile: ./src/dotnet/CoreWorker/Dockerfile
        - name: data-source-hub-api
          context: ./src/python
          dockerfile: ./src/python/DataSourceHubAPI/Dockerfile
        - name: gatekeeper-api
          context: ./src
          dockerfile: ./src/dotnet/GatekeeperAPI/Dockerfile
        - name: langchain-api
          context: ./src/python
          dockerfile: ./src/python/LangChainAPI/Dockerfile
        - name: prompt-hub-api
          context: ./src/python
          dockerfile: ./src/python/PromptHubAPI/Dockerfile
        - name: semantic-kernel-api
          context: ./src
          dockerfile: ./src/dotnet/SemanticKernelAPI/Dockerfile
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: Fetching the Latest Release Tag number
      id: releaseVersion
      run: |
        release_json=$(curl https://api.github.com/repos/${{ github.repository }}/releases)
        release_tag=$(echo "$release_json" | jq -r '.[0].tag_name')
        echo "release_tag: Latest Tag is : $release_tag"
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.name }}
        tags: |
          type=raw,latest
          type=raw,release
          type=semver,{{version}},value=${{ steps.releaseVersion.outputs.release_tag }}
          type=semver,{{major}}.{{minor}},value=${{ steps.releaseVersion.outputs.release_tag }}
          type=sha

    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        context: ${{ matrix.context }}
        file: ${{ matrix.dockerfile }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

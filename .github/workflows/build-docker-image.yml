name: Docker Image Build and Push

on:
  workflow_call:
    inputs:
      registry:
        type: string
        default: ghcr.io
      image:
        type: string
        required: true
      context:
        type: string
        required: true
      dockerfile:
        type: string
        required: true
      tag:
        type: string
        required: true
      username:
        type: string
        required: true
      target:
        type: string
        required: true

jobs:
  docker_image_build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run versioning script
      run: bash ./versioning.sh
      id: versioning

    - name: Get Container Registry Password
      uses: actions/github-script@v7
      id: set-registry-password
      with:
        result-encoding: string
        script: |
          var passwords = new Map()
          passwords['e2e'] = process.env.E2E_ACR_PASSWORD
          passwords['sandbox'] = process.env.SBX_ACR_PASSWORD
          return passwords['${{ inputs.target }}']
      env:
        E2E_ACR_PASSWORD: ${{ secrets.FLLM_E2E_ACR_PASSWORD }}
        SBX_ACR_PASSWORD: ${{ secrets.FLLM_SBX_ACR_PASSWORD }}

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ steps.set-registry-password.outputs.result }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.registry }}/${{ inputs.image }}
        tags: |
          type=semver,pattern={{version}},value=${{ inputs.tag }}
          type=raw,value=cache

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/.buildx-cache
        key: ${{ runner.os }}-${{ inputs.image }}-buildx
        restore-keys: |
          ${{ runner.os }}-${{ inputs.image }}-buildx

    - name: Build and push Docker images
      uses: docker/build-push-action@v5
      with:
        cache-from: type=local,src=${{ runner.temp }}/.buildx-cache
        cache-to: type=local,dest=${{ runner.temp }}/.buildx-cache-new,mode=max
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
        build-args: |
          FOUNDATIONALLM_REGISTRY=${{ inputs.registry }}
          FOUNDATIONALLM_VERSION=${{ inputs.tag }}
          PYTHON_FLLM_BASE_VERSION=latest

    - name: Move cache
      run: |
        rm -rf ${{ runner.temp }}/.buildx-cache
        mv ${{ runner.temp }}/.buildx-cache-new ${{ runner.temp }}/.buildx-cache

name: Publish .NET Packages

on:
  push:
    tags:
    - "nuget-*.*.*"
    - "nuget-*.*.*-alpha*"
    - "nuget-*.*.*-beta*"
    - "nuget-*.*.*-rc*"
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}

    - name: Set up .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Run versioning script
      run: bash ./versioning.sh
      id: versioning

    # .NET Build and Pack Steps
    - name: Build Common
      working-directory: ./src/dotnet/Common
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build Configuration
      working-directory: ./src/dotnet/Configuration
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build DataSource
      working-directory: ./src/dotnet/DataSource
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build Prompt
      working-directory: ./src/dotnet/Prompt
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build Plugin
      working-directory: ./src/dotnet/Plugin
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build CoreClient
      working-directory: ./src/dotnet/CoreClient
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build ManagementClient
      working-directory: ./src/dotnet/ManagementClient
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build DataPipelinePlugins
      working-directory: ./src/dotnet/DataPipelinePlugins
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Build Core.Examples
      working-directory: ./tests/dotnet/Tests
      run: dotnet build --configuration Release -p:GITHUB_ACTIONS=true

    - name: Pack Common
      working-directory: ./src/dotnet/Common
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack Configuration
      working-directory: ./src/dotnet/Configuration
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack DataSource
      working-directory: ./src/dotnet/DataSource
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack Prompt
      working-directory: ./src/dotnet/Prompt
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack Plugin
      working-directory: ./src/dotnet/Plugin
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack CoreClient
      working-directory: ./src/dotnet/CoreClient
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack ManagementClient
      working-directory: ./src/dotnet/ManagementClient
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack DataPipelinePlugins
      working-directory: ./src/dotnet/DataPipelinePlugins
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    - name: Pack Core.Examples
      working-directory: ./tests/dotnet/Tests
      run: dotnet pack --configuration Release /p:PackageVersion=${{ steps.versioning.outputs.version }} -p:GITHUB_ACTIONS=true --output ./nupkg

    # .NET Publish Steps
    - name: Publish Common to NuGet
      working-directory: ./src/dotnet/Common
      run: dotnet nuget push ./nupkg/*.Common.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish Configuration to NuGet
      working-directory: ./src/dotnet/Configuration
      run: dotnet nuget push ./nupkg/*.Configuration.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish DataSource to NuGet
      working-directory: ./src/dotnet/DataSource
      run: dotnet nuget push ./nupkg/*.DataSource.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish Prompt to NuGet
      working-directory: ./src/dotnet/Prompt
      run: dotnet nuget push ./nupkg/*.Prompt.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish Plugin to NuGet
      working-directory: ./src/dotnet/Plugin
      run: dotnet nuget push ./nupkg/*.Plugin.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish CoreClient to NuGet
      working-directory: ./src/dotnet/CoreClient
      run: dotnet nuget push ./nupkg/*.Client.Core.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish ManagementClient to NuGet
      working-directory: ./src/dotnet/ManagementClient
      run: dotnet nuget push ./nupkg/*.Client.Management.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish DataPipelinePlugins to NuGet
      working-directory: ./src/dotnet/DataPipelinePlugins
      run: dotnet nuget push ./nupkg/*.DataPipelinePlugins.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Publish Core.Examples to NuGet
      working-directory: ./tests/dotnet/Tests
      run: dotnet nuget push ./nupkg/*.Tests.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json


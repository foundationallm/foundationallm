name: Publish Python Packages

on:
  push:
    tags:
    - "pypi-*.*.*"
    - "pypi-*.*.*-alpha*"
    - "pypi-*.*.*-beta*"
    - "pypi-*.*.*-rc*"
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11.x'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Run versioning script
      run: bash ./versioning.sh
      id: versioning

    # Python Build and Publish Steps
    - name: Build Python PythonSDK Package
      run: |
        cd ./src/python/PythonSDK
        python -m pip install --upgrade build
        python -m build

    - name: Publish Python PythonSDK Package to PyPI
      working-directory: ./src/python/PythonSDK/dist
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
      run: |
        python -m pip install --upgrade twine
        python -m twine upload --repository-url https://upload.pypi.org/legacy/ *.tar.gz *.whl

    - name: Build Python FoundationaLLMAgentPlugins Package
      run: |
        cd ./src/python/FoundationaLLMAgentPlugins/src
        python -m pip install --upgrade build
        python -m build

    - name: Publish Python FoundationaLLMAgentPlugins Package to PyPI
      working-directory: ./src/python/FoundationaLLMAgentPlugins/src/dist
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_KEY }}
      run: |
        python -m pip install --upgrade twine
        python -m twine upload --repository-url https://upload.pypi.org/legacy/ *.tar.gz *.whl
